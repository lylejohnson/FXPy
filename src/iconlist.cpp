/*
 * FILE : ../src/iconlist.cpp
 * 
 * This file was automatically generated by :
 * Simplified Wrapper and Interface Generator (SWIG)
 * Version 1.1 (Build 883)
 * 
 * Portions Copyright (c) 1995-1998
 * The University of Utah and The Regents of the University of California.
 * Permission is granted to distribute this file in any manner provided
 * this notice remains intact.
 * 
 * Do not make changes to this file--changes will be lost!
 *
 */


#define SWIGCODE
/* Implementation : PYTHON */

#define SWIGPYTHON
#include <string.h>
#include <stdlib.h>
/* Definitions for Windows/Unix exporting */
#if defined(__WIN32__)
#   if defined(_MSC_VER)
#	define SWIGEXPORT(a) __declspec(dllexport) a
#   else
#	if defined(__BORLANDC__)
#	    define SWIGEXPORT(a) a _export 
#	else
#	    define SWIGEXPORT(a) a 
#	endif
#   endif
#else
#   define SWIGEXPORT(a) a 
#endif

#include "Python.h"

#ifdef __cplusplus
extern "C" {
#endif
extern void SWIG_MakePtr(char *, void *, char *);
extern void SWIG_RegisterMapping(char *, char *, void *(*)(void *));
extern char *SWIG_GetPtr(char *, void **, char *);
extern char *SWIG_GetPtrObj(PyObject *, void **, char *);
extern void SWIG_addvarlink(PyObject *, char *, PyObject *(*)(void), int (*)(PyObject *));
extern PyObject *SWIG_newvarlink(void);
#ifdef __cplusplus
}
#endif
#define SWIG_init    initiconlistc

#define SWIG_name    "iconlistc"

#include "fx.h"
#include "fx3d.h"
#include "FXCURCursor.h"
#include "FXJPGImage.h"
#include "FXJPGIcon.h"
#include "FXPNGIcon.h"
#include "FXPNGImage.h"
#include "FXTIFIcon.h"
#include "FXTIFImage.h"
#include "FXRGBIcon.h"
#include "FXRGBImage.h"
#include "FXICOIcon.h"
#include "FXICOImage.h"
#include "FXPyApp.h"
#include "FXPy.h"

static PyObject* l_output_helper(PyObject* target, PyObject* o) {
    PyObject*   o2;
    if (!target) {                   
        target = o;
    } else if (target == Py_None) {  
        Py_DECREF(Py_None);
        target = o;
    } else {                         
        if (!PyList_Check(target)) {
            o2 = target;
            target = PyList_New(0);
            PyList_Append(target, o2);
	    Py_XDECREF(o2);
        }
        PyList_Append(target,o);
	Py_XDECREF(o);
    }
    return target;
}

static PyObject* t_output_helper(PyObject* target, PyObject* o) {
    PyObject*   o2;
    PyObject*   o3;

    if (!target) {                   
        target = o;
    } else if (target == Py_None) {  
        Py_DECREF(Py_None);
        target = o;
    } else {                         
        if (!PyTuple_Check(target)) {
            o2 = target;
            target = PyTuple_New(1);
            PyTuple_SetItem(target, 0, o2);
        }
        o3 = PyTuple_New(1);            
        PyTuple_SetItem(o3, 0, o);      

        o2 = target;
        target = PySequence_Concat(o2, o3); 
        Py_DECREF(o2);                      
        Py_DECREF(o3);
    }
    return target;
}
#ifdef __cplusplus
extern "C" {
#endif
static void *SwigFXIconItemToFXObject(void *ptr) {
    FXIconItem *src;
    FXObject *dest;
    src = (FXIconItem *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FX_IconItem(_swigarg0,_swigarg1,_swigarg2,_swigarg3) (new FXIconItem(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_new_FX_IconItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconItem * _result;
    FXString * _arg0;
    FXIcon * _arg1 = (FXIcon *) NULL;
    FXIcon * _arg2 = (FXIcon *) NULL;
    void * _arg3 = (void *) NULL;
    PyObject * _obj0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "text","bi","mi","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|OOO:new_FX_IconItem",_kwnames,&_obj0,&_obj1,&_obj2,&_obj3)) 
        return NULL;
{
    if (_obj0 == Py_None)
	_arg0 = new FXString;
    else if (!PyString_Check(_obj0)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg0 = new FXString(PyString_AsString(_obj0));
}
    if (_obj1)
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXIcon_p");
}
    if (_obj2)
{
    if (_obj2 == Py_None)
	_arg2 = NULL;
    else
	SWIG_GetPtrObj(_obj2, (void**) &_arg2, "_FXIcon_p");
}
    if (_obj3)
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXIconItem *)new_FX_IconItem(*_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
{
    delete _arg0;
}
    return _resultobj;
}

#define FX_IconItem_getText(_swigobj)  (_swigobj->getText())
static PyObject *_wrap_FX_IconItem_getText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXIconItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_IconItem_getText",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconItem_getText. Expected _FXIconItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_IconItem_getText(_arg0));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

#define FX_IconItem_setText(_swigobj,_swigarg0)  (_swigobj->setText(_swigarg0))
static PyObject *_wrap_FX_IconItem_setText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconItem * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","text", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_IconItem_setText",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconItem_setText. Expected _FXIconItem_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_IconItem_setText(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_IconItem_getBigIcon(_swigobj)  (_swigobj->getBigIcon())
static PyObject *_wrap_FX_IconItem_getBigIcon(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIcon * _result;
    FXIconItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_IconItem_getBigIcon",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconItem_getBigIcon. Expected _FXIconItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXIcon *)FX_IconItem_getBigIcon(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_IconItem_setBigIcon(_swigobj,_swigarg0)  (_swigobj->setBigIcon(_swigarg0))
static PyObject *_wrap_FX_IconItem_setBigIcon(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconItem * _arg0;
    FXIcon * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","ic", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_IconItem_setBigIcon",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconItem_setBigIcon. Expected _FXIconItem_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_IconItem_setBigIcon(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_IconItem_getMiniIcon(_swigobj)  (_swigobj->getMiniIcon())
static PyObject *_wrap_FX_IconItem_getMiniIcon(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIcon * _result;
    FXIconItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_IconItem_getMiniIcon",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconItem_getMiniIcon. Expected _FXIconItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXIcon *)FX_IconItem_getMiniIcon(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_IconItem_setMiniIcon(_swigobj,_swigarg0)  (_swigobj->setMiniIcon(_swigarg0))
static PyObject *_wrap_FX_IconItem_setMiniIcon(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconItem * _arg0;
    FXIcon * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","ic", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_IconItem_setMiniIcon",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconItem_setMiniIcon. Expected _FXIconItem_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_IconItem_setMiniIcon(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void  FXIconItem_setData(FXIconItem *self,PyObject * ptr) {
      FXPySetData(self, ptr);
    }
static PyObject *_wrap_FX_IconItem_setData(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconItem * _arg0;
    PyObject * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_IconItem_setData",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconItem_setData. Expected _FXIconItem_p.");
        return NULL;
        }
    }
{
  _arg1 = _obj1;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FXIconItem_setData(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static PyObject * FXIconItem_getData(FXIconItem *self) {
      return FXPyGetData(self);
    }
static PyObject *_wrap_FX_IconItem_getData(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    PyObject * _result;
    FXIconItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_IconItem_getData",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconItem_getData. Expected _FXIconItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (PyObject *)FXIconItem_getData(_arg0);

    FXPy_END_ALLOW_THREADS
}{
  _resultobj = _result;
}
    return _resultobj;
}

#define FX_IconItem_hasFocus(_swigobj)  (_swigobj->hasFocus())
static PyObject *_wrap_FX_IconItem_hasFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXIconItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_IconItem_hasFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconItem_hasFocus. Expected _FXIconItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_IconItem_hasFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_IconItem_setFocus(_swigobj,_swigarg0)  (_swigobj->setFocus(_swigarg0))
static PyObject *_wrap_FX_IconItem_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconItem * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","focus", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FX_IconItem_setFocus",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconItem_setFocus. Expected _FXIconItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_IconItem_setFocus(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_IconItem_isSelected(_swigobj)  (_swigobj->isSelected())
static PyObject *_wrap_FX_IconItem_isSelected(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXIconItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_IconItem_isSelected",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconItem_isSelected. Expected _FXIconItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_IconItem_isSelected(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_IconItem_setSelected(_swigobj,_swigarg0)  (_swigobj->setSelected(_swigarg0))
static PyObject *_wrap_FX_IconItem_setSelected(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconItem * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","selected", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FX_IconItem_setSelected",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconItem_setSelected. Expected _FXIconItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_IconItem_setSelected(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_IconItem_isEnabled(_swigobj)  (_swigobj->isEnabled())
static PyObject *_wrap_FX_IconItem_isEnabled(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXIconItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_IconItem_isEnabled",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconItem_isEnabled. Expected _FXIconItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_IconItem_isEnabled(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_IconItem_setEnabled(_swigobj,_swigarg0)  (_swigobj->setEnabled(_swigarg0))
static PyObject *_wrap_FX_IconItem_setEnabled(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconItem * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enabled", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FX_IconItem_setEnabled",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconItem_setEnabled. Expected _FXIconItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_IconItem_setEnabled(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_IconItem_isDraggable(_swigobj)  (_swigobj->isDraggable())
static PyObject *_wrap_FX_IconItem_isDraggable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXIconItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_IconItem_isDraggable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconItem_isDraggable. Expected _FXIconItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_IconItem_isDraggable(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_IconItem_setDraggable(_swigobj,_swigarg0)  (_swigobj->setDraggable(_swigarg0))
static PyObject *_wrap_FX_IconItem_setDraggable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconItem * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","draggable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FX_IconItem_setDraggable",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconItem_setDraggable. Expected _FXIconItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_IconItem_setDraggable(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_IconItem_setIconOwned(_swigobj,_swigarg0)  (_swigobj->setIconOwned(_swigarg0))
static PyObject *_wrap_FX_IconItem_setIconOwned(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconItem * _arg0;
    FXuint  _arg1 = (FXuint ) 48;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","owned", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|i:FX_IconItem_setIconOwned",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconItem_setIconOwned. Expected _FXIconItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_IconItem_setIconOwned(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_IconItem_isIconOwned(_swigobj)  (_swigobj->isIconOwned())
static PyObject *_wrap_FX_IconItem_isIconOwned(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXIconItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_IconItem_isIconOwned",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconItem_isIconOwned. Expected _FXIconItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )FX_IconItem_isIconOwned(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_IconItem_getWidth(_swigobj,_swigarg0)  (_swigobj->getWidth(_swigarg0))
static PyObject *_wrap_FX_IconItem_getWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXIconItem * _arg0;
    FXIconList * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","list", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_IconItem_getWidth",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconItem_getWidth. Expected _FXIconItem_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_IconItem_getWidth. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_IconItem_getWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_IconItem_getHeight(_swigobj,_swigarg0)  (_swigobj->getHeight(_swigarg0))
static PyObject *_wrap_FX_IconItem_getHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXIconItem * _arg0;
    FXIconList * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","list", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_IconItem_getHeight",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconItem_getHeight. Expected _FXIconItem_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_IconItem_getHeight. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_IconItem_getHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_IconItem_create(_swigobj)  (_swigobj->create())
static PyObject *_wrap_FX_IconItem_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_IconItem_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconItem_create. Expected _FXIconItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_IconItem_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_IconItem_detach(_swigobj)  (_swigobj->detach())
static PyObject *_wrap_FX_IconItem_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_IconItem_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconItem_detach. Expected _FXIconItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_IconItem_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_IconItem_destroy(_swigobj)  (_swigobj->destroy())
static PyObject *_wrap_FX_IconItem_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_IconItem_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconItem_destroy. Expected _FXIconItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_IconItem_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXPyIconItemToFXIconItem(void *ptr) {
    FXPyIconItem *src;
    FXIconItem *dest;
    src = (FXPyIconItem *) ptr;
    dest = (FXIconItem *) src;
    return (void *) dest;
}

static void *SwigFXPyIconItemToFXObject(void *ptr) {
    FXPyIconItem *src;
    FXObject *dest;
    src = (FXPyIconItem *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXIconItem(_swigarg0,_swigarg1,_swigarg2,_swigarg3) (new FXPyIconItem(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_new_FXIconItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyIconItem * _result;
    FXString * _arg0;
    FXIcon * _arg1 = (FXIcon *) NULL;
    FXIcon * _arg2 = (FXIcon *) NULL;
    void * _arg3 = (void *) NULL;
    PyObject * _obj0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "text","bi","mi","ptr", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|OOO:new_FXIconItem",_kwnames,&_obj0,&_obj1,&_obj2,&_obj3)) 
        return NULL;
{
    if (_obj0 == Py_None)
	_arg0 = new FXString;
    else if (!PyString_Check(_obj0)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg0 = new FXString(PyString_AsString(_obj0));
}
    if (_obj1)
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXIcon_p");
}
    if (_obj2)
{
    if (_obj2 == Py_None)
	_arg2 = NULL;
    else
	SWIG_GetPtrObj(_obj2, (void**) &_arg2, "_FXIcon_p");
}
    if (_obj3)
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyIconItem *)new_FXIconItem(*_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyIconItem_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    delete _arg0;
}
    return _resultobj;
}

#define FXIconItem_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXIconItem_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyIconItem * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXIconItem_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconItem_onDefault. Expected _FXPyIconItem_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXIconItem_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXIconItem_setText(_swigobj,_swigarg0)  (_swigobj->_setText(_swigarg0))
static PyObject *_wrap_FXIconItem_setText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyIconItem * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","text", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXIconItem_setText",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconItem_setText. Expected _FXPyIconItem_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FXIconItem_setText(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FXIconItem_setBigIcon(_swigobj,_swigarg0)  (_swigobj->_setBigIcon(_swigarg0))
static PyObject *_wrap_FXIconItem_setBigIcon(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyIconItem * _arg0;
    FXIcon * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","ic", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXIconItem_setBigIcon",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconItem_setBigIcon. Expected _FXPyIconItem_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FXIconItem_setBigIcon(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXIconItem_setMiniIcon(_swigobj,_swigarg0)  (_swigobj->_setMiniIcon(_swigarg0))
static PyObject *_wrap_FXIconItem_setMiniIcon(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyIconItem * _arg0;
    FXIcon * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","ic", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXIconItem_setMiniIcon",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconItem_setMiniIcon. Expected _FXPyIconItem_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FXIconItem_setMiniIcon(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXIconItem_setFocus(_swigobj,_swigarg0)  (_swigobj->_setFocus(_swigarg0))
static PyObject *_wrap_FXIconItem_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyIconItem * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","focus", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FXIconItem_setFocus",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconItem_setFocus. Expected _FXPyIconItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXIconItem_setFocus(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXIconItem_setSelected(_swigobj,_swigarg0)  (_swigobj->_setSelected(_swigarg0))
static PyObject *_wrap_FXIconItem_setSelected(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyIconItem * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","selected", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FXIconItem_setSelected",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconItem_setSelected. Expected _FXPyIconItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXIconItem_setSelected(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXIconItem_setEnabled(_swigobj,_swigarg0)  (_swigobj->_setEnabled(_swigarg0))
static PyObject *_wrap_FXIconItem_setEnabled(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyIconItem * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enabled", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FXIconItem_setEnabled",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconItem_setEnabled. Expected _FXPyIconItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXIconItem_setEnabled(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXIconItem_setDraggable(_swigobj,_swigarg0)  (_swigobj->_setDraggable(_swigarg0))
static PyObject *_wrap_FXIconItem_setDraggable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyIconItem * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","draggable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FXIconItem_setDraggable",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconItem_setDraggable. Expected _FXPyIconItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXIconItem_setDraggable(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXIconItem_setIconOwned(_swigobj,_swigarg0)  (_swigobj->_setIconOwned(_swigarg0))
static PyObject *_wrap_FXIconItem_setIconOwned(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyIconItem * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","owned", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXIconItem_setIconOwned",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconItem_setIconOwned. Expected _FXPyIconItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXIconItem_setIconOwned(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXIconItem_getWidth(_swigobj,_swigarg0)  (_swigobj->_getWidth(_swigarg0))
static PyObject *_wrap_FXIconItem_getWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyIconItem * _arg0;
    FXIconList * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","list", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXIconItem_getWidth",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconItem_getWidth. Expected _FXPyIconItem_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXIconItem_getWidth. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXIconItem_getWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXIconItem_getHeight(_swigobj,_swigarg0)  (_swigobj->_getHeight(_swigarg0))
static PyObject *_wrap_FXIconItem_getHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyIconItem * _arg0;
    FXIconList * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","list", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXIconItem_getHeight",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconItem_getHeight. Expected _FXPyIconItem_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXIconItem_getHeight. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXIconItem_getHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXIconItem_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXIconItem_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyIconItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXIconItem_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconItem_create. Expected _FXPyIconItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXIconItem_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXIconItem_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXIconItem_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyIconItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXIconItem_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconItem_detach. Expected _FXPyIconItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXIconItem_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXIconItem_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXIconItem_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyIconItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXIconItem_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconItem_destroy. Expected _FXPyIconItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXIconItem_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXIconListToFXScrollArea(void *ptr) {
    FXIconList *src;
    FXScrollArea *dest;
    src = (FXIconList *) ptr;
    dest = (FXScrollArea *) src;
    return (void *) dest;
}

static void *SwigFXIconListToFXComposite(void *ptr) {
    FXIconList *src;
    FXComposite *dest;
    src = (FXIconList *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXIconListToFXWindow(void *ptr) {
    FXIconList *src;
    FXWindow *dest;
    src = (FXIconList *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXIconListToFXDrawable(void *ptr) {
    FXIconList *src;
    FXDrawable *dest;
    src = (FXIconList *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXIconListToFXId(void *ptr) {
    FXIconList *src;
    FXId *dest;
    src = (FXIconList *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXIconListToFXObject(void *ptr) {
    FXIconList *src;
    FXObject *dest;
    src = (FXIconList *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define FX_IconList_onPaint(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onPaint(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_onPaint(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_IconList_onPaint",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_onPaint. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_IconList_onPaint. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_IconList_onPaint(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_IconList_onEnter(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onEnter(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_onEnter(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_IconList_onEnter",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_onEnter. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_IconList_onEnter. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_IconList_onEnter(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_IconList_onLeave(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onLeave(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_onLeave(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_IconList_onLeave",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_onLeave. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_IconList_onLeave. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_IconList_onLeave(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_IconList_onUngrabbed(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUngrabbed(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_onUngrabbed(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_IconList_onUngrabbed",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_onUngrabbed. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_IconList_onUngrabbed. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_IconList_onUngrabbed(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_IconList_onKeyPress(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onKeyPress(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_onKeyPress(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_IconList_onKeyPress",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_onKeyPress. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_IconList_onKeyPress. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_IconList_onKeyPress(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_IconList_onKeyRelease(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onKeyRelease(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_onKeyRelease(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_IconList_onKeyRelease",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_onKeyRelease. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_IconList_onKeyRelease. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_IconList_onKeyRelease(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_IconList_onLeftBtnPress(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onLeftBtnPress(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_onLeftBtnPress(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_IconList_onLeftBtnPress",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_onLeftBtnPress. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_IconList_onLeftBtnPress. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_IconList_onLeftBtnPress(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_IconList_onLeftBtnRelease(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onLeftBtnRelease(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_onLeftBtnRelease(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_IconList_onLeftBtnRelease",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_onLeftBtnRelease. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_IconList_onLeftBtnRelease. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_IconList_onLeftBtnRelease(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_IconList_onRightBtnPress(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onRightBtnPress(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_onRightBtnPress(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_IconList_onRightBtnPress",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_onRightBtnPress. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_IconList_onRightBtnPress. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_IconList_onRightBtnPress(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_IconList_onRightBtnRelease(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onRightBtnRelease(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_onRightBtnRelease(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_IconList_onRightBtnRelease",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_onRightBtnRelease. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_IconList_onRightBtnRelease. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_IconList_onRightBtnRelease(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_IconList_onMotion(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onMotion(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_onMotion(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_IconList_onMotion",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_onMotion. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_IconList_onMotion. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_IconList_onMotion(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_IconList_onQueryTip(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onQueryTip(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_onQueryTip(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_IconList_onQueryTip",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_onQueryTip. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_IconList_onQueryTip. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_IconList_onQueryTip(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_IconList_onQueryHelp(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onQueryHelp(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_onQueryHelp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_IconList_onQueryHelp",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_onQueryHelp. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_IconList_onQueryHelp. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_IconList_onQueryHelp(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_IconList_onTipTimer(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onTipTimer(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_onTipTimer(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_IconList_onTipTimer",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_onTipTimer. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_IconList_onTipTimer. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_IconList_onTipTimer(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_IconList_onCmdSelectAll(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSelectAll(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_onCmdSelectAll(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_IconList_onCmdSelectAll",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_onCmdSelectAll. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_IconList_onCmdSelectAll. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_IconList_onCmdSelectAll(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_IconList_onCmdDeselectAll(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdDeselectAll(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_onCmdDeselectAll(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_IconList_onCmdDeselectAll",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_onCmdDeselectAll. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_IconList_onCmdDeselectAll. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_IconList_onCmdDeselectAll(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_IconList_onCmdSelectInverse(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSelectInverse(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_onCmdSelectInverse(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_IconList_onCmdSelectInverse",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_onCmdSelectInverse. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_IconList_onCmdSelectInverse. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_IconList_onCmdSelectInverse(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_IconList_onCmdArrangeByRows(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdArrangeByRows(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_onCmdArrangeByRows(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_IconList_onCmdArrangeByRows",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_onCmdArrangeByRows. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_IconList_onCmdArrangeByRows. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_IconList_onCmdArrangeByRows(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_IconList_onUpdArrangeByRows(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdArrangeByRows(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_onUpdArrangeByRows(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_IconList_onUpdArrangeByRows",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_onUpdArrangeByRows. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_IconList_onUpdArrangeByRows. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_IconList_onUpdArrangeByRows(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_IconList_onCmdArrangeByColumns(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdArrangeByColumns(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_onCmdArrangeByColumns(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_IconList_onCmdArrangeByColumns",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_onCmdArrangeByColumns. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_IconList_onCmdArrangeByColumns. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_IconList_onCmdArrangeByColumns(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_IconList_onUpdArrangeByColumns(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdArrangeByColumns(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_onUpdArrangeByColumns(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_IconList_onUpdArrangeByColumns",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_onUpdArrangeByColumns. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_IconList_onUpdArrangeByColumns. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_IconList_onUpdArrangeByColumns(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_IconList_onCmdShowDetails(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdShowDetails(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_onCmdShowDetails(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_IconList_onCmdShowDetails",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_onCmdShowDetails. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_IconList_onCmdShowDetails. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_IconList_onCmdShowDetails(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_IconList_onUpdShowDetails(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdShowDetails(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_onUpdShowDetails(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_IconList_onUpdShowDetails",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_onUpdShowDetails. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_IconList_onUpdShowDetails. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_IconList_onUpdShowDetails(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_IconList_onCmdShowBigIcons(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdShowBigIcons(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_onCmdShowBigIcons(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_IconList_onCmdShowBigIcons",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_onCmdShowBigIcons. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_IconList_onCmdShowBigIcons. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_IconList_onCmdShowBigIcons(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_IconList_onUpdShowBigIcons(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdShowBigIcons(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_onUpdShowBigIcons(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_IconList_onUpdShowBigIcons",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_onUpdShowBigIcons. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_IconList_onUpdShowBigIcons. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_IconList_onUpdShowBigIcons(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_IconList_onCmdShowMiniIcons(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdShowMiniIcons(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_onCmdShowMiniIcons(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_IconList_onCmdShowMiniIcons",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_onCmdShowMiniIcons. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_IconList_onCmdShowMiniIcons. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_IconList_onCmdShowMiniIcons(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_IconList_onUpdShowMiniIcons(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdShowMiniIcons(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_onUpdShowMiniIcons(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_IconList_onUpdShowMiniIcons",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_onUpdShowMiniIcons. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_IconList_onUpdShowMiniIcons. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_IconList_onUpdShowMiniIcons(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_IconList_onHeaderChanged(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onHeaderChanged(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_onHeaderChanged(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_IconList_onHeaderChanged",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_onHeaderChanged. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_IconList_onHeaderChanged. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_IconList_onHeaderChanged(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_IconList_onFocusIn(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onFocusIn(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_onFocusIn(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_IconList_onFocusIn",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_onFocusIn. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_IconList_onFocusIn. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_IconList_onFocusIn(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_IconList_onFocusOut(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onFocusOut(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_onFocusOut(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_IconList_onFocusOut",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_onFocusOut. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_IconList_onFocusOut. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_IconList_onFocusOut(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_IconList_onClicked(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onClicked(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_onClicked(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_IconList_onClicked",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_onClicked. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_IconList_onClicked. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_IconList_onClicked(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_IconList_onDoubleClicked(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onDoubleClicked(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_onDoubleClicked(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_IconList_onDoubleClicked",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_onDoubleClicked. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_IconList_onDoubleClicked. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_IconList_onDoubleClicked(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_IconList_onTripleClicked(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onTripleClicked(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_onTripleClicked(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_IconList_onTripleClicked",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_onTripleClicked. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_IconList_onTripleClicked. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_IconList_onTripleClicked(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_IconList_onCommand(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCommand(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_onCommand(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_IconList_onCommand",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_onCommand. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_IconList_onCommand. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_IconList_onCommand(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_IconList_onAutoScroll(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onAutoScroll(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_onAutoScroll(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_IconList_onAutoScroll",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_onAutoScroll. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_IconList_onAutoScroll. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_IconList_onAutoScroll(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_IconList_onLookupTimer(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onLookupTimer(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_onLookupTimer(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_IconList_onLookupTimer",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_onLookupTimer. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_IconList_onLookupTimer. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_IconList_onLookupTimer(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_IconList_onCmdSetValue(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSetValue(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_onCmdSetValue(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_IconList_onCmdSetValue",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_onCmdSetValue. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_IconList_onCmdSetValue. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_IconList_onCmdSetValue(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_IconList_onCmdGetIntValue(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdGetIntValue(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_onCmdGetIntValue(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_IconList_onCmdGetIntValue",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_onCmdGetIntValue. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_IconList_onCmdGetIntValue. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_IconList_onCmdGetIntValue(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_IconList_onCmdSetIntValue(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSetIntValue(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_onCmdSetIntValue(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_IconList_onCmdSetIntValue",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_onCmdSetIntValue. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_IconList_onCmdSetIntValue. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_IconList_onCmdSetIntValue(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define new_FX_IconList(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7) (new FXIconList(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7))
static PyObject *_wrap_new_FX_IconList(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconList * _result;
    FXComposite * _arg0;
    FXObject * _arg1 = (FXObject *) NULL;
    FXSelector  _arg2 = (FXSelector ) 0;
    FXuint  _arg3 = (FXuint ) (ICONLIST_NORMAL);
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "p","tgt","sel","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|Oiiiiii:new_FX_IconList",_kwnames,&_argo0,&_obj1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FX_IconList. Expected _FXComposite_p.");
        return NULL;
        }
    }
    if (_obj1)
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXIconList *)new_FX_IconList(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXIconList_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_IconList_getNumItems(_swigobj)  (_swigobj->getNumItems())
static PyObject *_wrap_FX_IconList_getNumItems(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXIconList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_IconList_getNumItems",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_getNumItems. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_IconList_getNumItems(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_IconList_getNumRows(_swigobj)  (_swigobj->getNumRows())
static PyObject *_wrap_FX_IconList_getNumRows(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXIconList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_IconList_getNumRows",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_getNumRows. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_IconList_getNumRows(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_IconList_getNumCols(_swigobj)  (_swigobj->getNumCols())
static PyObject *_wrap_FX_IconList_getNumCols(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXIconList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_IconList_getNumCols",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_getNumCols. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_IconList_getNumCols(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_IconList_getHeader(_swigobj)  (_swigobj->getHeader())
static PyObject *_wrap_FX_IconList_getHeader(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXHeader * _result;
    FXIconList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_IconList_getHeader",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_getHeader. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXHeader *)FX_IconList_getHeader(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_IconList_appendHeader(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->appendHeader(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_appendHeader(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconList * _arg0;
    FXString * _arg1;
    FXIcon * _arg2 = (FXIcon *) NULL;
    FXint  _arg3 = (FXint ) 1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "self","text","icon","size", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|Oi:FX_IconList_appendHeader",_kwnames,&_argo0,&_obj1,&_obj2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_appendHeader. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
    if (_obj2)
{
    if (_obj2 == Py_None)
	_arg2 = NULL;
    else
	SWIG_GetPtrObj(_obj2, (void**) &_arg2, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_IconList_appendHeader(_arg0,*_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_IconList_removeHeader(_swigobj,_swigarg0)  (_swigobj->removeHeader(_swigarg0))
static PyObject *_wrap_FX_IconList_removeHeader(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconList * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","index", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_IconList_removeHeader",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_removeHeader. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_IconList_removeHeader(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_IconList_setHeaderText(_swigobj,_swigarg0,_swigarg1)  (_swigobj->setHeaderText(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_IconList_setHeaderText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconList * _arg0;
    FXint  _arg1;
    FXString * _arg2;
    PyObject * _argo0 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "self","index","text", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OiO:FX_IconList_setHeaderText",_kwnames,&_argo0,&_arg1,&_obj2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_setHeaderText. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj2 == Py_None)
	_arg2 = new FXString;
    else if (!PyString_Check(_obj2)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg2 = new FXString(PyString_AsString(_obj2));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_IconList_setHeaderText(_arg0,_arg1,*_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg2;
}
    return _resultobj;
}

#define FX_IconList_getHeaderText(_swigobj,_swigarg0)  (_swigobj->getHeaderText(_swigarg0))
static PyObject *_wrap_FX_IconList_getHeaderText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXIconList * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","index", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_IconList_getHeaderText",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_getHeaderText. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_IconList_getHeaderText(_arg0,_arg1));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

#define FX_IconList_setHeaderIcon(_swigobj,_swigarg0,_swigarg1)  (_swigobj->setHeaderIcon(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_IconList_setHeaderIcon(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconList * _arg0;
    FXint  _arg1;
    FXIcon * _arg2;
    PyObject * _argo0 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "self","index","icon", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OiO:FX_IconList_setHeaderIcon",_kwnames,&_argo0,&_arg1,&_obj2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_setHeaderIcon. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj2 == Py_None)
	_arg2 = NULL;
    else
	SWIG_GetPtrObj(_obj2, (void**) &_arg2, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_IconList_setHeaderIcon(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_IconList_getHeaderIcon(_swigobj,_swigarg0)  (_swigobj->getHeaderIcon(_swigarg0))
static PyObject *_wrap_FX_IconList_getHeaderIcon(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIcon * _result;
    FXIconList * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","index", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_IconList_getHeaderIcon",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_getHeaderIcon. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXIcon *)FX_IconList_getHeaderIcon(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_IconList_setHeaderSize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->setHeaderSize(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_IconList_setHeaderSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconList * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","index","size", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FX_IconList_setHeaderSize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_setHeaderSize. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_IconList_setHeaderSize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_IconList_getHeaderSize(_swigobj,_swigarg0)  (_swigobj->getHeaderSize(_swigarg0))
static PyObject *_wrap_FX_IconList_getHeaderSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXIconList * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","index", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_IconList_getHeaderSize",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_getHeaderSize. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_IconList_getHeaderSize(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_IconList_getNumHeaders(_swigobj)  (_swigobj->getNumHeaders())
static PyObject *_wrap_FX_IconList_getNumHeaders(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXIconList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_IconList_getNumHeaders",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_getNumHeaders. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_IconList_getNumHeaders(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_IconList_retrieveItem(_swigobj,_swigarg0)  (_swigobj->retrieveItem(_swigarg0))
static PyObject *_wrap_FX_IconList_retrieveItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconItem * _result;
    FXIconList * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","index", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_IconList_retrieveItem",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_retrieveItem. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXIconItem *)FX_IconList_retrieveItem(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_IconList_insertItem(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->insertItem(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_insertItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXIconList * _arg0;
    FXint  _arg1;
    FXIconItem * _arg2;
    FXbool  _arg3 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    PyObject * _argo2 = 0;
    char *_kwnames[] = { "self","index","item","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OiO|b:FX_IconList_insertItem",_kwnames,&_argo0,&_arg1,&_argo2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_insertItem. Expected _FXIconList_p.");
        return NULL;
        }
    }
    if (_argo2) {
        if (_argo2 == Py_None) { _arg2 = NULL; }
        else if (SWIG_GetPtrObj(_argo2,(void **) &_arg2,"_FXIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of FX_IconList_insertItem. Expected _FXIconItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_IconList_insertItem(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_IconList_insertItemStr(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5)  (_swigobj->insertItem(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5))
static PyObject *_wrap_FX_IconList_insertItemStr(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXIconList * _arg0;
    FXint  _arg1;
    FXString * _arg2;
    FXIcon * _arg3 = (FXIcon *) NULL;
    FXIcon * _arg4 = (FXIcon *) NULL;
    void * _arg5 = (void *) NULL;
    FXbool  _arg6 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    PyObject * _obj2 = 0;
    PyObject * _obj3 = 0;
    PyObject * _obj4 = 0;
    PyObject * _obj5 = 0;
    char *_kwnames[] = { "self","index","text","big","mini","ptr","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OiO|OOOb:FX_IconList_insertItemStr",_kwnames,&_argo0,&_arg1,&_obj2,&_obj3,&_obj4,&_obj5,&_arg6)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_insertItemStr. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj2 == Py_None)
	_arg2 = new FXString;
    else if (!PyString_Check(_obj2)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg2 = new FXString(PyString_AsString(_obj2));
}
    if (_obj3)
{
    if (_obj3 == Py_None)
	_arg3 = NULL;
    else
	SWIG_GetPtrObj(_obj3, (void**) &_arg3, "_FXIcon_p");
}
    if (_obj4)
{
    if (_obj4 == Py_None)
	_arg4 = NULL;
    else
	SWIG_GetPtrObj(_obj4, (void**) &_arg4, "_FXIcon_p");
}
    if (_obj5)
{
    _arg5 = NULL;
    if (PyObject_HasAttrString(_obj5, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj5, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg5 = NULL;
	}
	else
	    _arg5 = (void*) _obj5;
	Py_DECREF(obj);
    }
    else
	_arg5 = (void*) _obj5;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_IconList_insertItemStr(_arg0,_arg1,*_arg2,_arg3,_arg4,_arg5,_arg6);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
{
    delete _arg2;
}
    return _resultobj;
}

#define FX_IconList_replaceItem(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->replaceItem(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_replaceItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXIconList * _arg0;
    FXint  _arg1;
    FXIconItem * _arg2;
    FXbool  _arg3 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    PyObject * _argo2 = 0;
    char *_kwnames[] = { "self","index","item","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OiO|b:FX_IconList_replaceItem",_kwnames,&_argo0,&_arg1,&_argo2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_replaceItem. Expected _FXIconList_p.");
        return NULL;
        }
    }
    if (_argo2) {
        if (_argo2 == Py_None) { _arg2 = NULL; }
        else if (SWIG_GetPtrObj(_argo2,(void **) &_arg2,"_FXIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of FX_IconList_replaceItem. Expected _FXIconItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_IconList_replaceItem(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_IconList_replaceItemStr(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5)  (_swigobj->replaceItem(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5))
static PyObject *_wrap_FX_IconList_replaceItemStr(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXIconList * _arg0;
    FXint  _arg1;
    FXString * _arg2;
    FXIcon * _arg3 = (FXIcon *) NULL;
    FXIcon * _arg4 = (FXIcon *) NULL;
    void * _arg5 = (void *) NULL;
    FXbool  _arg6 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    PyObject * _obj2 = 0;
    PyObject * _obj3 = 0;
    PyObject * _obj4 = 0;
    PyObject * _obj5 = 0;
    char *_kwnames[] = { "self","index","text","big","mini","ptr","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OiO|OOOb:FX_IconList_replaceItemStr",_kwnames,&_argo0,&_arg1,&_obj2,&_obj3,&_obj4,&_obj5,&_arg6)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_replaceItemStr. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj2 == Py_None)
	_arg2 = new FXString;
    else if (!PyString_Check(_obj2)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg2 = new FXString(PyString_AsString(_obj2));
}
    if (_obj3)
{
    if (_obj3 == Py_None)
	_arg3 = NULL;
    else
	SWIG_GetPtrObj(_obj3, (void**) &_arg3, "_FXIcon_p");
}
    if (_obj4)
{
    if (_obj4 == Py_None)
	_arg4 = NULL;
    else
	SWIG_GetPtrObj(_obj4, (void**) &_arg4, "_FXIcon_p");
}
    if (_obj5)
{
    _arg5 = NULL;
    if (PyObject_HasAttrString(_obj5, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj5, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg5 = NULL;
	}
	else
	    _arg5 = (void*) _obj5;
	Py_DECREF(obj);
    }
    else
	_arg5 = (void*) _obj5;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_IconList_replaceItemStr(_arg0,_arg1,*_arg2,_arg3,_arg4,_arg5,_arg6);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
{
    delete _arg2;
}
    return _resultobj;
}

#define FX_IconList_appendItem(_swigobj,_swigarg0,_swigarg1)  (_swigobj->appendItem(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_IconList_appendItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXIconList * _arg0;
    FXIconItem * _arg1;
    FXbool  _arg2 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","item","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|b:FX_IconList_appendItem",_kwnames,&_argo0,&_argo1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_appendItem. Expected _FXIconList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_IconList_appendItem. Expected _FXIconItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_IconList_appendItem(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_IconList_appendItemStr(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4)  (_swigobj->appendItem(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4))
static PyObject *_wrap_FX_IconList_appendItemStr(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXIconList * _arg0;
    FXString * _arg1;
    FXIcon * _arg2 = (FXIcon *) NULL;
    FXIcon * _arg3 = (FXIcon *) NULL;
    void * _arg4 = (void *) NULL;
    FXbool  _arg5 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    PyObject * _obj3 = 0;
    PyObject * _obj4 = 0;
    char *_kwnames[] = { "self","text","big","mini","ptr","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|OOOb:FX_IconList_appendItemStr",_kwnames,&_argo0,&_obj1,&_obj2,&_obj3,&_obj4,&_arg5)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_appendItemStr. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
    if (_obj2)
{
    if (_obj2 == Py_None)
	_arg2 = NULL;
    else
	SWIG_GetPtrObj(_obj2, (void**) &_arg2, "_FXIcon_p");
}
    if (_obj3)
{
    if (_obj3 == Py_None)
	_arg3 = NULL;
    else
	SWIG_GetPtrObj(_obj3, (void**) &_arg3, "_FXIcon_p");
}
    if (_obj4)
{
    _arg4 = NULL;
    if (PyObject_HasAttrString(_obj4, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj4, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg4 = NULL;
	}
	else
	    _arg4 = (void*) _obj4;
	Py_DECREF(obj);
    }
    else
	_arg4 = (void*) _obj4;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_IconList_appendItemStr(_arg0,*_arg1,_arg2,_arg3,_arg4,_arg5);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_IconList_prependItem(_swigobj,_swigarg0,_swigarg1)  (_swigobj->prependItem(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_IconList_prependItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXIconList * _arg0;
    FXIconItem * _arg1;
    FXbool  _arg2 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","item","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|b:FX_IconList_prependItem",_kwnames,&_argo0,&_argo1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_prependItem. Expected _FXIconList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXIconItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_IconList_prependItem. Expected _FXIconItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_IconList_prependItem(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_IconList_prependItemStr(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4)  (_swigobj->prependItem(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4))
static PyObject *_wrap_FX_IconList_prependItemStr(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXIconList * _arg0;
    FXString * _arg1;
    FXIcon * _arg2 = (FXIcon *) NULL;
    FXIcon * _arg3 = (FXIcon *) NULL;
    void * _arg4 = (void *) NULL;
    FXbool  _arg5 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    PyObject * _obj3 = 0;
    PyObject * _obj4 = 0;
    char *_kwnames[] = { "self","text","big","mini","ptr","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|OOOb:FX_IconList_prependItemStr",_kwnames,&_argo0,&_obj1,&_obj2,&_obj3,&_obj4,&_arg5)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_prependItemStr. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
    if (_obj2)
{
    if (_obj2 == Py_None)
	_arg2 = NULL;
    else
	SWIG_GetPtrObj(_obj2, (void**) &_arg2, "_FXIcon_p");
}
    if (_obj3)
{
    if (_obj3 == Py_None)
	_arg3 = NULL;
    else
	SWIG_GetPtrObj(_obj3, (void**) &_arg3, "_FXIcon_p");
}
    if (_obj4)
{
    _arg4 = NULL;
    if (PyObject_HasAttrString(_obj4, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj4, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg4 = NULL;
	}
	else
	    _arg4 = (void*) _obj4;
	Py_DECREF(obj);
    }
    else
	_arg4 = (void*) _obj4;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_IconList_prependItemStr(_arg0,*_arg1,_arg2,_arg3,_arg4,_arg5);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_IconList_removeItem(_swigobj,_swigarg0,_swigarg1)  (_swigobj->removeItem(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_IconList_removeItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconList * _arg0;
    FXint  _arg1;
    FXbool  _arg2 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","index","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi|b:FX_IconList_removeItem",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_removeItem. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_IconList_removeItem(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_IconList_clearItems(_swigobj,_swigarg0)  (_swigobj->clearItems(_swigarg0))
static PyObject *_wrap_FX_IconList_clearItems(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconList * _arg0;
    FXbool  _arg1 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FX_IconList_clearItems",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_clearItems. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_IconList_clearItems(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_IconList_getItemWidth(_swigobj)  (_swigobj->getItemWidth())
static PyObject *_wrap_FX_IconList_getItemWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXIconList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_IconList_getItemWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_getItemWidth. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_IconList_getItemWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_IconList_getItemHeight(_swigobj)  (_swigobj->getItemHeight())
static PyObject *_wrap_FX_IconList_getItemHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXIconList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_IconList_getItemHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_getItemHeight. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_IconList_getItemHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_IconList_getItemAt(_swigobj,_swigarg0,_swigarg1)  (_swigobj->getItemAt(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_IconList_getItemAt(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXIconList * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FX_IconList_getItemAt",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_getItemAt. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_IconList_getItemAt(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_IconList_findItem(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->findItem(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_IconList_findItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXIconList * _arg0;
    FXString * _arg1;
    FXint  _arg2 = (FXint ) -1;
    FXuint  _arg3 = (FXuint ) SEARCH_FORWARD|SEARCH_WRAP;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","text","start","flags", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|ii:FX_IconList_findItem",_kwnames,&_argo0,&_obj1,&_arg2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_findItem. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_IconList_findItem(_arg0,*_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_IconList_makeItemVisible(_swigobj,_swigarg0)  (_swigobj->makeItemVisible(_swigarg0))
static PyObject *_wrap_FX_IconList_makeItemVisible(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconList * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","index", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_IconList_makeItemVisible",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_makeItemVisible. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_IconList_makeItemVisible(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_IconList_setItemText(_swigobj,_swigarg0,_swigarg1)  (_swigobj->setItemText(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_IconList_setItemText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconList * _arg0;
    FXint  _arg1;
    FXString * _arg2;
    PyObject * _argo0 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "self","index","text", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OiO:FX_IconList_setItemText",_kwnames,&_argo0,&_arg1,&_obj2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_setItemText. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj2 == Py_None)
	_arg2 = new FXString;
    else if (!PyString_Check(_obj2)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg2 = new FXString(PyString_AsString(_obj2));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_IconList_setItemText(_arg0,_arg1,*_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg2;
}
    return _resultobj;
}

#define FX_IconList_getItemText(_swigobj,_swigarg0)  (_swigobj->getItemText(_swigarg0))
static PyObject *_wrap_FX_IconList_getItemText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXIconList * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","index", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_IconList_getItemText",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_getItemText. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_IconList_getItemText(_arg0,_arg1));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

#define FX_IconList_setItemBigIcon(_swigobj,_swigarg0,_swigarg1)  (_swigobj->setItemBigIcon(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_IconList_setItemBigIcon(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconList * _arg0;
    FXint  _arg1;
    FXIcon * _arg2;
    PyObject * _argo0 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "self","index","icon", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OiO:FX_IconList_setItemBigIcon",_kwnames,&_argo0,&_arg1,&_obj2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_setItemBigIcon. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj2 == Py_None)
	_arg2 = NULL;
    else
	SWIG_GetPtrObj(_obj2, (void**) &_arg2, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_IconList_setItemBigIcon(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_IconList_getItemBigIcon(_swigobj,_swigarg0)  (_swigobj->getItemBigIcon(_swigarg0))
static PyObject *_wrap_FX_IconList_getItemBigIcon(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIcon * _result;
    FXIconList * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","index", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_IconList_getItemBigIcon",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_getItemBigIcon. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXIcon *)FX_IconList_getItemBigIcon(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_IconList_setItemMiniIcon(_swigobj,_swigarg0,_swigarg1)  (_swigobj->setItemMiniIcon(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_IconList_setItemMiniIcon(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconList * _arg0;
    FXint  _arg1;
    FXIcon * _arg2;
    PyObject * _argo0 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "self","index","icon", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OiO:FX_IconList_setItemMiniIcon",_kwnames,&_argo0,&_arg1,&_obj2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_setItemMiniIcon. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj2 == Py_None)
	_arg2 = NULL;
    else
	SWIG_GetPtrObj(_obj2, (void**) &_arg2, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_IconList_setItemMiniIcon(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_IconList_getItemMiniIcon(_swigobj,_swigarg0)  (_swigobj->getItemMiniIcon(_swigarg0))
static PyObject *_wrap_FX_IconList_getItemMiniIcon(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIcon * _result;
    FXIconList * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","index", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_IconList_getItemMiniIcon",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_getItemMiniIcon. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXIcon *)FX_IconList_getItemMiniIcon(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_IconList_setItemData(_swigobj,_swigarg0,_swigarg1)  (_swigobj->setItemData(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_IconList_setItemData(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconList * _arg0;
    FXint  _arg1;
    void * _arg2;
    PyObject * _argo0 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "self","index","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OiO:FX_IconList_setItemData",_kwnames,&_argo0,&_arg1,&_obj2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_setItemData. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    _arg2 = NULL;
    if (PyObject_HasAttrString(_obj2, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj2, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg2 = NULL;
	}
	else
	    _arg2 = (void*) _obj2;
	Py_DECREF(obj);
    }
    else
	_arg2 = (void*) _obj2;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_IconList_setItemData(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_IconList_getItemData(_swigobj,_swigarg0)  (_swigobj->getItemData(_swigarg0))
static PyObject *_wrap_FX_IconList_getItemData(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    void * _result;
    FXIconList * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","index", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_IconList_getItemData",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_getItemData. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (void *)FX_IconList_getItemData(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_void_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_IconList_isItemSelected(_swigobj,_swigarg0)  (_swigobj->isItemSelected(_swigarg0))
static PyObject *_wrap_FX_IconList_isItemSelected(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXIconList * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","index", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_IconList_isItemSelected",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_isItemSelected. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_IconList_isItemSelected(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_IconList_isItemCurrent(_swigobj,_swigarg0)  (_swigobj->isItemCurrent(_swigarg0))
static PyObject *_wrap_FX_IconList_isItemCurrent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXIconList * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","index", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_IconList_isItemCurrent",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_isItemCurrent. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_IconList_isItemCurrent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_IconList_isItemVisible(_swigobj,_swigarg0)  (_swigobj->isItemVisible(_swigarg0))
static PyObject *_wrap_FX_IconList_isItemVisible(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXIconList * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","index", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_IconList_isItemVisible",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_isItemVisible. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_IconList_isItemVisible(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_IconList_isItemEnabled(_swigobj,_swigarg0)  (_swigobj->isItemEnabled(_swigarg0))
static PyObject *_wrap_FX_IconList_isItemEnabled(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXIconList * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","index", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_IconList_isItemEnabled",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_isItemEnabled. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_IconList_isItemEnabled(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_IconList_enableItem(_swigobj,_swigarg0)  (_swigobj->enableItem(_swigarg0))
static PyObject *_wrap_FX_IconList_enableItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXIconList * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","index", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_IconList_enableItem",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_enableItem. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_IconList_enableItem(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_IconList_disableItem(_swigobj,_swigarg0)  (_swigobj->disableItem(_swigarg0))
static PyObject *_wrap_FX_IconList_disableItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXIconList * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","index", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_IconList_disableItem",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_disableItem. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_IconList_disableItem(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_IconList_hitItem(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4)  (_swigobj->hitItem(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4))
static PyObject *_wrap_FX_IconList_hitItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXIconList * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4 = (FXint ) 1;
    FXint  _arg5 = (FXint ) 1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","index","x","y","ww","hh", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiii|ii:FX_IconList_hitItem",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4,&_arg5)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_hitItem. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_IconList_hitItem(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_IconList_updateItem(_swigobj,_swigarg0)  (_swigobj->updateItem(_swigarg0))
static PyObject *_wrap_FX_IconList_updateItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconList * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","index", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_IconList_updateItem",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_updateItem. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_IconList_updateItem(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_IconList_selectInRectangle(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4)  (_swigobj->selectInRectangle(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4))
static PyObject *_wrap_FX_IconList_selectInRectangle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXIconList * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    FXbool  _arg5 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii|b:FX_IconList_selectInRectangle",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4,&_arg5)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_selectInRectangle. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_IconList_selectInRectangle(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_IconList_selectItem(_swigobj,_swigarg0,_swigarg1)  (_swigobj->selectItem(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_IconList_selectItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXIconList * _arg0;
    FXint  _arg1;
    FXbool  _arg2 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","index","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi|b:FX_IconList_selectItem",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_selectItem. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_IconList_selectItem(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_IconList_deselectItem(_swigobj,_swigarg0,_swigarg1)  (_swigobj->deselectItem(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_IconList_deselectItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXIconList * _arg0;
    FXint  _arg1;
    FXbool  _arg2 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","index","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi|b:FX_IconList_deselectItem",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_deselectItem. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_IconList_deselectItem(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_IconList_toggleItem(_swigobj,_swigarg0,_swigarg1)  (_swigobj->toggleItem(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_IconList_toggleItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXIconList * _arg0;
    FXint  _arg1;
    FXbool  _arg2 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","index","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi|b:FX_IconList_toggleItem",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_toggleItem. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_IconList_toggleItem(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_IconList_setCurrentItem(_swigobj,_swigarg0,_swigarg1)  (_swigobj->setCurrentItem(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_IconList_setCurrentItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconList * _arg0;
    FXint  _arg1;
    FXbool  _arg2 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","index","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi|b:FX_IconList_setCurrentItem",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_setCurrentItem. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_IconList_setCurrentItem(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_IconList_getCurrentItem(_swigobj)  (_swigobj->getCurrentItem())
static PyObject *_wrap_FX_IconList_getCurrentItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXIconList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_IconList_getCurrentItem",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_getCurrentItem. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_IconList_getCurrentItem(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_IconList_setAnchorItem(_swigobj,_swigarg0)  (_swigobj->setAnchorItem(_swigarg0))
static PyObject *_wrap_FX_IconList_setAnchorItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconList * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","index", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_IconList_setAnchorItem",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_setAnchorItem. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_IconList_setAnchorItem(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_IconList_getAnchorItem(_swigobj)  (_swigobj->getAnchorItem())
static PyObject *_wrap_FX_IconList_getAnchorItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXIconList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_IconList_getAnchorItem",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_getAnchorItem. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_IconList_getAnchorItem(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_IconList_extendSelection(_swigobj,_swigarg0,_swigarg1)  (_swigobj->extendSelection(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_IconList_extendSelection(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXIconList * _arg0;
    FXint  _arg1;
    FXbool  _arg2 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","index","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi|b:FX_IconList_extendSelection",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_extendSelection. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_IconList_extendSelection(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_IconList_killSelection(_swigobj,_swigarg0)  (_swigobj->killSelection(_swigarg0))
static PyObject *_wrap_FX_IconList_killSelection(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXIconList * _arg0;
    FXbool  _arg1 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FX_IconList_killSelection",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_killSelection. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_IconList_killSelection(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_IconList_sortItems(_swigobj)  (_swigobj->sortItems())
static PyObject *_wrap_FX_IconList_sortItems(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_IconList_sortItems",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_sortItems. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_IconList_sortItems(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_IconList_setFont(_swigobj,_swigarg0)  (_swigobj->setFont(_swigarg0))
static PyObject *_wrap_FX_IconList_setFont(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconList * _arg0;
    FXFont * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","fnt", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_IconList_setFont",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_setFont. Expected _FXIconList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXFont_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_IconList_setFont. Expected _FXFont_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_IconList_setFont(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_IconList_getFont(_swigobj)  (_swigobj->getFont())
static PyObject *_wrap_FX_IconList_getFont(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFont * _result;
    FXIconList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_IconList_getFont",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_getFont. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXFont *)FX_IconList_getFont(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_IconList_getTextColor(_swigobj)  (_swigobj->getTextColor())
static PyObject *_wrap_FX_IconList_getTextColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXIconList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_IconList_getTextColor",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_getTextColor. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FX_IconList_getTextColor(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_IconList_setTextColor(_swigobj,_swigarg0)  (_swigobj->setTextColor(_swigarg0))
static PyObject *_wrap_FX_IconList_setTextColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconList * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_IconList_setTextColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_setTextColor. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_IconList_setTextColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_IconList_getSelBackColor(_swigobj)  (_swigobj->getSelBackColor())
static PyObject *_wrap_FX_IconList_getSelBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXIconList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_IconList_getSelBackColor",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_getSelBackColor. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FX_IconList_getSelBackColor(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_IconList_setSelBackColor(_swigobj,_swigarg0)  (_swigobj->setSelBackColor(_swigarg0))
static PyObject *_wrap_FX_IconList_setSelBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconList * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_IconList_setSelBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_setSelBackColor. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_IconList_setSelBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_IconList_getSelTextColor(_swigobj)  (_swigobj->getSelTextColor())
static PyObject *_wrap_FX_IconList_getSelTextColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXIconList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_IconList_getSelTextColor",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_getSelTextColor. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FX_IconList_getSelTextColor(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_IconList_setSelTextColor(_swigobj,_swigarg0)  (_swigobj->setSelTextColor(_swigarg0))
static PyObject *_wrap_FX_IconList_setSelTextColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconList * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_IconList_setSelTextColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_setSelTextColor. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_IconList_setSelTextColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_IconList_setItemSpace(_swigobj,_swigarg0)  (_swigobj->setItemSpace(_swigarg0))
static PyObject *_wrap_FX_IconList_setItemSpace(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconList * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","s", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_IconList_setItemSpace",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_setItemSpace. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_IconList_setItemSpace(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_IconList_getItemSpace(_swigobj)  (_swigobj->getItemSpace())
static PyObject *_wrap_FX_IconList_getItemSpace(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXIconList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_IconList_getItemSpace",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_getItemSpace. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_IconList_getItemSpace(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_IconList_getSortFunc(_swigobj)  (_swigobj->getSortFunc())
static PyObject *_wrap_FX_IconList_getSortFunc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconListSortFunc  _result;
    FXIconList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_IconList_getSortFunc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_getSortFunc. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXIconListSortFunc )FX_IconList_getSortFunc(_arg0);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXIconListSortFunc");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_IconList_setSortFunc(_swigobj,_swigarg0)  (_swigobj->setSortFunc(_swigarg0))
static PyObject *_wrap_FX_IconList_setSortFunc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconList * _arg0;
    FXIconListSortFunc  _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","func", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_IconList_setSortFunc",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_setSortFunc. Expected _FXIconList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXIconListSortFunc")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_IconList_setSortFunc. Expected _FXIconListSortFunc.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_IconList_setSortFunc(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_IconList_getListStyle(_swigobj)  (_swigobj->getListStyle())
static PyObject *_wrap_FX_IconList_getListStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXIconList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_IconList_getListStyle",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_getListStyle. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )FX_IconList_getListStyle(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_IconList_setListStyle(_swigobj,_swigarg0)  (_swigobj->setListStyle(_swigarg0))
static PyObject *_wrap_FX_IconList_setListStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconList * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","style", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_IconList_setListStyle",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_setListStyle. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_IconList_setListStyle(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_IconList_setHelpText(_swigobj,_swigarg0)  (_swigobj->setHelpText(_swigarg0))
static PyObject *_wrap_FX_IconList_setHelpText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconList * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","text", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_IconList_setHelpText",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_setHelpText. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_IconList_setHelpText(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_IconList_getHelpText(_swigobj)  (_swigobj->getHelpText())
static PyObject *_wrap_FX_IconList_getHelpText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXIconList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_IconList_getHelpText",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconList_getHelpText. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_IconList_getHelpText(_arg0));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

static void *SwigFXPyIconListToFXIconList(void *ptr) {
    FXPyIconList *src;
    FXIconList *dest;
    src = (FXPyIconList *) ptr;
    dest = (FXIconList *) src;
    return (void *) dest;
}

static void *SwigFXPyIconListToFXScrollArea(void *ptr) {
    FXPyIconList *src;
    FXScrollArea *dest;
    src = (FXPyIconList *) ptr;
    dest = (FXScrollArea *) src;
    return (void *) dest;
}

static void *SwigFXPyIconListToFXComposite(void *ptr) {
    FXPyIconList *src;
    FXComposite *dest;
    src = (FXPyIconList *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXPyIconListToFXWindow(void *ptr) {
    FXPyIconList *src;
    FXWindow *dest;
    src = (FXPyIconList *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyIconListToFXDrawable(void *ptr) {
    FXPyIconList *src;
    FXDrawable *dest;
    src = (FXPyIconList *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPyIconListToFXId(void *ptr) {
    FXPyIconList *src;
    FXId *dest;
    src = (FXPyIconList *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPyIconListToFXObject(void *ptr) {
    FXPyIconList *src;
    FXObject *dest;
    src = (FXPyIconList *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXIconList(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7) (new FXPyIconList(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7))
static PyObject *_wrap_new_FXIconList(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyIconList * _result;
    FXComposite * _arg0;
    FXObject * _arg1 = (FXObject *) NULL;
    FXSelector  _arg2 = (FXSelector ) 0;
    FXuint  _arg3 = (FXuint ) (ICONLIST_NORMAL);
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "p","tgt","sel","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|Oiiiiii:new_FXIconList",_kwnames,&_argo0,&_obj1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FXIconList. Expected _FXComposite_p.");
        return NULL;
        }
    }
    if (_obj1)
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyIconList *)new_FXIconList(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyIconList_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FXIconList_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXIconList_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyIconList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXIconList_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconList_onDefault. Expected _FXPyIconList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXIconList_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXIconList_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXIconList_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyIconList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXIconList_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconList_create. Expected _FXPyIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXIconList_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXIconList_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXIconList_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyIconList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXIconList_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconList_destroy. Expected _FXPyIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXIconList_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXIconList_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXIconList_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyIconList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXIconList_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconList_detach. Expected _FXPyIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXIconList_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXIconList_resize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_resize(_swigarg0,_swigarg1))
static PyObject *_wrap_FXIconList_resize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyIconList * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXIconList_resize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconList_resize. Expected _FXPyIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXIconList_resize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXIconList_getDefaultWidth(_swigobj)  (_swigobj->_getDefaultWidth())
static PyObject *_wrap_FXIconList_getDefaultWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyIconList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXIconList_getDefaultWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconList_getDefaultWidth. Expected _FXPyIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXIconList_getDefaultWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXIconList_getDefaultHeight(_swigobj)  (_swigobj->_getDefaultHeight())
static PyObject *_wrap_FXIconList_getDefaultHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyIconList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXIconList_getDefaultHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconList_getDefaultHeight. Expected _FXPyIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXIconList_getDefaultHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXIconList_show(_swigobj)  (_swigobj->_show())
static PyObject *_wrap_FXIconList_show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyIconList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXIconList_show",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconList_show. Expected _FXPyIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXIconList_show(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXIconList_hide(_swigobj)  (_swigobj->_hide())
static PyObject *_wrap_FXIconList_hide(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyIconList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXIconList_hide",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconList_hide. Expected _FXPyIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXIconList_hide(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXIconList_enable(_swigobj)  (_swigobj->_enable())
static PyObject *_wrap_FXIconList_enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyIconList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXIconList_enable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconList_enable. Expected _FXPyIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXIconList_enable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXIconList_disable(_swigobj)  (_swigobj->_disable())
static PyObject *_wrap_FXIconList_disable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyIconList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXIconList_disable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconList_disable. Expected _FXPyIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXIconList_disable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXIconList_canFocus(_swigobj)  (_swigobj->_canFocus())
static PyObject *_wrap_FXIconList_canFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyIconList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXIconList_canFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconList_canFocus. Expected _FXPyIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXIconList_canFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXIconList_setFocus(_swigobj)  (_swigobj->_setFocus())
static PyObject *_wrap_FXIconList_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyIconList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXIconList_setFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconList_setFocus. Expected _FXPyIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXIconList_setFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXIconList_killFocus(_swigobj)  (_swigobj->_killFocus())
static PyObject *_wrap_FXIconList_killFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyIconList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXIconList_killFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconList_killFocus. Expected _FXPyIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXIconList_killFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXIconList_setDefault(_swigobj,_swigarg0)  (_swigobj->_setDefault(_swigarg0))
static PyObject *_wrap_FXIconList_setDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyIconList * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FXIconList_setDefault",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconList_setDefault. Expected _FXPyIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXIconList_setDefault(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXIconList_recalc(_swigobj)  (_swigobj->_recalc())
static PyObject *_wrap_FXIconList_recalc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyIconList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXIconList_recalc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconList_recalc. Expected _FXPyIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXIconList_recalc(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXIconList_layout(_swigobj)  (_swigobj->_layout())
static PyObject *_wrap_FXIconList_layout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyIconList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXIconList_layout",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconList_layout. Expected _FXPyIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXIconList_layout(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXIconList_lower(_swigobj)  (_swigobj->_lowerWindow())
static PyObject *_wrap_FXIconList_lower(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyIconList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXIconList_lower",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconList_lower. Expected _FXPyIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXIconList_lower(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXIconList_move(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_move(_swigarg0,_swigarg1))
static PyObject *_wrap_FXIconList_move(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyIconList * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXIconList_move",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconList_move. Expected _FXPyIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXIconList_move(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXIconList_position(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->_position(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FXIconList_position(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyIconList * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FXIconList_position",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconList_position. Expected _FXPyIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXIconList_position(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXIconList_isComposite(_swigobj)  (_swigobj->_isComposite())
static PyObject *_wrap_FXIconList_isComposite(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyIconList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXIconList_isComposite",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconList_isComposite. Expected _FXPyIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXIconList_isComposite(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXIconList_contains(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_contains(_swigarg0,_swigarg1))
static PyObject *_wrap_FXIconList_contains(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyIconList * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXIconList_contains",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconList_contains. Expected _FXPyIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXIconList_contains(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXIconList_getWidthForHeight(_swigobj,_swigarg0)  (_swigobj->_getWidthForHeight(_swigarg0))
static PyObject *_wrap_FXIconList_getWidthForHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyIconList * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXIconList_getWidthForHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconList_getWidthForHeight. Expected _FXPyIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXIconList_getWidthForHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXIconList_getHeightForWidth(_swigobj,_swigarg0)  (_swigobj->_getHeightForWidth(_swigarg0))
static PyObject *_wrap_FXIconList_getHeightForWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyIconList * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXIconList_getHeightForWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconList_getHeightForWidth. Expected _FXPyIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXIconList_getHeightForWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXIconList_doesSaveUnder(_swigobj)  (_swigobj->_doesSaveUnder())
static PyObject *_wrap_FXIconList_doesSaveUnder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyIconList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXIconList_doesSaveUnder",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconList_doesSaveUnder. Expected _FXPyIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXIconList_doesSaveUnder(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXIconList_reparent(_swigobj,_swigarg0)  (_swigobj->_reparent(_swigarg0))
static PyObject *_wrap_FXIconList_reparent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyIconList * _arg0;
    FXComposite * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","newparent", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXIconList_reparent",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconList_reparent. Expected _FXPyIconList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXIconList_reparent. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXIconList_reparent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXIconList_setBackColor(_swigobj,_swigarg0)  (_swigobj->_setBackColor(_swigarg0))
static PyObject *_wrap_FXIconList_setBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyIconList * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXIconList_setBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconList_setBackColor. Expected _FXPyIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXIconList_setBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXIconList_getContentWidth(_swigobj)  (_swigobj->_getContentWidth())
static PyObject *_wrap_FXIconList_getContentWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyIconList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXIconList_getContentWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconList_getContentWidth. Expected _FXPyIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXIconList_getContentWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXIconList_getContentHeight(_swigobj)  (_swigobj->_getContentHeight())
static PyObject *_wrap_FXIconList_getContentHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyIconList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXIconList_getContentHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconList_getContentHeight. Expected _FXPyIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXIconList_getContentHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXIconList_getViewportWidth(_swigobj)  (_swigobj->_getViewportWidth())
static PyObject *_wrap_FXIconList_getViewportWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyIconList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXIconList_getViewportWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconList_getViewportWidth. Expected _FXPyIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXIconList_getViewportWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXIconList_getViewportHeight(_swigobj)  (_swigobj->_getViewportHeight())
static PyObject *_wrap_FXIconList_getViewportHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyIconList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXIconList_getViewportHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconList_getViewportHeight. Expected _FXPyIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXIconList_getViewportHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXIconList_moveContents(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_moveContents(_swigarg0,_swigarg1))
static PyObject *_wrap_FXIconList_moveContents(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyIconList * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXIconList_moveContents",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconList_moveContents. Expected _FXPyIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXIconList_moveContents(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static PyMethodDef iconlistcMethods[] = {
	 { "FXIconList_moveContents", (PyCFunction) _wrap_FXIconList_moveContents, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconList_getViewportHeight", (PyCFunction) _wrap_FXIconList_getViewportHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconList_getViewportWidth", (PyCFunction) _wrap_FXIconList_getViewportWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconList_getContentHeight", (PyCFunction) _wrap_FXIconList_getContentHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconList_getContentWidth", (PyCFunction) _wrap_FXIconList_getContentWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconList_setBackColor", (PyCFunction) _wrap_FXIconList_setBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconList_reparent", (PyCFunction) _wrap_FXIconList_reparent, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconList_doesSaveUnder", (PyCFunction) _wrap_FXIconList_doesSaveUnder, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconList_getHeightForWidth", (PyCFunction) _wrap_FXIconList_getHeightForWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconList_getWidthForHeight", (PyCFunction) _wrap_FXIconList_getWidthForHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconList_contains", (PyCFunction) _wrap_FXIconList_contains, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconList_isComposite", (PyCFunction) _wrap_FXIconList_isComposite, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconList_position", (PyCFunction) _wrap_FXIconList_position, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconList_move", (PyCFunction) _wrap_FXIconList_move, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconList_lower", (PyCFunction) _wrap_FXIconList_lower, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconList_layout", (PyCFunction) _wrap_FXIconList_layout, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconList_recalc", (PyCFunction) _wrap_FXIconList_recalc, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconList_setDefault", (PyCFunction) _wrap_FXIconList_setDefault, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconList_killFocus", (PyCFunction) _wrap_FXIconList_killFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconList_setFocus", (PyCFunction) _wrap_FXIconList_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconList_canFocus", (PyCFunction) _wrap_FXIconList_canFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconList_disable", (PyCFunction) _wrap_FXIconList_disable, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconList_enable", (PyCFunction) _wrap_FXIconList_enable, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconList_hide", (PyCFunction) _wrap_FXIconList_hide, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconList_show", (PyCFunction) _wrap_FXIconList_show, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconList_getDefaultHeight", (PyCFunction) _wrap_FXIconList_getDefaultHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconList_getDefaultWidth", (PyCFunction) _wrap_FXIconList_getDefaultWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconList_resize", (PyCFunction) _wrap_FXIconList_resize, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconList_detach", (PyCFunction) _wrap_FXIconList_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconList_destroy", (PyCFunction) _wrap_FXIconList_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconList_create", (PyCFunction) _wrap_FXIconList_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconList_onDefault", (PyCFunction) _wrap_FXIconList_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXIconList", (PyCFunction) _wrap_new_FXIconList, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_getHelpText", (PyCFunction) _wrap_FX_IconList_getHelpText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_setHelpText", (PyCFunction) _wrap_FX_IconList_setHelpText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_setListStyle", (PyCFunction) _wrap_FX_IconList_setListStyle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_getListStyle", (PyCFunction) _wrap_FX_IconList_getListStyle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_setSortFunc", (PyCFunction) _wrap_FX_IconList_setSortFunc, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_getSortFunc", (PyCFunction) _wrap_FX_IconList_getSortFunc, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_getItemSpace", (PyCFunction) _wrap_FX_IconList_getItemSpace, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_setItemSpace", (PyCFunction) _wrap_FX_IconList_setItemSpace, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_setSelTextColor", (PyCFunction) _wrap_FX_IconList_setSelTextColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_getSelTextColor", (PyCFunction) _wrap_FX_IconList_getSelTextColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_setSelBackColor", (PyCFunction) _wrap_FX_IconList_setSelBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_getSelBackColor", (PyCFunction) _wrap_FX_IconList_getSelBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_setTextColor", (PyCFunction) _wrap_FX_IconList_setTextColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_getTextColor", (PyCFunction) _wrap_FX_IconList_getTextColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_getFont", (PyCFunction) _wrap_FX_IconList_getFont, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_setFont", (PyCFunction) _wrap_FX_IconList_setFont, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_sortItems", (PyCFunction) _wrap_FX_IconList_sortItems, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_killSelection", (PyCFunction) _wrap_FX_IconList_killSelection, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_extendSelection", (PyCFunction) _wrap_FX_IconList_extendSelection, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_getAnchorItem", (PyCFunction) _wrap_FX_IconList_getAnchorItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_setAnchorItem", (PyCFunction) _wrap_FX_IconList_setAnchorItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_getCurrentItem", (PyCFunction) _wrap_FX_IconList_getCurrentItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_setCurrentItem", (PyCFunction) _wrap_FX_IconList_setCurrentItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_toggleItem", (PyCFunction) _wrap_FX_IconList_toggleItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_deselectItem", (PyCFunction) _wrap_FX_IconList_deselectItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_selectItem", (PyCFunction) _wrap_FX_IconList_selectItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_selectInRectangle", (PyCFunction) _wrap_FX_IconList_selectInRectangle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_updateItem", (PyCFunction) _wrap_FX_IconList_updateItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_hitItem", (PyCFunction) _wrap_FX_IconList_hitItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_disableItem", (PyCFunction) _wrap_FX_IconList_disableItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_enableItem", (PyCFunction) _wrap_FX_IconList_enableItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_isItemEnabled", (PyCFunction) _wrap_FX_IconList_isItemEnabled, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_isItemVisible", (PyCFunction) _wrap_FX_IconList_isItemVisible, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_isItemCurrent", (PyCFunction) _wrap_FX_IconList_isItemCurrent, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_isItemSelected", (PyCFunction) _wrap_FX_IconList_isItemSelected, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_getItemData", (PyCFunction) _wrap_FX_IconList_getItemData, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_setItemData", (PyCFunction) _wrap_FX_IconList_setItemData, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_getItemMiniIcon", (PyCFunction) _wrap_FX_IconList_getItemMiniIcon, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_setItemMiniIcon", (PyCFunction) _wrap_FX_IconList_setItemMiniIcon, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_getItemBigIcon", (PyCFunction) _wrap_FX_IconList_getItemBigIcon, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_setItemBigIcon", (PyCFunction) _wrap_FX_IconList_setItemBigIcon, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_getItemText", (PyCFunction) _wrap_FX_IconList_getItemText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_setItemText", (PyCFunction) _wrap_FX_IconList_setItemText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_makeItemVisible", (PyCFunction) _wrap_FX_IconList_makeItemVisible, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_findItem", (PyCFunction) _wrap_FX_IconList_findItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_getItemAt", (PyCFunction) _wrap_FX_IconList_getItemAt, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_getItemHeight", (PyCFunction) _wrap_FX_IconList_getItemHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_getItemWidth", (PyCFunction) _wrap_FX_IconList_getItemWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_clearItems", (PyCFunction) _wrap_FX_IconList_clearItems, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_removeItem", (PyCFunction) _wrap_FX_IconList_removeItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_prependItemStr", (PyCFunction) _wrap_FX_IconList_prependItemStr, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_prependItem", (PyCFunction) _wrap_FX_IconList_prependItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_appendItemStr", (PyCFunction) _wrap_FX_IconList_appendItemStr, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_appendItem", (PyCFunction) _wrap_FX_IconList_appendItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_replaceItemStr", (PyCFunction) _wrap_FX_IconList_replaceItemStr, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_replaceItem", (PyCFunction) _wrap_FX_IconList_replaceItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_insertItemStr", (PyCFunction) _wrap_FX_IconList_insertItemStr, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_insertItem", (PyCFunction) _wrap_FX_IconList_insertItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_retrieveItem", (PyCFunction) _wrap_FX_IconList_retrieveItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_getNumHeaders", (PyCFunction) _wrap_FX_IconList_getNumHeaders, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_getHeaderSize", (PyCFunction) _wrap_FX_IconList_getHeaderSize, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_setHeaderSize", (PyCFunction) _wrap_FX_IconList_setHeaderSize, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_getHeaderIcon", (PyCFunction) _wrap_FX_IconList_getHeaderIcon, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_setHeaderIcon", (PyCFunction) _wrap_FX_IconList_setHeaderIcon, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_getHeaderText", (PyCFunction) _wrap_FX_IconList_getHeaderText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_setHeaderText", (PyCFunction) _wrap_FX_IconList_setHeaderText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_removeHeader", (PyCFunction) _wrap_FX_IconList_removeHeader, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_appendHeader", (PyCFunction) _wrap_FX_IconList_appendHeader, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_getHeader", (PyCFunction) _wrap_FX_IconList_getHeader, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_getNumCols", (PyCFunction) _wrap_FX_IconList_getNumCols, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_getNumRows", (PyCFunction) _wrap_FX_IconList_getNumRows, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_getNumItems", (PyCFunction) _wrap_FX_IconList_getNumItems, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_IconList", (PyCFunction) _wrap_new_FX_IconList, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_onCmdSetIntValue", (PyCFunction) _wrap_FX_IconList_onCmdSetIntValue, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_onCmdGetIntValue", (PyCFunction) _wrap_FX_IconList_onCmdGetIntValue, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_onCmdSetValue", (PyCFunction) _wrap_FX_IconList_onCmdSetValue, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_onLookupTimer", (PyCFunction) _wrap_FX_IconList_onLookupTimer, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_onAutoScroll", (PyCFunction) _wrap_FX_IconList_onAutoScroll, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_onCommand", (PyCFunction) _wrap_FX_IconList_onCommand, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_onTripleClicked", (PyCFunction) _wrap_FX_IconList_onTripleClicked, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_onDoubleClicked", (PyCFunction) _wrap_FX_IconList_onDoubleClicked, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_onClicked", (PyCFunction) _wrap_FX_IconList_onClicked, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_onFocusOut", (PyCFunction) _wrap_FX_IconList_onFocusOut, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_onFocusIn", (PyCFunction) _wrap_FX_IconList_onFocusIn, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_onHeaderChanged", (PyCFunction) _wrap_FX_IconList_onHeaderChanged, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_onUpdShowMiniIcons", (PyCFunction) _wrap_FX_IconList_onUpdShowMiniIcons, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_onCmdShowMiniIcons", (PyCFunction) _wrap_FX_IconList_onCmdShowMiniIcons, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_onUpdShowBigIcons", (PyCFunction) _wrap_FX_IconList_onUpdShowBigIcons, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_onCmdShowBigIcons", (PyCFunction) _wrap_FX_IconList_onCmdShowBigIcons, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_onUpdShowDetails", (PyCFunction) _wrap_FX_IconList_onUpdShowDetails, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_onCmdShowDetails", (PyCFunction) _wrap_FX_IconList_onCmdShowDetails, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_onUpdArrangeByColumns", (PyCFunction) _wrap_FX_IconList_onUpdArrangeByColumns, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_onCmdArrangeByColumns", (PyCFunction) _wrap_FX_IconList_onCmdArrangeByColumns, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_onUpdArrangeByRows", (PyCFunction) _wrap_FX_IconList_onUpdArrangeByRows, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_onCmdArrangeByRows", (PyCFunction) _wrap_FX_IconList_onCmdArrangeByRows, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_onCmdSelectInverse", (PyCFunction) _wrap_FX_IconList_onCmdSelectInverse, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_onCmdDeselectAll", (PyCFunction) _wrap_FX_IconList_onCmdDeselectAll, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_onCmdSelectAll", (PyCFunction) _wrap_FX_IconList_onCmdSelectAll, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_onTipTimer", (PyCFunction) _wrap_FX_IconList_onTipTimer, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_onQueryHelp", (PyCFunction) _wrap_FX_IconList_onQueryHelp, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_onQueryTip", (PyCFunction) _wrap_FX_IconList_onQueryTip, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_onMotion", (PyCFunction) _wrap_FX_IconList_onMotion, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_onRightBtnRelease", (PyCFunction) _wrap_FX_IconList_onRightBtnRelease, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_onRightBtnPress", (PyCFunction) _wrap_FX_IconList_onRightBtnPress, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_onLeftBtnRelease", (PyCFunction) _wrap_FX_IconList_onLeftBtnRelease, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_onLeftBtnPress", (PyCFunction) _wrap_FX_IconList_onLeftBtnPress, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_onKeyRelease", (PyCFunction) _wrap_FX_IconList_onKeyRelease, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_onKeyPress", (PyCFunction) _wrap_FX_IconList_onKeyPress, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_onUngrabbed", (PyCFunction) _wrap_FX_IconList_onUngrabbed, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_onLeave", (PyCFunction) _wrap_FX_IconList_onLeave, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_onEnter", (PyCFunction) _wrap_FX_IconList_onEnter, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconList_onPaint", (PyCFunction) _wrap_FX_IconList_onPaint, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconItem_destroy", (PyCFunction) _wrap_FXIconItem_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconItem_detach", (PyCFunction) _wrap_FXIconItem_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconItem_create", (PyCFunction) _wrap_FXIconItem_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconItem_getHeight", (PyCFunction) _wrap_FXIconItem_getHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconItem_getWidth", (PyCFunction) _wrap_FXIconItem_getWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconItem_setIconOwned", (PyCFunction) _wrap_FXIconItem_setIconOwned, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconItem_setDraggable", (PyCFunction) _wrap_FXIconItem_setDraggable, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconItem_setEnabled", (PyCFunction) _wrap_FXIconItem_setEnabled, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconItem_setSelected", (PyCFunction) _wrap_FXIconItem_setSelected, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconItem_setFocus", (PyCFunction) _wrap_FXIconItem_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconItem_setMiniIcon", (PyCFunction) _wrap_FXIconItem_setMiniIcon, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconItem_setBigIcon", (PyCFunction) _wrap_FXIconItem_setBigIcon, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconItem_setText", (PyCFunction) _wrap_FXIconItem_setText, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconItem_onDefault", (PyCFunction) _wrap_FXIconItem_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXIconItem", (PyCFunction) _wrap_new_FXIconItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconItem_destroy", (PyCFunction) _wrap_FX_IconItem_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconItem_detach", (PyCFunction) _wrap_FX_IconItem_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconItem_create", (PyCFunction) _wrap_FX_IconItem_create, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconItem_getHeight", (PyCFunction) _wrap_FX_IconItem_getHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconItem_getWidth", (PyCFunction) _wrap_FX_IconItem_getWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconItem_isIconOwned", (PyCFunction) _wrap_FX_IconItem_isIconOwned, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconItem_setIconOwned", (PyCFunction) _wrap_FX_IconItem_setIconOwned, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconItem_setDraggable", (PyCFunction) _wrap_FX_IconItem_setDraggable, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconItem_isDraggable", (PyCFunction) _wrap_FX_IconItem_isDraggable, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconItem_setEnabled", (PyCFunction) _wrap_FX_IconItem_setEnabled, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconItem_isEnabled", (PyCFunction) _wrap_FX_IconItem_isEnabled, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconItem_setSelected", (PyCFunction) _wrap_FX_IconItem_setSelected, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconItem_isSelected", (PyCFunction) _wrap_FX_IconItem_isSelected, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconItem_setFocus", (PyCFunction) _wrap_FX_IconItem_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconItem_hasFocus", (PyCFunction) _wrap_FX_IconItem_hasFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconItem_getData", (PyCFunction) _wrap_FX_IconItem_getData, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconItem_setData", (PyCFunction) _wrap_FX_IconItem_setData, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconItem_setMiniIcon", (PyCFunction) _wrap_FX_IconItem_setMiniIcon, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconItem_getMiniIcon", (PyCFunction) _wrap_FX_IconItem_getMiniIcon, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconItem_setBigIcon", (PyCFunction) _wrap_FX_IconItem_setBigIcon, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconItem_getBigIcon", (PyCFunction) _wrap_FX_IconItem_getBigIcon, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconItem_setText", (PyCFunction) _wrap_FX_IconItem_setText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconItem_getText", (PyCFunction) _wrap_FX_IconItem_getText, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_IconItem", (PyCFunction) _wrap_new_FX_IconItem, METH_VARARGS | METH_KEYWORDS },
	 { NULL, NULL }
};
#ifdef __cplusplus
}
#endif
/*
 * This table is used by the pointer type-checker
 */
static struct { char *n1; char *n2; void *(*pcnv)(void *); } _swig_mapping[] = {
    { "_class_FXPyBMPImage","_FXPyBMPImage",0},
    { "_class_FXPyICOImage","_FXPyICOImage",0},
    { "_FXPyDelegator","_class_FXPyDelegator",0},
    { "_FX4Splitter","_class_FX4Splitter",0},
    { "_signed_long","_FXTime",0},
    { "_signed_long","_long",0},
    { "_class_FXPyPCXImage","_FXPyPCXImage",0},
    { "_class_FXTIFIcon","_FXTIFIcon",0},
    { "_FXPyHorizontalFrame","_class_FXPyHorizontalFrame",0},
    { "_double","_FXdouble",0},
    { "_FXPyObject","_class_FXPyObject",0},
    { "_FXPyGIFIcon","_class_FXPyGIFIcon",0},
    { "_FXBMPIcon","_class_FXBMPIcon",0},
    { "_FXICOIcon","_class_FXICOIcon",0},
    { "_class_FXSettings","_FXSettings",0},
    { "_class_FXRegistry","_FXRegistry",0},
    { "_class_FXMainWindow","_FXMainWindow",0},
    { "_FXTopWindow","_class_FXTopWindow",0},
    { "_FXPySwitcher","_class_FXPySwitcher",0},
    { "_FXShutterItem","_class_FXShutterItem",0},
    { "_class_FXVisual","_FXVisual",0},
    { "_FXIcon","_class_FXIcon",0},
    { "_FXPyMatrix","_class_FXPyMatrix",0},
    { "_class_FXDCPrint","_FXDCPrint",0},
    { "_class_FXGroupBox","_FXGroupBox",0},
    { "_class_FXIconItem","_class_FXPyIconItem",SwigFXPyIconItemToFXIconItem},
    { "_class_FXIconItem","_FXPyIconItem",SwigFXPyIconItemToFXIconItem},
    { "_class_FXIconItem","_FXIconItem",0},
    { "_FXTGAImage","_class_FXTGAImage",0},
    { "_class_FXPyTGAIcon","_FXPyTGAIcon",0},
    { "_FXPyStream","_class_FXPyStream",0},
    { "_class_FXPyDict","_FXPyDict",0},
    { "_class_FXRegion","_FXRegion",0},
    { "_FXShutter","_class_FXShutter",0},
    { "_class_FXIconList","_class_FXPyIconList",SwigFXPyIconListToFXIconList},
    { "_class_FXIconList","_FXPyIconList",SwigFXPyIconListToFXIconList},
    { "_class_FXIconList","_FXIconList",0},
    { "_FXPyPNGImage","_class_FXPyPNGImage",0},
    { "_class_FXAccelTable","_FXAccelTable",0},
    { "_FXPyApp","_class_FXPyApp",0},
    { "_FXDCWindow","_class_FXDCWindow",0},
    { "_FXPyScrollArea","_class_FXPyScrollArea",0},
    { "_class_FXPyId","_FXPyId",0},
    { "_class_FXCanvas","_FXCanvas",0},
    { "_FXApp","_class_FXApp",0},
    { "_class_FXPyRecentFiles","_FXPyRecentFiles",0},
    { "_class_FXPyDebugTarget","_FXPyDebugTarget",0},
    { "_class_FXCommand","_FXCommand",0},
    { "_class_FXPyFrame","_FXPyFrame",0},
    { "_long","_FXPixel",0},
    { "_long","_FXTime",0},
    { "_long","_unsigned_long",0},
    { "_long","_signed_long",0},
    { "_FXComposite","_class_FXPyIconList",SwigFXPyIconListToFXComposite},
    { "_FXComposite","_FXPyIconList",SwigFXPyIconListToFXComposite},
    { "_FXComposite","_class_FXIconList",SwigFXIconListToFXComposite},
    { "_FXComposite","_FXIconList",SwigFXIconListToFXComposite},
    { "_FXComposite","_class_FXComposite",0},
    { "_struct_FXArc","_FXArc",0},
    { "_FXRGBIcon","_class_FXRGBIcon",0},
    { "_FXScrollArea","_class_FXPyIconList",SwigFXPyIconListToFXScrollArea},
    { "_FXScrollArea","_FXPyIconList",SwigFXPyIconListToFXScrollArea},
    { "_FXScrollArea","_class_FXIconList",SwigFXIconListToFXScrollArea},
    { "_FXScrollArea","_FXIconList",SwigFXIconListToFXScrollArea},
    { "_FXScrollArea","_class_FXScrollArea",0},
    { "_FXPrinter","_struct_FXPrinter",0},
    { "_class_FXId","_class_FXPyIconList",SwigFXPyIconListToFXId},
    { "_class_FXId","_FXPyIconList",SwigFXPyIconListToFXId},
    { "_class_FXId","_class_FXIconList",SwigFXIconListToFXId},
    { "_class_FXId","_FXIconList",SwigFXIconListToFXId},
    { "_class_FXId","_FXId",0},
    { "_FXPyHorizontalSeparator","_class_FXPyHorizontalSeparator",0},
    { "_float","_FXfloat",0},
    { "_FXPyDrawable","_class_FXPyDrawable",0},
    { "_class_FXPyXPMIcon","_FXPyXPMIcon",0},
    { "_FXPyScrollWindow","_class_FXPyScrollWindow",0},
    { "_FXshort","_short",0},
    { "_FXshort","_signed_short",0},
    { "_FXshort","_unsigned_short",0},
    { "_FXshort","_FXushort",0},
    { "_FXFontDesc","_struct_FXFontDesc",0},
    { "_FXArc","_struct_FXArc",0},
    { "_FXSize","_class_FXSize",0},
    { "_class_FXBMPIcon","_FXBMPIcon",0},
    { "_class_FXICOIcon","_FXICOIcon",0},
    { "_FXPyShell","_class_FXPyShell",0},
    { "_class_FXPyTIFIcon","_FXPyTIFIcon",0},
    { "_FXSegment","_struct_FXSegment",0},
    { "_FXJPGImage","_class_FXJPGImage",0},
    { "_class_FXPySwitcher","_FXPySwitcher",0},
    { "_class_FXTIFImage","_FXTIFImage",0},
    { "_FXPyPCXIcon","_class_FXPyPCXIcon",0},
    { "_FXDC","_class_FXDC",0},
    { "_class_FXIcon","_FXIcon",0},
    { "_FXPopup","_class_FXPopup",0},
    { "_FXPy4Splitter","_class_FXPy4Splitter",0},
    { "_FXint","_FXInputHandle",0},
    { "_FXint","_FXDragType",0},
    { "_FXint","_FXHotKey",0},
    { "_FXint","_FXColor",0},
    { "_FXint","_FXID",0},
    { "_FXint","_FXSelector",0},
    { "_FXint","_int",0},
    { "_FXint","_signed_int",0},
    { "_FXint","_unsigned_int",0},
    { "_FXint","_FXuint",0},
    { "_FXPyPNGIcon","_class_FXPyPNGIcon",0},
    { "_class_FXWindow","_class_FXPyIconList",SwigFXPyIconListToFXWindow},
    { "_class_FXWindow","_FXPyIconList",SwigFXPyIconListToFXWindow},
    { "_class_FXWindow","_class_FXIconList",SwigFXIconListToFXWindow},
    { "_class_FXWindow","_FXIconList",SwigFXIconListToFXWindow},
    { "_class_FXWindow","_FXWindow",0},
    { "_FXPyRootWindow","_class_FXPyRootWindow",0},
    { "_class_FXShutter","_FXShutter",0},
    { "_FXushort","_FXshort",0},
    { "_FXushort","_unsigned_short",0},
    { "_FXushort","_short",0},
    { "_class_FXPoint","_FXPoint",0},
    { "_class_FXPyPNGImage","_FXPyPNGImage",0},
    { "_class_FXPyDCPrint","_FXPyDCPrint",0},
    { "_FXPyVisual","_class_FXPyVisual",0},
    { "_class_FXRectangle","_FXRectangle",0},
    { "_class_FXPyFont","_FXPyFont",0},
    { "_FXPyFileStream","_class_FXPyFileStream",0},
    { "_FXRGBImage","_class_FXRGBImage",0},
    { "_FXRootWindow","_class_FXRootWindow",0},
    { "_class_FXPacker","_FXPacker",0},
    { "_FXPyXPMImage","_class_FXPyXPMImage",0},
    { "_FXPyDataTarget","_class_FXPyDataTarget",0},
    { "_FXPyTopWindow","_class_FXPyTopWindow",0},
    { "_FXObject","_class_FXPyIconList",SwigFXPyIconListToFXObject},
    { "_FXObject","_FXPyIconList",SwigFXPyIconListToFXObject},
    { "_FXObject","_class_FXIconList",SwigFXIconListToFXObject},
    { "_FXObject","_FXIconList",SwigFXIconListToFXObject},
    { "_FXObject","_class_FXPyIconItem",SwigFXPyIconItemToFXObject},
    { "_FXObject","_FXPyIconItem",SwigFXPyIconItemToFXObject},
    { "_FXObject","_class_FXIconItem",SwigFXIconItemToFXObject},
    { "_FXObject","_FXIconItem",SwigFXIconItemToFXObject},
    { "_FXObject","_class_FXObject",0},
    { "_FXPyGIFImage","_class_FXPyGIFImage",0},
    { "_FXBMPImage","_class_FXBMPImage",0},
    { "_FXICOImage","_class_FXICOImage",0},
    { "_class_FXRGBIcon","_FXRGBIcon",0},
    { "_FXRecentFiles","_class_FXRecentFiles",0},
    { "_FXDebugTarget","_class_FXDebugTarget",0},
    { "_class_FXPyCommand","_FXPyCommand",0},
    { "_class_FXScrollArea","_class_FXPyIconList",SwigFXPyIconListToFXScrollArea},
    { "_class_FXScrollArea","_FXPyIconList",SwigFXPyIconListToFXScrollArea},
    { "_class_FXScrollArea","_class_FXIconList",SwigFXIconListToFXScrollArea},
    { "_class_FXScrollArea","_FXIconList",SwigFXIconListToFXScrollArea},
    { "_class_FXScrollArea","_FXScrollArea",0},
    { "_FXPySplitter","_class_FXPySplitter",0},
    { "_FXPCXImage","_class_FXPCXImage",0},
    { "_FXFileStream","_class_FXFileStream",0},
    { "_class_FXPyDelegator","_FXPyDelegator",0},
    { "_FXPyCanvas","_class_FXPyCanvas",0},
    { "_class_FXPyDrawable","_FXPyDrawable",0},
    { "_FXPyImage","_class_FXPyImage",0},
    { "_FXGIFIcon","_class_FXGIFIcon",0},
    { "_FXColor","_FXInputHandle",0},
    { "_FXColor","_FXDragType",0},
    { "_FXColor","_FXHotKey",0},
    { "_FXColor","_FXuint",0},
    { "_FXColor","_int",0},
    { "_FXColor","_unsigned_int",0},
    { "_FXColor","_FXint",0},
    { "_FXColor","_FXSelector",0},
    { "_FXColor","_FXID",0},
    { "_FXPyJPGIcon","_class_FXPyJPGIcon",0},
    { "_FXDataTarget","_class_FXDataTarget",0},
    { "_class_FXPyHorizontalFrame","_FXPyHorizontalFrame",0},
    { "_FXTime","_FXPixel",0},
    { "_FXTime","_long",0},
    { "_FXTime","_signed_long",0},
    { "_FXTime","_unsigned_long",0},
    { "_FXHotKey","_FXInputHandle",0},
    { "_FXHotKey","_FXDragType",0},
    { "_FXHotKey","_FXuint",0},
    { "_FXHotKey","_int",0},
    { "_FXHotKey","_unsigned_int",0},
    { "_FXHotKey","_FXint",0},
    { "_FXHotKey","_FXSelector",0},
    { "_FXHotKey","_FXID",0},
    { "_FXHotKey","_FXColor",0},
    { "_class_FXSize","_FXSize",0},
    { "_class_FXPyObject","_FXPyObject",0},
    { "_class_FXPyShell","_FXPyShell",0},
    { "_FXPyDC","_class_FXPyDC",0},
    { "_struct_FXFontDesc","_FXFontDesc",0},
    { "_FXMatrix","_class_FXMatrix",0},
    { "_class_FXPyBMPIcon","_FXPyBMPIcon",0},
    { "_class_FXPyICOIcon","_FXPyICOIcon",0},
    { "_char","_FXchar",0},
    { "_FXdouble","_double",0},
    { "_FXStream","_class_FXStream",0},
    { "_FXPyStringDict","_class_FXPyStringDict",0},
    { "_FXFrame","_class_FXFrame",0},
    { "_FXObjectPtr","_FXObject_p",0},
    { "_FXPyComposite","_class_FXPyComposite",0},
    { "_class_FXShutterItem","_FXShutterItem",0},
    { "_class_FXDelegator","_FXDelegator",0},
    { "_FXVerticalFrame","_class_FXVerticalFrame",0},
    { "_class_FXPyMatrix","_FXPyMatrix",0},
    { "_FXbool","_FXuchar",0},
    { "_FXbool","_unsigned_char",0},
    { "_class_FXTGAImage","_FXTGAImage",0},
    { "_class_FXPyStream","_FXPyStream",0},
    { "_FXStringDict","_class_FXStringDict",0},
    { "_FXPyGroupBox","_class_FXPyGroupBox",0},
    { "_FXPyIconItem","_class_FXPyIconItem",0},
    { "_FXPyIconList","_class_FXPyIconList",0},
    { "_class_FXPyApp","_FXPyApp",0},
    { "_class_FXDCWindow","_FXDCWindow",0},
    { "_class_FXPyShutter","_FXPyShutter",0},
    { "_FXPyWindow","_class_FXPyWindow",0},
    { "_class_FXRootWindow","_FXRootWindow",0},
    { "_class_FXPyXPMImage","_FXPyXPMImage",0},
    { "_class_FXPyGIFImage","_FXPyGIFImage",0},
    { "_class_FXPyVerticalFrame","_FXPyVerticalFrame",0},
    { "_class_FXPySplitter","_FXPySplitter",0},
    { "_class_FXFileStream","_FXFileStream",0},
    { "_class_FXPyMainWindow","_FXPyMainWindow",0},
    { "_class_FXHorizontalFrame","_FXHorizontalFrame",0},
    { "_class_FXPyImage","_FXPyImage",0},
    { "_class_FXGIFIcon","_FXGIFIcon",0},
    { "_class_FXPyRGBIcon","_FXPyRGBIcon",0},
    { "_FXPyPacker","_class_FXPyPacker",0},
    { "_class_FXPyScrollWindow","_FXPyScrollWindow",0},
    { "_unsigned_long","_FXPixel",0},
    { "_unsigned_long","_FXTime",0},
    { "_unsigned_long","_long",0},
    { "_class_FXDataTarget","_FXDataTarget",0},
    { "_class_FXScrollWindow","_FXScrollWindow",0},
    { "_class_FXPyDC","_FXPyDC",0},
    { "_FXPyVerticalSeparator","_class_FXPyVerticalSeparator",0},
    { "_FXPCXIcon","_class_FXPCXIcon",0},
    { "_FXSwitcher","_class_FXSwitcher",0},
    { "_class_FXJPGImage","_FXJPGImage",0},
    { "_class_FXPyIcon","_FXPyIcon",0},
    { "_class_FXPyAccelTable","_FXPyAccelTable",0},
    { "_class_FXDC","_FXDC",0},
    { "_FXVisual","_class_FXVisual",0},
    { "_FXPyTIFImage","_class_FXPyTIFImage",0},
    { "_FXPNGIcon","_class_FXPNGIcon",0},
    { "_class_FXPopup","_FXPopup",0},
    { "_class_FXVerticalFrame","_FXVerticalFrame",0},
    { "_signed_int","_FXInputHandle",0},
    { "_signed_int","_FXint",0},
    { "_signed_int","_int",0},
    { "_class_FXPy4Splitter","_FXPy4Splitter",0},
    { "_FXPNGImage","_class_FXPNGImage",0},
    { "_FXPyTGAIcon","_class_FXPyTGAIcon",0},
    { "_FXPyDict","_class_FXPyDict",0},
    { "_class_FXStringDict","_FXStringDict",0},
    { "_FXRegion","_class_FXRegion",0},
    { "_class_FXPyGroupBox","_FXPyGroupBox",0},
    { "_class_FXPyIconItem","_FXPyIconItem",0},
    { "_FXVerticalSeparator","_class_FXVerticalSeparator",0},
    { "_class_FXPyIconList","_FXPyIconList",0},
    { "_FXRawEvent","__XEvent",0},
    { "_class_FXPyVisual","_FXPyVisual",0},
    { "_FXShell","_class_FXShell",0},
    { "_FXCanvas","_class_FXCanvas",0},
    { "_class_FXRGBImage","_FXRGBImage",0},
    { "_unsigned_short","_FXshort",0},
    { "_unsigned_short","_FXushort",0},
    { "_unsigned_short","_short",0},
    { "_class_FXPyTopWindow","_FXPyTopWindow",0},
    { "_class_FXBMPImage","_FXBMPImage",0},
    { "_class_FXICOImage","_FXICOImage",0},
    { "_class_FXRecentFiles","_FXRecentFiles",0},
    { "_class_FXDebugTarget","_FXDebugTarget",0},
    { "_FXDrawable","_class_FXPyIconList",SwigFXPyIconListToFXDrawable},
    { "_FXDrawable","_FXPyIconList",SwigFXPyIconListToFXDrawable},
    { "_FXDrawable","_class_FXIconList",SwigFXIconListToFXDrawable},
    { "_FXDrawable","_FXIconList",SwigFXIconListToFXDrawable},
    { "_FXDrawable","_class_FXDrawable",0},
    { "_class_FXPCXImage","_FXPCXImage",0},
    { "_FXJPGIcon","_class_FXJPGIcon",0},
    { "_class_FXPyCanvas","_FXPyCanvas",0},
    { "_class_FX4Splitter","_FX4Splitter",0},
    { "_FXPyXPMIcon","_class_FXPyXPMIcon",0},
    { "_FXObject_p","_FXObjectPtr",0},
    { "_FXID","_FXInputHandle",0},
    { "_FXID","_FXDragType",0},
    { "_FXID","_FXHotKey",0},
    { "_FXID","_FXColor",0},
    { "_FXID","_unsigned_int",0},
    { "_FXID","_int",0},
    { "_FXID","_FXuint",0},
    { "_FXID","_FXint",0},
    { "_FXID","_FXSelector",0},
    { "_FXHorizontalSeparator","_class_FXHorizontalSeparator",0},
    { "_class_FXPyGIFIcon","_FXPyGIFIcon",0},
    { "_class_FXPyVerticalSeparator","_FXPyVerticalSeparator",0},
    { "_struct_FXPrinter","_FXPrinter",0},
    { "_FXPyTIFIcon","_class_FXPyTIFIcon",0},
    { "_class_FXPCXIcon","_FXPCXIcon",0},
    { "_signed_short","_FXshort",0},
    { "_signed_short","_short",0},
    { "_class_FXFrame","_FXFrame",0},
    { "_class_FXTopWindow","_FXTopWindow",0},
    { "_FXfloat","_float",0},
    { "_FXEvent","_struct_FXEvent",0},
    { "_class_FXPyComposite","_FXPyComposite",0},
    { "_class_FXPyTIFImage","_FXPyTIFImage",0},
    { "_class_FXPNGIcon","_FXPNGIcon",0},
    { "_struct_FXSegment","_FXSegment",0},
    { "_unsigned_char","_FXbool",0},
    { "_unsigned_char","_FXuchar",0},
    { "_FXPixel","_unsigned_long",0},
    { "_FXPixel","_long",0},
    { "_FXPixel","_FXTime",0},
    { "_FXImage","_class_FXImage",0},
    { "_FXWindow","_class_FXPyIconList",SwigFXPyIconListToFXWindow},
    { "_FXWindow","_FXPyIconList",SwigFXPyIconListToFXWindow},
    { "_FXWindow","_class_FXIconList",SwigFXIconListToFXWindow},
    { "_FXWindow","_FXIconList",SwigFXIconListToFXWindow},
    { "_FXWindow","_class_FXWindow",0},
    { "_unsigned_int","_FXInputHandle",0},
    { "_unsigned_int","_FXDragType",0},
    { "_unsigned_int","_FXHotKey",0},
    { "_unsigned_int","_FXColor",0},
    { "_unsigned_int","_FXID",0},
    { "_unsigned_int","_FXSelector",0},
    { "_unsigned_int","_FXint",0},
    { "_unsigned_int","_FXuint",0},
    { "_unsigned_int","_int",0},
    { "_FXPyTGAImage","_class_FXPyTGAImage",0},
    { "_FXDict","_class_FXDict",0},
    { "_FXPyDCPrint","_class_FXPyDCPrint",0},
    { "_FXuint","_FXInputHandle",0},
    { "_FXuint","_FXDragType",0},
    { "_FXuint","_FXHotKey",0},
    { "_FXuint","_FXColor",0},
    { "_FXuint","_FXID",0},
    { "_FXuint","_FXSelector",0},
    { "_FXuint","_FXint",0},
    { "_FXuint","_unsigned_int",0},
    { "_FXuint","_int",0},
    { "_class_FXPyScrollArea","_FXPyScrollArea",0},
    { "_short","_FXshort",0},
    { "_short","_FXushort",0},
    { "_short","_unsigned_short",0},
    { "_short","_signed_short",0},
    { "_FXRectangle","_class_FXRectangle",0},
    { "_FXPyFont","_class_FXPyFont",0},
    { "_FXPyDCWindow","_class_FXPyDCWindow",0},
    { "_class_FXApp","_FXApp",0},
    { "_FXXPMImage","_class_FXXPMImage",0},
    { "_class_FXPyWindow","_FXPyWindow",0},
    { "_FXPacker","_class_FXPacker",0},
    { "_FXGIFImage","_class_FXGIFImage",0},
    { "_class_FXComposite","_class_FXPyIconList",SwigFXPyIconListToFXComposite},
    { "_class_FXComposite","_FXPyIconList",SwigFXPyIconListToFXComposite},
    { "_class_FXComposite","_class_FXIconList",SwigFXIconListToFXComposite},
    { "_class_FXComposite","_FXIconList",SwigFXIconListToFXComposite},
    { "_class_FXComposite","_FXComposite",0},
    { "_FXSplitter","_class_FXSplitter",0},
    { "_FXPyCommand","_class_FXPyCommand",0},
    { "_class_FXJPGIcon","_FXJPGIcon",0},
    { "_class_FXPyHorizontalSeparator","_FXPyHorizontalSeparator",0},
    { "_FXchar","_char",0},
    { "_class_FXPyPacker","_FXPyPacker",0},
    { "_FXuchar","_FXbool",0},
    { "_FXuchar","_unsigned_char",0},
    { "_class_FXHorizontalSeparator","_FXHorizontalSeparator",0},
    { "_int","_FXInputHandle",0},
    { "_int","_FXDragType",0},
    { "_int","_FXHotKey",0},
    { "_int","_FXColor",0},
    { "_int","_FXID",0},
    { "_int","_FXSelector",0},
    { "_int","_FXint",0},
    { "_int","_FXuint",0},
    { "_int","_unsigned_int",0},
    { "_int","_signed_int",0},
    { "_FXDragType","_FXInputHandle",0},
    { "_FXDragType","_FXID",0},
    { "_FXDragType","_FXSelector",0},
    { "_FXDragType","_FXint",0},
    { "_FXDragType","_FXuint",0},
    { "_FXDragType","_int",0},
    { "_FXDragType","_unsigned_int",0},
    { "_FXDragType","_FXColor",0},
    { "_FXDragType","_FXHotKey",0},
    { "_FXSettings","_class_FXSettings",0},
    { "_FXRegistry","_class_FXRegistry",0},
    { "_FXPyBMPIcon","_class_FXPyBMPIcon",0},
    { "_FXPyICOIcon","_class_FXPyICOIcon",0},
    { "_class_FXSwitcher","_FXSwitcher",0},
    { "_FXPyShutterItem","_class_FXPyShutterItem",0},
    { "_FXPSBounds","_struct_FXPSBounds",0},
    { "_FXPyJPGImage","_class_FXPyJPGImage",0},
    { "_class_FXPyPCXIcon","_FXPyPCXIcon",0},
    { "_FXTGAIcon","_class_FXTGAIcon",0},
    { "_FXDelegator","_class_FXDelegator",0},
    { "_FXGroupBox","_class_FXGroupBox",0},
    { "_FXIconItem","_class_FXPyIconItem",SwigFXPyIconItemToFXIconItem},
    { "_FXIconItem","_FXPyIconItem",SwigFXPyIconItemToFXIconItem},
    { "_FXIconItem","_class_FXIconItem",0},
    { "_class_FXPNGImage","_FXPNGImage",0},
    { "_class_FXPyPNGIcon","_FXPyPNGIcon",0},
    { "_class_FXPyRootWindow","_FXPyRootWindow",0},
    { "_FXIconList","_class_FXPyIconList",SwigFXPyIconListToFXIconList},
    { "_FXIconList","_FXPyIconList",SwigFXPyIconListToFXIconList},
    { "_FXIconList","_class_FXIconList",0},
    { "_class_FXPyTGAImage","_FXPyTGAImage",0},
    { "_class_FXDict","_FXDict",0},
    { "_class_FXVerticalSeparator","_FXVerticalSeparator",0},
    { "_class_FXShell","_FXShell",0},
    { "_FXPyShutter","_class_FXPyShutter",0},
    { "_FXInputHandle","_FXint",0},
    { "_FXInputHandle","_FXuint",0},
    { "_FXInputHandle","_unsigned_int",0},
    { "_FXInputHandle","_signed_int",0},
    { "_FXInputHandle","_int",0},
    { "_FXInputHandle","_FXSelector",0},
    { "_FXInputHandle","_FXID",0},
    { "_FXInputHandle","_FXColor",0},
    { "_FXInputHandle","_FXHotKey",0},
    { "_FXInputHandle","_FXDragType",0},
    { "_class_FXPyFileStream","_FXPyFileStream",0},
    { "_class_FXPyDCWindow","_FXPyDCWindow",0},
    { "_FXFont","_class_FXFont",0},
    { "_FXPyRGBImage","_class_FXPyRGBImage",0},
    { "_class_FXPyDataTarget","_FXPyDataTarget",0},
    { "_class_FXObject","_class_FXPyIconList",SwigFXPyIconListToFXObject},
    { "_class_FXObject","_FXPyIconList",SwigFXPyIconListToFXObject},
    { "_class_FXObject","_class_FXIconList",SwigFXIconListToFXObject},
    { "_class_FXObject","_FXIconList",SwigFXIconListToFXObject},
    { "_class_FXObject","_class_FXPyIconItem",SwigFXPyIconItemToFXObject},
    { "_class_FXObject","_FXPyIconItem",SwigFXPyIconItemToFXObject},
    { "_class_FXObject","_class_FXIconItem",SwigFXIconItemToFXObject},
    { "_class_FXObject","_FXIconItem",SwigFXIconItemToFXObject},
    { "_class_FXObject","_FXObject",0},
    { "_FXXPMIcon","_class_FXXPMIcon",0},
    { "_FXPyPopup","_class_FXPyPopup",0},
    { "_FXPyVerticalFrame","_class_FXPyVerticalFrame",0},
    { "_FXId","_class_FXPyIconList",SwigFXPyIconListToFXId},
    { "_FXId","_FXPyIconList",SwigFXPyIconListToFXId},
    { "_FXId","_class_FXIconList",SwigFXIconListToFXId},
    { "_FXId","_FXIconList",SwigFXIconListToFXId},
    { "_FXId","_class_FXId",0},
    { "_class_FXDrawable","_class_FXPyIconList",SwigFXPyIconListToFXDrawable},
    { "_class_FXDrawable","_FXPyIconList",SwigFXPyIconListToFXDrawable},
    { "_class_FXDrawable","_class_FXIconList",SwigFXIconListToFXDrawable},
    { "_class_FXDrawable","_FXIconList",SwigFXIconListToFXDrawable},
    { "_class_FXDrawable","_FXDrawable",0},
    { "_FXPyBMPImage","_class_FXPyBMPImage",0},
    { "_FXPyICOImage","_class_FXPyICOImage",0},
    { "_FXPyMainWindow","_class_FXPyMainWindow",0},
    { "_FXHorizontalFrame","_class_FXHorizontalFrame",0},
    { "_FXPyPCXImage","_class_FXPyPCXImage",0},
    { "_FXPyRGBIcon","_class_FXPyRGBIcon",0},
    { "_class_FXPyJPGIcon","_FXPyJPGIcon",0},
    { "_FXTIFIcon","_class_FXTIFIcon",0},
    { "_FXScrollWindow","_class_FXScrollWindow",0},
    { "_FXMainWindow","_class_FXMainWindow",0},
    { "_class_FXMatrix","_FXMatrix",0},
    { "__XEvent","_FXRawEvent",0},
    { "_class_FXPyShutterItem","_FXPyShutterItem",0},
    { "_struct_FXEvent","_FXEvent",0},
    { "_class_FXStream","_FXStream",0},
    { "_class_FXPyStringDict","_FXPyStringDict",0},
    { "_class_FXPyJPGImage","_FXPyJPGImage",0},
    { "_FXTIFImage","_class_FXTIFImage",0},
    { "_FXPyIcon","_class_FXPyIcon",0},
    { "_FXPyAccelTable","_class_FXPyAccelTable",0},
    { "_class_FXTGAIcon","_FXTGAIcon",0},
    { "_struct_FXPSBounds","_FXPSBounds",0},
    { "_FXDCPrint","_class_FXDCPrint",0},
    { "_class_FXImage","_FXImage",0},
    { "_FXPoint","_class_FXPoint",0},
    { "_FXAccelTable","_class_FXAccelTable",0},
    { "_FXPyId","_class_FXPyId",0},
    { "_FXSelector","_FXInputHandle",0},
    { "_FXSelector","_FXDragType",0},
    { "_FXSelector","_FXHotKey",0},
    { "_FXSelector","_FXColor",0},
    { "_FXSelector","_FXID",0},
    { "_FXSelector","_FXuint",0},
    { "_FXSelector","_int",0},
    { "_FXSelector","_unsigned_int",0},
    { "_FXSelector","_FXint",0},
    { "_class_FXFont","_FXFont",0},
    { "_class_FXXPMImage","_FXXPMImage",0},
    { "_FXPyRecentFiles","_class_FXPyRecentFiles",0},
    { "_FXPyDebugTarget","_class_FXPyDebugTarget",0},
    { "_FXCommand","_class_FXCommand",0},
    { "_FXPyFrame","_class_FXPyFrame",0},
    { "_class_FXGIFImage","_FXGIFImage",0},
    { "_class_FXPyRGBImage","_FXPyRGBImage",0},
    { "_class_FXSplitter","_FXSplitter",0},
    { "_class_FXXPMIcon","_FXXPMIcon",0},
    { "_class_FXPyPopup","_FXPyPopup",0},
{0,0,0}};

static PyObject *SWIG_globals;
#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT(void) initiconlistc() {
	 PyObject *m, *d;
	 SWIG_globals = SWIG_newvarlink();
	 m = Py_InitModule("iconlistc", iconlistcMethods);
	 d = PyModule_GetDict(m);
	 PyDict_SetItemString(d,"ICONLIST_EXTENDEDSELECT", PyInt_FromLong((long) ICONLIST_EXTENDEDSELECT));
	 PyDict_SetItemString(d,"ICONLIST_SINGLESELECT", PyInt_FromLong((long) ICONLIST_SINGLESELECT));
	 PyDict_SetItemString(d,"ICONLIST_BROWSESELECT", PyInt_FromLong((long) ICONLIST_BROWSESELECT));
	 PyDict_SetItemString(d,"ICONLIST_MULTIPLESELECT", PyInt_FromLong((long) ICONLIST_MULTIPLESELECT));
	 PyDict_SetItemString(d,"ICONLIST_AUTOSIZE", PyInt_FromLong((long) ICONLIST_AUTOSIZE));
	 PyDict_SetItemString(d,"ICONLIST_DETAILED", PyInt_FromLong((long) ICONLIST_DETAILED));
	 PyDict_SetItemString(d,"ICONLIST_MINI_ICONS", PyInt_FromLong((long) ICONLIST_MINI_ICONS));
	 PyDict_SetItemString(d,"ICONLIST_BIG_ICONS", PyInt_FromLong((long) ICONLIST_BIG_ICONS));
	 PyDict_SetItemString(d,"ICONLIST_ROWS", PyInt_FromLong((long) ICONLIST_ROWS));
	 PyDict_SetItemString(d,"ICONLIST_COLUMNS", PyInt_FromLong((long) ICONLIST_COLUMNS));
	 PyDict_SetItemString(d,"ICONLIST_NORMAL", PyInt_FromLong((long) ICONLIST_NORMAL));
	 PyDict_SetItemString(d,"FX_IconList_ID_SHOW_DETAILS", PyInt_FromLong((long) FXIconList::ID_SHOW_DETAILS));
	 PyDict_SetItemString(d,"FX_IconList_ID_SHOW_MINI_ICONS", PyInt_FromLong((long) FXIconList::ID_SHOW_MINI_ICONS));
	 PyDict_SetItemString(d,"FX_IconList_ID_SHOW_BIG_ICONS", PyInt_FromLong((long) FXIconList::ID_SHOW_BIG_ICONS));
	 PyDict_SetItemString(d,"FX_IconList_ID_ARRANGE_BY_ROWS", PyInt_FromLong((long) FXIconList::ID_ARRANGE_BY_ROWS));
	 PyDict_SetItemString(d,"FX_IconList_ID_ARRANGE_BY_COLUMNS", PyInt_FromLong((long) FXIconList::ID_ARRANGE_BY_COLUMNS));
	 PyDict_SetItemString(d,"FX_IconList_ID_HEADER_CHANGE", PyInt_FromLong((long) FXIconList::ID_HEADER_CHANGE));
	 PyDict_SetItemString(d,"FX_IconList_ID_TIPTIMER", PyInt_FromLong((long) FXIconList::ID_TIPTIMER));
	 PyDict_SetItemString(d,"FX_IconList_ID_LOOKUPTIMER", PyInt_FromLong((long) FXIconList::ID_LOOKUPTIMER));
	 PyDict_SetItemString(d,"FX_IconList_ID_SELECT_ALL", PyInt_FromLong((long) FXIconList::ID_SELECT_ALL));
	 PyDict_SetItemString(d,"FX_IconList_ID_DESELECT_ALL", PyInt_FromLong((long) FXIconList::ID_DESELECT_ALL));
	 PyDict_SetItemString(d,"FX_IconList_ID_SELECT_INVERSE", PyInt_FromLong((long) FXIconList::ID_SELECT_INVERSE));
	 PyDict_SetItemString(d,"FX_IconList_ID_LAST", PyInt_FromLong((long) FXIconList::ID_LAST));
{
   int i;
   for (i = 0; _swig_mapping[i].n1; i++)
        SWIG_RegisterMapping(_swig_mapping[i].n1,_swig_mapping[i].n2,_swig_mapping[i].pcnv);
}
}
