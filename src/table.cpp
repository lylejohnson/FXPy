/*
 * FILE : ../src/table.cpp
 * 
 * This file was automatically generated by :
 * Simplified Wrapper and Interface Generator (SWIG)
 * Version 1.1 (Build 883)
 * 
 * Portions Copyright (c) 1995-1998
 * The University of Utah and The Regents of the University of California.
 * Permission is granted to distribute this file in any manner provided
 * this notice remains intact.
 * 
 * Do not make changes to this file--changes will be lost!
 *
 */


#define SWIGCODE
/* Implementation : PYTHON */

#define SWIGPYTHON
#include <string.h>
#include <stdlib.h>
/* Definitions for Windows/Unix exporting */
#if defined(__WIN32__)
#   if defined(_MSC_VER)
#	define SWIGEXPORT(a) __declspec(dllexport) a
#   else
#	if defined(__BORLANDC__)
#	    define SWIGEXPORT(a) a _export 
#	else
#	    define SWIGEXPORT(a) a 
#	endif
#   endif
#else
#   define SWIGEXPORT(a) a 
#endif

#include "Python.h"

#ifdef __cplusplus
extern "C" {
#endif
extern void SWIG_MakePtr(char *, void *, char *);
extern void SWIG_RegisterMapping(char *, char *, void *(*)(void *));
extern char *SWIG_GetPtr(char *, void **, char *);
extern char *SWIG_GetPtrObj(PyObject *, void **, char *);
extern void SWIG_addvarlink(PyObject *, char *, PyObject *(*)(void), int (*)(PyObject *));
extern PyObject *SWIG_newvarlink(void);
#ifdef __cplusplus
}
#endif
#define SWIG_init    inittablec

#define SWIG_name    "tablec"

#include "fx.h"
#include "fx3d.h"
#include "FXCURCursor.h"
#include "FXJPGImage.h"
#include "FXJPGIcon.h"
#include "FXPNGIcon.h"
#include "FXPNGImage.h"
#include "FXTIFIcon.h"
#include "FXTIFImage.h"
#include "FXRGBIcon.h"
#include "FXRGBImage.h"
#include "FXICOIcon.h"
#include "FXICOImage.h"
#include "FXPyApp.h"
#include "FXPy.h"

static PyObject* l_output_helper(PyObject* target, PyObject* o) {
    PyObject*   o2;
    if (!target) {                   
        target = o;
    } else if (target == Py_None) {  
        Py_DECREF(Py_None);
        target = o;
    } else {                         
        if (!PyList_Check(target)) {
            o2 = target;
            target = PyList_New(0);
            PyList_Append(target, o2);
	    Py_XDECREF(o2);
        }
        PyList_Append(target,o);
	Py_XDECREF(o);
    }
    return target;
}

static PyObject* t_output_helper(PyObject* target, PyObject* o) {
    PyObject*   o2;
    PyObject*   o3;

    if (!target) {                   
        target = o;
    } else if (target == Py_None) {  
        Py_DECREF(Py_None);
        target = o;
    } else {                         
        if (!PyTuple_Check(target)) {
            o2 = target;
            target = PyTuple_New(1);
            PyTuple_SetItem(target, 0, o2);
        }
        o3 = PyTuple_New(1);            
        PyTuple_SetItem(o3, 0, o);      

        o2 = target;
        target = PySequence_Concat(o2, o3); 
        Py_DECREF(o2);                      
        Py_DECREF(o3);
    }
    return target;
}
#ifdef __cplusplus
extern "C" {
#endif
#define FXTablePos_row_set(_swigobj,_swigval) (_swigobj->row = _swigval,_swigval)
static PyObject *_wrap_FXTablePos_row_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTablePos * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","row", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXTablePos_row_set",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTablePos_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTablePos_row_set. Expected _FXTablePos_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXTablePos_row_set(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXTablePos_row_get(_swigobj) ((FXint ) _swigobj->row)
static PyObject *_wrap_FXTablePos_row_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTablePos * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTablePos_row_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTablePos_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTablePos_row_get. Expected _FXTablePos_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXTablePos_row_get(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXTablePos_col_set(_swigobj,_swigval) (_swigobj->col = _swigval,_swigval)
static PyObject *_wrap_FXTablePos_col_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTablePos * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","col", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXTablePos_col_set",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTablePos_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTablePos_col_set. Expected _FXTablePos_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXTablePos_col_set(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXTablePos_col_get(_swigobj) ((FXint ) _swigobj->col)
static PyObject *_wrap_FXTablePos_col_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTablePos * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTablePos_col_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTablePos_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTablePos_col_get. Expected _FXTablePos_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXTablePos_col_get(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXTableRange_fm_set(_swigobj,_swigval) (_swigobj->fm = *(_swigval),_swigval)
static PyObject *_wrap_FXTableRange_fm_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTablePos * _result;
    FXTableRange * _arg0;
    FXTablePos * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","fm", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXTableRange_fm_set",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTableRange_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTableRange_fm_set. Expected _FXTableRange_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTablePos_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXTableRange_fm_set. Expected _FXTablePos_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTablePos *)FXTableRange_fm_set(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXTablePos_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FXTableRange_fm_get(_swigobj) (&_swigobj->fm)
static PyObject *_wrap_FXTableRange_fm_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTablePos * _result;
    FXTableRange * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTableRange_fm_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTableRange_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTableRange_fm_get. Expected _FXTableRange_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTablePos *)FXTableRange_fm_get(_arg0);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXTablePos_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FXTableRange_to_set(_swigobj,_swigval) (_swigobj->to = *(_swigval),_swigval)
static PyObject *_wrap_FXTableRange_to_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTablePos * _result;
    FXTableRange * _arg0;
    FXTablePos * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","to", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXTableRange_to_set",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTableRange_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTableRange_to_set. Expected _FXTableRange_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTablePos_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXTableRange_to_set. Expected _FXTablePos_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTablePos *)FXTableRange_to_set(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXTablePos_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FXTableRange_to_get(_swigobj) (&_swigobj->to)
static PyObject *_wrap_FXTableRange_to_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTablePos * _result;
    FXTableRange * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTableRange_to_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTableRange_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTableRange_to_get. Expected _FXTableRange_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTablePos *)FXTableRange_to_get(_arg0);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXTablePos_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

static void *SwigFXTableItemToFXObject(void *ptr) {
    FXTableItem *src;
    FXObject *dest;
    src = (FXTableItem *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FX_TableItem(_swigarg0,_swigarg1,_swigarg2) (new FXTableItem(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_new_FX_TableItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTableItem * _result;
    FXString * _arg0;
    FXIcon * _arg1 = (FXIcon *) NULL;
    void * _arg2 = (void *) NULL;
    PyObject * _obj0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "text","ic","ptr", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|OO:new_FX_TableItem",_kwnames,&_obj0,&_obj1,&_obj2)) 
        return NULL;
{
    if (_obj0 == Py_None)
	_arg0 = new FXString;
    else if (!PyString_Check(_obj0)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg0 = new FXString(PyString_AsString(_obj0));
}
    if (_obj1)
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXIcon_p");
}
    if (_obj2)
{
    _arg2 = NULL;
    if (PyObject_HasAttrString(_obj2, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj2, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg2 = NULL;
	}
	else
	    _arg2 = (void*) _obj2;
	Py_DECREF(obj);
    }
    else
	_arg2 = (void*) _obj2;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTableItem *)new_FX_TableItem(*_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXTableItem_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    delete _arg0;
}
    return _resultobj;
}

#define FX_TableItem_getText(_swigobj)  (_swigobj->getText())
static PyObject *_wrap_FX_TableItem_getText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXTableItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TableItem_getText",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TableItem_getText. Expected _FXTableItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_TableItem_getText(_arg0));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

#define FX_TableItem_setText(_swigobj,_swigarg0)  (_swigobj->setText(_swigarg0))
static PyObject *_wrap_FX_TableItem_setText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTableItem * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","text", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TableItem_setText",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TableItem_setText. Expected _FXTableItem_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TableItem_setText(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_TableItem_getIcon(_swigobj)  (_swigobj->getIcon())
static PyObject *_wrap_FX_TableItem_getIcon(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIcon * _result;
    FXTableItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TableItem_getIcon",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TableItem_getIcon. Expected _FXTableItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXIcon *)FX_TableItem_getIcon(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_TableItem_setIcon(_swigobj,_swigarg0)  (_swigobj->setIcon(_swigarg0))
static PyObject *_wrap_FX_TableItem_setIcon(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTableItem * _arg0;
    FXIcon * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","ic", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TableItem_setIcon",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TableItem_setIcon. Expected _FXTableItem_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TableItem_setIcon(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TableItem_hasFocus(_swigobj)  (_swigobj->hasFocus())
static PyObject *_wrap_FX_TableItem_hasFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTableItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TableItem_hasFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TableItem_hasFocus. Expected _FXTableItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_TableItem_hasFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_TableItem_setFocus(_swigobj,_swigarg0)  (_swigobj->setFocus(_swigarg0))
static PyObject *_wrap_FX_TableItem_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTableItem * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","focus", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FX_TableItem_setFocus",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TableItem_setFocus. Expected _FXTableItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TableItem_setFocus(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TableItem_isSelected(_swigobj)  (_swigobj->isSelected())
static PyObject *_wrap_FX_TableItem_isSelected(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTableItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TableItem_isSelected",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TableItem_isSelected. Expected _FXTableItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_TableItem_isSelected(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_TableItem_setSelected(_swigobj,_swigarg0)  (_swigobj->setSelected(_swigarg0))
static PyObject *_wrap_FX_TableItem_setSelected(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTableItem * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","selected", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FX_TableItem_setSelected",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TableItem_setSelected. Expected _FXTableItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TableItem_setSelected(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TableItem_isEnabled(_swigobj)  (_swigobj->isEnabled())
static PyObject *_wrap_FX_TableItem_isEnabled(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTableItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TableItem_isEnabled",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TableItem_isEnabled. Expected _FXTableItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_TableItem_isEnabled(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_TableItem_setEnabled(_swigobj,_swigarg0)  (_swigobj->setEnabled(_swigarg0))
static PyObject *_wrap_FX_TableItem_setEnabled(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTableItem * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enabled", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FX_TableItem_setEnabled",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TableItem_setEnabled. Expected _FXTableItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TableItem_setEnabled(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TableItem_isDraggable(_swigobj)  (_swigobj->isDraggable())
static PyObject *_wrap_FX_TableItem_isDraggable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTableItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TableItem_isDraggable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TableItem_isDraggable. Expected _FXTableItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_TableItem_isDraggable(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_TableItem_setDraggable(_swigobj,_swigarg0)  (_swigobj->setDraggable(_swigarg0))
static PyObject *_wrap_FX_TableItem_setDraggable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTableItem * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","draggable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FX_TableItem_setDraggable",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TableItem_setDraggable. Expected _FXTableItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TableItem_setDraggable(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TableItem_getJustify(_swigobj)  (_swigobj->getJustify())
static PyObject *_wrap_FX_TableItem_getJustify(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXTableItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TableItem_getJustify",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TableItem_getJustify. Expected _FXTableItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )FX_TableItem_getJustify(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_TableItem_setJustify(_swigobj,_swigarg0)  (_swigobj->setJustify(_swigarg0))
static PyObject *_wrap_FX_TableItem_setJustify(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTableItem * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","justify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_TableItem_setJustify",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TableItem_setJustify. Expected _FXTableItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TableItem_setJustify(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TableItem_getIconPosition(_swigobj)  (_swigobj->getIconPosition())
static PyObject *_wrap_FX_TableItem_getIconPosition(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXTableItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TableItem_getIconPosition",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TableItem_getIconPosition. Expected _FXTableItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )FX_TableItem_getIconPosition(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_TableItem_setIconPosition(_swigobj,_swigarg0)  (_swigobj->setIconPosition(_swigarg0))
static PyObject *_wrap_FX_TableItem_setIconPosition(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTableItem * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","mode", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_TableItem_setIconPosition",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TableItem_setIconPosition. Expected _FXTableItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TableItem_setIconPosition(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TableItem_getBorders(_swigobj)  (_swigobj->getBorders())
static PyObject *_wrap_FX_TableItem_getBorders(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXTableItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TableItem_getBorders",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TableItem_getBorders. Expected _FXTableItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )FX_TableItem_getBorders(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_TableItem_setBorders(_swigobj,_swigarg0)  (_swigobj->setBorders(_swigarg0))
static PyObject *_wrap_FX_TableItem_setBorders(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTableItem * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","border", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_TableItem_setBorders",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TableItem_setBorders. Expected _FXTableItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TableItem_setBorders(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TableItem_getStipple(_swigobj)  (_swigobj->getStipple())
static PyObject *_wrap_FX_TableItem_getStipple(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXStipplePattern  _result;
    FXTableItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TableItem_getStipple",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TableItem_getStipple. Expected _FXTableItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXStipplePattern )FX_TableItem_getStipple(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_TableItem_setStipple(_swigobj,_swigarg0)  (_swigobj->setStipple(_swigarg0))
static PyObject *_wrap_FX_TableItem_setStipple(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTableItem * _arg0;
    FXStipplePattern  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pat", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_TableItem_setStipple",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TableItem_setStipple. Expected _FXTableItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TableItem_setStipple(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TableItem_isButton(_swigobj)  (_swigobj->isButton())
static PyObject *_wrap_FX_TableItem_isButton(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTableItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TableItem_isButton",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TableItem_isButton. Expected _FXTableItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_TableItem_isButton(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_TableItem_setButton(_swigobj,_swigarg0)  (_swigobj->setButton(_swigarg0))
static PyObject *_wrap_FX_TableItem_setButton(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTableItem * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","button", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FX_TableItem_setButton",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TableItem_setButton. Expected _FXTableItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TableItem_setButton(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TableItem_isPressed(_swigobj)  (_swigobj->isPressed())
static PyObject *_wrap_FX_TableItem_isPressed(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTableItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TableItem_isPressed",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TableItem_isPressed. Expected _FXTableItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_TableItem_isPressed(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_TableItem_setPressed(_swigobj,_swigarg0)  (_swigobj->setPressed(_swigarg0))
static PyObject *_wrap_FX_TableItem_setPressed(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTableItem * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pressed", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FX_TableItem_setPressed",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TableItem_setPressed. Expected _FXTableItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TableItem_setPressed(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TableItem_isIconOwned(_swigobj)  (_swigobj->isIconOwned())
static PyObject *_wrap_FX_TableItem_isIconOwned(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXTableItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TableItem_isIconOwned",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TableItem_isIconOwned. Expected _FXTableItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )FX_TableItem_isIconOwned(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_TableItem_setIconOwned(_swigobj,_swigarg0)  (_swigobj->setIconOwned(_swigarg0))
static PyObject *_wrap_FX_TableItem_setIconOwned(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTableItem * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","owned", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_TableItem_setIconOwned",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TableItem_setIconOwned. Expected _FXTableItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TableItem_setIconOwned(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void  FXTableItem_setData(FXTableItem *self,PyObject * ptr) {
      FXPySetData(self, ptr);
    }
static PyObject *_wrap_FX_TableItem_setData(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTableItem * _arg0;
    PyObject * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TableItem_setData",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TableItem_setData. Expected _FXTableItem_p.");
        return NULL;
        }
    }
{
  _arg1 = _obj1;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTableItem_setData(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static PyObject * FXTableItem_getData(FXTableItem *self) {
      return FXPyGetData(self);
    }
static PyObject *_wrap_FX_TableItem_getData(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    PyObject * _result;
    FXTableItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TableItem_getData",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TableItem_getData. Expected _FXTableItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (PyObject *)FXTableItem_getData(_arg0);

    FXPy_END_ALLOW_THREADS
}{
  _resultobj = _result;
}
    return _resultobj;
}

#define FX_TableItem_getWidth(_swigobj,_swigarg0)  (_swigobj->getWidth(_swigarg0))
static PyObject *_wrap_FX_TableItem_getWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTableItem * _arg0;
    FXTable * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","table", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TableItem_getWidth",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TableItem_getWidth. Expected _FXTableItem_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TableItem_getWidth. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_TableItem_getWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_TableItem_getHeight(_swigobj,_swigarg0)  (_swigobj->getHeight(_swigarg0))
static PyObject *_wrap_FX_TableItem_getHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTableItem * _arg0;
    FXTable * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","table", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TableItem_getHeight",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TableItem_getHeight. Expected _FXTableItem_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TableItem_getHeight. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_TableItem_getHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_TableItem_create(_swigobj)  (_swigobj->create())
static PyObject *_wrap_FX_TableItem_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTableItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TableItem_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TableItem_create. Expected _FXTableItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TableItem_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TableItem_detach(_swigobj)  (_swigobj->detach())
static PyObject *_wrap_FX_TableItem_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTableItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TableItem_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TableItem_detach. Expected _FXTableItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TableItem_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TableItem_destroy(_swigobj)  (_swigobj->destroy())
static PyObject *_wrap_FX_TableItem_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTableItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TableItem_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TableItem_destroy. Expected _FXTableItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TableItem_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXPyTableItemToFXTableItem(void *ptr) {
    FXPyTableItem *src;
    FXTableItem *dest;
    src = (FXPyTableItem *) ptr;
    dest = (FXTableItem *) src;
    return (void *) dest;
}

static void *SwigFXPyTableItemToFXObject(void *ptr) {
    FXPyTableItem *src;
    FXObject *dest;
    src = (FXPyTableItem *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXTableItem(_swigarg0,_swigarg1,_swigarg2) (new FXPyTableItem(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_new_FXTableItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTableItem * _result;
    FXString * _arg0;
    FXIcon * _arg1 = (FXIcon *) NULL;
    void * _arg2 = (void *) NULL;
    PyObject * _obj0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "text","ic","ptr", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|OO:new_FXTableItem",_kwnames,&_obj0,&_obj1,&_obj2)) 
        return NULL;
{
    if (_obj0 == Py_None)
	_arg0 = new FXString;
    else if (!PyString_Check(_obj0)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg0 = new FXString(PyString_AsString(_obj0));
}
    if (_obj1)
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXIcon_p");
}
    if (_obj2)
{
    _arg2 = NULL;
    if (PyObject_HasAttrString(_obj2, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj2, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg2 = NULL;
	}
	else
	    _arg2 = (void*) _obj2;
	Py_DECREF(obj);
    }
    else
	_arg2 = (void*) _obj2;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyTableItem *)new_FXTableItem(*_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyTableItem_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    delete _arg0;
}
    return _resultobj;
}

#define FXTableItem_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXTableItem_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyTableItem * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXTableItem_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTableItem_onDefault. Expected _FXPyTableItem_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXTableItem_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXTableItem_setText(_swigobj,_swigarg0)  (_swigobj->_setText(_swigarg0))
static PyObject *_wrap_FXTableItem_setText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTableItem * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","text", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXTableItem_setText",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTableItem_setText. Expected _FXPyTableItem_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTableItem_setText(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FXTableItem_setIcon(_swigobj,_swigarg0)  (_swigobj->_setIcon(_swigarg0))
static PyObject *_wrap_FXTableItem_setIcon(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTableItem * _arg0;
    FXIcon * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","ic", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXTableItem_setIcon",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTableItem_setIcon. Expected _FXPyTableItem_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTableItem_setIcon(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTableItem_setFocus(_swigobj,_swigarg0)  (_swigobj->_setFocus(_swigarg0))
static PyObject *_wrap_FXTableItem_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTableItem * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","focus", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FXTableItem_setFocus",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTableItem_setFocus. Expected _FXPyTableItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTableItem_setFocus(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTableItem_setSelected(_swigobj,_swigarg0)  (_swigobj->_setSelected(_swigarg0))
static PyObject *_wrap_FXTableItem_setSelected(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTableItem * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","selected", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FXTableItem_setSelected",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTableItem_setSelected. Expected _FXPyTableItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTableItem_setSelected(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTableItem_setEnabled(_swigobj,_swigarg0)  (_swigobj->_setEnabled(_swigarg0))
static PyObject *_wrap_FXTableItem_setEnabled(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTableItem * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enabled", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FXTableItem_setEnabled",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTableItem_setEnabled. Expected _FXPyTableItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTableItem_setEnabled(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTableItem_setDraggable(_swigobj,_swigarg0)  (_swigobj->_setDraggable(_swigarg0))
static PyObject *_wrap_FXTableItem_setDraggable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTableItem * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","draggable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FXTableItem_setDraggable",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTableItem_setDraggable. Expected _FXPyTableItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTableItem_setDraggable(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTableItem_setJustify(_swigobj,_swigarg0)  (_swigobj->_setJustify(_swigarg0))
static PyObject *_wrap_FXTableItem_setJustify(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTableItem * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","justify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXTableItem_setJustify",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTableItem_setJustify. Expected _FXPyTableItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTableItem_setJustify(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTableItem_getWidth(_swigobj,_swigarg0)  (_swigobj->_getWidth(_swigarg0))
static PyObject *_wrap_FXTableItem_getWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyTableItem * _arg0;
    FXTable * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","table", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXTableItem_getWidth",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTableItem_getWidth. Expected _FXPyTableItem_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXTableItem_getWidth. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXTableItem_getWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXTableItem_getHeight(_swigobj,_swigarg0)  (_swigobj->_getHeight(_swigarg0))
static PyObject *_wrap_FXTableItem_getHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyTableItem * _arg0;
    FXTable * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","table", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXTableItem_getHeight",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTableItem_getHeight. Expected _FXPyTableItem_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXTableItem_getHeight. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXTableItem_getHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXTableItem_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXTableItem_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTableItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTableItem_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTableItem_create. Expected _FXPyTableItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTableItem_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTableItem_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXTableItem_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTableItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTableItem_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTableItem_detach. Expected _FXPyTableItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTableItem_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTableItem_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXTableItem_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTableItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTableItem_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTableItem_destroy. Expected _FXPyTableItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTableItem_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXTableToFXScrollArea(void *ptr) {
    FXTable *src;
    FXScrollArea *dest;
    src = (FXTable *) ptr;
    dest = (FXScrollArea *) src;
    return (void *) dest;
}

static void *SwigFXTableToFXComposite(void *ptr) {
    FXTable *src;
    FXComposite *dest;
    src = (FXTable *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXTableToFXWindow(void *ptr) {
    FXTable *src;
    FXWindow *dest;
    src = (FXTable *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXTableToFXDrawable(void *ptr) {
    FXTable *src;
    FXDrawable *dest;
    src = (FXTable *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXTableToFXId(void *ptr) {
    FXTable *src;
    FXId *dest;
    src = (FXTable *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXTableToFXObject(void *ptr) {
    FXTable *src;
    FXObject *dest;
    src = (FXTable *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define FX_Table_onPaint(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onPaint(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onPaint(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onPaint",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onPaint. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onPaint. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onPaint(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onFocusIn(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onFocusIn(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onFocusIn(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onFocusIn",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onFocusIn. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onFocusIn. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onFocusIn(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onFocusOut(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onFocusOut(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onFocusOut(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onFocusOut",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onFocusOut. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onFocusOut. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onFocusOut(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onMotion(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onMotion(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onMotion(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onMotion",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onMotion. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onMotion. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onMotion(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onKeyPress(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onKeyPress(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onKeyPress(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onKeyPress",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onKeyPress. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onKeyPress. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onKeyPress(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onKeyRelease(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onKeyRelease(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onKeyRelease(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onKeyRelease",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onKeyRelease. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onKeyRelease. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onKeyRelease(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onLeftBtnPress(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onLeftBtnPress(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onLeftBtnPress(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onLeftBtnPress",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onLeftBtnPress. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onLeftBtnPress. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onLeftBtnPress(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onLeftBtnRelease(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onLeftBtnRelease(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onLeftBtnRelease(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onLeftBtnRelease",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onLeftBtnRelease. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onLeftBtnRelease. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onLeftBtnRelease(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onRightBtnPress(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onRightBtnPress(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onRightBtnPress(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onRightBtnPress",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onRightBtnPress. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onRightBtnPress. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onRightBtnPress(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onRightBtnRelease(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onRightBtnRelease(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onRightBtnRelease(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onRightBtnRelease",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onRightBtnRelease. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onRightBtnRelease. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onRightBtnRelease(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onUngrabbed(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUngrabbed(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onUngrabbed(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onUngrabbed",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onUngrabbed. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onUngrabbed. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onUngrabbed(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onBlink(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onBlink(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onBlink(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onBlink",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onBlink. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onBlink. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onBlink(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onSelectionLost(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onSelectionLost(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onSelectionLost(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onSelectionLost",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onSelectionLost. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onSelectionLost. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onSelectionLost(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onSelectionGained(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onSelectionGained(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onSelectionGained(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onSelectionGained",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onSelectionGained. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onSelectionGained. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onSelectionGained(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onAutoScroll(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onAutoScroll(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onAutoScroll(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onAutoScroll",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onAutoScroll. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onAutoScroll. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onAutoScroll(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onCommand(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCommand(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onCommand(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onCommand",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onCommand. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onCommand. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onCommand(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onClicked(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onClicked(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onClicked(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onClicked",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onClicked. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onClicked. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onClicked(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onDoubleClicked(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onDoubleClicked(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onDoubleClicked(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onDoubleClicked",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onDoubleClicked. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onDoubleClicked. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onDoubleClicked(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onTripleClicked(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onTripleClicked(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onTripleClicked(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onTripleClicked",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onTripleClicked. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onTripleClicked. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onTripleClicked(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onCmdHorzGrid(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdHorzGrid(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onCmdHorzGrid(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onCmdHorzGrid",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onCmdHorzGrid. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onCmdHorzGrid. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onCmdHorzGrid(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onUpdHorzGrid(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdHorzGrid(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onUpdHorzGrid(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onUpdHorzGrid",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onUpdHorzGrid. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onUpdHorzGrid. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onUpdHorzGrid(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onCmdVertGrid(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdVertGrid(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onCmdVertGrid(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onCmdVertGrid",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onCmdVertGrid. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onCmdVertGrid. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onCmdVertGrid(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onUpdVertGrid(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdVertGrid(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onUpdVertGrid(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onUpdVertGrid",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onUpdVertGrid. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onUpdVertGrid. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onUpdVertGrid(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onCmdDeleteColumn(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdDeleteColumn(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onCmdDeleteColumn(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onCmdDeleteColumn",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onCmdDeleteColumn. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onCmdDeleteColumn. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onCmdDeleteColumn(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onUpdDeleteColumn(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdDeleteColumn(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onUpdDeleteColumn(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onUpdDeleteColumn",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onUpdDeleteColumn. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onUpdDeleteColumn. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onUpdDeleteColumn(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onCmdDeleteRow(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdDeleteRow(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onCmdDeleteRow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onCmdDeleteRow",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onCmdDeleteRow. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onCmdDeleteRow. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onCmdDeleteRow(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onUpdDeleteRow(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdDeleteRow(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onUpdDeleteRow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onUpdDeleteRow",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onUpdDeleteRow. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onUpdDeleteRow. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onUpdDeleteRow(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onCmdInsertColumn(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdInsertColumn(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onCmdInsertColumn(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onCmdInsertColumn",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onCmdInsertColumn. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onCmdInsertColumn. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onCmdInsertColumn(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onCmdInsertRow(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdInsertRow(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onCmdInsertRow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onCmdInsertRow",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onCmdInsertRow. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onCmdInsertRow. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onCmdInsertRow(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onCmdMoveRight(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdMoveRight(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onCmdMoveRight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onCmdMoveRight",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onCmdMoveRight. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onCmdMoveRight. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onCmdMoveRight(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onCmdMoveLeft(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdMoveLeft(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onCmdMoveLeft(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onCmdMoveLeft",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onCmdMoveLeft. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onCmdMoveLeft. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onCmdMoveLeft(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onCmdMoveUp(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdMoveUp(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onCmdMoveUp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onCmdMoveUp",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onCmdMoveUp. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onCmdMoveUp. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onCmdMoveUp(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onCmdMoveDown(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdMoveDown(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onCmdMoveDown(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onCmdMoveDown",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onCmdMoveDown. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onCmdMoveDown. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onCmdMoveDown(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onCmdMoveHome(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdMoveHome(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onCmdMoveHome(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onCmdMoveHome",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onCmdMoveHome. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onCmdMoveHome. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onCmdMoveHome(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onCmdMoveEnd(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdMoveEnd(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onCmdMoveEnd(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onCmdMoveEnd",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onCmdMoveEnd. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onCmdMoveEnd. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onCmdMoveEnd(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onCmdMoveTop(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdMoveTop(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onCmdMoveTop(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onCmdMoveTop",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onCmdMoveTop. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onCmdMoveTop. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onCmdMoveTop(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onCmdMoveBottom(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdMoveBottom(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onCmdMoveBottom(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onCmdMoveBottom",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onCmdMoveBottom. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onCmdMoveBottom. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onCmdMoveBottom(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onCmdMovePageDown(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdMovePageDown(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onCmdMovePageDown(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onCmdMovePageDown",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onCmdMovePageDown. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onCmdMovePageDown. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onCmdMovePageDown(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onCmdMovePageUp(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdMovePageUp(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onCmdMovePageUp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onCmdMovePageUp",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onCmdMovePageUp. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onCmdMovePageUp. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onCmdMovePageUp(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onCmdMark(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdMark(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onCmdMark(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onCmdMark",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onCmdMark. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onCmdMark. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onCmdMark(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onCmdExtend(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdExtend(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onCmdExtend(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onCmdExtend",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onCmdExtend. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onCmdExtend. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onCmdExtend(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onCmdSelectCell(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSelectCell(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onCmdSelectCell(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onCmdSelectCell",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onCmdSelectCell. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onCmdSelectCell. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onCmdSelectCell(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onCmdSelectRow(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSelectRow(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onCmdSelectRow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onCmdSelectRow",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onCmdSelectRow. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onCmdSelectRow. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onCmdSelectRow(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onCmdSelectColumn(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSelectColumn(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onCmdSelectColumn(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onCmdSelectColumn",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onCmdSelectColumn. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onCmdSelectColumn. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onCmdSelectColumn(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onCmdSelectAll(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSelectAll(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onCmdSelectAll(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onCmdSelectAll",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onCmdSelectAll. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onCmdSelectAll. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onCmdSelectAll(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Table_onCmdDeselectAll(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdDeselectAll(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_onCmdDeselectAll(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Table_onCmdDeselectAll",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_onCmdDeselectAll. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_onCmdDeselectAll. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Table_onCmdDeselectAll(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define new_FX_Table(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11,_swigarg12,_swigarg13) (new FXTable(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11,_swigarg12,_swigarg13))
static PyObject *_wrap_new_FX_Table(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _result;
    FXComposite * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXObject * _arg3 = (FXObject *) NULL;
    FXSelector  _arg4 = (FXSelector ) 0;
    FXuint  _arg5 = (FXuint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    FXint  _arg8 = (FXint ) 0;
    FXint  _arg9 = (FXint ) 0;
    FXint  _arg10 = (FXint ) (2);
    FXint  _arg11 = (FXint ) (2);
    FXint  _arg12 = (FXint ) (2);
    FXint  _arg13 = (FXint ) (2);
    PyObject * _argo0 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "p","nr","nc","tgt","sel","opts","x","y","w","h","pl","pr","pt","pb", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii|Oiiiiiiiiii:new_FX_Table",_kwnames,&_argo0,&_arg1,&_arg2,&_obj3,&_arg4,&_arg5,&_arg6,&_arg7,&_arg8,&_arg9,&_arg10,&_arg11,&_arg12,&_arg13)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FX_Table. Expected _FXComposite_p.");
        return NULL;
        }
    }
    if (_obj3)
{
    if (_obj3 == Py_None)
	_arg3 = NULL;
    else
	SWIG_GetPtrObj(_obj3, (void**) &_arg3, "_FXObject_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTable *)new_FX_Table(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7,_arg8,_arg9,_arg10,_arg11,_arg12,_arg13);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXTable_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_Table_setVisibleRows(_swigobj,_swigarg0)  (_swigobj->setVisibleRows(_swigarg0))
static PyObject *_wrap_FX_Table_setVisibleRows(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","nvrows", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Table_setVisibleRows",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_setVisibleRows. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_setVisibleRows(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_getVisibleRows(_swigobj)  (_swigobj->getVisibleRows())
static PyObject *_wrap_FX_Table_getVisibleRows(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Table_getVisibleRows",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getVisibleRows. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Table_getVisibleRows(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Table_setVisibleCols(_swigobj,_swigarg0)  (_swigobj->setVisibleCols(_swigarg0))
static PyObject *_wrap_FX_Table_setVisibleCols(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","nvcols", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Table_setVisibleCols",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_setVisibleCols. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_setVisibleCols(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_getVisibleCols(_swigobj)  (_swigobj->getVisibleCols())
static PyObject *_wrap_FX_Table_getVisibleCols(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Table_getVisibleCols",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getVisibleCols. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Table_getVisibleCols(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Table_isHorzGridShown(_swigobj)  (_swigobj->isHorzGridShown())
static PyObject *_wrap_FX_Table_isHorzGridShown(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Table_isHorzGridShown",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_isHorzGridShown. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_Table_isHorzGridShown(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_Table_isVertGridShown(_swigobj)  (_swigobj->isVertGridShown())
static PyObject *_wrap_FX_Table_isVertGridShown(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Table_isVertGridShown",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_isVertGridShown. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_Table_isVertGridShown(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_Table_showHorzGrid(_swigobj,_swigarg0)  (_swigobj->showHorzGrid(_swigarg0))
static PyObject *_wrap_FX_Table_showHorzGrid(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","on", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FX_Table_showHorzGrid",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_showHorzGrid. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_showHorzGrid(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_showVertGrid(_swigobj,_swigarg0)  (_swigobj->showVertGrid(_swigarg0))
static PyObject *_wrap_FX_Table_showVertGrid(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","on", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FX_Table_showVertGrid",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_showVertGrid. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_showVertGrid(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_setTableSize(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->setTableSize(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_setTableSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXbool  _arg3 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","nr","nc","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii|b:FX_Table_setTableSize",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_setTableSize. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_setTableSize(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_getNumRows(_swigobj)  (_swigobj->getNumRows())
static PyObject *_wrap_FX_Table_getNumRows(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Table_getNumRows",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getNumRows. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Table_getNumRows(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Table_getNumCols(_swigobj)  (_swigobj->getNumCols())
static PyObject *_wrap_FX_Table_getNumCols(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Table_getNumCols",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getNumCols. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Table_getNumCols(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Table_setMarginTop(_swigobj,_swigarg0)  (_swigobj->setMarginTop(_swigarg0))
static PyObject *_wrap_FX_Table_setMarginTop(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pt", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Table_setMarginTop",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_setMarginTop. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_setMarginTop(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_getMarginTop(_swigobj)  (_swigobj->getMarginTop())
static PyObject *_wrap_FX_Table_getMarginTop(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Table_getMarginTop",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getMarginTop. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Table_getMarginTop(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Table_setMarginBottom(_swigobj,_swigarg0)  (_swigobj->setMarginBottom(_swigarg0))
static PyObject *_wrap_FX_Table_setMarginBottom(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pb", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Table_setMarginBottom",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_setMarginBottom. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_setMarginBottom(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_getMarginBottom(_swigobj)  (_swigobj->getMarginBottom())
static PyObject *_wrap_FX_Table_getMarginBottom(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Table_getMarginBottom",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getMarginBottom. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Table_getMarginBottom(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Table_setMarginLeft(_swigobj,_swigarg0)  (_swigobj->setMarginLeft(_swigarg0))
static PyObject *_wrap_FX_Table_setMarginLeft(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pl", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Table_setMarginLeft",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_setMarginLeft. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_setMarginLeft(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_getMarginLeft(_swigobj)  (_swigobj->getMarginLeft())
static PyObject *_wrap_FX_Table_getMarginLeft(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Table_getMarginLeft",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getMarginLeft. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Table_getMarginLeft(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Table_setMarginRight(_swigobj,_swigarg0)  (_swigobj->setMarginRight(_swigarg0))
static PyObject *_wrap_FX_Table_setMarginRight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Table_setMarginRight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_setMarginRight. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_setMarginRight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_getMarginRight(_swigobj)  (_swigobj->getMarginRight())
static PyObject *_wrap_FX_Table_getMarginRight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Table_getMarginRight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getMarginRight. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Table_getMarginRight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Table_getTableStyle(_swigobj)  (_swigobj->getTableStyle())
static PyObject *_wrap_FX_Table_getTableStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Table_getTableStyle",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getTableStyle. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )FX_Table_getTableStyle(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Table_setTableStyle(_swigobj,_swigarg0)  (_swigobj->setTableStyle(_swigarg0))
static PyObject *_wrap_FX_Table_setTableStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","style", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Table_setTableStyle",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_setTableStyle. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_setTableStyle(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_setLeadingRows(_swigobj,_swigarg0)  (_swigobj->setLeadingRows(_swigarg0))
static PyObject *_wrap_FX_Table_setLeadingRows(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","leadrows", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Table_setLeadingRows",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_setLeadingRows. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_setLeadingRows(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_getLeadingRows(_swigobj)  (_swigobj->getLeadingRows())
static PyObject *_wrap_FX_Table_getLeadingRows(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Table_getLeadingRows",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getLeadingRows. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Table_getLeadingRows(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Table_setLeadingCols(_swigobj,_swigarg0)  (_swigobj->setLeadingCols(_swigarg0))
static PyObject *_wrap_FX_Table_setLeadingCols(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","leadcols", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Table_setLeadingCols",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_setLeadingCols. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_setLeadingCols(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_getLeadingCols(_swigobj)  (_swigobj->getLeadingCols())
static PyObject *_wrap_FX_Table_getLeadingCols(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Table_getLeadingCols",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getLeadingCols. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Table_getLeadingCols(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Table_setTrailingRows(_swigobj,_swigarg0)  (_swigobj->setTrailingRows(_swigarg0))
static PyObject *_wrap_FX_Table_setTrailingRows(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","trailrows", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Table_setTrailingRows",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_setTrailingRows. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_setTrailingRows(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_getTrailingRows(_swigobj)  (_swigobj->getTrailingRows())
static PyObject *_wrap_FX_Table_getTrailingRows(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Table_getTrailingRows",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getTrailingRows. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Table_getTrailingRows(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Table_setTrailingCols(_swigobj,_swigarg0)  (_swigobj->setTrailingCols(_swigarg0))
static PyObject *_wrap_FX_Table_setTrailingCols(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","trailcols", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Table_setTrailingCols",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_setTrailingCols. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_setTrailingCols(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_getTrailingCols(_swigobj)  (_swigobj->getTrailingCols())
static PyObject *_wrap_FX_Table_getTrailingCols(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Table_getTrailingCols",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getTrailingCols. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Table_getTrailingCols(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Table_rowAtY(_swigobj,_swigarg0)  (_swigobj->rowAtY(_swigarg0))
static PyObject *_wrap_FX_Table_rowAtY(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTable * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Table_rowAtY",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_rowAtY. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Table_rowAtY(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Table_colAtX(_swigobj,_swigarg0)  (_swigobj->colAtX(_swigarg0))
static PyObject *_wrap_FX_Table_colAtX(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTable * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Table_colAtX",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_colAtX. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Table_colAtX(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Table_getItem(_swigobj,_swigarg0,_swigarg1)  (_swigobj->getItem(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_Table_getItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTableItem * _result;
    FXTable * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","row","col", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FX_Table_getItem",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getItem. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTableItem *)FX_Table_getItem(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXTableItem_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_Table_setItem(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->setItem(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_setItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXTableItem * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","row","col","item", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OiiO:FX_Table_setItem",_kwnames,&_argo0,&_arg1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_setItem. Expected _FXTable_p.");
        return NULL;
        }
    }
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,"_FXTableItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Table_setItem. Expected _FXTableItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_setItem(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_insertRows(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->insertRows(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_insertRows(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXint  _arg1;
    FXint  _arg2 = (FXint ) 1;
    FXbool  _arg3 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","row","nr","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi|ib:FX_Table_insertRows",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_insertRows. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_insertRows(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_insertColumns(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->insertColumns(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_insertColumns(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXint  _arg1;
    FXint  _arg2 = (FXint ) 1;
    FXbool  _arg3 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","col","nc","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi|ib:FX_Table_insertColumns",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_insertColumns. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_insertColumns(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_removeRows(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->removeRows(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_removeRows(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXint  _arg1;
    FXint  _arg2 = (FXint ) 1;
    FXbool  _arg3 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","row","nr","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi|ib:FX_Table_removeRows",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_removeRows. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_removeRows(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_removeColumns(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->removeColumns(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_removeColumns(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXint  _arg1;
    FXint  _arg2 = (FXint ) 1;
    FXbool  _arg3 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","col","nc","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi|ib:FX_Table_removeColumns",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_removeColumns. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_removeColumns(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_removeItem(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->removeItem(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_removeItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXbool  _arg3 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","row","col","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii|b:FX_Table_removeItem",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_removeItem. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_removeItem(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_makePositionVisible(_swigobj,_swigarg0,_swigarg1)  (_swigobj->makePositionVisible(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_Table_makePositionVisible(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","r","c", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FX_Table_makePositionVisible",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_makePositionVisible. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_makePositionVisible(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_setColumnWidth(_swigobj,_swigarg0,_swigarg1)  (_swigobj->setColumnWidth(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_Table_setColumnWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","col","cwidth", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FX_Table_setColumnWidth",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_setColumnWidth. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_setColumnWidth(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_getColumnWidth(_swigobj,_swigarg0)  (_swigobj->getColumnWidth(_swigarg0))
static PyObject *_wrap_FX_Table_getColumnWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTable * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","col", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Table_getColumnWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getColumnWidth. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Table_getColumnWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Table_setRowHeight(_swigobj,_swigarg0,_swigarg1)  (_swigobj->setRowHeight(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_Table_setRowHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","row","rheight", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FX_Table_setRowHeight",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_setRowHeight. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_setRowHeight(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_getRowHeight(_swigobj,_swigarg0)  (_swigobj->getRowHeight(_swigarg0))
static PyObject *_wrap_FX_Table_getRowHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTable * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","row", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Table_getRowHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getRowHeight. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Table_getRowHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Table_setColumnX(_swigobj,_swigarg0,_swigarg1)  (_swigobj->setColumnX(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_Table_setColumnX(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","col","x", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FX_Table_setColumnX",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_setColumnX. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_setColumnX(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_getColumnX(_swigobj,_swigarg0)  (_swigobj->getColumnX(_swigarg0))
static PyObject *_wrap_FX_Table_getColumnX(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTable * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","col", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Table_getColumnX",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getColumnX. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Table_getColumnX(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Table_setRowY(_swigobj,_swigarg0,_swigarg1)  (_swigobj->setRowY(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_Table_setRowY(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","row","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FX_Table_setRowY",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_setRowY. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_setRowY(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_getRowY(_swigobj,_swigarg0)  (_swigobj->getRowY(_swigarg0))
static PyObject *_wrap_FX_Table_getRowY(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTable * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","row", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Table_getRowY",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getRowY. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Table_getRowY(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Table_setDefColumnWidth(_swigobj,_swigarg0)  (_swigobj->setDefColumnWidth(_swigarg0))
static PyObject *_wrap_FX_Table_setDefColumnWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","cwidth", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Table_setDefColumnWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_setDefColumnWidth. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_setDefColumnWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_getDefColumnWidth(_swigobj)  (_swigobj->getDefColumnWidth())
static PyObject *_wrap_FX_Table_getDefColumnWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Table_getDefColumnWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getDefColumnWidth. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Table_getDefColumnWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Table_setDefRowHeight(_swigobj,_swigarg0)  (_swigobj->setDefRowHeight(_swigarg0))
static PyObject *_wrap_FX_Table_setDefRowHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","rheight", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Table_setDefRowHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_setDefRowHeight. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_setDefRowHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_getDefRowHeight(_swigobj)  (_swigobj->getDefRowHeight())
static PyObject *_wrap_FX_Table_getDefRowHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Table_getDefRowHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getDefRowHeight. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Table_getDefRowHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Table_setItemText(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->setItemText(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_setItemText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXString * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","r","c","text", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OiiO:FX_Table_setItemText",_kwnames,&_argo0,&_arg1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_setItemText. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj3 == Py_None)
	_arg3 = new FXString;
    else if (!PyString_Check(_obj3)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg3 = new FXString(PyString_AsString(_obj3));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_setItemText(_arg0,_arg1,_arg2,*_arg3);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg3;
}
    return _resultobj;
}

#define FX_Table_getItemText(_swigobj,_swigarg0,_swigarg1)  (_swigobj->getItemText(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_Table_getItemText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXTable * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","r","c", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FX_Table_getItemText",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getItemText. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_Table_getItemText(_arg0,_arg1,_arg2));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

#define FX_Table_setItemIcon(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->setItemIcon(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_setItemIcon(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXIcon * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","r","c","icon", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OiiO:FX_Table_setItemIcon",_kwnames,&_argo0,&_arg1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_setItemIcon. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj3 == Py_None)
	_arg3 = NULL;
    else
	SWIG_GetPtrObj(_obj3, (void**) &_arg3, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_setItemIcon(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_getItemIcon(_swigobj,_swigarg0,_swigarg1)  (_swigobj->getItemIcon(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_Table_getItemIcon(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIcon * _result;
    FXTable * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","r","c", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FX_Table_getItemIcon",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getItemIcon. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXIcon *)FX_Table_getItemIcon(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_Table_setItemData(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->setItemData(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_setItemData(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","r","c","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OiiO:FX_Table_setItemData",_kwnames,&_argo0,&_arg1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_setItemData. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_setItemData(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_getItemData(_swigobj,_swigarg0,_swigarg1)  (_swigobj->getItemData(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_Table_getItemData(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    void * _result;
    FXTable * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","r","c", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FX_Table_getItemData",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getItemData. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (void *)FX_Table_getItemData(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_void_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_Table_isItemSelected(_swigobj,_swigarg0,_swigarg1)  (_swigobj->isItemSelected(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_Table_isItemSelected(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTable * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","r","c", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FX_Table_isItemSelected",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_isItemSelected. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_Table_isItemSelected(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_Table_isItemCurrent(_swigobj,_swigarg0,_swigarg1)  (_swigobj->isItemCurrent(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_Table_isItemCurrent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTable * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","r","c", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FX_Table_isItemCurrent",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_isItemCurrent. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_Table_isItemCurrent(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_Table_isItemVisible(_swigobj,_swigarg0,_swigarg1)  (_swigobj->isItemVisible(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_Table_isItemVisible(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTable * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","r","c", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FX_Table_isItemVisible",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_isItemVisible. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_Table_isItemVisible(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_Table_isItemEnabled(_swigobj,_swigarg0,_swigarg1)  (_swigobj->isItemEnabled(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_Table_isItemEnabled(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTable * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","r","c", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FX_Table_isItemEnabled",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_isItemEnabled. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_Table_isItemEnabled(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_Table_updateRange(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->updateRange(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FX_Table_updateRange(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","sr","er","sc","ec", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FX_Table_updateRange",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_updateRange. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_updateRange(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_updateItem(_swigobj,_swigarg0,_swigarg1)  (_swigobj->updateItem(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_Table_updateItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","r","c", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FX_Table_updateItem",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_updateItem. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_updateItem(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_enableItem(_swigobj,_swigarg0,_swigarg1)  (_swigobj->enableItem(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_Table_enableItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTable * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","r","c", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FX_Table_enableItem",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_enableItem. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_Table_enableItem(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_Table_disableItem(_swigobj,_swigarg0,_swigarg1)  (_swigobj->disableItem(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_Table_disableItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTable * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","r","c", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FX_Table_disableItem",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_disableItem. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_Table_disableItem(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_Table_selectItem(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->selectItem(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_selectItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTable * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXbool  _arg3 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","r","c","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii|b:FX_Table_selectItem",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_selectItem. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_Table_selectItem(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_Table_deselectItem(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->deselectItem(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_deselectItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTable * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXbool  _arg3 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","r","c","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii|b:FX_Table_deselectItem",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_deselectItem. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_Table_deselectItem(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_Table_toggleItem(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->toggleItem(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_toggleItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTable * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXbool  _arg3 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","r","c","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii|b:FX_Table_toggleItem",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_toggleItem. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_Table_toggleItem(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_Table_setCurrentItem(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->setCurrentItem(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_setCurrentItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXbool  _arg3 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","r","c","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii|b:FX_Table_setCurrentItem",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_setCurrentItem. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_setCurrentItem(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_getCurrentRow(_swigobj)  (_swigobj->getCurrentRow())
static PyObject *_wrap_FX_Table_getCurrentRow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Table_getCurrentRow",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getCurrentRow. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Table_getCurrentRow(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Table_getCurrentColumn(_swigobj)  (_swigobj->getCurrentColumn())
static PyObject *_wrap_FX_Table_getCurrentColumn(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Table_getCurrentColumn",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getCurrentColumn. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Table_getCurrentColumn(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Table_setAnchorItem(_swigobj,_swigarg0,_swigarg1)  (_swigobj->setAnchorItem(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_Table_setAnchorItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","r","c", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FX_Table_setAnchorItem",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_setAnchorItem. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_setAnchorItem(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_getAnchorRow(_swigobj)  (_swigobj->getAnchorRow())
static PyObject *_wrap_FX_Table_getAnchorRow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Table_getAnchorRow",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getAnchorRow. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Table_getAnchorRow(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Table_getAnchorColumn(_swigobj)  (_swigobj->getAnchorColumn())
static PyObject *_wrap_FX_Table_getAnchorColumn(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Table_getAnchorColumn",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getAnchorColumn. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Table_getAnchorColumn(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Table_selectRange(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4)  (_swigobj->selectRange(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4))
static PyObject *_wrap_FX_Table_selectRange(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTable * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    FXbool  _arg5 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","sr","er","sc","ec","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii|b:FX_Table_selectRange",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4,&_arg5)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_selectRange. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_Table_selectRange(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_Table_extendSelection(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->extendSelection(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_extendSelection(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTable * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXbool  _arg3 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","r","c","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii|b:FX_Table_extendSelection",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_extendSelection. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_Table_extendSelection(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_Table_killSelection(_swigobj,_swigarg0)  (_swigobj->killSelection(_swigarg0))
static PyObject *_wrap_FX_Table_killSelection(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTable * _arg0;
    FXbool  _arg1 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FX_Table_killSelection",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_killSelection. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_Table_killSelection(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_Table_setFont(_swigobj,_swigarg0)  (_swigobj->setFont(_swigarg0))
static PyObject *_wrap_FX_Table_setFont(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXFont * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","fnt", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_Table_setFont",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_setFont. Expected _FXTable_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXFont_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_Table_setFont. Expected _FXFont_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_setFont(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_getFont(_swigobj)  (_swigobj->getFont())
static PyObject *_wrap_FX_Table_getFont(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFont * _result;
    FXTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Table_getFont",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getFont. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXFont *)FX_Table_getFont(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_Table_setTextColor(_swigobj,_swigarg0)  (_swigobj->setTextColor(_swigarg0))
static PyObject *_wrap_FX_Table_setTextColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Table_setTextColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_setTextColor. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_setTextColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_getTextColor(_swigobj)  (_swigobj->getTextColor())
static PyObject *_wrap_FX_Table_getTextColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Table_getTextColor",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getTextColor. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FX_Table_getTextColor(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Table_setBaseColor(_swigobj,_swigarg0)  (_swigobj->setBaseColor(_swigarg0))
static PyObject *_wrap_FX_Table_setBaseColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Table_setBaseColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_setBaseColor. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_setBaseColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_getBaseColor(_swigobj)  (_swigobj->getBaseColor())
static PyObject *_wrap_FX_Table_getBaseColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Table_getBaseColor",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getBaseColor. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FX_Table_getBaseColor(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Table_setHiliteColor(_swigobj,_swigarg0)  (_swigobj->setHiliteColor(_swigarg0))
static PyObject *_wrap_FX_Table_setHiliteColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Table_setHiliteColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_setHiliteColor. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_setHiliteColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_getHiliteColor(_swigobj)  (_swigobj->getHiliteColor())
static PyObject *_wrap_FX_Table_getHiliteColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Table_getHiliteColor",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getHiliteColor. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FX_Table_getHiliteColor(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Table_setShadowColor(_swigobj,_swigarg0)  (_swigobj->setShadowColor(_swigarg0))
static PyObject *_wrap_FX_Table_setShadowColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Table_setShadowColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_setShadowColor. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_setShadowColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_getShadowColor(_swigobj)  (_swigobj->getShadowColor())
static PyObject *_wrap_FX_Table_getShadowColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Table_getShadowColor",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getShadowColor. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FX_Table_getShadowColor(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Table_setBorderColor(_swigobj,_swigarg0)  (_swigobj->setBorderColor(_swigarg0))
static PyObject *_wrap_FX_Table_setBorderColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Table_setBorderColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_setBorderColor. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_setBorderColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_getBorderColor(_swigobj)  (_swigobj->getBorderColor())
static PyObject *_wrap_FX_Table_getBorderColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Table_getBorderColor",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getBorderColor. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FX_Table_getBorderColor(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Table_setSelBackColor(_swigobj,_swigarg0)  (_swigobj->setSelBackColor(_swigarg0))
static PyObject *_wrap_FX_Table_setSelBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Table_setSelBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_setSelBackColor. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_setSelBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_getSelBackColor(_swigobj)  (_swigobj->getSelBackColor())
static PyObject *_wrap_FX_Table_getSelBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Table_getSelBackColor",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getSelBackColor. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FX_Table_getSelBackColor(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Table_setSelTextColor(_swigobj,_swigarg0)  (_swigobj->setSelTextColor(_swigarg0))
static PyObject *_wrap_FX_Table_setSelTextColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Table_setSelTextColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_setSelTextColor. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_setSelTextColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_getSelTextColor(_swigobj)  (_swigobj->getSelTextColor())
static PyObject *_wrap_FX_Table_getSelTextColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Table_getSelTextColor",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getSelTextColor. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FX_Table_getSelTextColor(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Table_setGridColor(_swigobj,_swigarg0)  (_swigobj->setGridColor(_swigarg0))
static PyObject *_wrap_FX_Table_setGridColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Table_setGridColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_setGridColor. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_setGridColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_getGridColor(_swigobj)  (_swigobj->getGridColor())
static PyObject *_wrap_FX_Table_getGridColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Table_getGridColor",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getGridColor. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FX_Table_getGridColor(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Table_setStippleColor(_swigobj,_swigarg0)  (_swigobj->setStippleColor(_swigarg0))
static PyObject *_wrap_FX_Table_setStippleColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Table_setStippleColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_setStippleColor. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_setStippleColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_getStippleColor(_swigobj)  (_swigobj->getStippleColor())
static PyObject *_wrap_FX_Table_getStippleColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Table_getStippleColor",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getStippleColor. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FX_Table_getStippleColor(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Table_setCellBorderColor(_swigobj,_swigarg0)  (_swigobj->setCellBorderColor(_swigarg0))
static PyObject *_wrap_FX_Table_setCellBorderColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Table_setCellBorderColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_setCellBorderColor. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_setCellBorderColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_getCellBorderColor(_swigobj)  (_swigobj->getCellBorderColor())
static PyObject *_wrap_FX_Table_getCellBorderColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Table_getCellBorderColor",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getCellBorderColor. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FX_Table_getCellBorderColor(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Table_setCellColor(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->setCellColor(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Table_setCellColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXColor  _arg3;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","r","c","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiii:FX_Table_setCellColor",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_setCellColor. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_setCellColor(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_getCellColor(_swigobj,_swigarg0,_swigarg1)  (_swigobj->getCellColor(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_Table_getCellColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXTable * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","r","c", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FX_Table_getCellColor",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getCellColor. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FX_Table_getCellColor(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Table_setCellBorderWidth(_swigobj,_swigarg0)  (_swigobj->setCellBorderWidth(_swigarg0))
static PyObject *_wrap_FX_Table_setCellBorderWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","borderwidth", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Table_setCellBorderWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_setCellBorderWidth. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_setCellBorderWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Table_getCellBorderWidth(_swigobj)  (_swigobj->getCellBorderWidth())
static PyObject *_wrap_FX_Table_getCellBorderWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Table_getCellBorderWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getCellBorderWidth. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Table_getCellBorderWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Table_setHelpText(_swigobj,_swigarg0)  (_swigobj->setHelpText(_swigarg0))
static PyObject *_wrap_FX_Table_setHelpText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTable * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","text", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_Table_setHelpText",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_setHelpText. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Table_setHelpText(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_Table_getHelpText(_swigobj)  (_swigobj->getHelpText())
static PyObject *_wrap_FX_Table_getHelpText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Table_getHelpText",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Table_getHelpText. Expected _FXTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_Table_getHelpText(_arg0));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

static void *SwigFXPyTableToFXTable(void *ptr) {
    FXPyTable *src;
    FXTable *dest;
    src = (FXPyTable *) ptr;
    dest = (FXTable *) src;
    return (void *) dest;
}

static void *SwigFXPyTableToFXScrollArea(void *ptr) {
    FXPyTable *src;
    FXScrollArea *dest;
    src = (FXPyTable *) ptr;
    dest = (FXScrollArea *) src;
    return (void *) dest;
}

static void *SwigFXPyTableToFXComposite(void *ptr) {
    FXPyTable *src;
    FXComposite *dest;
    src = (FXPyTable *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXPyTableToFXWindow(void *ptr) {
    FXPyTable *src;
    FXWindow *dest;
    src = (FXPyTable *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyTableToFXDrawable(void *ptr) {
    FXPyTable *src;
    FXDrawable *dest;
    src = (FXPyTable *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPyTableToFXId(void *ptr) {
    FXPyTable *src;
    FXId *dest;
    src = (FXPyTable *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPyTableToFXObject(void *ptr) {
    FXPyTable *src;
    FXObject *dest;
    src = (FXPyTable *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXTable(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11,_swigarg12,_swigarg13) (new FXPyTable(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11,_swigarg12,_swigarg13))
static PyObject *_wrap_new_FXTable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTable * _result;
    FXComposite * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXObject * _arg3 = (FXObject *) NULL;
    FXSelector  _arg4 = (FXSelector ) 0;
    FXuint  _arg5 = (FXuint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    FXint  _arg8 = (FXint ) 0;
    FXint  _arg9 = (FXint ) 0;
    FXint  _arg10 = (FXint ) (2);
    FXint  _arg11 = (FXint ) (2);
    FXint  _arg12 = (FXint ) (2);
    FXint  _arg13 = (FXint ) (2);
    PyObject * _argo0 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "p","nr","nc","tgt","sel","opts","x","y","w","h","pl","pr","pt","pb", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii|Oiiiiiiiiii:new_FXTable",_kwnames,&_argo0,&_arg1,&_arg2,&_obj3,&_arg4,&_arg5,&_arg6,&_arg7,&_arg8,&_arg9,&_arg10,&_arg11,&_arg12,&_arg13)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FXTable. Expected _FXComposite_p.");
        return NULL;
        }
    }
    if (_obj3)
{
    if (_obj3 == Py_None)
	_arg3 = NULL;
    else
	SWIG_GetPtrObj(_obj3, (void**) &_arg3, "_FXObject_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyTable *)new_FXTable(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7,_arg8,_arg9,_arg10,_arg11,_arg12,_arg13);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyTable_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FXTable_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXTable_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyTable * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXTable_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTable_onDefault. Expected _FXPyTable_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXTable_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXTable_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXTable_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTable_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTable_create. Expected _FXPyTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTable_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTable_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXTable_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTable_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTable_destroy. Expected _FXPyTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTable_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTable_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXTable_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTable_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTable_detach. Expected _FXPyTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTable_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTable_resize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_resize(_swigarg0,_swigarg1))
static PyObject *_wrap_FXTable_resize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTable * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXTable_resize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTable_resize. Expected _FXPyTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTable_resize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTable_getDefaultWidth(_swigobj)  (_swigobj->_getDefaultWidth())
static PyObject *_wrap_FXTable_getDefaultWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTable_getDefaultWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTable_getDefaultWidth. Expected _FXPyTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXTable_getDefaultWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXTable_getDefaultHeight(_swigobj)  (_swigobj->_getDefaultHeight())
static PyObject *_wrap_FXTable_getDefaultHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTable_getDefaultHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTable_getDefaultHeight. Expected _FXPyTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXTable_getDefaultHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXTable_show(_swigobj)  (_swigobj->_show())
static PyObject *_wrap_FXTable_show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTable_show",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTable_show. Expected _FXPyTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTable_show(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTable_hide(_swigobj)  (_swigobj->_hide())
static PyObject *_wrap_FXTable_hide(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTable_hide",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTable_hide. Expected _FXPyTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTable_hide(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTable_enable(_swigobj)  (_swigobj->_enable())
static PyObject *_wrap_FXTable_enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTable_enable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTable_enable. Expected _FXPyTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTable_enable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTable_disable(_swigobj)  (_swigobj->_disable())
static PyObject *_wrap_FXTable_disable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTable_disable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTable_disable. Expected _FXPyTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTable_disable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTable_canFocus(_swigobj)  (_swigobj->_canFocus())
static PyObject *_wrap_FXTable_canFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTable_canFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTable_canFocus. Expected _FXPyTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXTable_canFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXTable_setFocus(_swigobj)  (_swigobj->_setFocus())
static PyObject *_wrap_FXTable_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTable_setFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTable_setFocus. Expected _FXPyTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTable_setFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTable_killFocus(_swigobj)  (_swigobj->_killFocus())
static PyObject *_wrap_FXTable_killFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTable_killFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTable_killFocus. Expected _FXPyTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTable_killFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTable_setDefault(_swigobj,_swigarg0)  (_swigobj->_setDefault(_swigarg0))
static PyObject *_wrap_FXTable_setDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTable * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FXTable_setDefault",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTable_setDefault. Expected _FXPyTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTable_setDefault(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTable_recalc(_swigobj)  (_swigobj->_recalc())
static PyObject *_wrap_FXTable_recalc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTable_recalc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTable_recalc. Expected _FXPyTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTable_recalc(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTable_layout(_swigobj)  (_swigobj->_layout())
static PyObject *_wrap_FXTable_layout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTable_layout",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTable_layout. Expected _FXPyTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTable_layout(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTable_lower(_swigobj)  (_swigobj->_lowerWindow())
static PyObject *_wrap_FXTable_lower(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTable_lower",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTable_lower. Expected _FXPyTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTable_lower(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTable_move(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_move(_swigarg0,_swigarg1))
static PyObject *_wrap_FXTable_move(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTable * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXTable_move",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTable_move. Expected _FXPyTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTable_move(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTable_position(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->_position(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FXTable_position(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTable * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FXTable_position",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTable_position. Expected _FXPyTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTable_position(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTable_isComposite(_swigobj)  (_swigobj->_isComposite())
static PyObject *_wrap_FXTable_isComposite(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTable_isComposite",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTable_isComposite. Expected _FXPyTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXTable_isComposite(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXTable_contains(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_contains(_swigarg0,_swigarg1))
static PyObject *_wrap_FXTable_contains(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyTable * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXTable_contains",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTable_contains. Expected _FXPyTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXTable_contains(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXTable_getWidthForHeight(_swigobj,_swigarg0)  (_swigobj->_getWidthForHeight(_swigarg0))
static PyObject *_wrap_FXTable_getWidthForHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyTable * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXTable_getWidthForHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTable_getWidthForHeight. Expected _FXPyTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXTable_getWidthForHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXTable_getHeightForWidth(_swigobj,_swigarg0)  (_swigobj->_getHeightForWidth(_swigarg0))
static PyObject *_wrap_FXTable_getHeightForWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyTable * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXTable_getHeightForWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTable_getHeightForWidth. Expected _FXPyTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXTable_getHeightForWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXTable_doesSaveUnder(_swigobj)  (_swigobj->_doesSaveUnder())
static PyObject *_wrap_FXTable_doesSaveUnder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTable_doesSaveUnder",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTable_doesSaveUnder. Expected _FXPyTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXTable_doesSaveUnder(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXTable_reparent(_swigobj,_swigarg0)  (_swigobj->_reparent(_swigarg0))
static PyObject *_wrap_FXTable_reparent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTable * _arg0;
    FXComposite * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","newparent", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXTable_reparent",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTable_reparent. Expected _FXPyTable_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXTable_reparent. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTable_reparent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTable_setBackColor(_swigobj,_swigarg0)  (_swigobj->_setBackColor(_swigarg0))
static PyObject *_wrap_FXTable_setBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTable * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXTable_setBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTable_setBackColor. Expected _FXPyTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTable_setBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTable_getContentWidth(_swigobj)  (_swigobj->_getContentWidth())
static PyObject *_wrap_FXTable_getContentWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTable_getContentWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTable_getContentWidth. Expected _FXPyTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXTable_getContentWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXTable_getContentHeight(_swigobj)  (_swigobj->_getContentHeight())
static PyObject *_wrap_FXTable_getContentHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTable_getContentHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTable_getContentHeight. Expected _FXPyTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXTable_getContentHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXTable_getViewportWidth(_swigobj)  (_swigobj->_getViewportWidth())
static PyObject *_wrap_FXTable_getViewportWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTable_getViewportWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTable_getViewportWidth. Expected _FXPyTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXTable_getViewportWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXTable_getViewportHeight(_swigobj)  (_swigobj->_getViewportHeight())
static PyObject *_wrap_FXTable_getViewportHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyTable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTable_getViewportHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTable_getViewportHeight. Expected _FXPyTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXTable_getViewportHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXTable_moveContents(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_moveContents(_swigarg0,_swigarg1))
static PyObject *_wrap_FXTable_moveContents(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTable * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXTable_moveContents",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTable_moveContents. Expected _FXPyTable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTable_moveContents(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static PyMethodDef tablecMethods[] = {
	 { "FXTable_moveContents", (PyCFunction) _wrap_FXTable_moveContents, METH_VARARGS | METH_KEYWORDS },
	 { "FXTable_getViewportHeight", (PyCFunction) _wrap_FXTable_getViewportHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXTable_getViewportWidth", (PyCFunction) _wrap_FXTable_getViewportWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXTable_getContentHeight", (PyCFunction) _wrap_FXTable_getContentHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXTable_getContentWidth", (PyCFunction) _wrap_FXTable_getContentWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXTable_setBackColor", (PyCFunction) _wrap_FXTable_setBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FXTable_reparent", (PyCFunction) _wrap_FXTable_reparent, METH_VARARGS | METH_KEYWORDS },
	 { "FXTable_doesSaveUnder", (PyCFunction) _wrap_FXTable_doesSaveUnder, METH_VARARGS | METH_KEYWORDS },
	 { "FXTable_getHeightForWidth", (PyCFunction) _wrap_FXTable_getHeightForWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXTable_getWidthForHeight", (PyCFunction) _wrap_FXTable_getWidthForHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXTable_contains", (PyCFunction) _wrap_FXTable_contains, METH_VARARGS | METH_KEYWORDS },
	 { "FXTable_isComposite", (PyCFunction) _wrap_FXTable_isComposite, METH_VARARGS | METH_KEYWORDS },
	 { "FXTable_position", (PyCFunction) _wrap_FXTable_position, METH_VARARGS | METH_KEYWORDS },
	 { "FXTable_move", (PyCFunction) _wrap_FXTable_move, METH_VARARGS | METH_KEYWORDS },
	 { "FXTable_lower", (PyCFunction) _wrap_FXTable_lower, METH_VARARGS | METH_KEYWORDS },
	 { "FXTable_layout", (PyCFunction) _wrap_FXTable_layout, METH_VARARGS | METH_KEYWORDS },
	 { "FXTable_recalc", (PyCFunction) _wrap_FXTable_recalc, METH_VARARGS | METH_KEYWORDS },
	 { "FXTable_setDefault", (PyCFunction) _wrap_FXTable_setDefault, METH_VARARGS | METH_KEYWORDS },
	 { "FXTable_killFocus", (PyCFunction) _wrap_FXTable_killFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXTable_setFocus", (PyCFunction) _wrap_FXTable_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXTable_canFocus", (PyCFunction) _wrap_FXTable_canFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXTable_disable", (PyCFunction) _wrap_FXTable_disable, METH_VARARGS | METH_KEYWORDS },
	 { "FXTable_enable", (PyCFunction) _wrap_FXTable_enable, METH_VARARGS | METH_KEYWORDS },
	 { "FXTable_hide", (PyCFunction) _wrap_FXTable_hide, METH_VARARGS | METH_KEYWORDS },
	 { "FXTable_show", (PyCFunction) _wrap_FXTable_show, METH_VARARGS | METH_KEYWORDS },
	 { "FXTable_getDefaultHeight", (PyCFunction) _wrap_FXTable_getDefaultHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXTable_getDefaultWidth", (PyCFunction) _wrap_FXTable_getDefaultWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXTable_resize", (PyCFunction) _wrap_FXTable_resize, METH_VARARGS | METH_KEYWORDS },
	 { "FXTable_detach", (PyCFunction) _wrap_FXTable_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXTable_destroy", (PyCFunction) _wrap_FXTable_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXTable_create", (PyCFunction) _wrap_FXTable_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXTable_onDefault", (PyCFunction) _wrap_FXTable_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXTable", (PyCFunction) _wrap_new_FXTable, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getHelpText", (PyCFunction) _wrap_FX_Table_getHelpText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_setHelpText", (PyCFunction) _wrap_FX_Table_setHelpText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getCellBorderWidth", (PyCFunction) _wrap_FX_Table_getCellBorderWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_setCellBorderWidth", (PyCFunction) _wrap_FX_Table_setCellBorderWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getCellColor", (PyCFunction) _wrap_FX_Table_getCellColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_setCellColor", (PyCFunction) _wrap_FX_Table_setCellColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getCellBorderColor", (PyCFunction) _wrap_FX_Table_getCellBorderColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_setCellBorderColor", (PyCFunction) _wrap_FX_Table_setCellBorderColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getStippleColor", (PyCFunction) _wrap_FX_Table_getStippleColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_setStippleColor", (PyCFunction) _wrap_FX_Table_setStippleColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getGridColor", (PyCFunction) _wrap_FX_Table_getGridColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_setGridColor", (PyCFunction) _wrap_FX_Table_setGridColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getSelTextColor", (PyCFunction) _wrap_FX_Table_getSelTextColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_setSelTextColor", (PyCFunction) _wrap_FX_Table_setSelTextColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getSelBackColor", (PyCFunction) _wrap_FX_Table_getSelBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_setSelBackColor", (PyCFunction) _wrap_FX_Table_setSelBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getBorderColor", (PyCFunction) _wrap_FX_Table_getBorderColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_setBorderColor", (PyCFunction) _wrap_FX_Table_setBorderColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getShadowColor", (PyCFunction) _wrap_FX_Table_getShadowColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_setShadowColor", (PyCFunction) _wrap_FX_Table_setShadowColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getHiliteColor", (PyCFunction) _wrap_FX_Table_getHiliteColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_setHiliteColor", (PyCFunction) _wrap_FX_Table_setHiliteColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getBaseColor", (PyCFunction) _wrap_FX_Table_getBaseColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_setBaseColor", (PyCFunction) _wrap_FX_Table_setBaseColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getTextColor", (PyCFunction) _wrap_FX_Table_getTextColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_setTextColor", (PyCFunction) _wrap_FX_Table_setTextColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getFont", (PyCFunction) _wrap_FX_Table_getFont, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_setFont", (PyCFunction) _wrap_FX_Table_setFont, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_killSelection", (PyCFunction) _wrap_FX_Table_killSelection, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_extendSelection", (PyCFunction) _wrap_FX_Table_extendSelection, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_selectRange", (PyCFunction) _wrap_FX_Table_selectRange, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getAnchorColumn", (PyCFunction) _wrap_FX_Table_getAnchorColumn, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getAnchorRow", (PyCFunction) _wrap_FX_Table_getAnchorRow, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_setAnchorItem", (PyCFunction) _wrap_FX_Table_setAnchorItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getCurrentColumn", (PyCFunction) _wrap_FX_Table_getCurrentColumn, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getCurrentRow", (PyCFunction) _wrap_FX_Table_getCurrentRow, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_setCurrentItem", (PyCFunction) _wrap_FX_Table_setCurrentItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_toggleItem", (PyCFunction) _wrap_FX_Table_toggleItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_deselectItem", (PyCFunction) _wrap_FX_Table_deselectItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_selectItem", (PyCFunction) _wrap_FX_Table_selectItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_disableItem", (PyCFunction) _wrap_FX_Table_disableItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_enableItem", (PyCFunction) _wrap_FX_Table_enableItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_updateItem", (PyCFunction) _wrap_FX_Table_updateItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_updateRange", (PyCFunction) _wrap_FX_Table_updateRange, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_isItemEnabled", (PyCFunction) _wrap_FX_Table_isItemEnabled, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_isItemVisible", (PyCFunction) _wrap_FX_Table_isItemVisible, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_isItemCurrent", (PyCFunction) _wrap_FX_Table_isItemCurrent, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_isItemSelected", (PyCFunction) _wrap_FX_Table_isItemSelected, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getItemData", (PyCFunction) _wrap_FX_Table_getItemData, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_setItemData", (PyCFunction) _wrap_FX_Table_setItemData, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getItemIcon", (PyCFunction) _wrap_FX_Table_getItemIcon, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_setItemIcon", (PyCFunction) _wrap_FX_Table_setItemIcon, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getItemText", (PyCFunction) _wrap_FX_Table_getItemText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_setItemText", (PyCFunction) _wrap_FX_Table_setItemText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getDefRowHeight", (PyCFunction) _wrap_FX_Table_getDefRowHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_setDefRowHeight", (PyCFunction) _wrap_FX_Table_setDefRowHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getDefColumnWidth", (PyCFunction) _wrap_FX_Table_getDefColumnWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_setDefColumnWidth", (PyCFunction) _wrap_FX_Table_setDefColumnWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getRowY", (PyCFunction) _wrap_FX_Table_getRowY, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_setRowY", (PyCFunction) _wrap_FX_Table_setRowY, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getColumnX", (PyCFunction) _wrap_FX_Table_getColumnX, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_setColumnX", (PyCFunction) _wrap_FX_Table_setColumnX, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getRowHeight", (PyCFunction) _wrap_FX_Table_getRowHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_setRowHeight", (PyCFunction) _wrap_FX_Table_setRowHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getColumnWidth", (PyCFunction) _wrap_FX_Table_getColumnWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_setColumnWidth", (PyCFunction) _wrap_FX_Table_setColumnWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_makePositionVisible", (PyCFunction) _wrap_FX_Table_makePositionVisible, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_removeItem", (PyCFunction) _wrap_FX_Table_removeItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_removeColumns", (PyCFunction) _wrap_FX_Table_removeColumns, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_removeRows", (PyCFunction) _wrap_FX_Table_removeRows, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_insertColumns", (PyCFunction) _wrap_FX_Table_insertColumns, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_insertRows", (PyCFunction) _wrap_FX_Table_insertRows, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_setItem", (PyCFunction) _wrap_FX_Table_setItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getItem", (PyCFunction) _wrap_FX_Table_getItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_colAtX", (PyCFunction) _wrap_FX_Table_colAtX, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_rowAtY", (PyCFunction) _wrap_FX_Table_rowAtY, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getTrailingCols", (PyCFunction) _wrap_FX_Table_getTrailingCols, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_setTrailingCols", (PyCFunction) _wrap_FX_Table_setTrailingCols, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getTrailingRows", (PyCFunction) _wrap_FX_Table_getTrailingRows, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_setTrailingRows", (PyCFunction) _wrap_FX_Table_setTrailingRows, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getLeadingCols", (PyCFunction) _wrap_FX_Table_getLeadingCols, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_setLeadingCols", (PyCFunction) _wrap_FX_Table_setLeadingCols, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getLeadingRows", (PyCFunction) _wrap_FX_Table_getLeadingRows, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_setLeadingRows", (PyCFunction) _wrap_FX_Table_setLeadingRows, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_setTableStyle", (PyCFunction) _wrap_FX_Table_setTableStyle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getTableStyle", (PyCFunction) _wrap_FX_Table_getTableStyle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getMarginRight", (PyCFunction) _wrap_FX_Table_getMarginRight, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_setMarginRight", (PyCFunction) _wrap_FX_Table_setMarginRight, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getMarginLeft", (PyCFunction) _wrap_FX_Table_getMarginLeft, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_setMarginLeft", (PyCFunction) _wrap_FX_Table_setMarginLeft, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getMarginBottom", (PyCFunction) _wrap_FX_Table_getMarginBottom, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_setMarginBottom", (PyCFunction) _wrap_FX_Table_setMarginBottom, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getMarginTop", (PyCFunction) _wrap_FX_Table_getMarginTop, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_setMarginTop", (PyCFunction) _wrap_FX_Table_setMarginTop, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getNumCols", (PyCFunction) _wrap_FX_Table_getNumCols, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getNumRows", (PyCFunction) _wrap_FX_Table_getNumRows, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_setTableSize", (PyCFunction) _wrap_FX_Table_setTableSize, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_showVertGrid", (PyCFunction) _wrap_FX_Table_showVertGrid, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_showHorzGrid", (PyCFunction) _wrap_FX_Table_showHorzGrid, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_isVertGridShown", (PyCFunction) _wrap_FX_Table_isVertGridShown, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_isHorzGridShown", (PyCFunction) _wrap_FX_Table_isHorzGridShown, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getVisibleCols", (PyCFunction) _wrap_FX_Table_getVisibleCols, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_setVisibleCols", (PyCFunction) _wrap_FX_Table_setVisibleCols, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_getVisibleRows", (PyCFunction) _wrap_FX_Table_getVisibleRows, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_setVisibleRows", (PyCFunction) _wrap_FX_Table_setVisibleRows, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_Table", (PyCFunction) _wrap_new_FX_Table, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onCmdDeselectAll", (PyCFunction) _wrap_FX_Table_onCmdDeselectAll, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onCmdSelectAll", (PyCFunction) _wrap_FX_Table_onCmdSelectAll, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onCmdSelectColumn", (PyCFunction) _wrap_FX_Table_onCmdSelectColumn, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onCmdSelectRow", (PyCFunction) _wrap_FX_Table_onCmdSelectRow, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onCmdSelectCell", (PyCFunction) _wrap_FX_Table_onCmdSelectCell, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onCmdExtend", (PyCFunction) _wrap_FX_Table_onCmdExtend, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onCmdMark", (PyCFunction) _wrap_FX_Table_onCmdMark, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onCmdMovePageUp", (PyCFunction) _wrap_FX_Table_onCmdMovePageUp, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onCmdMovePageDown", (PyCFunction) _wrap_FX_Table_onCmdMovePageDown, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onCmdMoveBottom", (PyCFunction) _wrap_FX_Table_onCmdMoveBottom, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onCmdMoveTop", (PyCFunction) _wrap_FX_Table_onCmdMoveTop, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onCmdMoveEnd", (PyCFunction) _wrap_FX_Table_onCmdMoveEnd, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onCmdMoveHome", (PyCFunction) _wrap_FX_Table_onCmdMoveHome, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onCmdMoveDown", (PyCFunction) _wrap_FX_Table_onCmdMoveDown, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onCmdMoveUp", (PyCFunction) _wrap_FX_Table_onCmdMoveUp, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onCmdMoveLeft", (PyCFunction) _wrap_FX_Table_onCmdMoveLeft, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onCmdMoveRight", (PyCFunction) _wrap_FX_Table_onCmdMoveRight, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onCmdInsertRow", (PyCFunction) _wrap_FX_Table_onCmdInsertRow, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onCmdInsertColumn", (PyCFunction) _wrap_FX_Table_onCmdInsertColumn, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onUpdDeleteRow", (PyCFunction) _wrap_FX_Table_onUpdDeleteRow, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onCmdDeleteRow", (PyCFunction) _wrap_FX_Table_onCmdDeleteRow, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onUpdDeleteColumn", (PyCFunction) _wrap_FX_Table_onUpdDeleteColumn, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onCmdDeleteColumn", (PyCFunction) _wrap_FX_Table_onCmdDeleteColumn, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onUpdVertGrid", (PyCFunction) _wrap_FX_Table_onUpdVertGrid, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onCmdVertGrid", (PyCFunction) _wrap_FX_Table_onCmdVertGrid, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onUpdHorzGrid", (PyCFunction) _wrap_FX_Table_onUpdHorzGrid, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onCmdHorzGrid", (PyCFunction) _wrap_FX_Table_onCmdHorzGrid, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onTripleClicked", (PyCFunction) _wrap_FX_Table_onTripleClicked, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onDoubleClicked", (PyCFunction) _wrap_FX_Table_onDoubleClicked, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onClicked", (PyCFunction) _wrap_FX_Table_onClicked, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onCommand", (PyCFunction) _wrap_FX_Table_onCommand, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onAutoScroll", (PyCFunction) _wrap_FX_Table_onAutoScroll, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onSelectionGained", (PyCFunction) _wrap_FX_Table_onSelectionGained, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onSelectionLost", (PyCFunction) _wrap_FX_Table_onSelectionLost, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onBlink", (PyCFunction) _wrap_FX_Table_onBlink, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onUngrabbed", (PyCFunction) _wrap_FX_Table_onUngrabbed, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onRightBtnRelease", (PyCFunction) _wrap_FX_Table_onRightBtnRelease, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onRightBtnPress", (PyCFunction) _wrap_FX_Table_onRightBtnPress, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onLeftBtnRelease", (PyCFunction) _wrap_FX_Table_onLeftBtnRelease, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onLeftBtnPress", (PyCFunction) _wrap_FX_Table_onLeftBtnPress, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onKeyRelease", (PyCFunction) _wrap_FX_Table_onKeyRelease, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onKeyPress", (PyCFunction) _wrap_FX_Table_onKeyPress, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onMotion", (PyCFunction) _wrap_FX_Table_onMotion, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onFocusOut", (PyCFunction) _wrap_FX_Table_onFocusOut, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onFocusIn", (PyCFunction) _wrap_FX_Table_onFocusIn, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Table_onPaint", (PyCFunction) _wrap_FX_Table_onPaint, METH_VARARGS | METH_KEYWORDS },
	 { "FXTableItem_destroy", (PyCFunction) _wrap_FXTableItem_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXTableItem_detach", (PyCFunction) _wrap_FXTableItem_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXTableItem_create", (PyCFunction) _wrap_FXTableItem_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXTableItem_getHeight", (PyCFunction) _wrap_FXTableItem_getHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXTableItem_getWidth", (PyCFunction) _wrap_FXTableItem_getWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXTableItem_setJustify", (PyCFunction) _wrap_FXTableItem_setJustify, METH_VARARGS | METH_KEYWORDS },
	 { "FXTableItem_setDraggable", (PyCFunction) _wrap_FXTableItem_setDraggable, METH_VARARGS | METH_KEYWORDS },
	 { "FXTableItem_setEnabled", (PyCFunction) _wrap_FXTableItem_setEnabled, METH_VARARGS | METH_KEYWORDS },
	 { "FXTableItem_setSelected", (PyCFunction) _wrap_FXTableItem_setSelected, METH_VARARGS | METH_KEYWORDS },
	 { "FXTableItem_setFocus", (PyCFunction) _wrap_FXTableItem_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXTableItem_setIcon", (PyCFunction) _wrap_FXTableItem_setIcon, METH_VARARGS | METH_KEYWORDS },
	 { "FXTableItem_setText", (PyCFunction) _wrap_FXTableItem_setText, METH_VARARGS | METH_KEYWORDS },
	 { "FXTableItem_onDefault", (PyCFunction) _wrap_FXTableItem_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXTableItem", (PyCFunction) _wrap_new_FXTableItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TableItem_destroy", (PyCFunction) _wrap_FX_TableItem_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TableItem_detach", (PyCFunction) _wrap_FX_TableItem_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TableItem_create", (PyCFunction) _wrap_FX_TableItem_create, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TableItem_getHeight", (PyCFunction) _wrap_FX_TableItem_getHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TableItem_getWidth", (PyCFunction) _wrap_FX_TableItem_getWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TableItem_getData", (PyCFunction) _wrap_FX_TableItem_getData, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TableItem_setData", (PyCFunction) _wrap_FX_TableItem_setData, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TableItem_setIconOwned", (PyCFunction) _wrap_FX_TableItem_setIconOwned, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TableItem_isIconOwned", (PyCFunction) _wrap_FX_TableItem_isIconOwned, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TableItem_setPressed", (PyCFunction) _wrap_FX_TableItem_setPressed, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TableItem_isPressed", (PyCFunction) _wrap_FX_TableItem_isPressed, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TableItem_setButton", (PyCFunction) _wrap_FX_TableItem_setButton, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TableItem_isButton", (PyCFunction) _wrap_FX_TableItem_isButton, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TableItem_setStipple", (PyCFunction) _wrap_FX_TableItem_setStipple, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TableItem_getStipple", (PyCFunction) _wrap_FX_TableItem_getStipple, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TableItem_setBorders", (PyCFunction) _wrap_FX_TableItem_setBorders, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TableItem_getBorders", (PyCFunction) _wrap_FX_TableItem_getBorders, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TableItem_setIconPosition", (PyCFunction) _wrap_FX_TableItem_setIconPosition, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TableItem_getIconPosition", (PyCFunction) _wrap_FX_TableItem_getIconPosition, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TableItem_setJustify", (PyCFunction) _wrap_FX_TableItem_setJustify, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TableItem_getJustify", (PyCFunction) _wrap_FX_TableItem_getJustify, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TableItem_setDraggable", (PyCFunction) _wrap_FX_TableItem_setDraggable, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TableItem_isDraggable", (PyCFunction) _wrap_FX_TableItem_isDraggable, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TableItem_setEnabled", (PyCFunction) _wrap_FX_TableItem_setEnabled, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TableItem_isEnabled", (PyCFunction) _wrap_FX_TableItem_isEnabled, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TableItem_setSelected", (PyCFunction) _wrap_FX_TableItem_setSelected, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TableItem_isSelected", (PyCFunction) _wrap_FX_TableItem_isSelected, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TableItem_setFocus", (PyCFunction) _wrap_FX_TableItem_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TableItem_hasFocus", (PyCFunction) _wrap_FX_TableItem_hasFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TableItem_setIcon", (PyCFunction) _wrap_FX_TableItem_setIcon, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TableItem_getIcon", (PyCFunction) _wrap_FX_TableItem_getIcon, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TableItem_setText", (PyCFunction) _wrap_FX_TableItem_setText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TableItem_getText", (PyCFunction) _wrap_FX_TableItem_getText, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_TableItem", (PyCFunction) _wrap_new_FX_TableItem, METH_VARARGS | METH_KEYWORDS },
	 { "FXTableRange_to_get", (PyCFunction) _wrap_FXTableRange_to_get, METH_VARARGS | METH_KEYWORDS },
	 { "FXTableRange_to_set", (PyCFunction) _wrap_FXTableRange_to_set, METH_VARARGS | METH_KEYWORDS },
	 { "FXTableRange_fm_get", (PyCFunction) _wrap_FXTableRange_fm_get, METH_VARARGS | METH_KEYWORDS },
	 { "FXTableRange_fm_set", (PyCFunction) _wrap_FXTableRange_fm_set, METH_VARARGS | METH_KEYWORDS },
	 { "FXTablePos_col_get", (PyCFunction) _wrap_FXTablePos_col_get, METH_VARARGS | METH_KEYWORDS },
	 { "FXTablePos_col_set", (PyCFunction) _wrap_FXTablePos_col_set, METH_VARARGS | METH_KEYWORDS },
	 { "FXTablePos_row_get", (PyCFunction) _wrap_FXTablePos_row_get, METH_VARARGS | METH_KEYWORDS },
	 { "FXTablePos_row_set", (PyCFunction) _wrap_FXTablePos_row_set, METH_VARARGS | METH_KEYWORDS },
	 { NULL, NULL }
};
#ifdef __cplusplus
}
#endif
/*
 * This table is used by the pointer type-checker
 */
static struct { char *n1; char *n2; void *(*pcnv)(void *); } _swig_mapping[] = {
    { "_class_FXPyBMPImage","_FXPyBMPImage",0},
    { "_class_FXPyICOImage","_FXPyICOImage",0},
    { "_FXPyDelegator","_class_FXPyDelegator",0},
    { "_FX4Splitter","_class_FX4Splitter",0},
    { "_signed_long","_FXTime",0},
    { "_signed_long","_long",0},
    { "_class_FXPyPCXImage","_FXPyPCXImage",0},
    { "_class_FXTIFIcon","_FXTIFIcon",0},
    { "_FXPyHorizontalFrame","_class_FXPyHorizontalFrame",0},
    { "_double","_FXdouble",0},
    { "_FXPyObject","_class_FXPyObject",0},
    { "_FXPyGIFIcon","_class_FXPyGIFIcon",0},
    { "_FXBMPIcon","_class_FXBMPIcon",0},
    { "_FXICOIcon","_class_FXICOIcon",0},
    { "_FXTablePos","_struct_FXTablePos",0},
    { "_class_FXSettings","_FXSettings",0},
    { "_class_FXRegistry","_FXRegistry",0},
    { "_class_FXMainWindow","_FXMainWindow",0},
    { "_FXTopWindow","_class_FXTopWindow",0},
    { "_FXPySwitcher","_class_FXPySwitcher",0},
    { "_FXShutterItem","_class_FXShutterItem",0},
    { "_class_FXVisual","_FXVisual",0},
    { "_FXIcon","_class_FXIcon",0},
    { "_FXPyMatrix","_class_FXPyMatrix",0},
    { "_class_FXDCPrint","_FXDCPrint",0},
    { "_class_FXGroupBox","_FXGroupBox",0},
    { "_FXTGAImage","_class_FXTGAImage",0},
    { "_class_FXPyTGAIcon","_FXPyTGAIcon",0},
    { "_FXPyStream","_class_FXPyStream",0},
    { "_class_FXPyDict","_FXPyDict",0},
    { "_class_FXRegion","_FXRegion",0},
    { "_FXShutter","_class_FXShutter",0},
    { "_FXPyPNGImage","_class_FXPyPNGImage",0},
    { "_class_FXAccelTable","_FXAccelTable",0},
    { "_FXPyApp","_class_FXPyApp",0},
    { "_FXDCWindow","_class_FXDCWindow",0},
    { "_FXPyScrollArea","_class_FXPyScrollArea",0},
    { "_class_FXPyId","_FXPyId",0},
    { "_class_FXCanvas","_FXCanvas",0},
    { "_class_FXPyTableItem","_FXPyTableItem",0},
    { "_FXApp","_class_FXApp",0},
    { "_class_FXPyRecentFiles","_FXPyRecentFiles",0},
    { "_class_FXPyDebugTarget","_FXPyDebugTarget",0},
    { "_class_FXCommand","_FXCommand",0},
    { "_class_FXPyFrame","_FXPyFrame",0},
    { "_long","_FXPixel",0},
    { "_long","_FXTime",0},
    { "_long","_unsigned_long",0},
    { "_long","_signed_long",0},
    { "_FXComposite","_class_FXPyTable",SwigFXPyTableToFXComposite},
    { "_FXComposite","_FXPyTable",SwigFXPyTableToFXComposite},
    { "_FXComposite","_class_FXTable",SwigFXTableToFXComposite},
    { "_FXComposite","_FXTable",SwigFXTableToFXComposite},
    { "_FXComposite","_class_FXComposite",0},
    { "_struct_FXArc","_FXArc",0},
    { "_FXRGBIcon","_class_FXRGBIcon",0},
    { "_FXScrollArea","_class_FXPyTable",SwigFXPyTableToFXScrollArea},
    { "_FXScrollArea","_FXPyTable",SwigFXPyTableToFXScrollArea},
    { "_FXScrollArea","_class_FXTable",SwigFXTableToFXScrollArea},
    { "_FXScrollArea","_FXTable",SwigFXTableToFXScrollArea},
    { "_FXScrollArea","_class_FXScrollArea",0},
    { "_FXPrinter","_struct_FXPrinter",0},
    { "_class_FXId","_class_FXPyTable",SwigFXPyTableToFXId},
    { "_class_FXId","_FXPyTable",SwigFXPyTableToFXId},
    { "_class_FXId","_class_FXTable",SwigFXTableToFXId},
    { "_class_FXId","_FXTable",SwigFXTableToFXId},
    { "_class_FXId","_FXId",0},
    { "_FXPyHorizontalSeparator","_class_FXPyHorizontalSeparator",0},
    { "_float","_FXfloat",0},
    { "_FXPyDrawable","_class_FXPyDrawable",0},
    { "_class_FXPyXPMIcon","_FXPyXPMIcon",0},
    { "_FXPyScrollWindow","_class_FXPyScrollWindow",0},
    { "_FXshort","_short",0},
    { "_FXshort","_signed_short",0},
    { "_FXshort","_unsigned_short",0},
    { "_FXshort","_FXushort",0},
    { "_FXFontDesc","_struct_FXFontDesc",0},
    { "_FXArc","_struct_FXArc",0},
    { "_FXSize","_class_FXSize",0},
    { "_class_FXBMPIcon","_FXBMPIcon",0},
    { "_class_FXICOIcon","_FXICOIcon",0},
    { "_FXPyShell","_class_FXPyShell",0},
    { "_class_FXPyTIFIcon","_FXPyTIFIcon",0},
    { "_FXSegment","_struct_FXSegment",0},
    { "_class_FXTableItem","_class_FXPyTableItem",SwigFXPyTableItemToFXTableItem},
    { "_class_FXTableItem","_FXPyTableItem",SwigFXPyTableItemToFXTableItem},
    { "_class_FXTableItem","_FXTableItem",0},
    { "_struct_FXTablePos","_FXTablePos",0},
    { "_FXJPGImage","_class_FXJPGImage",0},
    { "_class_FXPySwitcher","_FXPySwitcher",0},
    { "_class_FXTIFImage","_FXTIFImage",0},
    { "_FXPyPCXIcon","_class_FXPyPCXIcon",0},
    { "_FXDC","_class_FXDC",0},
    { "_class_FXIcon","_FXIcon",0},
    { "_FXPopup","_class_FXPopup",0},
    { "_FXPy4Splitter","_class_FXPy4Splitter",0},
    { "_FXint","_FXInputHandle",0},
    { "_FXint","_FXDragType",0},
    { "_FXint","_FXHotKey",0},
    { "_FXint","_FXColor",0},
    { "_FXint","_FXID",0},
    { "_FXint","_FXSelector",0},
    { "_FXint","_int",0},
    { "_FXint","_signed_int",0},
    { "_FXint","_unsigned_int",0},
    { "_FXint","_FXuint",0},
    { "_FXPyPNGIcon","_class_FXPyPNGIcon",0},
    { "_class_FXWindow","_class_FXPyTable",SwigFXPyTableToFXWindow},
    { "_class_FXWindow","_FXPyTable",SwigFXPyTableToFXWindow},
    { "_class_FXWindow","_class_FXTable",SwigFXTableToFXWindow},
    { "_class_FXWindow","_FXTable",SwigFXTableToFXWindow},
    { "_class_FXWindow","_FXWindow",0},
    { "_FXPyRootWindow","_class_FXPyRootWindow",0},
    { "_class_FXShutter","_FXShutter",0},
    { "_FXushort","_FXshort",0},
    { "_FXushort","_unsigned_short",0},
    { "_FXushort","_short",0},
    { "_class_FXPoint","_FXPoint",0},
    { "_class_FXPyPNGImage","_FXPyPNGImage",0},
    { "_class_FXPyDCPrint","_FXPyDCPrint",0},
    { "_FXPyVisual","_class_FXPyVisual",0},
    { "_class_FXRectangle","_FXRectangle",0},
    { "_class_FXPyFont","_FXPyFont",0},
    { "_FXPyFileStream","_class_FXPyFileStream",0},
    { "_FXRGBImage","_class_FXRGBImage",0},
    { "_FXRootWindow","_class_FXRootWindow",0},
    { "_class_FXPacker","_FXPacker",0},
    { "_FXPyXPMImage","_class_FXPyXPMImage",0},
    { "_FXPyDataTarget","_class_FXPyDataTarget",0},
    { "_FXPyTopWindow","_class_FXPyTopWindow",0},
    { "_FXObject","_class_FXPyTable",SwigFXPyTableToFXObject},
    { "_FXObject","_FXPyTable",SwigFXPyTableToFXObject},
    { "_FXObject","_class_FXTable",SwigFXTableToFXObject},
    { "_FXObject","_FXTable",SwigFXTableToFXObject},
    { "_FXObject","_class_FXPyTableItem",SwigFXPyTableItemToFXObject},
    { "_FXObject","_FXPyTableItem",SwigFXPyTableItemToFXObject},
    { "_FXObject","_class_FXTableItem",SwigFXTableItemToFXObject},
    { "_FXObject","_FXTableItem",SwigFXTableItemToFXObject},
    { "_FXObject","_class_FXObject",0},
    { "_FXPyGIFImage","_class_FXPyGIFImage",0},
    { "_FXBMPImage","_class_FXBMPImage",0},
    { "_FXICOImage","_class_FXICOImage",0},
    { "_class_FXRGBIcon","_FXRGBIcon",0},
    { "_FXRecentFiles","_class_FXRecentFiles",0},
    { "_FXDebugTarget","_class_FXDebugTarget",0},
    { "_class_FXPyCommand","_FXPyCommand",0},
    { "_class_FXScrollArea","_class_FXPyTable",SwigFXPyTableToFXScrollArea},
    { "_class_FXScrollArea","_FXPyTable",SwigFXPyTableToFXScrollArea},
    { "_class_FXScrollArea","_class_FXTable",SwigFXTableToFXScrollArea},
    { "_class_FXScrollArea","_FXTable",SwigFXTableToFXScrollArea},
    { "_class_FXScrollArea","_FXScrollArea",0},
    { "_FXPySplitter","_class_FXPySplitter",0},
    { "_FXPCXImage","_class_FXPCXImage",0},
    { "_FXFileStream","_class_FXFileStream",0},
    { "_class_FXPyDelegator","_FXPyDelegator",0},
    { "_FXPyCanvas","_class_FXPyCanvas",0},
    { "_class_FXPyDrawable","_FXPyDrawable",0},
    { "_FXPyImage","_class_FXPyImage",0},
    { "_FXGIFIcon","_class_FXGIFIcon",0},
    { "_FXColor","_FXInputHandle",0},
    { "_FXColor","_FXDragType",0},
    { "_FXColor","_FXHotKey",0},
    { "_FXColor","_FXuint",0},
    { "_FXColor","_int",0},
    { "_FXColor","_unsigned_int",0},
    { "_FXColor","_FXint",0},
    { "_FXColor","_FXSelector",0},
    { "_FXColor","_FXID",0},
    { "_FXPyJPGIcon","_class_FXPyJPGIcon",0},
    { "_FXDataTarget","_class_FXDataTarget",0},
    { "_class_FXPyHorizontalFrame","_FXPyHorizontalFrame",0},
    { "_FXTime","_FXPixel",0},
    { "_FXTime","_long",0},
    { "_FXTime","_signed_long",0},
    { "_FXTime","_unsigned_long",0},
    { "_FXHotKey","_FXInputHandle",0},
    { "_FXHotKey","_FXDragType",0},
    { "_FXHotKey","_FXuint",0},
    { "_FXHotKey","_int",0},
    { "_FXHotKey","_unsigned_int",0},
    { "_FXHotKey","_FXint",0},
    { "_FXHotKey","_FXSelector",0},
    { "_FXHotKey","_FXID",0},
    { "_FXHotKey","_FXColor",0},
    { "_class_FXSize","_FXSize",0},
    { "_class_FXPyObject","_FXPyObject",0},
    { "_class_FXPyShell","_FXPyShell",0},
    { "_FXPyDC","_class_FXPyDC",0},
    { "_struct_FXFontDesc","_FXFontDesc",0},
    { "_FXMatrix","_class_FXMatrix",0},
    { "_FXPyTable","_class_FXPyTable",0},
    { "_class_FXPyBMPIcon","_FXPyBMPIcon",0},
    { "_class_FXPyICOIcon","_FXPyICOIcon",0},
    { "_char","_FXchar",0},
    { "_FXdouble","_double",0},
    { "_FXStream","_class_FXStream",0},
    { "_FXPyStringDict","_class_FXPyStringDict",0},
    { "_FXFrame","_class_FXFrame",0},
    { "_FXObjectPtr","_FXObject_p",0},
    { "_FXPyComposite","_class_FXPyComposite",0},
    { "_class_FXShutterItem","_FXShutterItem",0},
    { "_class_FXDelegator","_FXDelegator",0},
    { "_FXVerticalFrame","_class_FXVerticalFrame",0},
    { "_class_FXPyMatrix","_FXPyMatrix",0},
    { "_FXbool","_FXuchar",0},
    { "_FXbool","_unsigned_char",0},
    { "_class_FXTGAImage","_FXTGAImage",0},
    { "_class_FXPyStream","_FXPyStream",0},
    { "_FXStringDict","_class_FXStringDict",0},
    { "_FXPyGroupBox","_class_FXPyGroupBox",0},
    { "_class_FXPyApp","_FXPyApp",0},
    { "_class_FXDCWindow","_FXDCWindow",0},
    { "_class_FXPyShutter","_FXPyShutter",0},
    { "_FXPyWindow","_class_FXPyWindow",0},
    { "_class_FXRootWindow","_FXRootWindow",0},
    { "_class_FXPyXPMImage","_FXPyXPMImage",0},
    { "_class_FXPyGIFImage","_FXPyGIFImage",0},
    { "_class_FXPyVerticalFrame","_FXPyVerticalFrame",0},
    { "_class_FXPySplitter","_FXPySplitter",0},
    { "_class_FXFileStream","_FXFileStream",0},
    { "_class_FXPyMainWindow","_FXPyMainWindow",0},
    { "_class_FXHorizontalFrame","_FXHorizontalFrame",0},
    { "_class_FXPyImage","_FXPyImage",0},
    { "_class_FXGIFIcon","_FXGIFIcon",0},
    { "_class_FXPyRGBIcon","_FXPyRGBIcon",0},
    { "_FXPyPacker","_class_FXPyPacker",0},
    { "_class_FXPyScrollWindow","_FXPyScrollWindow",0},
    { "_unsigned_long","_FXPixel",0},
    { "_unsigned_long","_FXTime",0},
    { "_unsigned_long","_long",0},
    { "_class_FXDataTarget","_FXDataTarget",0},
    { "_class_FXScrollWindow","_FXScrollWindow",0},
    { "_class_FXPyDC","_FXPyDC",0},
    { "_FXPyVerticalSeparator","_class_FXPyVerticalSeparator",0},
    { "_class_FXPyTable","_FXPyTable",0},
    { "_FXPCXIcon","_class_FXPCXIcon",0},
    { "_FXSwitcher","_class_FXSwitcher",0},
    { "_class_FXJPGImage","_FXJPGImage",0},
    { "_class_FXPyIcon","_FXPyIcon",0},
    { "_class_FXPyAccelTable","_FXPyAccelTable",0},
    { "_class_FXDC","_FXDC",0},
    { "_FXVisual","_class_FXVisual",0},
    { "_FXPyTIFImage","_class_FXPyTIFImage",0},
    { "_FXPNGIcon","_class_FXPNGIcon",0},
    { "_class_FXPopup","_FXPopup",0},
    { "_class_FXVerticalFrame","_FXVerticalFrame",0},
    { "_signed_int","_FXInputHandle",0},
    { "_signed_int","_FXint",0},
    { "_signed_int","_int",0},
    { "_class_FXPy4Splitter","_FXPy4Splitter",0},
    { "_FXPNGImage","_class_FXPNGImage",0},
    { "_FXPyTGAIcon","_class_FXPyTGAIcon",0},
    { "_FXPyDict","_class_FXPyDict",0},
    { "_class_FXStringDict","_FXStringDict",0},
    { "_FXRegion","_class_FXRegion",0},
    { "_class_FXPyGroupBox","_FXPyGroupBox",0},
    { "_FXVerticalSeparator","_class_FXVerticalSeparator",0},
    { "_FXRawEvent","__XEvent",0},
    { "_class_FXPyVisual","_FXPyVisual",0},
    { "_FXShell","_class_FXShell",0},
    { "_FXCanvas","_class_FXCanvas",0},
    { "_class_FXRGBImage","_FXRGBImage",0},
    { "_unsigned_short","_FXshort",0},
    { "_unsigned_short","_FXushort",0},
    { "_unsigned_short","_short",0},
    { "_class_FXPyTopWindow","_FXPyTopWindow",0},
    { "_class_FXBMPImage","_FXBMPImage",0},
    { "_class_FXICOImage","_FXICOImage",0},
    { "_class_FXRecentFiles","_FXRecentFiles",0},
    { "_class_FXDebugTarget","_FXDebugTarget",0},
    { "_FXDrawable","_class_FXPyTable",SwigFXPyTableToFXDrawable},
    { "_FXDrawable","_FXPyTable",SwigFXPyTableToFXDrawable},
    { "_FXDrawable","_class_FXTable",SwigFXTableToFXDrawable},
    { "_FXDrawable","_FXTable",SwigFXTableToFXDrawable},
    { "_FXDrawable","_class_FXDrawable",0},
    { "_class_FXPCXImage","_FXPCXImage",0},
    { "_FXJPGIcon","_class_FXJPGIcon",0},
    { "_class_FXPyCanvas","_FXPyCanvas",0},
    { "_class_FX4Splitter","_FX4Splitter",0},
    { "_FXPyXPMIcon","_class_FXPyXPMIcon",0},
    { "_FXObject_p","_FXObjectPtr",0},
    { "_FXID","_FXInputHandle",0},
    { "_FXID","_FXDragType",0},
    { "_FXID","_FXHotKey",0},
    { "_FXID","_FXColor",0},
    { "_FXID","_unsigned_int",0},
    { "_FXID","_int",0},
    { "_FXID","_FXuint",0},
    { "_FXID","_FXint",0},
    { "_FXID","_FXSelector",0},
    { "_FXHorizontalSeparator","_class_FXHorizontalSeparator",0},
    { "_class_FXPyGIFIcon","_FXPyGIFIcon",0},
    { "_class_FXPyVerticalSeparator","_FXPyVerticalSeparator",0},
    { "_struct_FXPrinter","_FXPrinter",0},
    { "_FXPyTIFIcon","_class_FXPyTIFIcon",0},
    { "_FXTableItem","_class_FXPyTableItem",SwigFXPyTableItemToFXTableItem},
    { "_FXTableItem","_FXPyTableItem",SwigFXPyTableItemToFXTableItem},
    { "_FXTableItem","_class_FXTableItem",0},
    { "_class_FXPCXIcon","_FXPCXIcon",0},
    { "_signed_short","_FXshort",0},
    { "_signed_short","_short",0},
    { "_class_FXFrame","_FXFrame",0},
    { "_class_FXTopWindow","_FXTopWindow",0},
    { "_FXfloat","_float",0},
    { "_FXEvent","_struct_FXEvent",0},
    { "_class_FXPyComposite","_FXPyComposite",0},
    { "_class_FXPyTIFImage","_FXPyTIFImage",0},
    { "_class_FXPNGIcon","_FXPNGIcon",0},
    { "_struct_FXSegment","_FXSegment",0},
    { "_unsigned_char","_FXbool",0},
    { "_unsigned_char","_FXuchar",0},
    { "_FXPixel","_unsigned_long",0},
    { "_FXPixel","_long",0},
    { "_FXPixel","_FXTime",0},
    { "_FXImage","_class_FXImage",0},
    { "_FXWindow","_class_FXPyTable",SwigFXPyTableToFXWindow},
    { "_FXWindow","_FXPyTable",SwigFXPyTableToFXWindow},
    { "_FXWindow","_class_FXTable",SwigFXTableToFXWindow},
    { "_FXWindow","_FXTable",SwigFXTableToFXWindow},
    { "_FXWindow","_class_FXWindow",0},
    { "_unsigned_int","_FXInputHandle",0},
    { "_unsigned_int","_FXDragType",0},
    { "_unsigned_int","_FXHotKey",0},
    { "_unsigned_int","_FXColor",0},
    { "_unsigned_int","_FXID",0},
    { "_unsigned_int","_FXSelector",0},
    { "_unsigned_int","_FXint",0},
    { "_unsigned_int","_FXuint",0},
    { "_unsigned_int","_int",0},
    { "_FXPyTGAImage","_class_FXPyTGAImage",0},
    { "_FXDict","_class_FXDict",0},
    { "_FXPyDCPrint","_class_FXPyDCPrint",0},
    { "_FXuint","_FXInputHandle",0},
    { "_FXuint","_FXDragType",0},
    { "_FXuint","_FXHotKey",0},
    { "_FXuint","_FXColor",0},
    { "_FXuint","_FXID",0},
    { "_FXuint","_FXSelector",0},
    { "_FXuint","_FXint",0},
    { "_FXuint","_unsigned_int",0},
    { "_FXuint","_int",0},
    { "_class_FXPyScrollArea","_FXPyScrollArea",0},
    { "_short","_FXshort",0},
    { "_short","_FXushort",0},
    { "_short","_unsigned_short",0},
    { "_short","_signed_short",0},
    { "_FXRectangle","_class_FXRectangle",0},
    { "_FXPyFont","_class_FXPyFont",0},
    { "_FXPyDCWindow","_class_FXPyDCWindow",0},
    { "_FXTable","_class_FXPyTable",SwigFXPyTableToFXTable},
    { "_FXTable","_FXPyTable",SwigFXPyTableToFXTable},
    { "_FXTable","_class_FXTable",0},
    { "_class_FXApp","_FXApp",0},
    { "_FXXPMImage","_class_FXXPMImage",0},
    { "_class_FXPyWindow","_FXPyWindow",0},
    { "_FXPacker","_class_FXPacker",0},
    { "_FXGIFImage","_class_FXGIFImage",0},
    { "_class_FXComposite","_class_FXPyTable",SwigFXPyTableToFXComposite},
    { "_class_FXComposite","_FXPyTable",SwigFXPyTableToFXComposite},
    { "_class_FXComposite","_class_FXTable",SwigFXTableToFXComposite},
    { "_class_FXComposite","_FXTable",SwigFXTableToFXComposite},
    { "_class_FXComposite","_FXComposite",0},
    { "_FXSplitter","_class_FXSplitter",0},
    { "_FXPyCommand","_class_FXPyCommand",0},
    { "_class_FXJPGIcon","_FXJPGIcon",0},
    { "_class_FXPyHorizontalSeparator","_FXPyHorizontalSeparator",0},
    { "_struct_FXTableRange","_FXTableRange",0},
    { "_FXchar","_char",0},
    { "_class_FXPyPacker","_FXPyPacker",0},
    { "_FXuchar","_FXbool",0},
    { "_FXuchar","_unsigned_char",0},
    { "_class_FXHorizontalSeparator","_FXHorizontalSeparator",0},
    { "_int","_FXInputHandle",0},
    { "_int","_FXDragType",0},
    { "_int","_FXHotKey",0},
    { "_int","_FXColor",0},
    { "_int","_FXID",0},
    { "_int","_FXSelector",0},
    { "_int","_FXint",0},
    { "_int","_FXuint",0},
    { "_int","_unsigned_int",0},
    { "_int","_signed_int",0},
    { "_FXDragType","_FXInputHandle",0},
    { "_FXDragType","_FXID",0},
    { "_FXDragType","_FXSelector",0},
    { "_FXDragType","_FXint",0},
    { "_FXDragType","_FXuint",0},
    { "_FXDragType","_int",0},
    { "_FXDragType","_unsigned_int",0},
    { "_FXDragType","_FXColor",0},
    { "_FXDragType","_FXHotKey",0},
    { "_FXSettings","_class_FXSettings",0},
    { "_FXRegistry","_class_FXRegistry",0},
    { "_FXPyBMPIcon","_class_FXPyBMPIcon",0},
    { "_FXPyICOIcon","_class_FXPyICOIcon",0},
    { "_class_FXSwitcher","_FXSwitcher",0},
    { "_FXPyShutterItem","_class_FXPyShutterItem",0},
    { "_FXPSBounds","_struct_FXPSBounds",0},
    { "_FXPyJPGImage","_class_FXPyJPGImage",0},
    { "_class_FXPyPCXIcon","_FXPyPCXIcon",0},
    { "_FXTGAIcon","_class_FXTGAIcon",0},
    { "_FXDelegator","_class_FXDelegator",0},
    { "_FXTableRange","_struct_FXTableRange",0},
    { "_FXGroupBox","_class_FXGroupBox",0},
    { "_class_FXPNGImage","_FXPNGImage",0},
    { "_class_FXPyPNGIcon","_FXPyPNGIcon",0},
    { "_class_FXPyRootWindow","_FXPyRootWindow",0},
    { "_class_FXPyTGAImage","_FXPyTGAImage",0},
    { "_class_FXDict","_FXDict",0},
    { "_class_FXVerticalSeparator","_FXVerticalSeparator",0},
    { "_class_FXShell","_FXShell",0},
    { "_FXPyShutter","_class_FXPyShutter",0},
    { "_FXInputHandle","_FXint",0},
    { "_FXInputHandle","_FXuint",0},
    { "_FXInputHandle","_unsigned_int",0},
    { "_FXInputHandle","_signed_int",0},
    { "_FXInputHandle","_int",0},
    { "_FXInputHandle","_FXSelector",0},
    { "_FXInputHandle","_FXID",0},
    { "_FXInputHandle","_FXColor",0},
    { "_FXInputHandle","_FXHotKey",0},
    { "_FXInputHandle","_FXDragType",0},
    { "_class_FXPyFileStream","_FXPyFileStream",0},
    { "_class_FXPyDCWindow","_FXPyDCWindow",0},
    { "_FXPyTableItem","_class_FXPyTableItem",0},
    { "_FXFont","_class_FXFont",0},
    { "_FXPyRGBImage","_class_FXPyRGBImage",0},
    { "_class_FXPyDataTarget","_FXPyDataTarget",0},
    { "_class_FXObject","_class_FXPyTable",SwigFXPyTableToFXObject},
    { "_class_FXObject","_FXPyTable",SwigFXPyTableToFXObject},
    { "_class_FXObject","_class_FXTable",SwigFXTableToFXObject},
    { "_class_FXObject","_FXTable",SwigFXTableToFXObject},
    { "_class_FXObject","_class_FXPyTableItem",SwigFXPyTableItemToFXObject},
    { "_class_FXObject","_FXPyTableItem",SwigFXPyTableItemToFXObject},
    { "_class_FXObject","_class_FXTableItem",SwigFXTableItemToFXObject},
    { "_class_FXObject","_FXTableItem",SwigFXTableItemToFXObject},
    { "_class_FXObject","_FXObject",0},
    { "_FXXPMIcon","_class_FXXPMIcon",0},
    { "_FXPyPopup","_class_FXPyPopup",0},
    { "_FXPyVerticalFrame","_class_FXPyVerticalFrame",0},
    { "_FXId","_class_FXPyTable",SwigFXPyTableToFXId},
    { "_FXId","_FXPyTable",SwigFXPyTableToFXId},
    { "_FXId","_class_FXTable",SwigFXTableToFXId},
    { "_FXId","_FXTable",SwigFXTableToFXId},
    { "_FXId","_class_FXId",0},
    { "_class_FXDrawable","_class_FXPyTable",SwigFXPyTableToFXDrawable},
    { "_class_FXDrawable","_FXPyTable",SwigFXPyTableToFXDrawable},
    { "_class_FXDrawable","_class_FXTable",SwigFXTableToFXDrawable},
    { "_class_FXDrawable","_FXTable",SwigFXTableToFXDrawable},
    { "_class_FXDrawable","_FXDrawable",0},
    { "_FXPyBMPImage","_class_FXPyBMPImage",0},
    { "_FXPyICOImage","_class_FXPyICOImage",0},
    { "_FXPyMainWindow","_class_FXPyMainWindow",0},
    { "_FXHorizontalFrame","_class_FXHorizontalFrame",0},
    { "_FXPyPCXImage","_class_FXPyPCXImage",0},
    { "_FXPyRGBIcon","_class_FXPyRGBIcon",0},
    { "_class_FXPyJPGIcon","_FXPyJPGIcon",0},
    { "_FXTIFIcon","_class_FXTIFIcon",0},
    { "_FXScrollWindow","_class_FXScrollWindow",0},
    { "_FXMainWindow","_class_FXMainWindow",0},
    { "_class_FXMatrix","_FXMatrix",0},
    { "__XEvent","_FXRawEvent",0},
    { "_class_FXPyShutterItem","_FXPyShutterItem",0},
    { "_struct_FXEvent","_FXEvent",0},
    { "_class_FXStream","_FXStream",0},
    { "_class_FXPyStringDict","_FXPyStringDict",0},
    { "_class_FXPyJPGImage","_FXPyJPGImage",0},
    { "_FXTIFImage","_class_FXTIFImage",0},
    { "_FXPyIcon","_class_FXPyIcon",0},
    { "_FXPyAccelTable","_class_FXPyAccelTable",0},
    { "_class_FXTGAIcon","_FXTGAIcon",0},
    { "_struct_FXPSBounds","_FXPSBounds",0},
    { "_FXDCPrint","_class_FXDCPrint",0},
    { "_class_FXImage","_FXImage",0},
    { "_FXPoint","_class_FXPoint",0},
    { "_FXAccelTable","_class_FXAccelTable",0},
    { "_FXPyId","_class_FXPyId",0},
    { "_class_FXTable","_class_FXPyTable",SwigFXPyTableToFXTable},
    { "_class_FXTable","_FXPyTable",SwigFXPyTableToFXTable},
    { "_class_FXTable","_FXTable",0},
    { "_FXSelector","_FXInputHandle",0},
    { "_FXSelector","_FXDragType",0},
    { "_FXSelector","_FXHotKey",0},
    { "_FXSelector","_FXColor",0},
    { "_FXSelector","_FXID",0},
    { "_FXSelector","_FXuint",0},
    { "_FXSelector","_int",0},
    { "_FXSelector","_unsigned_int",0},
    { "_FXSelector","_FXint",0},
    { "_class_FXFont","_FXFont",0},
    { "_class_FXXPMImage","_FXXPMImage",0},
    { "_FXPyRecentFiles","_class_FXPyRecentFiles",0},
    { "_FXPyDebugTarget","_class_FXPyDebugTarget",0},
    { "_FXCommand","_class_FXCommand",0},
    { "_FXPyFrame","_class_FXPyFrame",0},
    { "_class_FXGIFImage","_FXGIFImage",0},
    { "_class_FXPyRGBImage","_FXPyRGBImage",0},
    { "_class_FXSplitter","_FXSplitter",0},
    { "_class_FXXPMIcon","_FXXPMIcon",0},
    { "_class_FXPyPopup","_FXPyPopup",0},
{0,0,0}};

static PyObject *SWIG_globals;
#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT(void) inittablec() {
	 PyObject *m, *d;
	 SWIG_globals = SWIG_newvarlink();
	 m = Py_InitModule("tablec", tablecMethods);
	 d = PyModule_GetDict(m);
	 PyDict_SetItemString(d,"DEFAULT_MARGIN", PyInt_FromLong((long) 2));
	 PyDict_SetItemString(d,"TABLE_COL_SIZABLE", PyInt_FromLong((long) TABLE_COL_SIZABLE));
	 PyDict_SetItemString(d,"TABLE_ROW_SIZABLE", PyInt_FromLong((long) TABLE_ROW_SIZABLE));
	 PyDict_SetItemString(d,"TABLE_NO_COLSELECT", PyInt_FromLong((long) TABLE_NO_COLSELECT));
	 PyDict_SetItemString(d,"TABLE_NO_ROWSELECT", PyInt_FromLong((long) TABLE_NO_ROWSELECT));
	 PyDict_SetItemString(d,"FX_TableItem_RIGHT", PyInt_FromLong((long) FXTableItem::RIGHT));
	 PyDict_SetItemString(d,"FX_TableItem_LEFT", PyInt_FromLong((long) FXTableItem::LEFT));
	 PyDict_SetItemString(d,"FX_TableItem_TOP", PyInt_FromLong((long) FXTableItem::TOP));
	 PyDict_SetItemString(d,"FX_TableItem_BOTTOM", PyInt_FromLong((long) FXTableItem::BOTTOM));
	 PyDict_SetItemString(d,"FX_TableItem_BEFORE", PyInt_FromLong((long) FXTableItem::BEFORE));
	 PyDict_SetItemString(d,"FX_TableItem_AFTER", PyInt_FromLong((long) FXTableItem::AFTER));
	 PyDict_SetItemString(d,"FX_TableItem_ABOVE", PyInt_FromLong((long) FXTableItem::ABOVE));
	 PyDict_SetItemString(d,"FX_TableItem_BELOW", PyInt_FromLong((long) FXTableItem::BELOW));
	 PyDict_SetItemString(d,"FX_TableItem_LBORDER", PyInt_FromLong((long) FXTableItem::LBORDER));
	 PyDict_SetItemString(d,"FX_TableItem_RBORDER", PyInt_FromLong((long) FXTableItem::RBORDER));
	 PyDict_SetItemString(d,"FX_TableItem_TBORDER", PyInt_FromLong((long) FXTableItem::TBORDER));
	 PyDict_SetItemString(d,"FX_TableItem_BBORDER", PyInt_FromLong((long) FXTableItem::BBORDER));
	 PyDict_SetItemString(d,"FX_Table_ID_HORZ_GRID", PyInt_FromLong((long) FXTable::ID_HORZ_GRID));
	 PyDict_SetItemString(d,"FX_Table_ID_VERT_GRID", PyInt_FromLong((long) FXTable::ID_VERT_GRID));
	 PyDict_SetItemString(d,"FX_Table_ID_DELETE_COLUMN", PyInt_FromLong((long) FXTable::ID_DELETE_COLUMN));
	 PyDict_SetItemString(d,"FX_Table_ID_DELETE_ROW", PyInt_FromLong((long) FXTable::ID_DELETE_ROW));
	 PyDict_SetItemString(d,"FX_Table_ID_INSERT_COLUMN", PyInt_FromLong((long) FXTable::ID_INSERT_COLUMN));
	 PyDict_SetItemString(d,"FX_Table_ID_INSERT_ROW", PyInt_FromLong((long) FXTable::ID_INSERT_ROW));
	 PyDict_SetItemString(d,"FX_Table_ID_SELECT_COLUMN", PyInt_FromLong((long) FXTable::ID_SELECT_COLUMN));
	 PyDict_SetItemString(d,"FX_Table_ID_SELECT_ROW", PyInt_FromLong((long) FXTable::ID_SELECT_ROW));
	 PyDict_SetItemString(d,"FX_Table_ID_SELECT_CELL", PyInt_FromLong((long) FXTable::ID_SELECT_CELL));
	 PyDict_SetItemString(d,"FX_Table_ID_SELECT_ALL", PyInt_FromLong((long) FXTable::ID_SELECT_ALL));
	 PyDict_SetItemString(d,"FX_Table_ID_DESELECT_ALL", PyInt_FromLong((long) FXTable::ID_DESELECT_ALL));
	 PyDict_SetItemString(d,"FX_Table_ID_MOVE_LEFT", PyInt_FromLong((long) FXTable::ID_MOVE_LEFT));
	 PyDict_SetItemString(d,"FX_Table_ID_MOVE_RIGHT", PyInt_FromLong((long) FXTable::ID_MOVE_RIGHT));
	 PyDict_SetItemString(d,"FX_Table_ID_MOVE_UP", PyInt_FromLong((long) FXTable::ID_MOVE_UP));
	 PyDict_SetItemString(d,"FX_Table_ID_MOVE_DOWN", PyInt_FromLong((long) FXTable::ID_MOVE_DOWN));
	 PyDict_SetItemString(d,"FX_Table_ID_MOVE_HOME", PyInt_FromLong((long) FXTable::ID_MOVE_HOME));
	 PyDict_SetItemString(d,"FX_Table_ID_MOVE_END", PyInt_FromLong((long) FXTable::ID_MOVE_END));
	 PyDict_SetItemString(d,"FX_Table_ID_MOVE_TOP", PyInt_FromLong((long) FXTable::ID_MOVE_TOP));
	 PyDict_SetItemString(d,"FX_Table_ID_MOVE_BOTTOM", PyInt_FromLong((long) FXTable::ID_MOVE_BOTTOM));
	 PyDict_SetItemString(d,"FX_Table_ID_MOVE_PAGEDOWN", PyInt_FromLong((long) FXTable::ID_MOVE_PAGEDOWN));
	 PyDict_SetItemString(d,"FX_Table_ID_MOVE_PAGEUP", PyInt_FromLong((long) FXTable::ID_MOVE_PAGEUP));
	 PyDict_SetItemString(d,"FX_Table_ID_MARK", PyInt_FromLong((long) FXTable::ID_MARK));
	 PyDict_SetItemString(d,"FX_Table_ID_EXTEND", PyInt_FromLong((long) FXTable::ID_EXTEND));
	 PyDict_SetItemString(d,"FX_Table_ID_CUT_SEL", PyInt_FromLong((long) FXTable::ID_CUT_SEL));
	 PyDict_SetItemString(d,"FX_Table_ID_COPY_SEL", PyInt_FromLong((long) FXTable::ID_COPY_SEL));
	 PyDict_SetItemString(d,"FX_Table_ID_PASTE_SEL", PyInt_FromLong((long) FXTable::ID_PASTE_SEL));
	 PyDict_SetItemString(d,"FX_Table_ID_BLINK", PyInt_FromLong((long) FXTable::ID_BLINK));
	 PyDict_SetItemString(d,"FX_Table_ID_LAST", PyInt_FromLong((long) FXTable::ID_LAST));
{
   int i;
   for (i = 0; _swig_mapping[i].n1; i++)
        SWIG_RegisterMapping(_swig_mapping[i].n1,_swig_mapping[i].n2,_swig_mapping[i].pcnv);
}
}
