/*
 * FILE : ../src/text.cpp
 * 
 * This file was automatically generated by :
 * Simplified Wrapper and Interface Generator (SWIG)
 * Version 1.1 (Build 883)
 * 
 * Portions Copyright (c) 1995-1998
 * The University of Utah and The Regents of the University of California.
 * Permission is granted to distribute this file in any manner provided
 * this notice remains intact.
 * 
 * Do not make changes to this file--changes will be lost!
 *
 */


#define SWIGCODE
/* Implementation : PYTHON */

#define SWIGPYTHON
#include <string.h>
#include <stdlib.h>
/* Definitions for Windows/Unix exporting */
#if defined(__WIN32__)
#   if defined(_MSC_VER)
#	define SWIGEXPORT(a) __declspec(dllexport) a
#   else
#	if defined(__BORLANDC__)
#	    define SWIGEXPORT(a) a _export 
#	else
#	    define SWIGEXPORT(a) a 
#	endif
#   endif
#else
#   define SWIGEXPORT(a) a 
#endif

#include "Python.h"

#ifdef __cplusplus
extern "C" {
#endif
extern void SWIG_MakePtr(char *, void *, char *);
extern void SWIG_RegisterMapping(char *, char *, void *(*)(void *));
extern char *SWIG_GetPtr(char *, void **, char *);
extern char *SWIG_GetPtrObj(PyObject *, void **, char *);
extern void SWIG_addvarlink(PyObject *, char *, PyObject *(*)(void), int (*)(PyObject *));
extern PyObject *SWIG_newvarlink(void);
#ifdef __cplusplus
}
#endif
#define SWIG_init    inittextc

#define SWIG_name    "textc"

#include "fx.h"
#include "fx3d.h"
#include "FXCURCursor.h"
#include "FXJPGImage.h"
#include "FXJPGIcon.h"
#include "FXPNGIcon.h"
#include "FXPNGImage.h"
#include "FXTIFIcon.h"
#include "FXTIFImage.h"
#include "FXRGBIcon.h"
#include "FXRGBImage.h"
#include "FXICOIcon.h"
#include "FXICOImage.h"
#include "FXPyApp.h"
#include "FXPy.h"

static PyObject* l_output_helper(PyObject* target, PyObject* o) {
    PyObject*   o2;
    if (!target) {                   
        target = o;
    } else if (target == Py_None) {  
        Py_DECREF(Py_None);
        target = o;
    } else {                         
        if (!PyList_Check(target)) {
            o2 = target;
            target = PyList_New(0);
            PyList_Append(target, o2);
	    Py_XDECREF(o2);
        }
        PyList_Append(target,o);
	Py_XDECREF(o);
    }
    return target;
}

static PyObject* t_output_helper(PyObject* target, PyObject* o) {
    PyObject*   o2;
    PyObject*   o3;

    if (!target) {                   
        target = o;
    } else if (target == Py_None) {  
        Py_DECREF(Py_None);
        target = o;
    } else {                         
        if (!PyTuple_Check(target)) {
            o2 = target;
            target = PyTuple_New(1);
            PyTuple_SetItem(target, 0, o2);
        }
        o3 = PyTuple_New(1);            
        PyTuple_SetItem(o3, 0, o);      

        o2 = target;
        target = PySequence_Concat(o2, o3); 
        Py_DECREF(o2);                      
        Py_DECREF(o3);
    }
    return target;
}
#ifdef __cplusplus
extern "C" {
#endif
#define new_FX_Charset(_swigarg0) (new FXCharset(_swigarg0))
static PyObject *_wrap_new_FX_Charset(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXCharset * _result;
    FXString * _arg0;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "characters", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:new_FX_Charset",_kwnames,&_obj0)) 
        return NULL;
{
    if (_obj0 == Py_None)
	_arg0 = new FXString;
    else if (!PyString_Check(_obj0)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg0 = new FXString(PyString_AsString(_obj0));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXCharset *)new_FX_Charset(*_arg0);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXCharset_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    delete _arg0;
}
    return _resultobj;
}

#define FX_Charset_has(_swigobj,_swigarg0)  (_swigobj->has(_swigarg0))
static PyObject *_wrap_FX_Charset_has(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXCharset * _arg0;
    FXchar  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","ch", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oc:FX_Charset_has",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXCharset_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Charset_has. Expected _FXCharset_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_Charset_has(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_Charset_clear(_swigobj)  (_swigobj->clear())
static PyObject *_wrap_FX_Charset_clear(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXCharset * _result;
    FXCharset * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Charset_clear",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXCharset_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Charset_clear. Expected _FXCharset_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXCharset & _result_ref = FX_Charset_clear(_arg0);
    _result = (FXCharset *) &_result_ref;

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXCharset_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FXHiliteStyle_normalForeColor_set(_swigobj,_swigval) (_swigobj->normalForeColor = _swigval,_swigval)
static PyObject *_wrap_FXHiliteStyle_normalForeColor_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXHiliteStyle * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","normalForeColor", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXHiliteStyle_normalForeColor_set",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXHiliteStyle_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHiliteStyle_normalForeColor_set. Expected _FXHiliteStyle_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FXHiliteStyle_normalForeColor_set(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXHiliteStyle_normalForeColor_get(_swigobj) ((FXColor ) _swigobj->normalForeColor)
static PyObject *_wrap_FXHiliteStyle_normalForeColor_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXHiliteStyle * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHiliteStyle_normalForeColor_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXHiliteStyle_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHiliteStyle_normalForeColor_get. Expected _FXHiliteStyle_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FXHiliteStyle_normalForeColor_get(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXHiliteStyle_normalBackColor_set(_swigobj,_swigval) (_swigobj->normalBackColor = _swigval,_swigval)
static PyObject *_wrap_FXHiliteStyle_normalBackColor_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXHiliteStyle * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","normalBackColor", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXHiliteStyle_normalBackColor_set",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXHiliteStyle_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHiliteStyle_normalBackColor_set. Expected _FXHiliteStyle_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FXHiliteStyle_normalBackColor_set(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXHiliteStyle_normalBackColor_get(_swigobj) ((FXColor ) _swigobj->normalBackColor)
static PyObject *_wrap_FXHiliteStyle_normalBackColor_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXHiliteStyle * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHiliteStyle_normalBackColor_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXHiliteStyle_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHiliteStyle_normalBackColor_get. Expected _FXHiliteStyle_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FXHiliteStyle_normalBackColor_get(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXHiliteStyle_selectForeColor_set(_swigobj,_swigval) (_swigobj->selectForeColor = _swigval,_swigval)
static PyObject *_wrap_FXHiliteStyle_selectForeColor_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXHiliteStyle * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","selectForeColor", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXHiliteStyle_selectForeColor_set",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXHiliteStyle_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHiliteStyle_selectForeColor_set. Expected _FXHiliteStyle_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FXHiliteStyle_selectForeColor_set(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXHiliteStyle_selectForeColor_get(_swigobj) ((FXColor ) _swigobj->selectForeColor)
static PyObject *_wrap_FXHiliteStyle_selectForeColor_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXHiliteStyle * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHiliteStyle_selectForeColor_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXHiliteStyle_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHiliteStyle_selectForeColor_get. Expected _FXHiliteStyle_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FXHiliteStyle_selectForeColor_get(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXHiliteStyle_selectBackColor_set(_swigobj,_swigval) (_swigobj->selectBackColor = _swigval,_swigval)
static PyObject *_wrap_FXHiliteStyle_selectBackColor_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXHiliteStyle * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","selectBackColor", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXHiliteStyle_selectBackColor_set",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXHiliteStyle_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHiliteStyle_selectBackColor_set. Expected _FXHiliteStyle_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FXHiliteStyle_selectBackColor_set(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXHiliteStyle_selectBackColor_get(_swigobj) ((FXColor ) _swigobj->selectBackColor)
static PyObject *_wrap_FXHiliteStyle_selectBackColor_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXHiliteStyle * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHiliteStyle_selectBackColor_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXHiliteStyle_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHiliteStyle_selectBackColor_get. Expected _FXHiliteStyle_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FXHiliteStyle_selectBackColor_get(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXHiliteStyle_hiliteForeColor_set(_swigobj,_swigval) (_swigobj->hiliteForeColor = _swigval,_swigval)
static PyObject *_wrap_FXHiliteStyle_hiliteForeColor_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXHiliteStyle * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","hiliteForeColor", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXHiliteStyle_hiliteForeColor_set",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXHiliteStyle_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHiliteStyle_hiliteForeColor_set. Expected _FXHiliteStyle_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FXHiliteStyle_hiliteForeColor_set(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXHiliteStyle_hiliteForeColor_get(_swigobj) ((FXColor ) _swigobj->hiliteForeColor)
static PyObject *_wrap_FXHiliteStyle_hiliteForeColor_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXHiliteStyle * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHiliteStyle_hiliteForeColor_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXHiliteStyle_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHiliteStyle_hiliteForeColor_get. Expected _FXHiliteStyle_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FXHiliteStyle_hiliteForeColor_get(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXHiliteStyle_hiliteBackColor_set(_swigobj,_swigval) (_swigobj->hiliteBackColor = _swigval,_swigval)
static PyObject *_wrap_FXHiliteStyle_hiliteBackColor_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXHiliteStyle * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","hiliteBackColor", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXHiliteStyle_hiliteBackColor_set",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXHiliteStyle_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHiliteStyle_hiliteBackColor_set. Expected _FXHiliteStyle_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FXHiliteStyle_hiliteBackColor_set(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXHiliteStyle_hiliteBackColor_get(_swigobj) ((FXColor ) _swigobj->hiliteBackColor)
static PyObject *_wrap_FXHiliteStyle_hiliteBackColor_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXHiliteStyle * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHiliteStyle_hiliteBackColor_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXHiliteStyle_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHiliteStyle_hiliteBackColor_get. Expected _FXHiliteStyle_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FXHiliteStyle_hiliteBackColor_get(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXHiliteStyle_activeBackColor_set(_swigobj,_swigval) (_swigobj->activeBackColor = _swigval,_swigval)
static PyObject *_wrap_FXHiliteStyle_activeBackColor_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXHiliteStyle * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","activeBackColor", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXHiliteStyle_activeBackColor_set",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXHiliteStyle_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHiliteStyle_activeBackColor_set. Expected _FXHiliteStyle_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FXHiliteStyle_activeBackColor_set(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXHiliteStyle_activeBackColor_get(_swigobj) ((FXColor ) _swigobj->activeBackColor)
static PyObject *_wrap_FXHiliteStyle_activeBackColor_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXHiliteStyle * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHiliteStyle_activeBackColor_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXHiliteStyle_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHiliteStyle_activeBackColor_get. Expected _FXHiliteStyle_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FXHiliteStyle_activeBackColor_get(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXHiliteStyle_style_set(_swigobj,_swigval) (_swigobj->style = _swigval,_swigval)
static PyObject *_wrap_FXHiliteStyle_style_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXHiliteStyle * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","style", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXHiliteStyle_style_set",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXHiliteStyle_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHiliteStyle_style_set. Expected _FXHiliteStyle_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )FXHiliteStyle_style_set(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXHiliteStyle_style_get(_swigobj) ((FXuint ) _swigobj->style)
static PyObject *_wrap_FXHiliteStyle_style_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXHiliteStyle * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHiliteStyle_style_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXHiliteStyle_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHiliteStyle_style_get. Expected _FXHiliteStyle_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )FXHiliteStyle_style_get(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static void *SwigFXTextToFXScrollArea(void *ptr) {
    FXText *src;
    FXScrollArea *dest;
    src = (FXText *) ptr;
    dest = (FXScrollArea *) src;
    return (void *) dest;
}

static void *SwigFXTextToFXComposite(void *ptr) {
    FXText *src;
    FXComposite *dest;
    src = (FXText *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXTextToFXWindow(void *ptr) {
    FXText *src;
    FXWindow *dest;
    src = (FXText *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXTextToFXDrawable(void *ptr) {
    FXText *src;
    FXDrawable *dest;
    src = (FXText *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXTextToFXId(void *ptr) {
    FXText *src;
    FXId *dest;
    src = (FXText *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXTextToFXObject(void *ptr) {
    FXText *src;
    FXObject *dest;
    src = (FXText *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define FX_Text_onPaint(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onPaint(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onPaint(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onPaint",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onPaint. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onPaint. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onPaint(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onUpdate(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdate(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onUpdate(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onUpdate",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onUpdate. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onUpdate. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onUpdate(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onFocusIn(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onFocusIn(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onFocusIn(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onFocusIn",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onFocusIn. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onFocusIn. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onFocusIn(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onFocusOut(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onFocusOut(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onFocusOut(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onFocusOut",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onFocusOut. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onFocusOut. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onFocusOut(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onLeftBtnPress(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onLeftBtnPress(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onLeftBtnPress(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onLeftBtnPress",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onLeftBtnPress. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onLeftBtnPress. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onLeftBtnPress(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onLeftBtnRelease(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onLeftBtnRelease(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onLeftBtnRelease(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onLeftBtnRelease",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onLeftBtnRelease. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onLeftBtnRelease. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onLeftBtnRelease(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onMiddleBtnPress(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onMiddleBtnPress(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onMiddleBtnPress(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onMiddleBtnPress",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onMiddleBtnPress. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onMiddleBtnPress. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onMiddleBtnPress(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onMiddleBtnRelease(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onMiddleBtnRelease(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onMiddleBtnRelease(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onMiddleBtnRelease",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onMiddleBtnRelease. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onMiddleBtnRelease. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onMiddleBtnRelease(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onRightBtnPress(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onRightBtnPress(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onRightBtnPress(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onRightBtnPress",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onRightBtnPress. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onRightBtnPress. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onRightBtnPress(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onRightBtnRelease(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onRightBtnRelease(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onRightBtnRelease(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onRightBtnRelease",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onRightBtnRelease. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onRightBtnRelease. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onRightBtnRelease(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onUngrabbed(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUngrabbed(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onUngrabbed(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onUngrabbed",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onUngrabbed. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onUngrabbed. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onUngrabbed(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onMotion(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onMotion(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onMotion(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onMotion",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onMotion. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onMotion. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onMotion(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onBeginDrag(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onBeginDrag(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onBeginDrag(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onBeginDrag",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onBeginDrag. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onBeginDrag. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onBeginDrag(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onEndDrag(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onEndDrag(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onEndDrag(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onEndDrag",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onEndDrag. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onEndDrag. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onEndDrag(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onDragged(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onDragged(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onDragged(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onDragged",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onDragged. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onDragged. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onDragged(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onDNDEnter(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onDNDEnter(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onDNDEnter(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onDNDEnter",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onDNDEnter. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onDNDEnter. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onDNDEnter(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onDNDLeave(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onDNDLeave(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onDNDLeave(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onDNDLeave",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onDNDLeave. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onDNDLeave. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onDNDLeave(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onDNDMotion(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onDNDMotion(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onDNDMotion(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onDNDMotion",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onDNDMotion. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onDNDMotion. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onDNDMotion(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onDNDDrop(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onDNDDrop(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onDNDDrop(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onDNDDrop",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onDNDDrop. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onDNDDrop. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onDNDDrop(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onDNDRequest(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onDNDRequest(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onDNDRequest(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onDNDRequest",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onDNDRequest. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onDNDRequest. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onDNDRequest(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onSelectionLost(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onSelectionLost(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onSelectionLost(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onSelectionLost",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onSelectionLost. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onSelectionLost. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onSelectionLost(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onSelectionGained(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onSelectionGained(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onSelectionGained(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onSelectionGained",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onSelectionGained. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onSelectionGained. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onSelectionGained(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onSelectionRequest(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onSelectionRequest(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onSelectionRequest(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onSelectionRequest",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onSelectionRequest. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onSelectionRequest(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onClipboardLost(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onClipboardLost(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onClipboardLost(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onClipboardLost",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onClipboardLost. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onClipboardLost. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onClipboardLost(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onClipboardGained(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onClipboardGained(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onClipboardGained(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onClipboardGained",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onClipboardGained. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onClipboardGained. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onClipboardGained(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onClipboardRequest(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onClipboardRequest(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onClipboardRequest(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onClipboardRequest",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onClipboardRequest. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onClipboardRequest. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onClipboardRequest(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onKeyPress(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onKeyPress(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onKeyPress(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onKeyPress",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onKeyPress. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onKeyPress. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onKeyPress(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onKeyRelease(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onKeyRelease(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onKeyRelease(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onKeyRelease",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onKeyRelease. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onKeyRelease. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onKeyRelease(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onBlink(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onBlink(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onBlink(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onBlink",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onBlink. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onBlink. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onBlink(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onFlash(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onFlash(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onFlash(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onFlash",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onFlash. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onFlash. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onFlash(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onAutoScroll(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onAutoScroll(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onAutoScroll(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onAutoScroll",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onAutoScroll. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onAutoScroll. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onAutoScroll(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onQueryHelp(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onQueryHelp(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onQueryHelp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onQueryHelp",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onQueryHelp. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onQueryHelp. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onQueryHelp(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onQueryTip(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onQueryTip(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onQueryTip(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onQueryTip",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onQueryTip. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onQueryTip. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onQueryTip(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdToggleEditable(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdToggleEditable(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdToggleEditable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdToggleEditable",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdToggleEditable. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdToggleEditable. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdToggleEditable(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onUpdToggleEditable(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdToggleEditable(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onUpdToggleEditable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onUpdToggleEditable",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onUpdToggleEditable. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onUpdToggleEditable. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onUpdToggleEditable(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdToggleOverstrike(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdToggleOverstrike(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdToggleOverstrike(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdToggleOverstrike",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdToggleOverstrike. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdToggleOverstrike. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdToggleOverstrike(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onUpdToggleOverstrike(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdToggleOverstrike(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onUpdToggleOverstrike(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onUpdToggleOverstrike",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onUpdToggleOverstrike. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onUpdToggleOverstrike. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onUpdToggleOverstrike(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdCursorRow(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdCursorRow(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdCursorRow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdCursorRow",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdCursorRow. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdCursorRow. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdCursorRow(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onUpdCursorRow(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdCursorRow(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onUpdCursorRow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onUpdCursorRow",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onUpdCursorRow. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onUpdCursorRow. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onUpdCursorRow(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdCursorColumn(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdCursorColumn(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdCursorColumn(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdCursorColumn",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdCursorColumn. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdCursorColumn. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdCursorColumn(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onUpdCursorColumn(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdCursorColumn(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onUpdCursorColumn(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onUpdCursorColumn",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onUpdCursorColumn. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onUpdCursorColumn. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onUpdCursorColumn(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onUpdHaveSelection(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdHaveSelection(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onUpdHaveSelection(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onUpdHaveSelection",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onUpdHaveSelection. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onUpdHaveSelection. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onUpdHaveSelection(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdSetStringValue(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSetStringValue(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdSetStringValue(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdSetStringValue",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdSetStringValue. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdSetStringValue. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdSetStringValue(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdGetStringValue(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdGetStringValue(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdGetStringValue(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdGetStringValue",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdGetStringValue. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdGetStringValue. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdGetStringValue(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdSearchSel(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSearchSel(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdSearchSel(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdSearchSel",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdSearchSel. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdSearchSel. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdSearchSel(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdSearch(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSearch(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdSearch(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdSearch",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdSearch. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdSearch. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdSearch(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdReplace(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdReplace(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdReplace(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdReplace",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdReplace. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdReplace. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdReplace(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdCursorTop(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdCursorTop(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdCursorTop(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdCursorTop",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdCursorTop. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdCursorTop. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdCursorTop(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdCursorBottom(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdCursorBottom(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdCursorBottom(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdCursorBottom",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdCursorBottom. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdCursorBottom. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdCursorBottom(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdCursorHome(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdCursorHome(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdCursorHome(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdCursorHome",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdCursorHome. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdCursorHome. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdCursorHome(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdCursorEnd(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdCursorEnd(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdCursorEnd(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdCursorEnd",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdCursorEnd. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdCursorEnd. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdCursorEnd(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdCursorRight(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdCursorRight(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdCursorRight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdCursorRight",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdCursorRight. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdCursorRight. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdCursorRight(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdCursorLeft(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdCursorLeft(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdCursorLeft(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdCursorLeft",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdCursorLeft. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdCursorLeft. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdCursorLeft(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdCursorUp(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdCursorUp(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdCursorUp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdCursorUp",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdCursorUp. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdCursorUp. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdCursorUp(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdCursorDown(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdCursorDown(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdCursorDown(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdCursorDown",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdCursorDown. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdCursorDown. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdCursorDown(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdCursorWordLeft(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdCursorWordLeft(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdCursorWordLeft(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdCursorWordLeft",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdCursorWordLeft. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdCursorWordLeft. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdCursorWordLeft(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdCursorWordRight(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdCursorWordRight(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdCursorWordRight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdCursorWordRight",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdCursorWordRight. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdCursorWordRight. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdCursorWordRight(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdCursorPageDown(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdCursorPageDown(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdCursorPageDown(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdCursorPageDown",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdCursorPageDown. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdCursorPageDown. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdCursorPageDown(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdCursorPageUp(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdCursorPageUp(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdCursorPageUp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdCursorPageUp",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdCursorPageUp. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdCursorPageUp. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdCursorPageUp(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdCursorScreenTop(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdCursorScreenTop(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdCursorScreenTop(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdCursorScreenTop",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdCursorScreenTop. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdCursorScreenTop. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdCursorScreenTop(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdCursorScreenBottom(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdCursorScreenBottom(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdCursorScreenBottom(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdCursorScreenBottom",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdCursorScreenBottom. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdCursorScreenBottom. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdCursorScreenBottom(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdCursorScreenCenter(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdCursorScreenCenter(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdCursorScreenCenter(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdCursorScreenCenter",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdCursorScreenCenter. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdCursorScreenCenter. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdCursorScreenCenter(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdCursorParHome(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdCursorParHome(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdCursorParHome(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdCursorParHome",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdCursorParHome. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdCursorParHome. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdCursorParHome(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdCursorParEnd(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdCursorParEnd(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdCursorParEnd(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdCursorParEnd",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdCursorParEnd. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdCursorParEnd. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdCursorParEnd(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdBlockBeg(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdBlockBeg(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdBlockBeg(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdBlockBeg",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdBlockBeg. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdBlockBeg. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdBlockBeg(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdBlockEnd(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdBlockEnd(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdBlockEnd(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdBlockEnd",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdBlockEnd. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdBlockEnd. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdBlockEnd(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdGotoMatching(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdGotoMatching(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdGotoMatching(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdGotoMatching",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdGotoMatching. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdGotoMatching. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdGotoMatching(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdGotoSelected(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdGotoSelected(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdGotoSelected(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdGotoSelected",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdGotoSelected. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdGotoSelected. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdGotoSelected(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdGotoLine(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdGotoLine(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdGotoLine(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdGotoLine",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdGotoLine. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdGotoLine. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdGotoLine(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdScrollUp(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdScrollUp(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdScrollUp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdScrollUp",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdScrollUp. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdScrollUp. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdScrollUp(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdScrollDown(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdScrollDown(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdScrollDown(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdScrollDown",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdScrollDown. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdScrollDown. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdScrollDown(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdMark(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdMark(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdMark(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdMark",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdMark. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdMark. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdMark(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdExtend(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdExtend(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdExtend(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdExtend",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdExtend. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdExtend. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdExtend(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdOverstString(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdOverstString(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdOverstString(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdOverstString",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdOverstString. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdOverstString. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdOverstString(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdInsertString(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdInsertString(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdInsertString(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdInsertString",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdInsertString. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdInsertString. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdInsertString(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdInsertNewline(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdInsertNewline(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdInsertNewline(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdInsertNewline",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdInsertNewline. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdInsertNewline. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdInsertNewline(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdInsertTab(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdInsertTab(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdInsertTab(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdInsertTab",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdInsertTab. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdInsertTab. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdInsertTab(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdCutSel(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdCutSel(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdCutSel(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdCutSel",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdCutSel. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdCutSel. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdCutSel(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdCopySel(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdCopySel(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdCopySel(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdCopySel",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdCopySel. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdCopySel. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdCopySel(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdPasteSel(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdPasteSel(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdPasteSel(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdPasteSel",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdPasteSel. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdPasteSel. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdPasteSel(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdDeleteSel(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdDeleteSel(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdDeleteSel(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdDeleteSel",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdDeleteSel. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdDeleteSel. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdDeleteSel(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdChangeCase(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdChangeCase(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdChangeCase(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdChangeCase",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdChangeCase. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdChangeCase. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdChangeCase(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdShiftText(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdShiftText(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdShiftText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdShiftText",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdShiftText. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdShiftText. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdShiftText(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdSelectChar(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSelectChar(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdSelectChar(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdSelectChar",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdSelectChar. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdSelectChar. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdSelectChar(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdSelectWord(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSelectWord(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdSelectWord(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdSelectWord",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdSelectWord. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdSelectWord. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdSelectWord(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdSelectLine(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSelectLine(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdSelectLine(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdSelectLine",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdSelectLine. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdSelectLine. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdSelectLine(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdSelectAll(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSelectAll(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdSelectAll(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdSelectAll",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdSelectAll. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdSelectAll. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdSelectAll(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdSelectMatching(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSelectMatching(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdSelectMatching(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdSelectMatching",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdSelectMatching. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdSelectMatching. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdSelectMatching(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdSelectBlock(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSelectBlock(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdSelectBlock(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdSelectBlock",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdSelectBlock. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdSelectBlock. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdSelectBlock(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdDeselectAll(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdDeselectAll(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdDeselectAll(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdDeselectAll",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdDeselectAll. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdDeselectAll. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdDeselectAll(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdBackspace(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdBackspace(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdBackspace(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdBackspace",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdBackspace. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdBackspace. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdBackspace(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdBackspaceWord(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdBackspaceWord(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdBackspaceWord(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdBackspaceWord",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdBackspaceWord. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdBackspaceWord. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdBackspaceWord(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdBackspaceBol(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdBackspaceBol(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdBackspaceBol(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdBackspaceBol",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdBackspaceBol. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdBackspaceBol. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdBackspaceBol(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdDelete(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdDelete(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdDelete(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdDelete",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdDelete. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdDelete. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdDelete(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdDeleteWord(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdDeleteWord(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdDeleteWord(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdDeleteWord",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdDeleteWord. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdDeleteWord. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdDeleteWord(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdDeleteEol(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdDeleteEol(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdDeleteEol(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdDeleteEol",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdDeleteEol. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdDeleteEol. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdDeleteEol(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Text_onCmdDeleteLine(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdDeleteLine(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_onCmdDeleteLine(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Text_onCmdDeleteLine",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_onCmdDeleteLine. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_onCmdDeleteLine. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Text_onCmdDeleteLine(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define new_FX_Text(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7) (new FXText(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7))
static PyObject *_wrap_new_FX_Text(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _result;
    FXComposite * _arg0;
    FXObject * _arg1 = (FXObject *) NULL;
    FXSelector  _arg2 = (FXSelector ) 0;
    FXuint  _arg3 = (FXuint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "p","tgt","sel","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|Oiiiiii:new_FX_Text",_kwnames,&_argo0,&_obj1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FX_Text. Expected _FXComposite_p.");
        return NULL;
        }
    }
    if (_obj1)
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXText *)new_FX_Text(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXText_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_Text_moveContents(_swigobj,_swigarg0,_swigarg1)  (_swigobj->moveContents(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_Text_moveContents(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FX_Text_moveContents",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_moveContents. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_moveContents(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_setMarginTop(_swigobj,_swigarg0)  (_swigobj->setMarginTop(_swigarg0))
static PyObject *_wrap_FX_Text_setMarginTop(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pt", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Text_setMarginTop",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_setMarginTop. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_setMarginTop(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_getMarginTop(_swigobj)  (_swigobj->getMarginTop())
static PyObject *_wrap_FX_Text_getMarginTop(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Text_getMarginTop",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_getMarginTop. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Text_getMarginTop(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_setMarginBottom(_swigobj,_swigarg0)  (_swigobj->setMarginBottom(_swigarg0))
static PyObject *_wrap_FX_Text_setMarginBottom(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pb", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Text_setMarginBottom",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_setMarginBottom. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_setMarginBottom(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_getMarginBottom(_swigobj)  (_swigobj->getMarginBottom())
static PyObject *_wrap_FX_Text_getMarginBottom(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Text_getMarginBottom",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_getMarginBottom. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Text_getMarginBottom(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_setMarginLeft(_swigobj,_swigarg0)  (_swigobj->setMarginLeft(_swigarg0))
static PyObject *_wrap_FX_Text_setMarginLeft(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pl", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Text_setMarginLeft",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_setMarginLeft. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_setMarginLeft(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_getMarginLeft(_swigobj)  (_swigobj->getMarginLeft())
static PyObject *_wrap_FX_Text_getMarginLeft(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Text_getMarginLeft",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_getMarginLeft. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Text_getMarginLeft(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_setMarginRight(_swigobj,_swigarg0)  (_swigobj->setMarginRight(_swigarg0))
static PyObject *_wrap_FX_Text_setMarginRight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Text_setMarginRight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_setMarginRight. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_setMarginRight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_getMarginRight(_swigobj)  (_swigobj->getMarginRight())
static PyObject *_wrap_FX_Text_getMarginRight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Text_getMarginRight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_getMarginRight. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Text_getMarginRight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_getWrapColumns(_swigobj)  (_swigobj->getWrapColumns())
static PyObject *_wrap_FX_Text_getWrapColumns(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Text_getWrapColumns",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_getWrapColumns. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Text_getWrapColumns(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_setWrapColumns(_swigobj,_swigarg0)  (_swigobj->setWrapColumns(_swigarg0))
static PyObject *_wrap_FX_Text_setWrapColumns(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","cols", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Text_setWrapColumns",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_setWrapColumns. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_setWrapColumns(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_getTabColumns(_swigobj)  (_swigobj->getTabColumns())
static PyObject *_wrap_FX_Text_getTabColumns(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Text_getTabColumns",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_getTabColumns. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Text_getTabColumns(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_setTabColumns(_swigobj,_swigarg0)  (_swigobj->setTabColumns(_swigarg0))
static PyObject *_wrap_FX_Text_setTabColumns(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","cols", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Text_setTabColumns",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_setTabColumns. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_setTabColumns(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_getBarColumns(_swigobj)  (_swigobj->getBarColumns())
static PyObject *_wrap_FX_Text_getBarColumns(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Text_getBarColumns",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_getBarColumns. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Text_getBarColumns(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_setBarColumns(_swigobj,_swigarg0)  (_swigobj->setBarColumns(_swigarg0))
static PyObject *_wrap_FX_Text_setBarColumns(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","cols", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Text_setBarColumns",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_setBarColumns. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_setBarColumns(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_isModified(_swigobj)  (_swigobj->isModified())
static PyObject *_wrap_FX_Text_isModified(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Text_isModified",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_isModified. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_Text_isModified(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_Text_setModified(_swigobj,_swigarg0)  (_swigobj->setModified(_swigarg0))
static PyObject *_wrap_FX_Text_setModified(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","mod", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FX_Text_setModified",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_setModified. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_setModified(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_isEditable(_swigobj)  (_swigobj->isEditable())
static PyObject *_wrap_FX_Text_isEditable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Text_isEditable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_isEditable. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_Text_isEditable(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_Text_setEditable(_swigobj,_swigarg0)  (_swigobj->setEditable(_swigarg0))
static PyObject *_wrap_FX_Text_setEditable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","edit", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FX_Text_setEditable",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_setEditable. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_setEditable(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_setStyled(_swigobj,_swigarg0)  (_swigobj->setStyled(_swigarg0))
static PyObject *_wrap_FX_Text_setStyled(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","styled", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FX_Text_setStyled",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_setStyled. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_setStyled(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_isStyled(_swigobj)  (_swigobj->isStyled())
static PyObject *_wrap_FX_Text_isStyled(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Text_isStyled",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_isStyled. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_Text_isStyled(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_Text_setDelimiters(_swigobj,_swigarg0)  (_swigobj->setDelimiters(_swigarg0))
static PyObject *_wrap_FX_Text_setDelimiters(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","delims", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_Text_setDelimiters",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_setDelimiters. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_setDelimiters(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_Text_getDelimiters(_swigobj)  (_swigobj->getDelimiters())
static PyObject *_wrap_FX_Text_getDelimiters(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXCharset * _result;
    FXText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Text_getDelimiters",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_getDelimiters. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXCharset (FX_Text_getDelimiters(_arg0));

    FXPy_END_ALLOW_THREADS
}    SWIG_MakePtr(_ptemp, (void *) _result,"_FXCharset_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define FX_Text_setFont(_swigobj,_swigarg0)  (_swigobj->setFont(_swigarg0))
static PyObject *_wrap_FX_Text_setFont(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXFont * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","fnt", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_Text_setFont",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_setFont. Expected _FXText_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXFont_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_Text_setFont. Expected _FXFont_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_setFont(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_getFont(_swigobj)  (_swigobj->getFont())
static PyObject *_wrap_FX_Text_getFont(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFont * _result;
    FXText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Text_getFont",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_getFont. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXFont *)FX_Text_getFont(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_Text_setTextColor(_swigobj,_swigarg0)  (_swigobj->setTextColor(_swigarg0))
static PyObject *_wrap_FX_Text_setTextColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Text_setTextColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_setTextColor. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_setTextColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_getTextColor(_swigobj)  (_swigobj->getTextColor())
static PyObject *_wrap_FX_Text_getTextColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Text_getTextColor",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_getTextColor. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FX_Text_getTextColor(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_setSelBackColor(_swigobj,_swigarg0)  (_swigobj->setSelBackColor(_swigarg0))
static PyObject *_wrap_FX_Text_setSelBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Text_setSelBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_setSelBackColor. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_setSelBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_getSelBackColor(_swigobj)  (_swigobj->getSelBackColor())
static PyObject *_wrap_FX_Text_getSelBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Text_getSelBackColor",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_getSelBackColor. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FX_Text_getSelBackColor(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_setSelTextColor(_swigobj,_swigarg0)  (_swigobj->setSelTextColor(_swigarg0))
static PyObject *_wrap_FX_Text_setSelTextColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Text_setSelTextColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_setSelTextColor. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_setSelTextColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_getSelTextColor(_swigobj)  (_swigobj->getSelTextColor())
static PyObject *_wrap_FX_Text_getSelTextColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Text_getSelTextColor",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_getSelTextColor. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FX_Text_getSelTextColor(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_setHiliteTextColor(_swigobj,_swigarg0)  (_swigobj->setHiliteTextColor(_swigarg0))
static PyObject *_wrap_FX_Text_setHiliteTextColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Text_setHiliteTextColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_setHiliteTextColor. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_setHiliteTextColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_getHiliteTextColor(_swigobj)  (_swigobj->getHiliteTextColor())
static PyObject *_wrap_FX_Text_getHiliteTextColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Text_getHiliteTextColor",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_getHiliteTextColor. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FX_Text_getHiliteTextColor(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_setHiliteBackColor(_swigobj,_swigarg0)  (_swigobj->setHiliteBackColor(_swigarg0))
static PyObject *_wrap_FX_Text_setHiliteBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Text_setHiliteBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_setHiliteBackColor. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_setHiliteBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_getHiliteBackColor(_swigobj)  (_swigobj->getHiliteBackColor())
static PyObject *_wrap_FX_Text_getHiliteBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Text_getHiliteBackColor",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_getHiliteBackColor. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FX_Text_getHiliteBackColor(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_setActiveBackColor(_swigobj,_swigarg0)  (_swigobj->setActiveBackColor(_swigarg0))
static PyObject *_wrap_FX_Text_setActiveBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Text_setActiveBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_setActiveBackColor. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_setActiveBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_getActiveBackColor(_swigobj)  (_swigobj->getActiveBackColor())
static PyObject *_wrap_FX_Text_getActiveBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Text_getActiveBackColor",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_getActiveBackColor. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FX_Text_getActiveBackColor(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_setCursorColor(_swigobj,_swigarg0)  (_swigobj->setCursorColor(_swigarg0))
static PyObject *_wrap_FX_Text_setCursorColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Text_setCursorColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_setCursorColor. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_setCursorColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_getCursorColor(_swigobj)  (_swigobj->getCursorColor())
static PyObject *_wrap_FX_Text_getCursorColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Text_getCursorColor",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_getCursorColor. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FX_Text_getCursorColor(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_setNumberColor(_swigobj,_swigarg0)  (_swigobj->setNumberColor(_swigarg0))
static PyObject *_wrap_FX_Text_setNumberColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Text_setNumberColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_setNumberColor. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_setNumberColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_getNumberColor(_swigobj)  (_swigobj->getNumberColor())
static PyObject *_wrap_FX_Text_getNumberColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Text_getNumberColor",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_getNumberColor. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FX_Text_getNumberColor(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_setBarColor(_swigobj,_swigarg0)  (_swigobj->setBarColor(_swigarg0))
static PyObject *_wrap_FX_Text_setBarColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Text_setBarColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_setBarColor. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_setBarColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_getBarColor(_swigobj)  (_swigobj->getBarColor())
static PyObject *_wrap_FX_Text_getBarColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Text_getBarColor",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_getBarColor. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FX_Text_getBarColor(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_setHelpText(_swigobj,_swigarg0)  (_swigobj->setHelpText(_swigarg0))
static PyObject *_wrap_FX_Text_setHelpText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","text", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_Text_setHelpText",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_setHelpText. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_setHelpText(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_Text_getHelpText(_swigobj)  (_swigobj->getHelpText())
static PyObject *_wrap_FX_Text_getHelpText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Text_getHelpText",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_getHelpText. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_Text_getHelpText(_arg0));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

#define FX_Text_setTipText(_swigobj,_swigarg0)  (_swigobj->setTipText(_swigarg0))
static PyObject *_wrap_FX_Text_setTipText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","text", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_Text_setTipText",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_setTipText. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_setTipText(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_Text_getTipText(_swigobj)  (_swigobj->getTipText())
static PyObject *_wrap_FX_Text_getTipText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Text_getTipText",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_getTipText. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_Text_getTipText(_arg0));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

#define FX_Text_getChar(_swigobj,_swigarg0)  (_swigobj->getChar(_swigarg0))
static PyObject *_wrap_FX_Text_getChar(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXText * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pos", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Text_getChar",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_getChar. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Text_getChar(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_getStyle(_swigobj,_swigarg0)  (_swigobj->getStyle(_swigarg0))
static PyObject *_wrap_FX_Text_getStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXText * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pos", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Text_getStyle",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_getStyle. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Text_getStyle(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static PyObject * FXText_extractText(FXText *self,FXint  pos,FXint  n) {
      FXchar *buffer;
      PyObject *result=NULL;
      if(FXMALLOC(&buffer,FXchar,n+1)){
        self->extractText(buffer,pos,n);
        buffer[n]='\0';
        FXbool doSave=FXPyRestoreThread();
        result=PyString_FromString(buffer);
        FXPySaveThread(doSave);
        FXFREE(&buffer);
        }
      else {
	PyErr_SetString(PyExc_MemoryError,"out of memory");
        }
      return result;
      }
static PyObject *_wrap_FX_Text_extractText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    PyObject * _result;
    FXText * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pos","n", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FX_Text_extractText",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_extractText. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (PyObject *)FXText_extractText(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}{
  _resultobj = _result;
}
    return _resultobj;
}

static PyObject * FXText_extractStyle(FXText *self,FXint  pos,FXint  n) {
      FXchar *buffer;
      PyObject *result=NULL;
      if(FXMALLOC(&buffer,FXchar,n+1)){
        self->extractStyle(buffer,pos,n);
        buffer[n]='\0';
        FXbool doSave=FXPyRestoreThread();
        result=PyString_FromString(buffer);
        FXPySaveThread(doSave);
        FXFREE(&buffer);
        }
      else {
	PyErr_SetString(PyExc_MemoryError,"out of memory");
        }
      return result;
      }
static PyObject *_wrap_FX_Text_extractStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    PyObject * _result;
    FXText * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pos","n", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FX_Text_extractStyle",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_extractStyle. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (PyObject *)FXText_extractStyle(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}{
  _resultobj = _result;
}
    return _resultobj;
}

#define FX_Text_replaceText(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4)  (_swigobj->replaceText(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4))
static PyObject *_wrap_FX_Text_replaceText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXchar * _arg3;
    FXint  _arg4;
    FXbool  _arg5 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pos","m","text","n","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiisi|b:FX_Text_replaceText",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4,&_arg5)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_replaceText. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_replaceText(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_replaceStyledText(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5)  (_swigobj->replaceStyledText(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5))
static PyObject *_wrap_FX_Text_replaceStyledText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXchar * _arg3;
    FXint  _arg4;
    FXint  _arg5 = (FXint ) 0;
    FXbool  _arg6 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pos","m","text","n","style","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiisi|ib:FX_Text_replaceStyledText",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_replaceStyledText. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_replaceStyledText(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_appendText(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->appendText(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_appendText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXchar * _arg1;
    FXint  _arg2;
    FXbool  _arg3 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","text","n","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Osi|b:FX_Text_appendText",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_appendText. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_appendText(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_appendStyledText(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->appendStyledText(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FX_Text_appendStyledText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXchar * _arg1;
    FXint  _arg2;
    FXint  _arg3 = (FXint ) 0;
    FXbool  _arg4 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","text","n","style","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Osi|ib:FX_Text_appendStyledText",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_appendStyledText. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_appendStyledText(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_insertText(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->insertText(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FX_Text_insertText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXint  _arg1;
    FXchar * _arg2;
    FXint  _arg3;
    FXbool  _arg4 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pos","text","n","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oisi|b:FX_Text_insertText",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_insertText. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_insertText(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_insertStyledText(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4)  (_swigobj->insertStyledText(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4))
static PyObject *_wrap_FX_Text_insertStyledText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXint  _arg1;
    FXchar * _arg2;
    FXint  _arg3;
    FXint  _arg4 = (FXint ) 0;
    FXbool  _arg5 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pos","text","n","style","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oisi|ib:FX_Text_insertStyledText",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4,&_arg5)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_insertStyledText. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_insertStyledText(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_removeText(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->removeText(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_removeText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXbool  _arg3 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pos","n","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii|b:FX_Text_removeText",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_removeText. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_removeText(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_changeStyle(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->changeStyle(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_changeStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pos","n","style", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiii:FX_Text_changeStyle",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_changeStyle. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_changeStyle(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_setText(_swigobj,_swigarg0,_swigarg1)  (_swigobj->setText(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_Text_setText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXString * _arg1;
    FXbool  _arg2 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","text","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|b:FX_Text_setText",_kwnames,&_argo0,&_obj1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_setText. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_setText(_arg0,*_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_Text_setStyledText(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->setStyledText(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_setStyledText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXString * _arg1;
    FXint  _arg2 = (FXint ) 0;
    FXbool  _arg3 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","text","style","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|ib:FX_Text_setStyledText",_kwnames,&_argo0,&_obj1,&_arg2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_setStyledText. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_setStyledText(_arg0,*_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_Text_getText(_swigobj)  (_swigobj->getText())
static PyObject *_wrap_FX_Text_getText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Text_getText",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_getText. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_Text_getText(_arg0));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

#define FX_Text_getLength(_swigobj)  (_swigobj->getLength())
static PyObject *_wrap_FX_Text_getLength(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Text_getLength",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_getLength. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Text_getLength(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_shiftText(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->shiftText(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FX_Text_shiftText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXText * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXbool  _arg4 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","start","end","amount","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiii|b:FX_Text_shiftText",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_shiftText. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Text_shiftText(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_findText(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5)  (_swigobj->findText(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5))
static PyObject *_wrap_FX_Text_findText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXText * _arg0;
    FXString * _arg1;
    FXint * _arg2 = (FXint *) NULL;
    FXint * _arg3 = (FXint *) NULL;
    FXint  _arg4 = (FXint ) 0;
    FXuint  _arg5 = (FXuint ) SEARCH_FORWARD|SEARCH_WRAP|SEARCH_EXACT;
    FXint  _arg6 = (FXint ) 1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo2 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","string","beg","end","start","flags","npar", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|OOiii:FX_Text_findText",_kwnames,&_argo0,&_obj1,&_argo2,&_argo3,&_arg4,&_arg5,&_arg6)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_findText. Expected _FXText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
    if (_argo2) {
        if (_argo2 == Py_None) { _arg2 = NULL; }
        else if (SWIG_GetPtrObj(_argo2,(void **) &_arg2,"_FXint_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of FX_Text_findText. Expected _FXint_p.");
        return NULL;
        }
    }
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,"_FXint_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Text_findText. Expected _FXint_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_Text_findText(_arg0,*_arg1,_arg2,_arg3,_arg4,_arg5,_arg6);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_Text_isPosSelected(_swigobj,_swigarg0)  (_swigobj->isPosSelected(_swigarg0))
static PyObject *_wrap_FX_Text_isPosSelected(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXText * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pos", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Text_isPosSelected",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_isPosSelected. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_Text_isPosSelected(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_Text_isPosVisible(_swigobj,_swigarg0)  (_swigobj->isPosVisible(_swigarg0))
static PyObject *_wrap_FX_Text_isPosVisible(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXText * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pos", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Text_isPosVisible",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_isPosVisible. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_Text_isPosVisible(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_Text_getPosAt(_swigobj,_swigarg0,_swigarg1)  (_swigobj->getPosAt(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_Text_getPosAt(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXText * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FX_Text_getPosAt",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_getPosAt. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Text_getPosAt(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_lineStart(_swigobj,_swigarg0)  (_swigobj->lineStart(_swigarg0))
static PyObject *_wrap_FX_Text_lineStart(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXText * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pos", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Text_lineStart",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_lineStart. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Text_lineStart(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_lineEnd(_swigobj,_swigarg0)  (_swigobj->lineEnd(_swigarg0))
static PyObject *_wrap_FX_Text_lineEnd(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXText * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pos", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Text_lineEnd",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_lineEnd. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Text_lineEnd(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_nextLine(_swigobj,_swigarg0,_swigarg1)  (_swigobj->nextLine(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_Text_nextLine(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXText * _arg0;
    FXint  _arg1;
    FXint  _arg2 = (FXint ) 1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pos","nl", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi|i:FX_Text_nextLine",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_nextLine. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Text_nextLine(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_prevLine(_swigobj,_swigarg0,_swigarg1)  (_swigobj->prevLine(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_Text_prevLine(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXText * _arg0;
    FXint  _arg1;
    FXint  _arg2 = (FXint ) 1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pos","nl", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi|i:FX_Text_prevLine",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_prevLine. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Text_prevLine(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_rowStart(_swigobj,_swigarg0)  (_swigobj->rowStart(_swigarg0))
static PyObject *_wrap_FX_Text_rowStart(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXText * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pos", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Text_rowStart",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_rowStart. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Text_rowStart(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_rowEnd(_swigobj,_swigarg0)  (_swigobj->rowEnd(_swigarg0))
static PyObject *_wrap_FX_Text_rowEnd(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXText * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pos", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Text_rowEnd",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_rowEnd. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Text_rowEnd(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_nextRow(_swigobj,_swigarg0,_swigarg1)  (_swigobj->nextRow(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_Text_nextRow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXText * _arg0;
    FXint  _arg1;
    FXint  _arg2 = (FXint ) 1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pos","nr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi|i:FX_Text_nextRow",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_nextRow. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Text_nextRow(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_prevRow(_swigobj,_swigarg0,_swigarg1)  (_swigobj->prevRow(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_Text_prevRow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXText * _arg0;
    FXint  _arg1;
    FXint  _arg2 = (FXint ) 1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pos","nr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi|i:FX_Text_prevRow",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_prevRow. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Text_prevRow(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_leftWord(_swigobj,_swigarg0)  (_swigobj->leftWord(_swigarg0))
static PyObject *_wrap_FX_Text_leftWord(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXText * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pos", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Text_leftWord",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_leftWord. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Text_leftWord(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_rightWord(_swigobj,_swigarg0)  (_swigobj->rightWord(_swigarg0))
static PyObject *_wrap_FX_Text_rightWord(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXText * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pos", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Text_rightWord",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_rightWord. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Text_rightWord(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_wordStart(_swigobj,_swigarg0)  (_swigobj->wordStart(_swigarg0))
static PyObject *_wrap_FX_Text_wordStart(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXText * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pos", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Text_wordStart",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_wordStart. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Text_wordStart(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_wordEnd(_swigobj,_swigarg0)  (_swigobj->wordEnd(_swigarg0))
static PyObject *_wrap_FX_Text_wordEnd(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXText * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pos", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Text_wordEnd",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_wordEnd. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Text_wordEnd(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_validPos(_swigobj,_swigarg0)  (_swigobj->validPos(_swigarg0))
static PyObject *_wrap_FX_Text_validPos(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXText * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pos", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Text_validPos",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_validPos. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Text_validPos(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_setTopLine(_swigobj,_swigarg0)  (_swigobj->setTopLine(_swigarg0))
static PyObject *_wrap_FX_Text_setTopLine(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pos", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Text_setTopLine",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_setTopLine. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_setTopLine(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_getTopLine(_swigobj)  (_swigobj->getTopLine())
static PyObject *_wrap_FX_Text_getTopLine(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Text_getTopLine",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_getTopLine. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Text_getTopLine(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_setBottomLine(_swigobj,_swigarg0)  (_swigobj->setBottomLine(_swigarg0))
static PyObject *_wrap_FX_Text_setBottomLine(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pos", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Text_setBottomLine",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_setBottomLine. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_setBottomLine(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_getBottomLine(_swigobj)  (_swigobj->getBottomLine())
static PyObject *_wrap_FX_Text_getBottomLine(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Text_getBottomLine",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_getBottomLine. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Text_getBottomLine(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_setCenterLine(_swigobj,_swigarg0)  (_swigobj->setCenterLine(_swigarg0))
static PyObject *_wrap_FX_Text_setCenterLine(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pos", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Text_setCenterLine",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_setCenterLine. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_setCenterLine(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_setAnchorPos(_swigobj,_swigarg0)  (_swigobj->setAnchorPos(_swigarg0))
static PyObject *_wrap_FX_Text_setAnchorPos(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pos", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Text_setAnchorPos",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_setAnchorPos. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_setAnchorPos(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_getAnchorPos(_swigobj)  (_swigobj->getAnchorPos())
static PyObject *_wrap_FX_Text_getAnchorPos(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Text_getAnchorPos",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_getAnchorPos. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Text_getAnchorPos(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_setCursorPos(_swigobj,_swigarg0,_swigarg1)  (_swigobj->setCursorPos(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_Text_setCursorPos(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXint  _arg1;
    FXbool  _arg2 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pos","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi|b:FX_Text_setCursorPos",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_setCursorPos. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_setCursorPos(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_setCursorRow(_swigobj,_swigarg0,_swigarg1)  (_swigobj->setCursorRow(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_Text_setCursorRow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXint  _arg1;
    FXbool  _arg2 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","row","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi|b:FX_Text_setCursorRow",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_setCursorRow. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_setCursorRow(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_getCursorRow(_swigobj)  (_swigobj->getCursorRow())
static PyObject *_wrap_FX_Text_getCursorRow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Text_getCursorRow",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_getCursorRow. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Text_getCursorRow(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_setCursorCol(_swigobj,_swigarg0,_swigarg1)  (_swigobj->setCursorCol(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_Text_setCursorCol(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXint  _arg1;
    FXbool  _arg2 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","col","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi|b:FX_Text_setCursorCol",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_setCursorCol. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_setCursorCol(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_getCursorCol(_swigobj)  (_swigobj->getCursorCol())
static PyObject *_wrap_FX_Text_getCursorCol(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Text_getCursorCol",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_getCursorCol. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Text_getCursorCol(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_getCursorPos(_swigobj)  (_swigobj->getCursorPos())
static PyObject *_wrap_FX_Text_getCursorPos(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Text_getCursorPos",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_getCursorPos. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Text_getCursorPos(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_getSelStartPos(_swigobj)  (_swigobj->getSelStartPos())
static PyObject *_wrap_FX_Text_getSelStartPos(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Text_getSelStartPos",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_getSelStartPos. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Text_getSelStartPos(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_getSelEndPos(_swigobj)  (_swigobj->getSelEndPos())
static PyObject *_wrap_FX_Text_getSelEndPos(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Text_getSelEndPos",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_getSelEndPos. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Text_getSelEndPos(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_selectAll(_swigobj,_swigarg0)  (_swigobj->selectAll(_swigarg0))
static PyObject *_wrap_FX_Text_selectAll(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXText * _arg0;
    FXbool  _arg1 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FX_Text_selectAll",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_selectAll. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_Text_selectAll(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_Text_setSelection(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->setSelection(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_setSelection(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXText * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXbool  _arg3 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pos","len","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii|b:FX_Text_setSelection",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_setSelection. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_Text_setSelection(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_Text_extendSelection(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->extendSelection(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Text_extendSelection(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXText * _arg0;
    FXint  _arg1;
    FXTextSelectionMode  _arg2 = (FXTextSelectionMode ) (SELECT_CHARS);
    FXbool  _arg3 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pos","select","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi|ib:FX_Text_extendSelection",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_extendSelection. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_Text_extendSelection(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_Text_killSelection(_swigobj,_swigarg0)  (_swigobj->killSelection(_swigarg0))
static PyObject *_wrap_FX_Text_killSelection(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXText * _arg0;
    FXbool  _arg1 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FX_Text_killSelection",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_killSelection. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_Text_killSelection(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_Text_setHighlight(_swigobj,_swigarg0,_swigarg1)  (_swigobj->setHighlight(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_Text_setHighlight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXText * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","start","len", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FX_Text_setHighlight",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_setHighlight. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_Text_setHighlight(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_Text_killHighlight(_swigobj)  (_swigobj->killHighlight())
static PyObject *_wrap_FX_Text_killHighlight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Text_killHighlight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_killHighlight. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_Text_killHighlight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_Text_makePositionVisible(_swigobj,_swigarg0)  (_swigobj->makePositionVisible(_swigarg0))
static PyObject *_wrap_FX_Text_makePositionVisible(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pos", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Text_makePositionVisible",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_makePositionVisible. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_makePositionVisible(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_setTextStyle(_swigobj,_swigarg0)  (_swigobj->setTextStyle(_swigarg0))
static PyObject *_wrap_FX_Text_setTextStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","style", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Text_setTextStyle",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_setTextStyle. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_setTextStyle(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_getTextStyle(_swigobj)  (_swigobj->getTextStyle())
static PyObject *_wrap_FX_Text_getTextStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Text_getTextStyle",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_getTextStyle. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )FX_Text_getTextStyle(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_setVisRows(_swigobj,_swigarg0)  (_swigobj->setVisRows(_swigarg0))
static PyObject *_wrap_FX_Text_setVisRows(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","rows", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Text_setVisRows",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_setVisRows. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_setVisRows(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_getVisRows(_swigobj)  (_swigobj->getVisRows())
static PyObject *_wrap_FX_Text_getVisRows(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Text_getVisRows",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_getVisRows. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Text_getVisRows(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_setVisCols(_swigobj,_swigarg0)  (_swigobj->setVisCols(_swigarg0))
static PyObject *_wrap_FX_Text_setVisCols(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","cols", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Text_setVisCols",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_setVisCols. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_setVisCols(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_getVisCols(_swigobj)  (_swigobj->getVisCols())
static PyObject *_wrap_FX_Text_getVisCols(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Text_getVisCols",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_getVisCols. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Text_getVisCols(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_setHiliteMatchTime(_swigobj,_swigarg0)  (_swigobj->setHiliteMatchTime(_swigarg0))
static PyObject *_wrap_FX_Text_setHiliteMatchTime(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","t", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Text_setHiliteMatchTime",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_setHiliteMatchTime. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_setHiliteMatchTime(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_getHiliteMatchTime(_swigobj)  (_swigobj->getHiliteMatchTime())
static PyObject *_wrap_FX_Text_getHiliteMatchTime(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Text_getHiliteMatchTime",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_getHiliteMatchTime. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )FX_Text_getHiliteMatchTime(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Text_setHiliteStyles(_swigobj,_swigarg0)  (_swigobj->setHiliteStyles(_swigarg0))
static PyObject *_wrap_FX_Text_setHiliteStyles(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXText * _arg0;
    FXHiliteStyle * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","styles", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_Text_setHiliteStyles",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_setHiliteStyles. Expected _FXText_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXHiliteStyle_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_Text_setHiliteStyles. Expected _FXHiliteStyle_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Text_setHiliteStyles(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Text_getHiliteStyles(_swigobj)  (_swigobj->getHiliteStyles())
static PyObject *_wrap_FX_Text_getHiliteStyles(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXHiliteStyle * _result;
    FXText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Text_getHiliteStyles",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Text_getHiliteStyles. Expected _FXText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXHiliteStyle *)FX_Text_getHiliteStyles(_arg0);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXHiliteStyle_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

static void *SwigFXPyTextToFXText(void *ptr) {
    FXPyText *src;
    FXText *dest;
    src = (FXPyText *) ptr;
    dest = (FXText *) src;
    return (void *) dest;
}

static void *SwigFXPyTextToFXScrollArea(void *ptr) {
    FXPyText *src;
    FXScrollArea *dest;
    src = (FXPyText *) ptr;
    dest = (FXScrollArea *) src;
    return (void *) dest;
}

static void *SwigFXPyTextToFXComposite(void *ptr) {
    FXPyText *src;
    FXComposite *dest;
    src = (FXPyText *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXPyTextToFXWindow(void *ptr) {
    FXPyText *src;
    FXWindow *dest;
    src = (FXPyText *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyTextToFXDrawable(void *ptr) {
    FXPyText *src;
    FXDrawable *dest;
    src = (FXPyText *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPyTextToFXId(void *ptr) {
    FXPyText *src;
    FXId *dest;
    src = (FXPyText *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPyTextToFXObject(void *ptr) {
    FXPyText *src;
    FXObject *dest;
    src = (FXPyText *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXText(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7) (new FXPyText(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7))
static PyObject *_wrap_new_FXText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyText * _result;
    FXComposite * _arg0;
    FXObject * _arg1 = (FXObject *) NULL;
    FXSelector  _arg2 = (FXSelector ) 0;
    FXuint  _arg3 = (FXuint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "p","tgt","sel","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|Oiiiiii:new_FXText",_kwnames,&_argo0,&_obj1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FXText. Expected _FXComposite_p.");
        return NULL;
        }
    }
    if (_obj1)
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyText *)new_FXText(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyText_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FXText_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXText_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyText * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXText_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXText_onDefault. Expected _FXPyText_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXText_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXText_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXText_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXText_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXText_create. Expected _FXPyText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXText_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXText_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXText_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXText_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXText_destroy. Expected _FXPyText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXText_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXText_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXText_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXText_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXText_detach. Expected _FXPyText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXText_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXText_resize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_resize(_swigarg0,_swigarg1))
static PyObject *_wrap_FXText_resize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyText * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXText_resize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXText_resize. Expected _FXPyText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXText_resize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXText_getDefaultWidth(_swigobj)  (_swigobj->_getDefaultWidth())
static PyObject *_wrap_FXText_getDefaultWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXText_getDefaultWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXText_getDefaultWidth. Expected _FXPyText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXText_getDefaultWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXText_getDefaultHeight(_swigobj)  (_swigobj->_getDefaultHeight())
static PyObject *_wrap_FXText_getDefaultHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXText_getDefaultHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXText_getDefaultHeight. Expected _FXPyText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXText_getDefaultHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXText_show(_swigobj)  (_swigobj->_show())
static PyObject *_wrap_FXText_show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXText_show",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXText_show. Expected _FXPyText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXText_show(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXText_hide(_swigobj)  (_swigobj->_hide())
static PyObject *_wrap_FXText_hide(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXText_hide",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXText_hide. Expected _FXPyText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXText_hide(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXText_enable(_swigobj)  (_swigobj->_enable())
static PyObject *_wrap_FXText_enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXText_enable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXText_enable. Expected _FXPyText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXText_enable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXText_disable(_swigobj)  (_swigobj->_disable())
static PyObject *_wrap_FXText_disable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXText_disable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXText_disable. Expected _FXPyText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXText_disable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXText_canFocus(_swigobj)  (_swigobj->_canFocus())
static PyObject *_wrap_FXText_canFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXText_canFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXText_canFocus. Expected _FXPyText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXText_canFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXText_setFocus(_swigobj)  (_swigobj->_setFocus())
static PyObject *_wrap_FXText_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXText_setFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXText_setFocus. Expected _FXPyText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXText_setFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXText_killFocus(_swigobj)  (_swigobj->_killFocus())
static PyObject *_wrap_FXText_killFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXText_killFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXText_killFocus. Expected _FXPyText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXText_killFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXText_setDefault(_swigobj,_swigarg0)  (_swigobj->_setDefault(_swigarg0))
static PyObject *_wrap_FXText_setDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyText * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FXText_setDefault",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXText_setDefault. Expected _FXPyText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXText_setDefault(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXText_recalc(_swigobj)  (_swigobj->_recalc())
static PyObject *_wrap_FXText_recalc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXText_recalc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXText_recalc. Expected _FXPyText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXText_recalc(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXText_layout(_swigobj)  (_swigobj->_layout())
static PyObject *_wrap_FXText_layout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXText_layout",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXText_layout. Expected _FXPyText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXText_layout(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXText_lower(_swigobj)  (_swigobj->_lowerWindow())
static PyObject *_wrap_FXText_lower(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXText_lower",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXText_lower. Expected _FXPyText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXText_lower(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXText_move(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_move(_swigarg0,_swigarg1))
static PyObject *_wrap_FXText_move(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyText * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXText_move",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXText_move. Expected _FXPyText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXText_move(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXText_position(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->_position(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FXText_position(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyText * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FXText_position",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXText_position. Expected _FXPyText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXText_position(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXText_isComposite(_swigobj)  (_swigobj->_isComposite())
static PyObject *_wrap_FXText_isComposite(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXText_isComposite",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXText_isComposite. Expected _FXPyText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXText_isComposite(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXText_contains(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_contains(_swigarg0,_swigarg1))
static PyObject *_wrap_FXText_contains(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyText * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXText_contains",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXText_contains. Expected _FXPyText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXText_contains(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXText_getWidthForHeight(_swigobj,_swigarg0)  (_swigobj->_getWidthForHeight(_swigarg0))
static PyObject *_wrap_FXText_getWidthForHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyText * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXText_getWidthForHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXText_getWidthForHeight. Expected _FXPyText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXText_getWidthForHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXText_getHeightForWidth(_swigobj,_swigarg0)  (_swigobj->_getHeightForWidth(_swigarg0))
static PyObject *_wrap_FXText_getHeightForWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyText * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXText_getHeightForWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXText_getHeightForWidth. Expected _FXPyText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXText_getHeightForWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXText_doesSaveUnder(_swigobj)  (_swigobj->_doesSaveUnder())
static PyObject *_wrap_FXText_doesSaveUnder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXText_doesSaveUnder",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXText_doesSaveUnder. Expected _FXPyText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXText_doesSaveUnder(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXText_reparent(_swigobj,_swigarg0)  (_swigobj->_reparent(_swigarg0))
static PyObject *_wrap_FXText_reparent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyText * _arg0;
    FXComposite * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","newparent", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXText_reparent",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXText_reparent. Expected _FXPyText_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXText_reparent. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXText_reparent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXText_setBackColor(_swigobj,_swigarg0)  (_swigobj->_setBackColor(_swigarg0))
static PyObject *_wrap_FXText_setBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyText * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXText_setBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXText_setBackColor. Expected _FXPyText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXText_setBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXText_getContentWidth(_swigobj)  (_swigobj->_getContentWidth())
static PyObject *_wrap_FXText_getContentWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXText_getContentWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXText_getContentWidth. Expected _FXPyText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXText_getContentWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXText_getContentHeight(_swigobj)  (_swigobj->_getContentHeight())
static PyObject *_wrap_FXText_getContentHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXText_getContentHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXText_getContentHeight. Expected _FXPyText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXText_getContentHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXText_getViewportWidth(_swigobj)  (_swigobj->_getViewportWidth())
static PyObject *_wrap_FXText_getViewportWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXText_getViewportWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXText_getViewportWidth. Expected _FXPyText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXText_getViewportWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXText_getViewportHeight(_swigobj)  (_swigobj->_getViewportHeight())
static PyObject *_wrap_FXText_getViewportHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyText * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXText_getViewportHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXText_getViewportHeight. Expected _FXPyText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXText_getViewportHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXText_moveContents(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_moveContents(_swigarg0,_swigarg1))
static PyObject *_wrap_FXText_moveContents(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyText * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXText_moveContents",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXText_moveContents. Expected _FXPyText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXText_moveContents(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXText_setCursorPos(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_setCursorPos(_swigarg0,_swigarg1))
static PyObject *_wrap_FXText_setCursorPos(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyText * _arg0;
    FXint  _arg1;
    FXbool  _arg2 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pos","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi|b:FXText_setCursorPos",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXText_setCursorPos. Expected _FXPyText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXText_setCursorPos(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXText_extendSelection(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_extendSelection(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXText_extendSelection(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyText * _arg0;
    FXint  _arg1;
    FXTextSelectionMode  _arg2 = (FXTextSelectionMode ) (SELECT_CHARS);
    FXbool  _arg3 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pos","mode","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi|ib:FXText_extendSelection",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXText_extendSelection. Expected _FXPyText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXText_extendSelection(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXText_killSelection(_swigobj,_swigarg0)  (_swigobj->_killSelection(_swigarg0))
static PyObject *_wrap_FXText_killSelection(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyText * _arg0;
    FXbool  _arg1 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FXText_killSelection",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyText_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXText_killSelection. Expected _FXPyText_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXText_killSelection(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

static PyMethodDef textcMethods[] = {
	 { "FXText_killSelection", (PyCFunction) _wrap_FXText_killSelection, METH_VARARGS | METH_KEYWORDS },
	 { "FXText_extendSelection", (PyCFunction) _wrap_FXText_extendSelection, METH_VARARGS | METH_KEYWORDS },
	 { "FXText_setCursorPos", (PyCFunction) _wrap_FXText_setCursorPos, METH_VARARGS | METH_KEYWORDS },
	 { "FXText_moveContents", (PyCFunction) _wrap_FXText_moveContents, METH_VARARGS | METH_KEYWORDS },
	 { "FXText_getViewportHeight", (PyCFunction) _wrap_FXText_getViewportHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXText_getViewportWidth", (PyCFunction) _wrap_FXText_getViewportWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXText_getContentHeight", (PyCFunction) _wrap_FXText_getContentHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXText_getContentWidth", (PyCFunction) _wrap_FXText_getContentWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXText_setBackColor", (PyCFunction) _wrap_FXText_setBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FXText_reparent", (PyCFunction) _wrap_FXText_reparent, METH_VARARGS | METH_KEYWORDS },
	 { "FXText_doesSaveUnder", (PyCFunction) _wrap_FXText_doesSaveUnder, METH_VARARGS | METH_KEYWORDS },
	 { "FXText_getHeightForWidth", (PyCFunction) _wrap_FXText_getHeightForWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXText_getWidthForHeight", (PyCFunction) _wrap_FXText_getWidthForHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXText_contains", (PyCFunction) _wrap_FXText_contains, METH_VARARGS | METH_KEYWORDS },
	 { "FXText_isComposite", (PyCFunction) _wrap_FXText_isComposite, METH_VARARGS | METH_KEYWORDS },
	 { "FXText_position", (PyCFunction) _wrap_FXText_position, METH_VARARGS | METH_KEYWORDS },
	 { "FXText_move", (PyCFunction) _wrap_FXText_move, METH_VARARGS | METH_KEYWORDS },
	 { "FXText_lower", (PyCFunction) _wrap_FXText_lower, METH_VARARGS | METH_KEYWORDS },
	 { "FXText_layout", (PyCFunction) _wrap_FXText_layout, METH_VARARGS | METH_KEYWORDS },
	 { "FXText_recalc", (PyCFunction) _wrap_FXText_recalc, METH_VARARGS | METH_KEYWORDS },
	 { "FXText_setDefault", (PyCFunction) _wrap_FXText_setDefault, METH_VARARGS | METH_KEYWORDS },
	 { "FXText_killFocus", (PyCFunction) _wrap_FXText_killFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXText_setFocus", (PyCFunction) _wrap_FXText_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXText_canFocus", (PyCFunction) _wrap_FXText_canFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXText_disable", (PyCFunction) _wrap_FXText_disable, METH_VARARGS | METH_KEYWORDS },
	 { "FXText_enable", (PyCFunction) _wrap_FXText_enable, METH_VARARGS | METH_KEYWORDS },
	 { "FXText_hide", (PyCFunction) _wrap_FXText_hide, METH_VARARGS | METH_KEYWORDS },
	 { "FXText_show", (PyCFunction) _wrap_FXText_show, METH_VARARGS | METH_KEYWORDS },
	 { "FXText_getDefaultHeight", (PyCFunction) _wrap_FXText_getDefaultHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXText_getDefaultWidth", (PyCFunction) _wrap_FXText_getDefaultWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXText_resize", (PyCFunction) _wrap_FXText_resize, METH_VARARGS | METH_KEYWORDS },
	 { "FXText_detach", (PyCFunction) _wrap_FXText_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXText_destroy", (PyCFunction) _wrap_FXText_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXText_create", (PyCFunction) _wrap_FXText_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXText_onDefault", (PyCFunction) _wrap_FXText_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXText", (PyCFunction) _wrap_new_FXText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_getHiliteStyles", (PyCFunction) _wrap_FX_Text_getHiliteStyles, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_setHiliteStyles", (PyCFunction) _wrap_FX_Text_setHiliteStyles, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_getHiliteMatchTime", (PyCFunction) _wrap_FX_Text_getHiliteMatchTime, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_setHiliteMatchTime", (PyCFunction) _wrap_FX_Text_setHiliteMatchTime, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_getVisCols", (PyCFunction) _wrap_FX_Text_getVisCols, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_setVisCols", (PyCFunction) _wrap_FX_Text_setVisCols, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_getVisRows", (PyCFunction) _wrap_FX_Text_getVisRows, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_setVisRows", (PyCFunction) _wrap_FX_Text_setVisRows, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_getTextStyle", (PyCFunction) _wrap_FX_Text_getTextStyle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_setTextStyle", (PyCFunction) _wrap_FX_Text_setTextStyle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_makePositionVisible", (PyCFunction) _wrap_FX_Text_makePositionVisible, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_killHighlight", (PyCFunction) _wrap_FX_Text_killHighlight, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_setHighlight", (PyCFunction) _wrap_FX_Text_setHighlight, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_killSelection", (PyCFunction) _wrap_FX_Text_killSelection, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_extendSelection", (PyCFunction) _wrap_FX_Text_extendSelection, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_setSelection", (PyCFunction) _wrap_FX_Text_setSelection, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_selectAll", (PyCFunction) _wrap_FX_Text_selectAll, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_getSelEndPos", (PyCFunction) _wrap_FX_Text_getSelEndPos, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_getSelStartPos", (PyCFunction) _wrap_FX_Text_getSelStartPos, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_getCursorPos", (PyCFunction) _wrap_FX_Text_getCursorPos, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_getCursorCol", (PyCFunction) _wrap_FX_Text_getCursorCol, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_setCursorCol", (PyCFunction) _wrap_FX_Text_setCursorCol, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_getCursorRow", (PyCFunction) _wrap_FX_Text_getCursorRow, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_setCursorRow", (PyCFunction) _wrap_FX_Text_setCursorRow, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_setCursorPos", (PyCFunction) _wrap_FX_Text_setCursorPos, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_getAnchorPos", (PyCFunction) _wrap_FX_Text_getAnchorPos, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_setAnchorPos", (PyCFunction) _wrap_FX_Text_setAnchorPos, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_setCenterLine", (PyCFunction) _wrap_FX_Text_setCenterLine, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_getBottomLine", (PyCFunction) _wrap_FX_Text_getBottomLine, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_setBottomLine", (PyCFunction) _wrap_FX_Text_setBottomLine, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_getTopLine", (PyCFunction) _wrap_FX_Text_getTopLine, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_setTopLine", (PyCFunction) _wrap_FX_Text_setTopLine, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_validPos", (PyCFunction) _wrap_FX_Text_validPos, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_wordEnd", (PyCFunction) _wrap_FX_Text_wordEnd, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_wordStart", (PyCFunction) _wrap_FX_Text_wordStart, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_rightWord", (PyCFunction) _wrap_FX_Text_rightWord, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_leftWord", (PyCFunction) _wrap_FX_Text_leftWord, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_prevRow", (PyCFunction) _wrap_FX_Text_prevRow, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_nextRow", (PyCFunction) _wrap_FX_Text_nextRow, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_rowEnd", (PyCFunction) _wrap_FX_Text_rowEnd, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_rowStart", (PyCFunction) _wrap_FX_Text_rowStart, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_prevLine", (PyCFunction) _wrap_FX_Text_prevLine, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_nextLine", (PyCFunction) _wrap_FX_Text_nextLine, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_lineEnd", (PyCFunction) _wrap_FX_Text_lineEnd, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_lineStart", (PyCFunction) _wrap_FX_Text_lineStart, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_getPosAt", (PyCFunction) _wrap_FX_Text_getPosAt, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_isPosVisible", (PyCFunction) _wrap_FX_Text_isPosVisible, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_isPosSelected", (PyCFunction) _wrap_FX_Text_isPosSelected, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_findText", (PyCFunction) _wrap_FX_Text_findText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_shiftText", (PyCFunction) _wrap_FX_Text_shiftText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_getLength", (PyCFunction) _wrap_FX_Text_getLength, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_getText", (PyCFunction) _wrap_FX_Text_getText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_setStyledText", (PyCFunction) _wrap_FX_Text_setStyledText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_setText", (PyCFunction) _wrap_FX_Text_setText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_changeStyle", (PyCFunction) _wrap_FX_Text_changeStyle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_removeText", (PyCFunction) _wrap_FX_Text_removeText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_insertStyledText", (PyCFunction) _wrap_FX_Text_insertStyledText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_insertText", (PyCFunction) _wrap_FX_Text_insertText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_appendStyledText", (PyCFunction) _wrap_FX_Text_appendStyledText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_appendText", (PyCFunction) _wrap_FX_Text_appendText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_replaceStyledText", (PyCFunction) _wrap_FX_Text_replaceStyledText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_replaceText", (PyCFunction) _wrap_FX_Text_replaceText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_extractStyle", (PyCFunction) _wrap_FX_Text_extractStyle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_extractText", (PyCFunction) _wrap_FX_Text_extractText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_getStyle", (PyCFunction) _wrap_FX_Text_getStyle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_getChar", (PyCFunction) _wrap_FX_Text_getChar, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_getTipText", (PyCFunction) _wrap_FX_Text_getTipText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_setTipText", (PyCFunction) _wrap_FX_Text_setTipText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_getHelpText", (PyCFunction) _wrap_FX_Text_getHelpText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_setHelpText", (PyCFunction) _wrap_FX_Text_setHelpText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_getBarColor", (PyCFunction) _wrap_FX_Text_getBarColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_setBarColor", (PyCFunction) _wrap_FX_Text_setBarColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_getNumberColor", (PyCFunction) _wrap_FX_Text_getNumberColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_setNumberColor", (PyCFunction) _wrap_FX_Text_setNumberColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_getCursorColor", (PyCFunction) _wrap_FX_Text_getCursorColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_setCursorColor", (PyCFunction) _wrap_FX_Text_setCursorColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_getActiveBackColor", (PyCFunction) _wrap_FX_Text_getActiveBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_setActiveBackColor", (PyCFunction) _wrap_FX_Text_setActiveBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_getHiliteBackColor", (PyCFunction) _wrap_FX_Text_getHiliteBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_setHiliteBackColor", (PyCFunction) _wrap_FX_Text_setHiliteBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_getHiliteTextColor", (PyCFunction) _wrap_FX_Text_getHiliteTextColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_setHiliteTextColor", (PyCFunction) _wrap_FX_Text_setHiliteTextColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_getSelTextColor", (PyCFunction) _wrap_FX_Text_getSelTextColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_setSelTextColor", (PyCFunction) _wrap_FX_Text_setSelTextColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_getSelBackColor", (PyCFunction) _wrap_FX_Text_getSelBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_setSelBackColor", (PyCFunction) _wrap_FX_Text_setSelBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_getTextColor", (PyCFunction) _wrap_FX_Text_getTextColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_setTextColor", (PyCFunction) _wrap_FX_Text_setTextColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_getFont", (PyCFunction) _wrap_FX_Text_getFont, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_setFont", (PyCFunction) _wrap_FX_Text_setFont, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_getDelimiters", (PyCFunction) _wrap_FX_Text_getDelimiters, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_setDelimiters", (PyCFunction) _wrap_FX_Text_setDelimiters, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_isStyled", (PyCFunction) _wrap_FX_Text_isStyled, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_setStyled", (PyCFunction) _wrap_FX_Text_setStyled, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_setEditable", (PyCFunction) _wrap_FX_Text_setEditable, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_isEditable", (PyCFunction) _wrap_FX_Text_isEditable, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_setModified", (PyCFunction) _wrap_FX_Text_setModified, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_isModified", (PyCFunction) _wrap_FX_Text_isModified, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_setBarColumns", (PyCFunction) _wrap_FX_Text_setBarColumns, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_getBarColumns", (PyCFunction) _wrap_FX_Text_getBarColumns, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_setTabColumns", (PyCFunction) _wrap_FX_Text_setTabColumns, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_getTabColumns", (PyCFunction) _wrap_FX_Text_getTabColumns, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_setWrapColumns", (PyCFunction) _wrap_FX_Text_setWrapColumns, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_getWrapColumns", (PyCFunction) _wrap_FX_Text_getWrapColumns, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_getMarginRight", (PyCFunction) _wrap_FX_Text_getMarginRight, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_setMarginRight", (PyCFunction) _wrap_FX_Text_setMarginRight, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_getMarginLeft", (PyCFunction) _wrap_FX_Text_getMarginLeft, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_setMarginLeft", (PyCFunction) _wrap_FX_Text_setMarginLeft, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_getMarginBottom", (PyCFunction) _wrap_FX_Text_getMarginBottom, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_setMarginBottom", (PyCFunction) _wrap_FX_Text_setMarginBottom, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_getMarginTop", (PyCFunction) _wrap_FX_Text_getMarginTop, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_setMarginTop", (PyCFunction) _wrap_FX_Text_setMarginTop, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_moveContents", (PyCFunction) _wrap_FX_Text_moveContents, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_Text", (PyCFunction) _wrap_new_FX_Text, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdDeleteLine", (PyCFunction) _wrap_FX_Text_onCmdDeleteLine, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdDeleteEol", (PyCFunction) _wrap_FX_Text_onCmdDeleteEol, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdDeleteWord", (PyCFunction) _wrap_FX_Text_onCmdDeleteWord, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdDelete", (PyCFunction) _wrap_FX_Text_onCmdDelete, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdBackspaceBol", (PyCFunction) _wrap_FX_Text_onCmdBackspaceBol, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdBackspaceWord", (PyCFunction) _wrap_FX_Text_onCmdBackspaceWord, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdBackspace", (PyCFunction) _wrap_FX_Text_onCmdBackspace, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdDeselectAll", (PyCFunction) _wrap_FX_Text_onCmdDeselectAll, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdSelectBlock", (PyCFunction) _wrap_FX_Text_onCmdSelectBlock, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdSelectMatching", (PyCFunction) _wrap_FX_Text_onCmdSelectMatching, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdSelectAll", (PyCFunction) _wrap_FX_Text_onCmdSelectAll, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdSelectLine", (PyCFunction) _wrap_FX_Text_onCmdSelectLine, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdSelectWord", (PyCFunction) _wrap_FX_Text_onCmdSelectWord, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdSelectChar", (PyCFunction) _wrap_FX_Text_onCmdSelectChar, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdShiftText", (PyCFunction) _wrap_FX_Text_onCmdShiftText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdChangeCase", (PyCFunction) _wrap_FX_Text_onCmdChangeCase, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdDeleteSel", (PyCFunction) _wrap_FX_Text_onCmdDeleteSel, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdPasteSel", (PyCFunction) _wrap_FX_Text_onCmdPasteSel, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdCopySel", (PyCFunction) _wrap_FX_Text_onCmdCopySel, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdCutSel", (PyCFunction) _wrap_FX_Text_onCmdCutSel, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdInsertTab", (PyCFunction) _wrap_FX_Text_onCmdInsertTab, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdInsertNewline", (PyCFunction) _wrap_FX_Text_onCmdInsertNewline, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdInsertString", (PyCFunction) _wrap_FX_Text_onCmdInsertString, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdOverstString", (PyCFunction) _wrap_FX_Text_onCmdOverstString, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdExtend", (PyCFunction) _wrap_FX_Text_onCmdExtend, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdMark", (PyCFunction) _wrap_FX_Text_onCmdMark, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdScrollDown", (PyCFunction) _wrap_FX_Text_onCmdScrollDown, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdScrollUp", (PyCFunction) _wrap_FX_Text_onCmdScrollUp, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdGotoLine", (PyCFunction) _wrap_FX_Text_onCmdGotoLine, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdGotoSelected", (PyCFunction) _wrap_FX_Text_onCmdGotoSelected, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdGotoMatching", (PyCFunction) _wrap_FX_Text_onCmdGotoMatching, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdBlockEnd", (PyCFunction) _wrap_FX_Text_onCmdBlockEnd, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdBlockBeg", (PyCFunction) _wrap_FX_Text_onCmdBlockBeg, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdCursorParEnd", (PyCFunction) _wrap_FX_Text_onCmdCursorParEnd, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdCursorParHome", (PyCFunction) _wrap_FX_Text_onCmdCursorParHome, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdCursorScreenCenter", (PyCFunction) _wrap_FX_Text_onCmdCursorScreenCenter, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdCursorScreenBottom", (PyCFunction) _wrap_FX_Text_onCmdCursorScreenBottom, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdCursorScreenTop", (PyCFunction) _wrap_FX_Text_onCmdCursorScreenTop, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdCursorPageUp", (PyCFunction) _wrap_FX_Text_onCmdCursorPageUp, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdCursorPageDown", (PyCFunction) _wrap_FX_Text_onCmdCursorPageDown, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdCursorWordRight", (PyCFunction) _wrap_FX_Text_onCmdCursorWordRight, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdCursorWordLeft", (PyCFunction) _wrap_FX_Text_onCmdCursorWordLeft, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdCursorDown", (PyCFunction) _wrap_FX_Text_onCmdCursorDown, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdCursorUp", (PyCFunction) _wrap_FX_Text_onCmdCursorUp, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdCursorLeft", (PyCFunction) _wrap_FX_Text_onCmdCursorLeft, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdCursorRight", (PyCFunction) _wrap_FX_Text_onCmdCursorRight, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdCursorEnd", (PyCFunction) _wrap_FX_Text_onCmdCursorEnd, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdCursorHome", (PyCFunction) _wrap_FX_Text_onCmdCursorHome, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdCursorBottom", (PyCFunction) _wrap_FX_Text_onCmdCursorBottom, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdCursorTop", (PyCFunction) _wrap_FX_Text_onCmdCursorTop, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdReplace", (PyCFunction) _wrap_FX_Text_onCmdReplace, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdSearch", (PyCFunction) _wrap_FX_Text_onCmdSearch, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdSearchSel", (PyCFunction) _wrap_FX_Text_onCmdSearchSel, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdGetStringValue", (PyCFunction) _wrap_FX_Text_onCmdGetStringValue, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdSetStringValue", (PyCFunction) _wrap_FX_Text_onCmdSetStringValue, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onUpdHaveSelection", (PyCFunction) _wrap_FX_Text_onUpdHaveSelection, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onUpdCursorColumn", (PyCFunction) _wrap_FX_Text_onUpdCursorColumn, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdCursorColumn", (PyCFunction) _wrap_FX_Text_onCmdCursorColumn, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onUpdCursorRow", (PyCFunction) _wrap_FX_Text_onUpdCursorRow, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdCursorRow", (PyCFunction) _wrap_FX_Text_onCmdCursorRow, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onUpdToggleOverstrike", (PyCFunction) _wrap_FX_Text_onUpdToggleOverstrike, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdToggleOverstrike", (PyCFunction) _wrap_FX_Text_onCmdToggleOverstrike, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onUpdToggleEditable", (PyCFunction) _wrap_FX_Text_onUpdToggleEditable, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onCmdToggleEditable", (PyCFunction) _wrap_FX_Text_onCmdToggleEditable, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onQueryTip", (PyCFunction) _wrap_FX_Text_onQueryTip, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onQueryHelp", (PyCFunction) _wrap_FX_Text_onQueryHelp, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onAutoScroll", (PyCFunction) _wrap_FX_Text_onAutoScroll, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onFlash", (PyCFunction) _wrap_FX_Text_onFlash, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onBlink", (PyCFunction) _wrap_FX_Text_onBlink, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onKeyRelease", (PyCFunction) _wrap_FX_Text_onKeyRelease, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onKeyPress", (PyCFunction) _wrap_FX_Text_onKeyPress, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onClipboardRequest", (PyCFunction) _wrap_FX_Text_onClipboardRequest, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onClipboardGained", (PyCFunction) _wrap_FX_Text_onClipboardGained, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onClipboardLost", (PyCFunction) _wrap_FX_Text_onClipboardLost, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onSelectionRequest", (PyCFunction) _wrap_FX_Text_onSelectionRequest, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onSelectionGained", (PyCFunction) _wrap_FX_Text_onSelectionGained, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onSelectionLost", (PyCFunction) _wrap_FX_Text_onSelectionLost, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onDNDRequest", (PyCFunction) _wrap_FX_Text_onDNDRequest, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onDNDDrop", (PyCFunction) _wrap_FX_Text_onDNDDrop, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onDNDMotion", (PyCFunction) _wrap_FX_Text_onDNDMotion, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onDNDLeave", (PyCFunction) _wrap_FX_Text_onDNDLeave, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onDNDEnter", (PyCFunction) _wrap_FX_Text_onDNDEnter, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onDragged", (PyCFunction) _wrap_FX_Text_onDragged, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onEndDrag", (PyCFunction) _wrap_FX_Text_onEndDrag, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onBeginDrag", (PyCFunction) _wrap_FX_Text_onBeginDrag, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onMotion", (PyCFunction) _wrap_FX_Text_onMotion, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onUngrabbed", (PyCFunction) _wrap_FX_Text_onUngrabbed, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onRightBtnRelease", (PyCFunction) _wrap_FX_Text_onRightBtnRelease, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onRightBtnPress", (PyCFunction) _wrap_FX_Text_onRightBtnPress, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onMiddleBtnRelease", (PyCFunction) _wrap_FX_Text_onMiddleBtnRelease, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onMiddleBtnPress", (PyCFunction) _wrap_FX_Text_onMiddleBtnPress, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onLeftBtnRelease", (PyCFunction) _wrap_FX_Text_onLeftBtnRelease, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onLeftBtnPress", (PyCFunction) _wrap_FX_Text_onLeftBtnPress, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onFocusOut", (PyCFunction) _wrap_FX_Text_onFocusOut, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onFocusIn", (PyCFunction) _wrap_FX_Text_onFocusIn, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onUpdate", (PyCFunction) _wrap_FX_Text_onUpdate, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Text_onPaint", (PyCFunction) _wrap_FX_Text_onPaint, METH_VARARGS | METH_KEYWORDS },
	 { "FXHiliteStyle_style_get", (PyCFunction) _wrap_FXHiliteStyle_style_get, METH_VARARGS | METH_KEYWORDS },
	 { "FXHiliteStyle_style_set", (PyCFunction) _wrap_FXHiliteStyle_style_set, METH_VARARGS | METH_KEYWORDS },
	 { "FXHiliteStyle_activeBackColor_get", (PyCFunction) _wrap_FXHiliteStyle_activeBackColor_get, METH_VARARGS | METH_KEYWORDS },
	 { "FXHiliteStyle_activeBackColor_set", (PyCFunction) _wrap_FXHiliteStyle_activeBackColor_set, METH_VARARGS | METH_KEYWORDS },
	 { "FXHiliteStyle_hiliteBackColor_get", (PyCFunction) _wrap_FXHiliteStyle_hiliteBackColor_get, METH_VARARGS | METH_KEYWORDS },
	 { "FXHiliteStyle_hiliteBackColor_set", (PyCFunction) _wrap_FXHiliteStyle_hiliteBackColor_set, METH_VARARGS | METH_KEYWORDS },
	 { "FXHiliteStyle_hiliteForeColor_get", (PyCFunction) _wrap_FXHiliteStyle_hiliteForeColor_get, METH_VARARGS | METH_KEYWORDS },
	 { "FXHiliteStyle_hiliteForeColor_set", (PyCFunction) _wrap_FXHiliteStyle_hiliteForeColor_set, METH_VARARGS | METH_KEYWORDS },
	 { "FXHiliteStyle_selectBackColor_get", (PyCFunction) _wrap_FXHiliteStyle_selectBackColor_get, METH_VARARGS | METH_KEYWORDS },
	 { "FXHiliteStyle_selectBackColor_set", (PyCFunction) _wrap_FXHiliteStyle_selectBackColor_set, METH_VARARGS | METH_KEYWORDS },
	 { "FXHiliteStyle_selectForeColor_get", (PyCFunction) _wrap_FXHiliteStyle_selectForeColor_get, METH_VARARGS | METH_KEYWORDS },
	 { "FXHiliteStyle_selectForeColor_set", (PyCFunction) _wrap_FXHiliteStyle_selectForeColor_set, METH_VARARGS | METH_KEYWORDS },
	 { "FXHiliteStyle_normalBackColor_get", (PyCFunction) _wrap_FXHiliteStyle_normalBackColor_get, METH_VARARGS | METH_KEYWORDS },
	 { "FXHiliteStyle_normalBackColor_set", (PyCFunction) _wrap_FXHiliteStyle_normalBackColor_set, METH_VARARGS | METH_KEYWORDS },
	 { "FXHiliteStyle_normalForeColor_get", (PyCFunction) _wrap_FXHiliteStyle_normalForeColor_get, METH_VARARGS | METH_KEYWORDS },
	 { "FXHiliteStyle_normalForeColor_set", (PyCFunction) _wrap_FXHiliteStyle_normalForeColor_set, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Charset_clear", (PyCFunction) _wrap_FX_Charset_clear, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Charset_has", (PyCFunction) _wrap_FX_Charset_has, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_Charset", (PyCFunction) _wrap_new_FX_Charset, METH_VARARGS | METH_KEYWORDS },
	 { NULL, NULL }
};
#ifdef __cplusplus
}
#endif
/*
 * This table is used by the pointer type-checker
 */
static struct { char *n1; char *n2; void *(*pcnv)(void *); } _swig_mapping[] = {
    { "_class_FXPyBMPImage","_FXPyBMPImage",0},
    { "_class_FXPyICOImage","_FXPyICOImage",0},
    { "_FXPyDelegator","_class_FXPyDelegator",0},
    { "_FX4Splitter","_class_FX4Splitter",0},
    { "_signed_long","_FXTime",0},
    { "_signed_long","_long",0},
    { "_class_FXPyPCXImage","_FXPyPCXImage",0},
    { "_class_FXTIFIcon","_FXTIFIcon",0},
    { "_FXPyHorizontalFrame","_class_FXPyHorizontalFrame",0},
    { "_double","_FXdouble",0},
    { "_FXPyObject","_class_FXPyObject",0},
    { "_FXPyGIFIcon","_class_FXPyGIFIcon",0},
    { "_FXBMPIcon","_class_FXBMPIcon",0},
    { "_FXICOIcon","_class_FXICOIcon",0},
    { "_class_FXSettings","_FXSettings",0},
    { "_class_FXRegistry","_FXRegistry",0},
    { "_class_FXMainWindow","_FXMainWindow",0},
    { "_FXTopWindow","_class_FXTopWindow",0},
    { "_FXPySwitcher","_class_FXPySwitcher",0},
    { "_FXShutterItem","_class_FXShutterItem",0},
    { "_class_FXVisual","_FXVisual",0},
    { "_FXIcon","_class_FXIcon",0},
    { "_FXPyMatrix","_class_FXPyMatrix",0},
    { "_class_FXDCPrint","_FXDCPrint",0},
    { "_class_FXGroupBox","_FXGroupBox",0},
    { "_FXTGAImage","_class_FXTGAImage",0},
    { "_class_FXPyTGAIcon","_FXPyTGAIcon",0},
    { "_FXPyStream","_class_FXPyStream",0},
    { "_class_FXPyDict","_FXPyDict",0},
    { "_class_FXRegion","_FXRegion",0},
    { "_FXShutter","_class_FXShutter",0},
    { "_FXPyPNGImage","_class_FXPyPNGImage",0},
    { "_class_FXAccelTable","_FXAccelTable",0},
    { "_FXPyApp","_class_FXPyApp",0},
    { "_FXDCWindow","_class_FXDCWindow",0},
    { "_FXPyScrollArea","_class_FXPyScrollArea",0},
    { "_class_FXPyId","_FXPyId",0},
    { "_class_FXCanvas","_FXCanvas",0},
    { "_FXApp","_class_FXApp",0},
    { "_class_FXPyRecentFiles","_FXPyRecentFiles",0},
    { "_class_FXPyDebugTarget","_FXPyDebugTarget",0},
    { "_class_FXCommand","_FXCommand",0},
    { "_class_FXPyFrame","_FXPyFrame",0},
    { "_long","_FXPixel",0},
    { "_long","_FXTime",0},
    { "_long","_unsigned_long",0},
    { "_long","_signed_long",0},
    { "_FXComposite","_class_FXPyText",SwigFXPyTextToFXComposite},
    { "_FXComposite","_FXPyText",SwigFXPyTextToFXComposite},
    { "_FXComposite","_class_FXText",SwigFXTextToFXComposite},
    { "_FXComposite","_FXText",SwigFXTextToFXComposite},
    { "_FXComposite","_class_FXComposite",0},
    { "_struct_FXArc","_FXArc",0},
    { "_FXRGBIcon","_class_FXRGBIcon",0},
    { "_FXScrollArea","_class_FXPyText",SwigFXPyTextToFXScrollArea},
    { "_FXScrollArea","_FXPyText",SwigFXPyTextToFXScrollArea},
    { "_FXScrollArea","_class_FXText",SwigFXTextToFXScrollArea},
    { "_FXScrollArea","_FXText",SwigFXTextToFXScrollArea},
    { "_FXScrollArea","_class_FXScrollArea",0},
    { "_FXPrinter","_struct_FXPrinter",0},
    { "_class_FXId","_class_FXPyText",SwigFXPyTextToFXId},
    { "_class_FXId","_FXPyText",SwigFXPyTextToFXId},
    { "_class_FXId","_class_FXText",SwigFXTextToFXId},
    { "_class_FXId","_FXText",SwigFXTextToFXId},
    { "_class_FXId","_FXId",0},
    { "_FXPyHorizontalSeparator","_class_FXPyHorizontalSeparator",0},
    { "_float","_FXfloat",0},
    { "_FXPyDrawable","_class_FXPyDrawable",0},
    { "_class_FXPyXPMIcon","_FXPyXPMIcon",0},
    { "_FXPyScrollWindow","_class_FXPyScrollWindow",0},
    { "_FXshort","_short",0},
    { "_FXshort","_signed_short",0},
    { "_FXshort","_unsigned_short",0},
    { "_FXshort","_FXushort",0},
    { "_FXFontDesc","_struct_FXFontDesc",0},
    { "_FXArc","_struct_FXArc",0},
    { "_FXSize","_class_FXSize",0},
    { "_class_FXBMPIcon","_FXBMPIcon",0},
    { "_class_FXICOIcon","_FXICOIcon",0},
    { "_FXPyShell","_class_FXPyShell",0},
    { "_class_FXPyTIFIcon","_FXPyTIFIcon",0},
    { "_FXSegment","_struct_FXSegment",0},
    { "_FXJPGImage","_class_FXJPGImage",0},
    { "_class_FXPySwitcher","_FXPySwitcher",0},
    { "_class_FXTIFImage","_FXTIFImage",0},
    { "_FXPyPCXIcon","_class_FXPyPCXIcon",0},
    { "_FXDC","_class_FXDC",0},
    { "_class_FXIcon","_FXIcon",0},
    { "_FXPopup","_class_FXPopup",0},
    { "_FXPy4Splitter","_class_FXPy4Splitter",0},
    { "_FXHiliteStyle","_struct_FXHiliteStyle",0},
    { "_FXint","_FXInputHandle",0},
    { "_FXint","_FXDragType",0},
    { "_FXint","_FXHotKey",0},
    { "_FXint","_FXColor",0},
    { "_FXint","_FXID",0},
    { "_FXint","_FXSelector",0},
    { "_FXint","_int",0},
    { "_FXint","_signed_int",0},
    { "_FXint","_unsigned_int",0},
    { "_FXint","_FXuint",0},
    { "_FXPyPNGIcon","_class_FXPyPNGIcon",0},
    { "_class_FXWindow","_class_FXPyText",SwigFXPyTextToFXWindow},
    { "_class_FXWindow","_FXPyText",SwigFXPyTextToFXWindow},
    { "_class_FXWindow","_class_FXText",SwigFXTextToFXWindow},
    { "_class_FXWindow","_FXText",SwigFXTextToFXWindow},
    { "_class_FXWindow","_FXWindow",0},
    { "_FXPyRootWindow","_class_FXPyRootWindow",0},
    { "_class_FXShutter","_FXShutter",0},
    { "_FXCharset","_class_FXCharset",0},
    { "_FXushort","_FXshort",0},
    { "_FXushort","_unsigned_short",0},
    { "_FXushort","_short",0},
    { "_class_FXPoint","_FXPoint",0},
    { "_class_FXPyPNGImage","_FXPyPNGImage",0},
    { "_class_FXPyDCPrint","_FXPyDCPrint",0},
    { "_FXPyVisual","_class_FXPyVisual",0},
    { "_class_FXRectangle","_FXRectangle",0},
    { "_class_FXPyFont","_FXPyFont",0},
    { "_FXPyFileStream","_class_FXPyFileStream",0},
    { "_FXRGBImage","_class_FXRGBImage",0},
    { "_FXRootWindow","_class_FXRootWindow",0},
    { "_class_FXPacker","_FXPacker",0},
    { "_FXPyXPMImage","_class_FXPyXPMImage",0},
    { "_FXPyDataTarget","_class_FXPyDataTarget",0},
    { "_FXPyTopWindow","_class_FXPyTopWindow",0},
    { "_FXObject","_class_FXPyText",SwigFXPyTextToFXObject},
    { "_FXObject","_FXPyText",SwigFXPyTextToFXObject},
    { "_FXObject","_class_FXText",SwigFXTextToFXObject},
    { "_FXObject","_FXText",SwigFXTextToFXObject},
    { "_FXObject","_class_FXObject",0},
    { "_FXPyGIFImage","_class_FXPyGIFImage",0},
    { "_FXBMPImage","_class_FXBMPImage",0},
    { "_FXICOImage","_class_FXICOImage",0},
    { "_class_FXRGBIcon","_FXRGBIcon",0},
    { "_FXRecentFiles","_class_FXRecentFiles",0},
    { "_FXDebugTarget","_class_FXDebugTarget",0},
    { "_class_FXPyCommand","_FXPyCommand",0},
    { "_class_FXScrollArea","_class_FXPyText",SwigFXPyTextToFXScrollArea},
    { "_class_FXScrollArea","_FXPyText",SwigFXPyTextToFXScrollArea},
    { "_class_FXScrollArea","_class_FXText",SwigFXTextToFXScrollArea},
    { "_class_FXScrollArea","_FXText",SwigFXTextToFXScrollArea},
    { "_class_FXScrollArea","_FXScrollArea",0},
    { "_FXPySplitter","_class_FXPySplitter",0},
    { "_FXPCXImage","_class_FXPCXImage",0},
    { "_FXFileStream","_class_FXFileStream",0},
    { "_class_FXPyDelegator","_FXPyDelegator",0},
    { "_FXPyCanvas","_class_FXPyCanvas",0},
    { "_class_FXPyDrawable","_FXPyDrawable",0},
    { "_FXPyImage","_class_FXPyImage",0},
    { "_FXGIFIcon","_class_FXGIFIcon",0},
    { "_FXColor","_FXInputHandle",0},
    { "_FXColor","_FXDragType",0},
    { "_FXColor","_FXHotKey",0},
    { "_FXColor","_FXuint",0},
    { "_FXColor","_int",0},
    { "_FXColor","_unsigned_int",0},
    { "_FXColor","_FXint",0},
    { "_FXColor","_FXSelector",0},
    { "_FXColor","_FXID",0},
    { "_FXPyJPGIcon","_class_FXPyJPGIcon",0},
    { "_FXDataTarget","_class_FXDataTarget",0},
    { "_class_FXPyHorizontalFrame","_FXPyHorizontalFrame",0},
    { "_FXTime","_FXPixel",0},
    { "_FXTime","_long",0},
    { "_FXTime","_signed_long",0},
    { "_FXTime","_unsigned_long",0},
    { "_FXHotKey","_FXInputHandle",0},
    { "_FXHotKey","_FXDragType",0},
    { "_FXHotKey","_FXuint",0},
    { "_FXHotKey","_int",0},
    { "_FXHotKey","_unsigned_int",0},
    { "_FXHotKey","_FXint",0},
    { "_FXHotKey","_FXSelector",0},
    { "_FXHotKey","_FXID",0},
    { "_FXHotKey","_FXColor",0},
    { "_class_FXSize","_FXSize",0},
    { "_class_FXPyObject","_FXPyObject",0},
    { "_class_FXPyShell","_FXPyShell",0},
    { "_FXPyDC","_class_FXPyDC",0},
    { "_struct_FXFontDesc","_FXFontDesc",0},
    { "_FXMatrix","_class_FXMatrix",0},
    { "_class_FXPyBMPIcon","_FXPyBMPIcon",0},
    { "_class_FXPyICOIcon","_FXPyICOIcon",0},
    { "_char","_FXchar",0},
    { "_FXdouble","_double",0},
    { "_FXStream","_class_FXStream",0},
    { "_FXPyStringDict","_class_FXPyStringDict",0},
    { "_FXFrame","_class_FXFrame",0},
    { "_FXObjectPtr","_FXObject_p",0},
    { "_FXPyComposite","_class_FXPyComposite",0},
    { "_class_FXShutterItem","_FXShutterItem",0},
    { "_class_FXDelegator","_FXDelegator",0},
    { "_FXVerticalFrame","_class_FXVerticalFrame",0},
    { "_class_FXPyMatrix","_FXPyMatrix",0},
    { "_FXbool","_FXuchar",0},
    { "_FXbool","_unsigned_char",0},
    { "_class_FXTGAImage","_FXTGAImage",0},
    { "_class_FXPyStream","_FXPyStream",0},
    { "_FXStringDict","_class_FXStringDict",0},
    { "_FXPyGroupBox","_class_FXPyGroupBox",0},
    { "_class_FXCharset","_FXCharset",0},
    { "_class_FXPyApp","_FXPyApp",0},
    { "_class_FXDCWindow","_FXDCWindow",0},
    { "_class_FXPyShutter","_FXPyShutter",0},
    { "_FXPyText","_class_FXPyText",0},
    { "_FXPyWindow","_class_FXPyWindow",0},
    { "_class_FXRootWindow","_FXRootWindow",0},
    { "_class_FXPyXPMImage","_FXPyXPMImage",0},
    { "_class_FXPyGIFImage","_FXPyGIFImage",0},
    { "_class_FXPyVerticalFrame","_FXPyVerticalFrame",0},
    { "_class_FXPySplitter","_FXPySplitter",0},
    { "_class_FXFileStream","_FXFileStream",0},
    { "_class_FXPyMainWindow","_FXPyMainWindow",0},
    { "_class_FXHorizontalFrame","_FXHorizontalFrame",0},
    { "_class_FXPyImage","_FXPyImage",0},
    { "_class_FXGIFIcon","_FXGIFIcon",0},
    { "_class_FXPyRGBIcon","_FXPyRGBIcon",0},
    { "_FXPyPacker","_class_FXPyPacker",0},
    { "_class_FXPyScrollWindow","_FXPyScrollWindow",0},
    { "_unsigned_long","_FXPixel",0},
    { "_unsigned_long","_FXTime",0},
    { "_unsigned_long","_long",0},
    { "_class_FXDataTarget","_FXDataTarget",0},
    { "_class_FXScrollWindow","_FXScrollWindow",0},
    { "_class_FXPyDC","_FXPyDC",0},
    { "_FXPyVerticalSeparator","_class_FXPyVerticalSeparator",0},
    { "_FXPCXIcon","_class_FXPCXIcon",0},
    { "_FXSwitcher","_class_FXSwitcher",0},
    { "_class_FXJPGImage","_FXJPGImage",0},
    { "_class_FXPyIcon","_FXPyIcon",0},
    { "_class_FXPyAccelTable","_FXPyAccelTable",0},
    { "_class_FXDC","_FXDC",0},
    { "_FXVisual","_class_FXVisual",0},
    { "_FXPyTIFImage","_class_FXPyTIFImage",0},
    { "_FXPNGIcon","_class_FXPNGIcon",0},
    { "_class_FXPopup","_FXPopup",0},
    { "_class_FXVerticalFrame","_FXVerticalFrame",0},
    { "_signed_int","_FXInputHandle",0},
    { "_signed_int","_FXint",0},
    { "_signed_int","_int",0},
    { "_class_FXPy4Splitter","_FXPy4Splitter",0},
    { "_FXPNGImage","_class_FXPNGImage",0},
    { "_FXPyTGAIcon","_class_FXPyTGAIcon",0},
    { "_FXPyDict","_class_FXPyDict",0},
    { "_class_FXStringDict","_FXStringDict",0},
    { "_FXRegion","_class_FXRegion",0},
    { "_class_FXPyGroupBox","_FXPyGroupBox",0},
    { "_FXVerticalSeparator","_class_FXVerticalSeparator",0},
    { "_FXRawEvent","__XEvent",0},
    { "_class_FXPyVisual","_FXPyVisual",0},
    { "_FXShell","_class_FXShell",0},
    { "_FXCanvas","_class_FXCanvas",0},
    { "_class_FXRGBImage","_FXRGBImage",0},
    { "_FXText","_class_FXPyText",SwigFXPyTextToFXText},
    { "_FXText","_FXPyText",SwigFXPyTextToFXText},
    { "_FXText","_class_FXText",0},
    { "_unsigned_short","_FXshort",0},
    { "_unsigned_short","_FXushort",0},
    { "_unsigned_short","_short",0},
    { "_class_FXPyTopWindow","_FXPyTopWindow",0},
    { "_class_FXBMPImage","_FXBMPImage",0},
    { "_class_FXICOImage","_FXICOImage",0},
    { "_class_FXRecentFiles","_FXRecentFiles",0},
    { "_class_FXDebugTarget","_FXDebugTarget",0},
    { "_FXDrawable","_class_FXPyText",SwigFXPyTextToFXDrawable},
    { "_FXDrawable","_FXPyText",SwigFXPyTextToFXDrawable},
    { "_FXDrawable","_class_FXText",SwigFXTextToFXDrawable},
    { "_FXDrawable","_FXText",SwigFXTextToFXDrawable},
    { "_FXDrawable","_class_FXDrawable",0},
    { "_class_FXPCXImage","_FXPCXImage",0},
    { "_FXJPGIcon","_class_FXJPGIcon",0},
    { "_class_FXPyCanvas","_FXPyCanvas",0},
    { "_class_FX4Splitter","_FX4Splitter",0},
    { "_FXPyXPMIcon","_class_FXPyXPMIcon",0},
    { "_FXObject_p","_FXObjectPtr",0},
    { "_FXID","_FXInputHandle",0},
    { "_FXID","_FXDragType",0},
    { "_FXID","_FXHotKey",0},
    { "_FXID","_FXColor",0},
    { "_FXID","_unsigned_int",0},
    { "_FXID","_int",0},
    { "_FXID","_FXuint",0},
    { "_FXID","_FXint",0},
    { "_FXID","_FXSelector",0},
    { "_FXHorizontalSeparator","_class_FXHorizontalSeparator",0},
    { "_class_FXPyGIFIcon","_FXPyGIFIcon",0},
    { "_class_FXPyVerticalSeparator","_FXPyVerticalSeparator",0},
    { "_struct_FXPrinter","_FXPrinter",0},
    { "_FXPyTIFIcon","_class_FXPyTIFIcon",0},
    { "_class_FXPCXIcon","_FXPCXIcon",0},
    { "_struct_FXHiliteStyle","_FXHiliteStyle",0},
    { "_signed_short","_FXshort",0},
    { "_signed_short","_short",0},
    { "_class_FXFrame","_FXFrame",0},
    { "_class_FXTopWindow","_FXTopWindow",0},
    { "_FXfloat","_float",0},
    { "_FXEvent","_struct_FXEvent",0},
    { "_class_FXPyComposite","_FXPyComposite",0},
    { "_class_FXPyTIFImage","_FXPyTIFImage",0},
    { "_class_FXPNGIcon","_FXPNGIcon",0},
    { "_struct_FXSegment","_FXSegment",0},
    { "_unsigned_char","_FXbool",0},
    { "_unsigned_char","_FXuchar",0},
    { "_FXPixel","_unsigned_long",0},
    { "_FXPixel","_long",0},
    { "_FXPixel","_FXTime",0},
    { "_FXImage","_class_FXImage",0},
    { "_FXWindow","_class_FXPyText",SwigFXPyTextToFXWindow},
    { "_FXWindow","_FXPyText",SwigFXPyTextToFXWindow},
    { "_FXWindow","_class_FXText",SwigFXTextToFXWindow},
    { "_FXWindow","_FXText",SwigFXTextToFXWindow},
    { "_FXWindow","_class_FXWindow",0},
    { "_unsigned_int","_FXInputHandle",0},
    { "_unsigned_int","_FXDragType",0},
    { "_unsigned_int","_FXHotKey",0},
    { "_unsigned_int","_FXColor",0},
    { "_unsigned_int","_FXID",0},
    { "_unsigned_int","_FXSelector",0},
    { "_unsigned_int","_FXint",0},
    { "_unsigned_int","_FXuint",0},
    { "_unsigned_int","_int",0},
    { "_FXPyTGAImage","_class_FXPyTGAImage",0},
    { "_FXDict","_class_FXDict",0},
    { "_FXPyDCPrint","_class_FXPyDCPrint",0},
    { "_FXuint","_FXInputHandle",0},
    { "_FXuint","_FXDragType",0},
    { "_FXuint","_FXHotKey",0},
    { "_FXuint","_FXColor",0},
    { "_FXuint","_FXID",0},
    { "_FXuint","_FXSelector",0},
    { "_FXuint","_FXint",0},
    { "_FXuint","_unsigned_int",0},
    { "_FXuint","_int",0},
    { "_class_FXPyScrollArea","_FXPyScrollArea",0},
    { "_short","_FXshort",0},
    { "_short","_FXushort",0},
    { "_short","_unsigned_short",0},
    { "_short","_signed_short",0},
    { "_FXRectangle","_class_FXRectangle",0},
    { "_FXPyFont","_class_FXPyFont",0},
    { "_FXPyDCWindow","_class_FXPyDCWindow",0},
    { "_class_FXApp","_FXApp",0},
    { "_FXXPMImage","_class_FXXPMImage",0},
    { "_class_FXPyWindow","_FXPyWindow",0},
    { "_FXPacker","_class_FXPacker",0},
    { "_class_FXText","_class_FXPyText",SwigFXPyTextToFXText},
    { "_class_FXText","_FXPyText",SwigFXPyTextToFXText},
    { "_class_FXText","_FXText",0},
    { "_FXGIFImage","_class_FXGIFImage",0},
    { "_class_FXComposite","_class_FXPyText",SwigFXPyTextToFXComposite},
    { "_class_FXComposite","_FXPyText",SwigFXPyTextToFXComposite},
    { "_class_FXComposite","_class_FXText",SwigFXTextToFXComposite},
    { "_class_FXComposite","_FXText",SwigFXTextToFXComposite},
    { "_class_FXComposite","_FXComposite",0},
    { "_FXSplitter","_class_FXSplitter",0},
    { "_FXPyCommand","_class_FXPyCommand",0},
    { "_class_FXJPGIcon","_FXJPGIcon",0},
    { "_class_FXPyHorizontalSeparator","_FXPyHorizontalSeparator",0},
    { "_FXchar","_char",0},
    { "_class_FXPyPacker","_FXPyPacker",0},
    { "_FXuchar","_FXbool",0},
    { "_FXuchar","_unsigned_char",0},
    { "_class_FXHorizontalSeparator","_FXHorizontalSeparator",0},
    { "_int","_FXInputHandle",0},
    { "_int","_FXDragType",0},
    { "_int","_FXHotKey",0},
    { "_int","_FXColor",0},
    { "_int","_FXID",0},
    { "_int","_FXSelector",0},
    { "_int","_FXint",0},
    { "_int","_FXuint",0},
    { "_int","_unsigned_int",0},
    { "_int","_signed_int",0},
    { "_FXDragType","_FXInputHandle",0},
    { "_FXDragType","_FXID",0},
    { "_FXDragType","_FXSelector",0},
    { "_FXDragType","_FXint",0},
    { "_FXDragType","_FXuint",0},
    { "_FXDragType","_int",0},
    { "_FXDragType","_unsigned_int",0},
    { "_FXDragType","_FXColor",0},
    { "_FXDragType","_FXHotKey",0},
    { "_FXSettings","_class_FXSettings",0},
    { "_FXRegistry","_class_FXRegistry",0},
    { "_FXPyBMPIcon","_class_FXPyBMPIcon",0},
    { "_FXPyICOIcon","_class_FXPyICOIcon",0},
    { "_class_FXSwitcher","_FXSwitcher",0},
    { "_FXPyShutterItem","_class_FXPyShutterItem",0},
    { "_FXPSBounds","_struct_FXPSBounds",0},
    { "_FXPyJPGImage","_class_FXPyJPGImage",0},
    { "_class_FXPyPCXIcon","_FXPyPCXIcon",0},
    { "_FXTGAIcon","_class_FXTGAIcon",0},
    { "_FXDelegator","_class_FXDelegator",0},
    { "_FXGroupBox","_class_FXGroupBox",0},
    { "_class_FXPNGImage","_FXPNGImage",0},
    { "_class_FXPyPNGIcon","_FXPyPNGIcon",0},
    { "_class_FXPyRootWindow","_FXPyRootWindow",0},
    { "_class_FXPyTGAImage","_FXPyTGAImage",0},
    { "_class_FXDict","_FXDict",0},
    { "_class_FXVerticalSeparator","_FXVerticalSeparator",0},
    { "_class_FXShell","_FXShell",0},
    { "_FXPyShutter","_class_FXPyShutter",0},
    { "_FXInputHandle","_FXint",0},
    { "_FXInputHandle","_FXuint",0},
    { "_FXInputHandle","_unsigned_int",0},
    { "_FXInputHandle","_signed_int",0},
    { "_FXInputHandle","_int",0},
    { "_FXInputHandle","_FXSelector",0},
    { "_FXInputHandle","_FXID",0},
    { "_FXInputHandle","_FXColor",0},
    { "_FXInputHandle","_FXHotKey",0},
    { "_FXInputHandle","_FXDragType",0},
    { "_class_FXPyFileStream","_FXPyFileStream",0},
    { "_class_FXPyDCWindow","_FXPyDCWindow",0},
    { "_FXFont","_class_FXFont",0},
    { "_FXPyRGBImage","_class_FXPyRGBImage",0},
    { "_class_FXPyDataTarget","_FXPyDataTarget",0},
    { "_class_FXObject","_class_FXPyText",SwigFXPyTextToFXObject},
    { "_class_FXObject","_FXPyText",SwigFXPyTextToFXObject},
    { "_class_FXObject","_class_FXText",SwigFXTextToFXObject},
    { "_class_FXObject","_FXText",SwigFXTextToFXObject},
    { "_class_FXObject","_FXObject",0},
    { "_FXXPMIcon","_class_FXXPMIcon",0},
    { "_FXPyPopup","_class_FXPyPopup",0},
    { "_FXPyVerticalFrame","_class_FXPyVerticalFrame",0},
    { "_FXId","_class_FXPyText",SwigFXPyTextToFXId},
    { "_FXId","_FXPyText",SwigFXPyTextToFXId},
    { "_FXId","_class_FXText",SwigFXTextToFXId},
    { "_FXId","_FXText",SwigFXTextToFXId},
    { "_FXId","_class_FXId",0},
    { "_class_FXDrawable","_class_FXPyText",SwigFXPyTextToFXDrawable},
    { "_class_FXDrawable","_FXPyText",SwigFXPyTextToFXDrawable},
    { "_class_FXDrawable","_class_FXText",SwigFXTextToFXDrawable},
    { "_class_FXDrawable","_FXText",SwigFXTextToFXDrawable},
    { "_class_FXDrawable","_FXDrawable",0},
    { "_FXPyBMPImage","_class_FXPyBMPImage",0},
    { "_FXPyICOImage","_class_FXPyICOImage",0},
    { "_FXPyMainWindow","_class_FXPyMainWindow",0},
    { "_FXHorizontalFrame","_class_FXHorizontalFrame",0},
    { "_FXPyPCXImage","_class_FXPyPCXImage",0},
    { "_FXPyRGBIcon","_class_FXPyRGBIcon",0},
    { "_class_FXPyJPGIcon","_FXPyJPGIcon",0},
    { "_FXTIFIcon","_class_FXTIFIcon",0},
    { "_FXScrollWindow","_class_FXScrollWindow",0},
    { "_FXMainWindow","_class_FXMainWindow",0},
    { "_class_FXMatrix","_FXMatrix",0},
    { "__XEvent","_FXRawEvent",0},
    { "_class_FXPyShutterItem","_FXPyShutterItem",0},
    { "_struct_FXEvent","_FXEvent",0},
    { "_class_FXStream","_FXStream",0},
    { "_class_FXPyStringDict","_FXPyStringDict",0},
    { "_class_FXPyJPGImage","_FXPyJPGImage",0},
    { "_FXTIFImage","_class_FXTIFImage",0},
    { "_FXPyIcon","_class_FXPyIcon",0},
    { "_FXPyAccelTable","_class_FXPyAccelTable",0},
    { "_class_FXTGAIcon","_FXTGAIcon",0},
    { "_struct_FXPSBounds","_FXPSBounds",0},
    { "_FXDCPrint","_class_FXDCPrint",0},
    { "_class_FXImage","_FXImage",0},
    { "_FXPoint","_class_FXPoint",0},
    { "_FXAccelTable","_class_FXAccelTable",0},
    { "_FXPyId","_class_FXPyId",0},
    { "_class_FXPyText","_FXPyText",0},
    { "_FXSelector","_FXInputHandle",0},
    { "_FXSelector","_FXDragType",0},
    { "_FXSelector","_FXHotKey",0},
    { "_FXSelector","_FXColor",0},
    { "_FXSelector","_FXID",0},
    { "_FXSelector","_FXuint",0},
    { "_FXSelector","_int",0},
    { "_FXSelector","_unsigned_int",0},
    { "_FXSelector","_FXint",0},
    { "_class_FXFont","_FXFont",0},
    { "_class_FXXPMImage","_FXXPMImage",0},
    { "_FXPyRecentFiles","_class_FXPyRecentFiles",0},
    { "_FXPyDebugTarget","_class_FXPyDebugTarget",0},
    { "_FXCommand","_class_FXCommand",0},
    { "_FXPyFrame","_class_FXPyFrame",0},
    { "_class_FXGIFImage","_FXGIFImage",0},
    { "_class_FXPyRGBImage","_FXPyRGBImage",0},
    { "_class_FXSplitter","_FXSplitter",0},
    { "_class_FXXPMIcon","_FXXPMIcon",0},
    { "_class_FXPyPopup","_FXPyPopup",0},
{0,0,0}};

static PyObject *SWIG_globals;
#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT(void) inittextc() {
	 PyObject *m, *d;
	 SWIG_globals = SWIG_newvarlink();
	 m = Py_InitModule("textc", textcMethods);
	 d = PyModule_GetDict(m);
	 PyDict_SetItemString(d,"TEXT_READONLY", PyInt_FromLong((long) TEXT_READONLY));
	 PyDict_SetItemString(d,"TEXT_WORDWRAP", PyInt_FromLong((long) TEXT_WORDWRAP));
	 PyDict_SetItemString(d,"TEXT_OVERSTRIKE", PyInt_FromLong((long) TEXT_OVERSTRIKE));
	 PyDict_SetItemString(d,"TEXT_FIXEDWRAP", PyInt_FromLong((long) TEXT_FIXEDWRAP));
	 PyDict_SetItemString(d,"TEXT_NO_TABS", PyInt_FromLong((long) TEXT_NO_TABS));
	 PyDict_SetItemString(d,"TEXT_AUTOINDENT", PyInt_FromLong((long) TEXT_AUTOINDENT));
	 PyDict_SetItemString(d,"TEXT_SHOWACTIVE", PyInt_FromLong((long) TEXT_SHOWACTIVE));
	 PyDict_SetItemString(d,"SELECT_CHARS", PyInt_FromLong((long) SELECT_CHARS));
	 PyDict_SetItemString(d,"SELECT_WORDS", PyInt_FromLong((long) SELECT_WORDS));
	 PyDict_SetItemString(d,"SELECT_LINES", PyInt_FromLong((long) SELECT_LINES));
	 PyDict_SetItemString(d,"FX_Text_STYLE_UNDERLINE", PyInt_FromLong((long) FXText::STYLE_UNDERLINE));
	 PyDict_SetItemString(d,"FX_Text_STYLE_STRIKEOUT", PyInt_FromLong((long) FXText::STYLE_STRIKEOUT));
	 PyDict_SetItemString(d,"FX_Text_ID_CURSOR_TOP", PyInt_FromLong((long) FXText::ID_CURSOR_TOP));
	 PyDict_SetItemString(d,"FX_Text_ID_CURSOR_BOTTOM", PyInt_FromLong((long) FXText::ID_CURSOR_BOTTOM));
	 PyDict_SetItemString(d,"FX_Text_ID_CURSOR_HOME", PyInt_FromLong((long) FXText::ID_CURSOR_HOME));
	 PyDict_SetItemString(d,"FX_Text_ID_CURSOR_END", PyInt_FromLong((long) FXText::ID_CURSOR_END));
	 PyDict_SetItemString(d,"FX_Text_ID_CURSOR_RIGHT", PyInt_FromLong((long) FXText::ID_CURSOR_RIGHT));
	 PyDict_SetItemString(d,"FX_Text_ID_CURSOR_LEFT", PyInt_FromLong((long) FXText::ID_CURSOR_LEFT));
	 PyDict_SetItemString(d,"FX_Text_ID_CURSOR_UP", PyInt_FromLong((long) FXText::ID_CURSOR_UP));
	 PyDict_SetItemString(d,"FX_Text_ID_CURSOR_DOWN", PyInt_FromLong((long) FXText::ID_CURSOR_DOWN));
	 PyDict_SetItemString(d,"FX_Text_ID_CURSOR_WORD_LEFT", PyInt_FromLong((long) FXText::ID_CURSOR_WORD_LEFT));
	 PyDict_SetItemString(d,"FX_Text_ID_CURSOR_WORD_RIGHT", PyInt_FromLong((long) FXText::ID_CURSOR_WORD_RIGHT));
	 PyDict_SetItemString(d,"FX_Text_ID_CURSOR_PAGEDOWN", PyInt_FromLong((long) FXText::ID_CURSOR_PAGEDOWN));
	 PyDict_SetItemString(d,"FX_Text_ID_CURSOR_PAGEUP", PyInt_FromLong((long) FXText::ID_CURSOR_PAGEUP));
	 PyDict_SetItemString(d,"FX_Text_ID_CURSOR_SCRNTOP", PyInt_FromLong((long) FXText::ID_CURSOR_SCRNTOP));
	 PyDict_SetItemString(d,"FX_Text_ID_CURSOR_SCRNBTM", PyInt_FromLong((long) FXText::ID_CURSOR_SCRNBTM));
	 PyDict_SetItemString(d,"FX_Text_ID_CURSOR_SCRNCTR", PyInt_FromLong((long) FXText::ID_CURSOR_SCRNCTR));
	 PyDict_SetItemString(d,"FX_Text_ID_CURSOR_PAR_HOME", PyInt_FromLong((long) FXText::ID_CURSOR_PAR_HOME));
	 PyDict_SetItemString(d,"FX_Text_ID_CURSOR_PAR_END", PyInt_FromLong((long) FXText::ID_CURSOR_PAR_END));
	 PyDict_SetItemString(d,"FX_Text_ID_SCROLL_UP", PyInt_FromLong((long) FXText::ID_SCROLL_UP));
	 PyDict_SetItemString(d,"FX_Text_ID_SCROLL_DOWN", PyInt_FromLong((long) FXText::ID_SCROLL_DOWN));
	 PyDict_SetItemString(d,"FX_Text_ID_MARK", PyInt_FromLong((long) FXText::ID_MARK));
	 PyDict_SetItemString(d,"FX_Text_ID_EXTEND", PyInt_FromLong((long) FXText::ID_EXTEND));
	 PyDict_SetItemString(d,"FX_Text_ID_OVERST_STRING", PyInt_FromLong((long) FXText::ID_OVERST_STRING));
	 PyDict_SetItemString(d,"FX_Text_ID_INSERT_STRING", PyInt_FromLong((long) FXText::ID_INSERT_STRING));
	 PyDict_SetItemString(d,"FX_Text_ID_INSERT_NEWLINE", PyInt_FromLong((long) FXText::ID_INSERT_NEWLINE));
	 PyDict_SetItemString(d,"FX_Text_ID_INSERT_TAB", PyInt_FromLong((long) FXText::ID_INSERT_TAB));
	 PyDict_SetItemString(d,"FX_Text_ID_CUT_SEL", PyInt_FromLong((long) FXText::ID_CUT_SEL));
	 PyDict_SetItemString(d,"FX_Text_ID_COPY_SEL", PyInt_FromLong((long) FXText::ID_COPY_SEL));
	 PyDict_SetItemString(d,"FX_Text_ID_PASTE_SEL", PyInt_FromLong((long) FXText::ID_PASTE_SEL));
	 PyDict_SetItemString(d,"FX_Text_ID_DELETE_SEL", PyInt_FromLong((long) FXText::ID_DELETE_SEL));
	 PyDict_SetItemString(d,"FX_Text_ID_SELECT_CHAR", PyInt_FromLong((long) FXText::ID_SELECT_CHAR));
	 PyDict_SetItemString(d,"FX_Text_ID_SELECT_WORD", PyInt_FromLong((long) FXText::ID_SELECT_WORD));
	 PyDict_SetItemString(d,"FX_Text_ID_SELECT_LINE", PyInt_FromLong((long) FXText::ID_SELECT_LINE));
	 PyDict_SetItemString(d,"FX_Text_ID_SELECT_ALL", PyInt_FromLong((long) FXText::ID_SELECT_ALL));
	 PyDict_SetItemString(d,"FX_Text_ID_SELECT_MATCHING", PyInt_FromLong((long) FXText::ID_SELECT_MATCHING));
	 PyDict_SetItemString(d,"FX_Text_ID_SELECT_BRACE", PyInt_FromLong((long) FXText::ID_SELECT_BRACE));
	 PyDict_SetItemString(d,"FX_Text_ID_SELECT_BRACK", PyInt_FromLong((long) FXText::ID_SELECT_BRACK));
	 PyDict_SetItemString(d,"FX_Text_ID_SELECT_PAREN", PyInt_FromLong((long) FXText::ID_SELECT_PAREN));
	 PyDict_SetItemString(d,"FX_Text_ID_SELECT_ANG", PyInt_FromLong((long) FXText::ID_SELECT_ANG));
	 PyDict_SetItemString(d,"FX_Text_ID_DESELECT_ALL", PyInt_FromLong((long) FXText::ID_DESELECT_ALL));
	 PyDict_SetItemString(d,"FX_Text_ID_BACKSPACE", PyInt_FromLong((long) FXText::ID_BACKSPACE));
	 PyDict_SetItemString(d,"FX_Text_ID_BACKSPACE_WORD", PyInt_FromLong((long) FXText::ID_BACKSPACE_WORD));
	 PyDict_SetItemString(d,"FX_Text_ID_BACKSPACE_BOL", PyInt_FromLong((long) FXText::ID_BACKSPACE_BOL));
	 PyDict_SetItemString(d,"FX_Text_ID_DELETE", PyInt_FromLong((long) FXText::ID_DELETE));
	 PyDict_SetItemString(d,"FX_Text_ID_DELETE_WORD", PyInt_FromLong((long) FXText::ID_DELETE_WORD));
	 PyDict_SetItemString(d,"FX_Text_ID_DELETE_EOL", PyInt_FromLong((long) FXText::ID_DELETE_EOL));
	 PyDict_SetItemString(d,"FX_Text_ID_DELETE_LINE", PyInt_FromLong((long) FXText::ID_DELETE_LINE));
	 PyDict_SetItemString(d,"FX_Text_ID_TOGGLE_EDITABLE", PyInt_FromLong((long) FXText::ID_TOGGLE_EDITABLE));
	 PyDict_SetItemString(d,"FX_Text_ID_TOGGLE_OVERSTRIKE", PyInt_FromLong((long) FXText::ID_TOGGLE_OVERSTRIKE));
	 PyDict_SetItemString(d,"FX_Text_ID_CURSOR_ROW", PyInt_FromLong((long) FXText::ID_CURSOR_ROW));
	 PyDict_SetItemString(d,"FX_Text_ID_CURSOR_COLUMN", PyInt_FromLong((long) FXText::ID_CURSOR_COLUMN));
	 PyDict_SetItemString(d,"FX_Text_ID_CLEAN_INDENT", PyInt_FromLong((long) FXText::ID_CLEAN_INDENT));
	 PyDict_SetItemString(d,"FX_Text_ID_SHIFT_LEFT", PyInt_FromLong((long) FXText::ID_SHIFT_LEFT));
	 PyDict_SetItemString(d,"FX_Text_ID_SHIFT_RIGHT", PyInt_FromLong((long) FXText::ID_SHIFT_RIGHT));
	 PyDict_SetItemString(d,"FX_Text_ID_SHIFT_TABLEFT", PyInt_FromLong((long) FXText::ID_SHIFT_TABLEFT));
	 PyDict_SetItemString(d,"FX_Text_ID_SHIFT_TABRIGHT", PyInt_FromLong((long) FXText::ID_SHIFT_TABRIGHT));
	 PyDict_SetItemString(d,"FX_Text_ID_UPPER_CASE", PyInt_FromLong((long) FXText::ID_UPPER_CASE));
	 PyDict_SetItemString(d,"FX_Text_ID_LOWER_CASE", PyInt_FromLong((long) FXText::ID_LOWER_CASE));
	 PyDict_SetItemString(d,"FX_Text_ID_GOTO_MATCHING", PyInt_FromLong((long) FXText::ID_GOTO_MATCHING));
	 PyDict_SetItemString(d,"FX_Text_ID_GOTO_SELECTED", PyInt_FromLong((long) FXText::ID_GOTO_SELECTED));
	 PyDict_SetItemString(d,"FX_Text_ID_GOTO_LINE", PyInt_FromLong((long) FXText::ID_GOTO_LINE));
	 PyDict_SetItemString(d,"FX_Text_ID_SEARCH_FORW_SEL", PyInt_FromLong((long) FXText::ID_SEARCH_FORW_SEL));
	 PyDict_SetItemString(d,"FX_Text_ID_SEARCH_BACK_SEL", PyInt_FromLong((long) FXText::ID_SEARCH_BACK_SEL));
	 PyDict_SetItemString(d,"FX_Text_ID_SEARCH", PyInt_FromLong((long) FXText::ID_SEARCH));
	 PyDict_SetItemString(d,"FX_Text_ID_REPLACE", PyInt_FromLong((long) FXText::ID_REPLACE));
	 PyDict_SetItemString(d,"FX_Text_ID_LEFT_BRACE", PyInt_FromLong((long) FXText::ID_LEFT_BRACE));
	 PyDict_SetItemString(d,"FX_Text_ID_LEFT_BRACK", PyInt_FromLong((long) FXText::ID_LEFT_BRACK));
	 PyDict_SetItemString(d,"FX_Text_ID_LEFT_PAREN", PyInt_FromLong((long) FXText::ID_LEFT_PAREN));
	 PyDict_SetItemString(d,"FX_Text_ID_LEFT_ANG", PyInt_FromLong((long) FXText::ID_LEFT_ANG));
	 PyDict_SetItemString(d,"FX_Text_ID_RIGHT_BRACE", PyInt_FromLong((long) FXText::ID_RIGHT_BRACE));
	 PyDict_SetItemString(d,"FX_Text_ID_RIGHT_BRACK", PyInt_FromLong((long) FXText::ID_RIGHT_BRACK));
	 PyDict_SetItemString(d,"FX_Text_ID_RIGHT_PAREN", PyInt_FromLong((long) FXText::ID_RIGHT_PAREN));
	 PyDict_SetItemString(d,"FX_Text_ID_RIGHT_ANG", PyInt_FromLong((long) FXText::ID_RIGHT_ANG));
	 PyDict_SetItemString(d,"FX_Text_ID_BLINK", PyInt_FromLong((long) FXText::ID_BLINK));
	 PyDict_SetItemString(d,"FX_Text_ID_FLASH", PyInt_FromLong((long) FXText::ID_FLASH));
	 PyDict_SetItemString(d,"FX_Text_ID_LAST", PyInt_FromLong((long) FXText::ID_LAST));
{
   int i;
   for (i = 0; _swig_mapping[i].n1; i++)
        SWIG_RegisterMapping(_swig_mapping[i].n1,_swig_mapping[i].n2,_swig_mapping[i].pcnv);
}
}
