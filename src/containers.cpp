/*
 * FILE : ../src/containers.cpp
 * 
 * This file was automatically generated by :
 * Simplified Wrapper and Interface Generator (SWIG)
 * Version 1.1 (Build 883)
 * 
 * Portions Copyright (c) 1995-1998
 * The University of Utah and The Regents of the University of California.
 * Permission is granted to distribute this file in any manner provided
 * this notice remains intact.
 * 
 * Do not make changes to this file--changes will be lost!
 *
 */


#define SWIGCODE
/* Implementation : PYTHON */

#define SWIGPYTHON
#include <string.h>
#include <stdlib.h>
/* Definitions for Windows/Unix exporting */
#if defined(__WIN32__)
#   if defined(_MSC_VER)
#	define SWIGEXPORT(a) __declspec(dllexport) a
#   else
#	if defined(__BORLANDC__)
#	    define SWIGEXPORT(a) a _export 
#	else
#	    define SWIGEXPORT(a) a 
#	endif
#   endif
#else
#   define SWIGEXPORT(a) a 
#endif

#include "Python.h"

#ifdef __cplusplus
extern "C" {
#endif
extern void SWIG_MakePtr(char *, void *, char *);
extern void SWIG_RegisterMapping(char *, char *, void *(*)(void *));
extern char *SWIG_GetPtr(char *, void **, char *);
extern char *SWIG_GetPtrObj(PyObject *, void **, char *);
extern void SWIG_addvarlink(PyObject *, char *, PyObject *(*)(void), int (*)(PyObject *));
extern PyObject *SWIG_newvarlink(void);
#ifdef __cplusplus
}
#endif
#define SWIG_init    initcontainersc

#define SWIG_name    "containersc"

#include "fx.h"
#include "fx3d.h"
#include "FXCURCursor.h"
#include "FXJPGImage.h"
#include "FXJPGIcon.h"
#include "FXPNGIcon.h"
#include "FXPNGImage.h"
#include "FXTIFIcon.h"
#include "FXTIFImage.h"
#include "FXRGBIcon.h"
#include "FXRGBImage.h"
#include "FXICOIcon.h"
#include "FXICOImage.h"
#include "FXPyApp.h"
#include "FXPy.h"

static PyObject* l_output_helper(PyObject* target, PyObject* o) {
    PyObject*   o2;
    if (!target) {                   
        target = o;
    } else if (target == Py_None) {  
        Py_DECREF(Py_None);
        target = o;
    } else {                         
        if (!PyList_Check(target)) {
            o2 = target;
            target = PyList_New(0);
            PyList_Append(target, o2);
	    Py_XDECREF(o2);
        }
        PyList_Append(target,o);
	Py_XDECREF(o);
    }
    return target;
}

static PyObject* t_output_helper(PyObject* target, PyObject* o) {
    PyObject*   o2;
    PyObject*   o3;

    if (!target) {                   
        target = o;
    } else if (target == Py_None) {  
        Py_DECREF(Py_None);
        target = o;
    } else {                         
        if (!PyTuple_Check(target)) {
            o2 = target;
            target = PyTuple_New(1);
            PyTuple_SetItem(target, 0, o2);
        }
        o3 = PyTuple_New(1);            
        PyTuple_SetItem(o3, 0, o);      

        o2 = target;
        target = PySequence_Concat(o2, o3); 
        Py_DECREF(o2);                      
        Py_DECREF(o3);
    }
    return target;
}

  // Construct for normal drawing;
  // This sets the clip rectangle to the whole drawable.
  FXPyDCWindow* CreateDCWindow(FXDrawable* drawable) {
    return new FXPyDCWindow(drawable);
  }

  // Construct for painting in response to expose;
  // This sets the clip rectangle to the exposed rectangle
  FXPyDCWindow* CreateClippedDCWindow(FXDrawable* drawable,FXEvent* event) {
    return new FXPyDCWindow(drawable,event);
  }

  FXPySplitter* CreateSplitter1(FXComposite* p,FXuint opts=SPLITTER_HORIZONTAL,FXint x=0,FXint y=0,FXint w=0,FXint h=0){
    return new FXPySplitter(p,opts,x,y,w,h);
    }

  FXPySplitter* CreateSplitter2(FXComposite* p,FXObject* tgt,FXSelector sel,FXuint opts=SPLITTER_HORIZONTAL,FXint x=0,FXint y=0,FXint w=0,FXint h=0){
    return new FXPySplitter(p,tgt,sel,opts,x,y,w,h);
    }

  FXPy4Splitter* Create4Splitter1(FXComposite* p,FXuint opts=FOURSPLITTER_NORMAL,FXint x=0,FXint y=0,FXint w=0,FXint h=0){
    return new FXPy4Splitter(p,opts,x,y,w,h);
    }

  FXPy4Splitter* Create4Splitter2(FXComposite* p,FXObject* tgt,FXuint sel,FXuint opts=FOURSPLITTER_NORMAL,FXint x=0,FXint y=0,FXint w=0,FXint h=0){
    return new FXPy4Splitter(p,tgt,sel,opts,x,y,w,h);
    }
#ifdef __cplusplus
extern "C" {
#endif
static PyObject *_wrap_CreateDCWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDCWindow * _result;
    FXDrawable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "drawable", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:CreateDCWindow",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDrawable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of CreateDCWindow. Expected _FXDrawable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyDCWindow *)CreateDCWindow(_arg0);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyDCWindow_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

static PyObject *_wrap_CreateClippedDCWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDCWindow * _result;
    FXDrawable * _arg0;
    FXEvent * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "drawable","event", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:CreateClippedDCWindow",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDrawable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of CreateClippedDCWindow. Expected _FXDrawable_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of CreateClippedDCWindow. Expected _FXEvent_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyDCWindow *)CreateClippedDCWindow(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyDCWindow_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

static PyObject *_wrap_CreateSplitter1(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySplitter * _result;
    FXComposite * _arg0;
    FXuint  _arg1 = (FXuint ) (SPLITTER_HORIZONTAL);
    FXint  _arg2 = (FXint ) 0;
    FXint  _arg3 = (FXint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "p","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|iiiii:CreateSplitter1",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4,&_arg5)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of CreateSplitter1. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPySplitter *)CreateSplitter1(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPySplitter_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

static PyObject *_wrap_CreateSplitter2(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySplitter * _result;
    FXComposite * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    FXuint  _arg3 = (FXuint ) (SPLITTER_HORIZONTAL);
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "p","tgt","sel","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOi|iiiii:CreateSplitter2",_kwnames,&_argo0,&_obj1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of CreateSplitter2. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPySplitter *)CreateSplitter2(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPySplitter_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

static PyObject *_wrap_Create4Splitter1(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPy4Splitter * _result;
    FXComposite * _arg0;
    FXuint  _arg1 = (FXuint ) (FOURSPLITTER_NORMAL);
    FXint  _arg2 = (FXint ) 0;
    FXint  _arg3 = (FXint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "p","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|iiiii:Create4Splitter1",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4,&_arg5)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of Create4Splitter1. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPy4Splitter *)Create4Splitter1(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPy4Splitter_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

static PyObject *_wrap_Create4Splitter2(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPy4Splitter * _result;
    FXComposite * _arg0;
    FXObject * _arg1;
    FXuint  _arg2;
    FXuint  _arg3 = (FXuint ) (FOURSPLITTER_NORMAL);
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "p","tgt","sel","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOi|iiiii:Create4Splitter2",_kwnames,&_argo0,&_obj1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of Create4Splitter2. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPy4Splitter *)Create4Splitter2(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPy4Splitter_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FXSegment_x1_set(_swigobj,_swigval) (_swigobj->x1 = _swigval,_swigval)
static PyObject *_wrap_FXSegment_x1_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXshort  _result;
    FXSegment * _arg0;
    FXshort  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x1", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oh:FXSegment_x1_set",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXSegment_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSegment_x1_set. Expected _FXSegment_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXshort )FXSegment_x1_set(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("h",_result);
    return _resultobj;
}

#define FXSegment_x1_get(_swigobj) ((FXshort ) _swigobj->x1)
static PyObject *_wrap_FXSegment_x1_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXshort  _result;
    FXSegment * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSegment_x1_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXSegment_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSegment_x1_get. Expected _FXSegment_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXshort )FXSegment_x1_get(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("h",_result);
    return _resultobj;
}

#define FXSegment_y1_set(_swigobj,_swigval) (_swigobj->y1 = _swigval,_swigval)
static PyObject *_wrap_FXSegment_y1_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXshort  _result;
    FXSegment * _arg0;
    FXshort  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","y1", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oh:FXSegment_y1_set",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXSegment_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSegment_y1_set. Expected _FXSegment_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXshort )FXSegment_y1_set(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("h",_result);
    return _resultobj;
}

#define FXSegment_y1_get(_swigobj) ((FXshort ) _swigobj->y1)
static PyObject *_wrap_FXSegment_y1_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXshort  _result;
    FXSegment * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSegment_y1_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXSegment_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSegment_y1_get. Expected _FXSegment_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXshort )FXSegment_y1_get(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("h",_result);
    return _resultobj;
}

#define FXSegment_x2_set(_swigobj,_swigval) (_swigobj->x2 = _swigval,_swigval)
static PyObject *_wrap_FXSegment_x2_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXshort  _result;
    FXSegment * _arg0;
    FXshort  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x2", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oh:FXSegment_x2_set",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXSegment_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSegment_x2_set. Expected _FXSegment_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXshort )FXSegment_x2_set(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("h",_result);
    return _resultobj;
}

#define FXSegment_x2_get(_swigobj) ((FXshort ) _swigobj->x2)
static PyObject *_wrap_FXSegment_x2_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXshort  _result;
    FXSegment * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSegment_x2_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXSegment_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSegment_x2_get. Expected _FXSegment_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXshort )FXSegment_x2_get(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("h",_result);
    return _resultobj;
}

#define FXSegment_y2_set(_swigobj,_swigval) (_swigobj->y2 = _swigval,_swigval)
static PyObject *_wrap_FXSegment_y2_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXshort  _result;
    FXSegment * _arg0;
    FXshort  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","y2", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oh:FXSegment_y2_set",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXSegment_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSegment_y2_set. Expected _FXSegment_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXshort )FXSegment_y2_set(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("h",_result);
    return _resultobj;
}

#define FXSegment_y2_get(_swigobj) ((FXshort ) _swigobj->y2)
static PyObject *_wrap_FXSegment_y2_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXshort  _result;
    FXSegment * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSegment_y2_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXSegment_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSegment_y2_get. Expected _FXSegment_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXshort )FXSegment_y2_get(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("h",_result);
    return _resultobj;
}

#define FXArc_x_set(_swigobj,_swigval) (_swigobj->x = _swigval,_swigval)
static PyObject *_wrap_FXArc_x_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXshort  _result;
    FXArc * _arg0;
    FXshort  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oh:FXArc_x_set",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXArc_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXArc_x_set. Expected _FXArc_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXshort )FXArc_x_set(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("h",_result);
    return _resultobj;
}

#define FXArc_x_get(_swigobj) ((FXshort ) _swigobj->x)
static PyObject *_wrap_FXArc_x_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXshort  _result;
    FXArc * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXArc_x_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXArc_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXArc_x_get. Expected _FXArc_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXshort )FXArc_x_get(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("h",_result);
    return _resultobj;
}

#define FXArc_y_set(_swigobj,_swigval) (_swigobj->y = _swigval,_swigval)
static PyObject *_wrap_FXArc_y_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXshort  _result;
    FXArc * _arg0;
    FXshort  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oh:FXArc_y_set",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXArc_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXArc_y_set. Expected _FXArc_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXshort )FXArc_y_set(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("h",_result);
    return _resultobj;
}

#define FXArc_y_get(_swigobj) ((FXshort ) _swigobj->y)
static PyObject *_wrap_FXArc_y_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXshort  _result;
    FXArc * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXArc_y_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXArc_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXArc_y_get. Expected _FXArc_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXshort )FXArc_y_get(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("h",_result);
    return _resultobj;
}

#define FXArc_w_set(_swigobj,_swigval) (_swigobj->w = _swigval,_swigval)
static PyObject *_wrap_FXArc_w_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXshort  _result;
    FXArc * _arg0;
    FXshort  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oh:FXArc_w_set",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXArc_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXArc_w_set. Expected _FXArc_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXshort )FXArc_w_set(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("h",_result);
    return _resultobj;
}

#define FXArc_w_get(_swigobj) ((FXshort ) _swigobj->w)
static PyObject *_wrap_FXArc_w_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXshort  _result;
    FXArc * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXArc_w_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXArc_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXArc_w_get. Expected _FXArc_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXshort )FXArc_w_get(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("h",_result);
    return _resultobj;
}

#define FXArc_h_set(_swigobj,_swigval) (_swigobj->h = _swigval,_swigval)
static PyObject *_wrap_FXArc_h_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXshort  _result;
    FXArc * _arg0;
    FXshort  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oh:FXArc_h_set",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXArc_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXArc_h_set. Expected _FXArc_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXshort )FXArc_h_set(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("h",_result);
    return _resultobj;
}

#define FXArc_h_get(_swigobj) ((FXshort ) _swigobj->h)
static PyObject *_wrap_FXArc_h_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXshort  _result;
    FXArc * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXArc_h_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXArc_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXArc_h_get. Expected _FXArc_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXshort )FXArc_h_get(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("h",_result);
    return _resultobj;
}

#define FXArc_a_set(_swigobj,_swigval) (_swigobj->a = _swigval,_swigval)
static PyObject *_wrap_FXArc_a_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXshort  _result;
    FXArc * _arg0;
    FXshort  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","a", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oh:FXArc_a_set",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXArc_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXArc_a_set. Expected _FXArc_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXshort )FXArc_a_set(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("h",_result);
    return _resultobj;
}

#define FXArc_a_get(_swigobj) ((FXshort ) _swigobj->a)
static PyObject *_wrap_FXArc_a_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXshort  _result;
    FXArc * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXArc_a_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXArc_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXArc_a_get. Expected _FXArc_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXshort )FXArc_a_get(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("h",_result);
    return _resultobj;
}

#define FXArc_b_set(_swigobj,_swigval) (_swigobj->b = _swigval,_swigval)
static PyObject *_wrap_FXArc_b_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXshort  _result;
    FXArc * _arg0;
    FXshort  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","b", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oh:FXArc_b_set",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXArc_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXArc_b_set. Expected _FXArc_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXshort )FXArc_b_set(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("h",_result);
    return _resultobj;
}

#define FXArc_b_get(_swigobj) ((FXshort ) _swigobj->b)
static PyObject *_wrap_FXArc_b_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXshort  _result;
    FXArc * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXArc_b_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXArc_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXArc_b_get. Expected _FXArc_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXshort )FXArc_b_get(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("h",_result);
    return _resultobj;
}

#define new_FX_DC(_swigarg0) (new FXDC(_swigarg0))
static PyObject *_wrap_new_FX_DC(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _result;
    FXApp * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "a", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:new_FX_DC",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXApp_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FX_DC. Expected _FXApp_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXDC *)new_FX_DC(_arg0);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXDC_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_DC_getApp(_swigobj)  (_swigobj->getApp())
static PyObject *_wrap_FX_DC_getApp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXApp * _result;
    FXDC * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_DC_getApp",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_getApp. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXApp *)FX_DC_getApp(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_DC_readPixel(_swigobj,_swigarg0,_swigarg1)  (_swigobj->readPixel(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_DC_readPixel(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXDC * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FX_DC_readPixel",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_readPixel. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FX_DC_readPixel(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_DC_drawPoint(_swigobj,_swigarg0,_swigarg1)  (_swigobj->drawPoint(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_DC_drawPoint(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FX_DC_drawPoint",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_drawPoint. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_drawPoint(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_drawPoints(_swigobj,_swigarg0,_swigarg1)  (_swigobj->drawPoints(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_DC_drawPoints(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXPoint * _arg1;
    FXuint  _arg2;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","points","npoints", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOi:FX_DC_drawPoints",_kwnames,&_argo0,&_argo1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_drawPoints. Expected _FXDC_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXPoint_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_DC_drawPoints. Expected _FXPoint_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_drawPoints(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_drawPointsRel(_swigobj,_swigarg0,_swigarg1)  (_swigobj->drawPointsRel(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_DC_drawPointsRel(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXPoint * _arg1;
    FXuint  _arg2;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","points","npoints", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOi:FX_DC_drawPointsRel",_kwnames,&_argo0,&_argo1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_drawPointsRel. Expected _FXDC_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXPoint_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_DC_drawPointsRel. Expected _FXPoint_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_drawPointsRel(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_drawLine(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->drawLine(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FX_DC_drawLine(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x1","y1","x2","y2", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FX_DC_drawLine",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_drawLine. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_drawLine(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void  FXDC_drawLines(FXDC *self,PyObject * pointlist) {
      if(!PyList_Check(pointlist))
        return;
      FXint npoints=PyList_Size(pointlist);
      FXPoint* points=new FXPoint[npoints];
      for(FXint i=0;i<npoints;i++){
        PyObject* tuple=PyList_GetItem(pointlist,i);
        if(PyTuple_Check(tuple)){
          PyObject* x=PyTuple_GetItem(tuple,0);
          PyObject* y=PyTuple_GetItem(tuple,1);
          points[i].x=(FXshort)PyInt_AsLong(x);
          points[i].y=(FXshort)PyInt_AsLong(y);
          }
        else{
          points[i].x=0;
          points[i].y=0;
          }
        }
      self->drawLines(points,npoints);
      delete [] points;
      }
static PyObject *_wrap_FX_DC_drawLines(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    PyObject * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","pointlist", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_DC_drawLines",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_drawLines. Expected _FXDC_p.");
        return NULL;
        }
    }
{
  _arg1 = _obj1;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDC_drawLines(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_drawLinesRel(_swigobj,_swigarg0,_swigarg1)  (_swigobj->drawLinesRel(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_DC_drawLinesRel(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXPoint * _arg1;
    FXuint  _arg2;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","points","npoints", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOi:FX_DC_drawLinesRel",_kwnames,&_argo0,&_argo1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_drawLinesRel. Expected _FXDC_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXPoint_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_DC_drawLinesRel. Expected _FXPoint_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_drawLinesRel(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_drawLineSegments(_swigobj,_swigarg0,_swigarg1)  (_swigobj->drawLineSegments(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_DC_drawLineSegments(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXSegment * _arg1;
    FXuint  _arg2;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","segments","nsegments", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOi:FX_DC_drawLineSegments",_kwnames,&_argo0,&_argo1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_drawLineSegments. Expected _FXDC_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXSegment_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_DC_drawLineSegments. Expected _FXSegment_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_drawLineSegments(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_drawRectangle(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->drawRectangle(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FX_DC_drawRectangle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FX_DC_drawRectangle",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_drawRectangle. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_drawRectangle(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_drawRectangles(_swigobj,_swigarg0,_swigarg1)  (_swigobj->drawRectangles(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_DC_drawRectangles(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXRectangle * _arg1;
    FXuint  _arg2;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","rectangles","nrectangles", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOi:FX_DC_drawRectangles",_kwnames,&_argo0,&_argo1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_drawRectangles. Expected _FXDC_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXRectangle_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_DC_drawRectangles. Expected _FXRectangle_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_drawRectangles(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_drawArc(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5)  (_swigobj->drawArc(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5))
static PyObject *_wrap_FX_DC_drawArc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    FXint  _arg5;
    FXint  _arg6;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h","ang1","ang2", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiiiii:FX_DC_drawArc",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_drawArc. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_drawArc(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_drawArcs(_swigobj,_swigarg0,_swigarg1)  (_swigobj->drawArcs(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_DC_drawArcs(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXArc * _arg1;
    FXuint  _arg2;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","arcs","narcs", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOi:FX_DC_drawArcs",_kwnames,&_argo0,&_argo1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_drawArcs. Expected _FXDC_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXArc_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_DC_drawArcs. Expected _FXArc_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_drawArcs(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_fillRectangle(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->fillRectangle(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FX_DC_fillRectangle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FX_DC_fillRectangle",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_fillRectangle. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_fillRectangle(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_fillRectangles(_swigobj,_swigarg0,_swigarg1)  (_swigobj->fillRectangles(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_DC_fillRectangles(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXRectangle * _arg1;
    FXuint  _arg2;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","rectangles","nrectangles", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOi:FX_DC_fillRectangles",_kwnames,&_argo0,&_argo1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_fillRectangles. Expected _FXDC_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXRectangle_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_DC_fillRectangles. Expected _FXRectangle_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_fillRectangles(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_fillArc(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5)  (_swigobj->fillArc(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5))
static PyObject *_wrap_FX_DC_fillArc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    FXint  _arg5;
    FXint  _arg6;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h","ang1","ang2", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiiiii:FX_DC_fillArc",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_fillArc. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_fillArc(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_fillArcs(_swigobj,_swigarg0,_swigarg1)  (_swigobj->fillArcs(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_DC_fillArcs(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXArc * _arg1;
    FXuint  _arg2;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","arcs","narcs", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOi:FX_DC_fillArcs",_kwnames,&_argo0,&_argo1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_fillArcs. Expected _FXDC_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXArc_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_DC_fillArcs. Expected _FXArc_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_fillArcs(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_fillPolygon(_swigobj,_swigarg0,_swigarg1)  (_swigobj->fillPolygon(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_DC_fillPolygon(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXPoint * _arg1;
    FXuint  _arg2;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","points","npoints", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOi:FX_DC_fillPolygon",_kwnames,&_argo0,&_argo1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_fillPolygon. Expected _FXDC_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXPoint_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_DC_fillPolygon. Expected _FXPoint_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_fillPolygon(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_fillConcavePolygon(_swigobj,_swigarg0,_swigarg1)  (_swigobj->fillConcavePolygon(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_DC_fillConcavePolygon(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXPoint * _arg1;
    FXuint  _arg2;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","points","npoints", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOi:FX_DC_fillConcavePolygon",_kwnames,&_argo0,&_argo1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_fillConcavePolygon. Expected _FXDC_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXPoint_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_DC_fillConcavePolygon. Expected _FXPoint_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_fillConcavePolygon(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_fillComplexPolygon(_swigobj,_swigarg0,_swigarg1)  (_swigobj->fillComplexPolygon(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_DC_fillComplexPolygon(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXPoint * _arg1;
    FXuint  _arg2;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","points","npoints", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOi:FX_DC_fillComplexPolygon",_kwnames,&_argo0,&_argo1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_fillComplexPolygon. Expected _FXDC_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXPoint_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_DC_fillComplexPolygon. Expected _FXPoint_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_fillComplexPolygon(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_fillPolygonRel(_swigobj,_swigarg0,_swigarg1)  (_swigobj->fillPolygonRel(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_DC_fillPolygonRel(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXPoint * _arg1;
    FXuint  _arg2;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","points","npoints", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOi:FX_DC_fillPolygonRel",_kwnames,&_argo0,&_argo1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_fillPolygonRel. Expected _FXDC_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXPoint_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_DC_fillPolygonRel. Expected _FXPoint_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_fillPolygonRel(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_fillConcavePolygonRel(_swigobj,_swigarg0,_swigarg1)  (_swigobj->fillConcavePolygonRel(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_DC_fillConcavePolygonRel(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXPoint * _arg1;
    FXuint  _arg2;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","points","npoints", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOi:FX_DC_fillConcavePolygonRel",_kwnames,&_argo0,&_argo1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_fillConcavePolygonRel. Expected _FXDC_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXPoint_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_DC_fillConcavePolygonRel. Expected _FXPoint_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_fillConcavePolygonRel(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_fillComplexPolygonRel(_swigobj,_swigarg0,_swigarg1)  (_swigobj->fillComplexPolygonRel(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_DC_fillComplexPolygonRel(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXPoint * _arg1;
    FXuint  _arg2;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","points","npoints", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOi:FX_DC_fillComplexPolygonRel",_kwnames,&_argo0,&_argo1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_fillComplexPolygonRel. Expected _FXDC_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXPoint_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_DC_fillComplexPolygonRel. Expected _FXPoint_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_fillComplexPolygonRel(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_drawHashBox(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4)  (_swigobj->drawHashBox(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4))
static PyObject *_wrap_FX_DC_drawHashBox(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    FXint  _arg5 = (FXint ) 1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h","b", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii|i:FX_DC_drawHashBox",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4,&_arg5)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_drawHashBox. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_drawHashBox(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_drawFocusRectangle(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->drawFocusRectangle(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FX_DC_drawFocusRectangle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FX_DC_drawFocusRectangle",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_drawFocusRectangle. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_drawFocusRectangle(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_drawArea(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6)  (_swigobj->drawArea(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6))
static PyObject *_wrap_FX_DC_drawArea(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXDrawable * _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    FXint  _arg5;
    FXint  _arg6;
    FXint  _arg7;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","source","sx","sy","sw","sh","dx","dy", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiiiiii:FX_DC_drawArea",_kwnames,&_argo0,&_argo1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_drawArea. Expected _FXDC_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXDrawable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_DC_drawArea. Expected _FXDrawable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_drawArea(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_drawImage(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->drawImage(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_DC_drawImage(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXImage * _arg1;
    FXint  _arg2;
    FXint  _arg3;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","image","dx","dy", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOii:FX_DC_drawImage",_kwnames,&_argo0,&_argo1,&_arg2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_drawImage. Expected _FXDC_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXImage_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_DC_drawImage. Expected _FXImage_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_drawImage(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_drawBitmap(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->drawBitmap(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_DC_drawBitmap(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXBitmap * _arg1;
    FXint  _arg2;
    FXint  _arg3;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","bitmap","dx","dy", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOii:FX_DC_drawBitmap",_kwnames,&_argo0,&_argo1,&_arg2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_drawBitmap. Expected _FXDC_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXBitmap_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_DC_drawBitmap. Expected _FXBitmap_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_drawBitmap(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_drawIcon(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->drawIcon(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_DC_drawIcon(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXIcon * _arg1;
    FXint  _arg2;
    FXint  _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","icon","dx","dy", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOii:FX_DC_drawIcon",_kwnames,&_argo0,&_obj1,&_arg2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_drawIcon. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_drawIcon(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_drawIconShaded(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->drawIconShaded(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_DC_drawIconShaded(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXIcon * _arg1;
    FXint  _arg2;
    FXint  _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","icon","dx","dy", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOii:FX_DC_drawIconShaded",_kwnames,&_argo0,&_obj1,&_arg2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_drawIconShaded. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_drawIconShaded(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_drawIconSunken(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->drawIconSunken(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_DC_drawIconSunken(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXIcon * _arg1;
    FXint  _arg2;
    FXint  _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","icon","dx","dy", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOii:FX_DC_drawIconSunken",_kwnames,&_argo0,&_obj1,&_arg2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_drawIconSunken. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_drawIconSunken(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_drawText(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->drawText(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FX_DC_drawText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXchar * _arg3;
    FXuint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","string","length", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiisi:FX_DC_drawText",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_drawText. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_drawText(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_drawImageText(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->drawImageText(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FX_DC_drawImageText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXchar * _arg3;
    FXuint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","string","length", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiisi:FX_DC_drawImageText",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_drawImageText. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_drawImageText(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_setForeground(_swigobj,_swigarg0)  (_swigobj->setForeground(_swigarg0))
static PyObject *_wrap_FX_DC_setForeground(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_DC_setForeground",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_setForeground. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_setForeground(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_setBackground(_swigobj,_swigarg0)  (_swigobj->setBackground(_swigarg0))
static PyObject *_wrap_FX_DC_setBackground(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_DC_setBackground",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_setBackground. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_setBackground(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_setDashes(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->setDashes(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_DC_setDashes(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXuint  _arg1;
    FXchar * _arg2;
    FXuint  _arg3;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","dashoffset","dashpattern","dashlength", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oisi:FX_DC_setDashes",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_setDashes. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_setDashes(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_getDashPattern(_swigobj)  (_swigobj->getDashPattern())
static PyObject *_wrap_FX_DC_getDashPattern(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXchar * _result;
    FXDC * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_DC_getDashPattern",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_getDashPattern. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXchar *)FX_DC_getDashPattern(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("s", _result);
    return _resultobj;
}

#define FX_DC_getDashOffset(_swigobj)  (_swigobj->getDashOffset())
static PyObject *_wrap_FX_DC_getDashOffset(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXDC * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_DC_getDashOffset",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_getDashOffset. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )FX_DC_getDashOffset(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_DC_getDashLength(_swigobj)  (_swigobj->getDashLength())
static PyObject *_wrap_FX_DC_getDashLength(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXDC * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_DC_getDashLength",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_getDashLength. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )FX_DC_getDashLength(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_DC_setLineWidth(_swigobj,_swigarg0)  (_swigobj->setLineWidth(_swigarg0))
static PyObject *_wrap_FX_DC_setLineWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXuint  _arg1 = (FXuint ) 0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","linewidth", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|i:FX_DC_setLineWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_setLineWidth. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_setLineWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_getLineWidth(_swigobj)  (_swigobj->getLineWidth())
static PyObject *_wrap_FX_DC_getLineWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXDC * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_DC_getLineWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_getLineWidth. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )FX_DC_getLineWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_DC_setLineCap(_swigobj,_swigarg0)  (_swigobj->setLineCap(_swigarg0))
static PyObject *_wrap_FX_DC_setLineCap(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXCapStyle  _arg1 = (FXCapStyle ) (CAP_BUTT);
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","capstyle", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|i:FX_DC_setLineCap",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_setLineCap. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_setLineCap(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_getLineCap(_swigobj)  (_swigobj->getLineCap())
static PyObject *_wrap_FX_DC_getLineCap(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXCapStyle  _result;
    FXDC * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_DC_getLineCap",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_getLineCap. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXCapStyle )FX_DC_getLineCap(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_DC_setLineJoin(_swigobj,_swigarg0)  (_swigobj->setLineJoin(_swigarg0))
static PyObject *_wrap_FX_DC_setLineJoin(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXJoinStyle  _arg1 = (FXJoinStyle ) (JOIN_MITER);
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","joinstyle", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|i:FX_DC_setLineJoin",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_setLineJoin. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_setLineJoin(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_getLineJoin(_swigobj)  (_swigobj->getLineJoin())
static PyObject *_wrap_FX_DC_getLineJoin(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXJoinStyle  _result;
    FXDC * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_DC_getLineJoin",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_getLineJoin. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXJoinStyle )FX_DC_getLineJoin(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_DC_setLineStyle(_swigobj,_swigarg0)  (_swigobj->setLineStyle(_swigarg0))
static PyObject *_wrap_FX_DC_setLineStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXLineStyle  _arg1 = (FXLineStyle ) (LINE_SOLID);
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","linestyle", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|i:FX_DC_setLineStyle",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_setLineStyle. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_setLineStyle(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_getLineStyle(_swigobj)  (_swigobj->getLineStyle())
static PyObject *_wrap_FX_DC_getLineStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXLineStyle  _result;
    FXDC * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_DC_getLineStyle",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_getLineStyle. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXLineStyle )FX_DC_getLineStyle(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_DC_setFillStyle(_swigobj,_swigarg0)  (_swigobj->setFillStyle(_swigarg0))
static PyObject *_wrap_FX_DC_setFillStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXFillStyle  _arg1 = (FXFillStyle ) (FILL_SOLID);
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","fillstyle", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|i:FX_DC_setFillStyle",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_setFillStyle. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_setFillStyle(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_getFillStyle(_swigobj)  (_swigobj->getFillStyle())
static PyObject *_wrap_FX_DC_getFillStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFillStyle  _result;
    FXDC * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_DC_getFillStyle",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_getFillStyle. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXFillStyle )FX_DC_getFillStyle(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_DC_setFillRule(_swigobj,_swigarg0)  (_swigobj->setFillRule(_swigarg0))
static PyObject *_wrap_FX_DC_setFillRule(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXFillRule  _arg1 = (FXFillRule ) (RULE_EVEN_ODD);
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","fillrule", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|i:FX_DC_setFillRule",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_setFillRule. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_setFillRule(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_getFillRule(_swigobj)  (_swigobj->getFillRule())
static PyObject *_wrap_FX_DC_getFillRule(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFillRule  _result;
    FXDC * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_DC_getFillRule",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_getFillRule. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXFillRule )FX_DC_getFillRule(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_DC_setFunction(_swigobj,_swigarg0)  (_swigobj->setFunction(_swigarg0))
static PyObject *_wrap_FX_DC_setFunction(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXFunction  _arg1 = (FXFunction ) (BLT_SRC);
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","func", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|i:FX_DC_setFunction",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_setFunction. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_setFunction(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_getFunction(_swigobj)  (_swigobj->getFunction())
static PyObject *_wrap_FX_DC_getFunction(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFunction  _result;
    FXDC * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_DC_getFunction",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_getFunction. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXFunction )FX_DC_getFunction(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_DC_setTile(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->setTile(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_DC_setTile(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXImage * _arg1;
    FXint  _arg2 = (FXint ) 0;
    FXint  _arg3 = (FXint ) 0;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","tile","dx","dy", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|ii:FX_DC_setTile",_kwnames,&_argo0,&_argo1,&_arg2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_setTile. Expected _FXDC_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXImage_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_DC_setTile. Expected _FXImage_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_setTile(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_getTile(_swigobj)  (_swigobj->getTile())
static PyObject *_wrap_FX_DC_getTile(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXImage * _result;
    FXDC * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_DC_getTile",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_getTile. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXImage *)FX_DC_getTile(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_DC_setStipple(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->setStipple(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_DC_setStipple(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXBitmap * _arg1;
    FXint  _arg2 = (FXint ) 0;
    FXint  _arg3 = (FXint ) 0;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","bitmap","dx","dy", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|ii:FX_DC_setStipple",_kwnames,&_argo0,&_argo1,&_arg2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_setStipple. Expected _FXDC_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXBitmap_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_DC_setStipple. Expected _FXBitmap_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_setStipple(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_getStippleBitmap(_swigobj)  (_swigobj->getStippleBitmap())
static PyObject *_wrap_FX_DC_getStippleBitmap(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXBitmap * _result;
    FXDC * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_DC_getStippleBitmap",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_getStippleBitmap. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXBitmap *)FX_DC_getStippleBitmap(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_DC_setStipple2(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->setStipple(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_DC_setStipple2(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXStipplePattern  _arg1;
    FXint  _arg2 = (FXint ) 0;
    FXint  _arg3 = (FXint ) 0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pat","dx","dy", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi|ii:FX_DC_setStipple2",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_setStipple2. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_setStipple2(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_getStipplePattern(_swigobj)  (_swigobj->getStipplePattern())
static PyObject *_wrap_FX_DC_getStipplePattern(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXStipplePattern  _result;
    FXDC * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_DC_getStipplePattern",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_getStipplePattern. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXStipplePattern )FX_DC_getStipplePattern(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_DC_setClipRegion(_swigobj,_swigarg0)  (_swigobj->setClipRegion(_swigarg0))
static PyObject *_wrap_FX_DC_setClipRegion(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXRegion * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","region", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_DC_setClipRegion",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_setClipRegion. Expected _FXDC_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXRegion_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_DC_setClipRegion. Expected _FXRegion_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_setClipRegion(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_setClipRectangle2(_swigobj,_swigarg0)  (_swigobj->setClipRectangle(_swigarg0))
static PyObject *_wrap_FX_DC_setClipRectangle2(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXRectangle * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","rectangle", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_DC_setClipRectangle2",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_setClipRectangle2. Expected _FXDC_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXRectangle_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_DC_setClipRectangle2. Expected _FXRectangle_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_setClipRectangle2(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_getClipRectangle(_swigobj)  (_swigobj->getClipRectangle())
static PyObject *_wrap_FX_DC_getClipRectangle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXRectangle * _result;
    FXDC * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_DC_getClipRectangle",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_getClipRectangle. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        const FXRectangle & _result_ref = FX_DC_getClipRectangle(_arg0);
    _result = (FXRectangle *) &_result_ref;

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXRectangle_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_DC_setClipRectangle(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->setClipRectangle(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FX_DC_setClipRectangle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FX_DC_setClipRectangle",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_setClipRectangle. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_setClipRectangle(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_getClipX(_swigobj)  (_swigobj->getClipX())
static PyObject *_wrap_FX_DC_getClipX(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXDC * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_DC_getClipX",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_getClipX. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_DC_getClipX(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_DC_getClipY(_swigobj)  (_swigobj->getClipY())
static PyObject *_wrap_FX_DC_getClipY(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXDC * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_DC_getClipY",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_getClipY. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_DC_getClipY(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_DC_getClipWidth(_swigobj)  (_swigobj->getClipWidth())
static PyObject *_wrap_FX_DC_getClipWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXDC * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_DC_getClipWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_getClipWidth. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_DC_getClipWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_DC_getClipHeight(_swigobj)  (_swigobj->getClipHeight())
static PyObject *_wrap_FX_DC_getClipHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXDC * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_DC_getClipHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_getClipHeight. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_DC_getClipHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_DC_clearClipRectangle(_swigobj)  (_swigobj->clearClipRectangle())
static PyObject *_wrap_FX_DC_clearClipRectangle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_DC_clearClipRectangle",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_clearClipRectangle. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_clearClipRectangle(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_setClipMask(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->setClipMask(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_DC_setClipMask(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXBitmap * _arg1;
    FXint  _arg2 = (FXint ) 0;
    FXint  _arg3 = (FXint ) 0;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","mask","dx","dy", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|ii:FX_DC_setClipMask",_kwnames,&_argo0,&_argo1,&_arg2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_setClipMask. Expected _FXDC_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXBitmap_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_DC_setClipMask. Expected _FXBitmap_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_setClipMask(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_clearClipMask(_swigobj)  (_swigobj->clearClipMask())
static PyObject *_wrap_FX_DC_clearClipMask(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_DC_clearClipMask",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_clearClipMask. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_clearClipMask(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_setTextFont(_swigobj,_swigarg0)  (_swigobj->setTextFont(_swigarg0))
static PyObject *_wrap_FX_DC_setTextFont(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXFont * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","font", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_DC_setTextFont",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_setTextFont. Expected _FXDC_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXFont_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_DC_setTextFont. Expected _FXFont_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_setTextFont(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DC_getTextFont(_swigobj)  (_swigobj->getTextFont())
static PyObject *_wrap_FX_DC_getTextFont(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFont * _result;
    FXDC * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_DC_getTextFont",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_getTextFont. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXFont *)FX_DC_getTextFont(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_DC_clipChildren(_swigobj,_swigarg0)  (_swigobj->clipChildren(_swigarg0))
static PyObject *_wrap_FX_DC_clipChildren(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","yes", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FX_DC_clipChildren",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DC_clipChildren. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DC_clipChildren(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define delete_FXDC(_swigobj) (delete _swigobj)
static PyObject *_wrap_delete_FX_DC(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDC * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:delete_FX_DC",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDC_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of delete_FX_DC. Expected _FXDC_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        delete_FXDC(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXPyDCToFXDC(void *ptr) {
    FXPyDC *src;
    FXDC *dest;
    src = (FXPyDC *) ptr;
    dest = (FXDC *) src;
    return (void *) dest;
}

#define new_FXDC(_swigarg0) (new FXPyDC(_swigarg0))
static PyObject *_wrap_new_FXDC(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDC * _result;
    FXApp * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "app", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:new_FXDC",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXApp_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FXDC. Expected _FXApp_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyDC *)new_FXDC(_arg0);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyDC_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

static void *SwigFXDCWindowToFXDC(void *ptr) {
    FXDCWindow *src;
    FXDC *dest;
    src = (FXDCWindow *) ptr;
    dest = (FXDC *) src;
    return (void *) dest;
}

#define new_FX_DCWindow(_swigarg0) (new FXDCWindow(_swigarg0))
static PyObject *_wrap_new_FX_DCWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDCWindow * _result;
    FXDrawable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "arg1", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:new_FX_DCWindow",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDrawable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FX_DCWindow. Expected _FXDrawable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXDCWindow *)new_FX_DCWindow(_arg0);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXDCWindow_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_DCWindow_begin(_swigobj,_swigarg0)  (_swigobj->begin(_swigarg0))
static PyObject *_wrap_FX_DCWindow_begin(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDCWindow * _arg0;
    FXDrawable * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","arg2", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_DCWindow_begin",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDCWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DCWindow_begin. Expected _FXDCWindow_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXDrawable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_DCWindow_begin. Expected _FXDrawable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DCWindow_begin(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DCWindow_end(_swigobj)  (_swigobj->end())
static PyObject *_wrap_FX_DCWindow_end(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDCWindow * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_DCWindow_end",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDCWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DCWindow_end. Expected _FXDCWindow_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DCWindow_end(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define delete_FXDCWindow(_swigobj) (delete _swigobj)
static PyObject *_wrap_delete_FX_DCWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDCWindow * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:delete_FX_DCWindow",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDCWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of delete_FX_DCWindow. Expected _FXDCWindow_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        delete_FXDCWindow(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXPyDCWindowToFXDCWindow(void *ptr) {
    FXPyDCWindow *src;
    FXDCWindow *dest;
    src = (FXPyDCWindow *) ptr;
    dest = (FXDCWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyDCWindowToFXDC(void *ptr) {
    FXPyDCWindow *src;
    FXDC *dest;
    src = (FXPyDCWindow *) ptr;
    dest = (FXDC *) src;
    return (void *) dest;
}

#define new_FXDCWindow(_swigarg0) (new FXPyDCWindow(_swigarg0))
static PyObject *_wrap_new_FXDCWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDCWindow * _result;
    FXDrawable * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "arg1", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:new_FXDCWindow",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDrawable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FXDCWindow. Expected _FXDrawable_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyDCWindow *)new_FXDCWindow(_arg0);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyDCWindow_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

static void *SwigFXDCPrintToFXDC(void *ptr) {
    FXDCPrint *src;
    FXDC *dest;
    src = (FXDCPrint *) ptr;
    dest = (FXDC *) src;
    return (void *) dest;
}

#define new_FX_DCPrint(_swigarg0) (new FXDCPrint(_swigarg0))
static PyObject *_wrap_new_FX_DCPrint(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDCPrint * _result;
    FXApp * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "a", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:new_FX_DCPrint",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXApp_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FX_DCPrint. Expected _FXApp_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXDCPrint *)new_FX_DCPrint(_arg0);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXDCPrint_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_DCPrint_beginPrint(_swigobj,_swigarg0)  (_swigobj->beginPrint(_swigarg0))
static PyObject *_wrap_FX_DCPrint_beginPrint(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXDCPrint * _arg0;
    FXPrinter * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","job", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_DCPrint_beginPrint",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDCPrint_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DCPrint_beginPrint. Expected _FXDCPrint_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXPrinter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_DCPrint_beginPrint. Expected _FXPrinter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_DCPrint_beginPrint(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_DCPrint_endPrint(_swigobj)  (_swigobj->endPrint())
static PyObject *_wrap_FX_DCPrint_endPrint(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXDCPrint * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_DCPrint_endPrint",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDCPrint_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DCPrint_endPrint. Expected _FXDCPrint_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_DCPrint_endPrint(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_DCPrint_beginPage(_swigobj,_swigarg0)  (_swigobj->beginPage(_swigarg0))
static PyObject *_wrap_FX_DCPrint_beginPage(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXDCPrint * _arg0;
    FXuint  _arg1 = (FXuint ) 1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","page", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|i:FX_DCPrint_beginPage",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDCPrint_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DCPrint_beginPage. Expected _FXDCPrint_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_DCPrint_beginPage(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_DCPrint_endPage(_swigobj)  (_swigobj->endPage())
static PyObject *_wrap_FX_DCPrint_endPage(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXDCPrint * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_DCPrint_endPage",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDCPrint_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DCPrint_endPage. Expected _FXDCPrint_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_DCPrint_endPage(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define delete_FXDCPrint(_swigobj) (delete _swigobj)
static PyObject *_wrap_delete_FX_DCPrint(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDCPrint * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:delete_FX_DCPrint",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDCPrint_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of delete_FX_DCPrint. Expected _FXDCPrint_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        delete_FXDCPrint(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXPyDCPrintToFXDCPrint(void *ptr) {
    FXPyDCPrint *src;
    FXDCPrint *dest;
    src = (FXPyDCPrint *) ptr;
    dest = (FXDCPrint *) src;
    return (void *) dest;
}

static void *SwigFXPyDCPrintToFXDC(void *ptr) {
    FXPyDCPrint *src;
    FXDC *dest;
    src = (FXPyDCPrint *) ptr;
    dest = (FXDC *) src;
    return (void *) dest;
}

#define new_FXDCPrint(_swigarg0) (new FXPyDCPrint(_swigarg0))
static PyObject *_wrap_new_FXDCPrint(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDCPrint * _result;
    FXApp * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "app", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:new_FXDCPrint",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXApp_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FXDCPrint. Expected _FXApp_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyDCPrint *)new_FXDCPrint(_arg0);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyDCPrint_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

static void *SwigFXHorizontalSeparatorToFXFrame(void *ptr) {
    FXHorizontalSeparator *src;
    FXFrame *dest;
    src = (FXHorizontalSeparator *) ptr;
    dest = (FXFrame *) src;
    return (void *) dest;
}

static void *SwigFXHorizontalSeparatorToFXWindow(void *ptr) {
    FXHorizontalSeparator *src;
    FXWindow *dest;
    src = (FXHorizontalSeparator *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXHorizontalSeparatorToFXDrawable(void *ptr) {
    FXHorizontalSeparator *src;
    FXDrawable *dest;
    src = (FXHorizontalSeparator *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXHorizontalSeparatorToFXId(void *ptr) {
    FXHorizontalSeparator *src;
    FXId *dest;
    src = (FXHorizontalSeparator *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXHorizontalSeparatorToFXObject(void *ptr) {
    FXHorizontalSeparator *src;
    FXObject *dest;
    src = (FXHorizontalSeparator *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FX_HorizontalSeparator(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9) (new FXHorizontalSeparator(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9))
static PyObject *_wrap_new_FX_HorizontalSeparator(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXHorizontalSeparator * _result;
    FXComposite * _arg0;
    FXuint  _arg1 = (FXuint ) (SEPARATOR_GROOVE)|LAYOUT_FILL_X;
    FXint  _arg2 = (FXint ) 0;
    FXint  _arg3 = (FXint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 1;
    FXint  _arg7 = (FXint ) 1;
    FXint  _arg8 = (FXint ) 0;
    FXint  _arg9 = (FXint ) 0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "p","opts","x","y","w","h","pl","pr","pt","pb", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|iiiiiiiii:new_FX_HorizontalSeparator",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7,&_arg8,&_arg9)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FX_HorizontalSeparator. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXHorizontalSeparator *)new_FX_HorizontalSeparator(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7,_arg8,_arg9);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXHorizontalSeparator_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

static void *SwigFXPyHorizontalSeparatorToFXHorizontalSeparator(void *ptr) {
    FXPyHorizontalSeparator *src;
    FXHorizontalSeparator *dest;
    src = (FXPyHorizontalSeparator *) ptr;
    dest = (FXHorizontalSeparator *) src;
    return (void *) dest;
}

static void *SwigFXPyHorizontalSeparatorToFXFrame(void *ptr) {
    FXPyHorizontalSeparator *src;
    FXFrame *dest;
    src = (FXPyHorizontalSeparator *) ptr;
    dest = (FXFrame *) src;
    return (void *) dest;
}

static void *SwigFXPyHorizontalSeparatorToFXWindow(void *ptr) {
    FXPyHorizontalSeparator *src;
    FXWindow *dest;
    src = (FXPyHorizontalSeparator *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyHorizontalSeparatorToFXDrawable(void *ptr) {
    FXPyHorizontalSeparator *src;
    FXDrawable *dest;
    src = (FXPyHorizontalSeparator *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPyHorizontalSeparatorToFXId(void *ptr) {
    FXPyHorizontalSeparator *src;
    FXId *dest;
    src = (FXPyHorizontalSeparator *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPyHorizontalSeparatorToFXObject(void *ptr) {
    FXPyHorizontalSeparator *src;
    FXObject *dest;
    src = (FXPyHorizontalSeparator *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXHorizontalSeparator(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9) (new FXPyHorizontalSeparator(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9))
static PyObject *_wrap_new_FXHorizontalSeparator(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyHorizontalSeparator * _result;
    FXComposite * _arg0;
    FXuint  _arg1 = (FXuint ) (SEPARATOR_GROOVE)|LAYOUT_FILL_X;
    FXint  _arg2 = (FXint ) 0;
    FXint  _arg3 = (FXint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 1;
    FXint  _arg7 = (FXint ) 1;
    FXint  _arg8 = (FXint ) 0;
    FXint  _arg9 = (FXint ) 0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "p","opts","x","y","w","h","pl","pr","pt","pb", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|iiiiiiiii:new_FXHorizontalSeparator",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7,&_arg8,&_arg9)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FXHorizontalSeparator. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyHorizontalSeparator *)new_FXHorizontalSeparator(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7,_arg8,_arg9);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyHorizontalSeparator_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FXHorizontalSeparator_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXHorizontalSeparator_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyHorizontalSeparator * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXHorizontalSeparator_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalSeparator_onDefault. Expected _FXPyHorizontalSeparator_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXHorizontalSeparator_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXHorizontalSeparator_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXHorizontalSeparator_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyHorizontalSeparator * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHorizontalSeparator_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalSeparator_create. Expected _FXPyHorizontalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXHorizontalSeparator_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXHorizontalSeparator_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXHorizontalSeparator_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyHorizontalSeparator * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHorizontalSeparator_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalSeparator_destroy. Expected _FXPyHorizontalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXHorizontalSeparator_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXHorizontalSeparator_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXHorizontalSeparator_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyHorizontalSeparator * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHorizontalSeparator_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalSeparator_detach. Expected _FXPyHorizontalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXHorizontalSeparator_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXHorizontalSeparator_resize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_resize(_swigarg0,_swigarg1))
static PyObject *_wrap_FXHorizontalSeparator_resize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyHorizontalSeparator * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXHorizontalSeparator_resize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalSeparator_resize. Expected _FXPyHorizontalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXHorizontalSeparator_resize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXHorizontalSeparator_getDefaultWidth(_swigobj)  (_swigobj->_getDefaultWidth())
static PyObject *_wrap_FXHorizontalSeparator_getDefaultWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyHorizontalSeparator * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHorizontalSeparator_getDefaultWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalSeparator_getDefaultWidth. Expected _FXPyHorizontalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXHorizontalSeparator_getDefaultWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXHorizontalSeparator_getDefaultHeight(_swigobj)  (_swigobj->_getDefaultHeight())
static PyObject *_wrap_FXHorizontalSeparator_getDefaultHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyHorizontalSeparator * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHorizontalSeparator_getDefaultHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalSeparator_getDefaultHeight. Expected _FXPyHorizontalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXHorizontalSeparator_getDefaultHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXHorizontalSeparator_show(_swigobj)  (_swigobj->_show())
static PyObject *_wrap_FXHorizontalSeparator_show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyHorizontalSeparator * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHorizontalSeparator_show",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalSeparator_show. Expected _FXPyHorizontalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXHorizontalSeparator_show(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXHorizontalSeparator_hide(_swigobj)  (_swigobj->_hide())
static PyObject *_wrap_FXHorizontalSeparator_hide(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyHorizontalSeparator * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHorizontalSeparator_hide",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalSeparator_hide. Expected _FXPyHorizontalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXHorizontalSeparator_hide(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXHorizontalSeparator_enable(_swigobj)  (_swigobj->_enable())
static PyObject *_wrap_FXHorizontalSeparator_enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyHorizontalSeparator * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHorizontalSeparator_enable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalSeparator_enable. Expected _FXPyHorizontalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXHorizontalSeparator_enable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXHorizontalSeparator_disable(_swigobj)  (_swigobj->_disable())
static PyObject *_wrap_FXHorizontalSeparator_disable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyHorizontalSeparator * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHorizontalSeparator_disable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalSeparator_disable. Expected _FXPyHorizontalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXHorizontalSeparator_disable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXHorizontalSeparator_canFocus(_swigobj)  (_swigobj->_canFocus())
static PyObject *_wrap_FXHorizontalSeparator_canFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyHorizontalSeparator * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHorizontalSeparator_canFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalSeparator_canFocus. Expected _FXPyHorizontalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXHorizontalSeparator_canFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXHorizontalSeparator_setFocus(_swigobj)  (_swigobj->_setFocus())
static PyObject *_wrap_FXHorizontalSeparator_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyHorizontalSeparator * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHorizontalSeparator_setFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalSeparator_setFocus. Expected _FXPyHorizontalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXHorizontalSeparator_setFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXHorizontalSeparator_killFocus(_swigobj)  (_swigobj->_killFocus())
static PyObject *_wrap_FXHorizontalSeparator_killFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyHorizontalSeparator * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHorizontalSeparator_killFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalSeparator_killFocus. Expected _FXPyHorizontalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXHorizontalSeparator_killFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXHorizontalSeparator_setDefault(_swigobj,_swigarg0)  (_swigobj->_setDefault(_swigarg0))
static PyObject *_wrap_FXHorizontalSeparator_setDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyHorizontalSeparator * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FXHorizontalSeparator_setDefault",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalSeparator_setDefault. Expected _FXPyHorizontalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXHorizontalSeparator_setDefault(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXHorizontalSeparator_recalc(_swigobj)  (_swigobj->_recalc())
static PyObject *_wrap_FXHorizontalSeparator_recalc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyHorizontalSeparator * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHorizontalSeparator_recalc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalSeparator_recalc. Expected _FXPyHorizontalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXHorizontalSeparator_recalc(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXHorizontalSeparator_layout(_swigobj)  (_swigobj->_layout())
static PyObject *_wrap_FXHorizontalSeparator_layout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyHorizontalSeparator * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHorizontalSeparator_layout",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalSeparator_layout. Expected _FXPyHorizontalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXHorizontalSeparator_layout(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXHorizontalSeparator_lower(_swigobj)  (_swigobj->_lowerWindow())
static PyObject *_wrap_FXHorizontalSeparator_lower(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyHorizontalSeparator * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHorizontalSeparator_lower",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalSeparator_lower. Expected _FXPyHorizontalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXHorizontalSeparator_lower(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXHorizontalSeparator_move(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_move(_swigarg0,_swigarg1))
static PyObject *_wrap_FXHorizontalSeparator_move(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyHorizontalSeparator * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXHorizontalSeparator_move",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalSeparator_move. Expected _FXPyHorizontalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXHorizontalSeparator_move(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXHorizontalSeparator_position(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->_position(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FXHorizontalSeparator_position(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyHorizontalSeparator * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FXHorizontalSeparator_position",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalSeparator_position. Expected _FXPyHorizontalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXHorizontalSeparator_position(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXHorizontalSeparator_isComposite(_swigobj)  (_swigobj->_isComposite())
static PyObject *_wrap_FXHorizontalSeparator_isComposite(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyHorizontalSeparator * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHorizontalSeparator_isComposite",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalSeparator_isComposite. Expected _FXPyHorizontalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXHorizontalSeparator_isComposite(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXHorizontalSeparator_contains(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_contains(_swigarg0,_swigarg1))
static PyObject *_wrap_FXHorizontalSeparator_contains(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyHorizontalSeparator * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXHorizontalSeparator_contains",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalSeparator_contains. Expected _FXPyHorizontalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXHorizontalSeparator_contains(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXHorizontalSeparator_getWidthForHeight(_swigobj,_swigarg0)  (_swigobj->_getWidthForHeight(_swigarg0))
static PyObject *_wrap_FXHorizontalSeparator_getWidthForHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyHorizontalSeparator * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXHorizontalSeparator_getWidthForHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalSeparator_getWidthForHeight. Expected _FXPyHorizontalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXHorizontalSeparator_getWidthForHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXHorizontalSeparator_getHeightForWidth(_swigobj,_swigarg0)  (_swigobj->_getHeightForWidth(_swigarg0))
static PyObject *_wrap_FXHorizontalSeparator_getHeightForWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyHorizontalSeparator * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXHorizontalSeparator_getHeightForWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalSeparator_getHeightForWidth. Expected _FXPyHorizontalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXHorizontalSeparator_getHeightForWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXHorizontalSeparator_doesSaveUnder(_swigobj)  (_swigobj->_doesSaveUnder())
static PyObject *_wrap_FXHorizontalSeparator_doesSaveUnder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyHorizontalSeparator * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHorizontalSeparator_doesSaveUnder",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalSeparator_doesSaveUnder. Expected _FXPyHorizontalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXHorizontalSeparator_doesSaveUnder(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXHorizontalSeparator_reparent(_swigobj,_swigarg0)  (_swigobj->_reparent(_swigarg0))
static PyObject *_wrap_FXHorizontalSeparator_reparent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyHorizontalSeparator * _arg0;
    FXComposite * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","newparent", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXHorizontalSeparator_reparent",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalSeparator_reparent. Expected _FXPyHorizontalSeparator_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXHorizontalSeparator_reparent. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXHorizontalSeparator_reparent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXHorizontalSeparator_setBackColor(_swigobj,_swigarg0)  (_swigobj->_setBackColor(_swigarg0))
static PyObject *_wrap_FXHorizontalSeparator_setBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyHorizontalSeparator * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXHorizontalSeparator_setBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalSeparator_setBackColor. Expected _FXPyHorizontalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXHorizontalSeparator_setBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXVerticalSeparatorToFXFrame(void *ptr) {
    FXVerticalSeparator *src;
    FXFrame *dest;
    src = (FXVerticalSeparator *) ptr;
    dest = (FXFrame *) src;
    return (void *) dest;
}

static void *SwigFXVerticalSeparatorToFXWindow(void *ptr) {
    FXVerticalSeparator *src;
    FXWindow *dest;
    src = (FXVerticalSeparator *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXVerticalSeparatorToFXDrawable(void *ptr) {
    FXVerticalSeparator *src;
    FXDrawable *dest;
    src = (FXVerticalSeparator *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXVerticalSeparatorToFXId(void *ptr) {
    FXVerticalSeparator *src;
    FXId *dest;
    src = (FXVerticalSeparator *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXVerticalSeparatorToFXObject(void *ptr) {
    FXVerticalSeparator *src;
    FXObject *dest;
    src = (FXVerticalSeparator *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FX_VerticalSeparator(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9) (new FXVerticalSeparator(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9))
static PyObject *_wrap_new_FX_VerticalSeparator(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXVerticalSeparator * _result;
    FXComposite * _arg0;
    FXuint  _arg1 = (FXuint ) (SEPARATOR_GROOVE)|LAYOUT_FILL_Y;
    FXint  _arg2 = (FXint ) 0;
    FXint  _arg3 = (FXint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    FXint  _arg8 = (FXint ) 1;
    FXint  _arg9 = (FXint ) 1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "p","opts","x","y","w","h","pl","pr","pt","pb", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|iiiiiiiii:new_FX_VerticalSeparator",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7,&_arg8,&_arg9)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FX_VerticalSeparator. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXVerticalSeparator *)new_FX_VerticalSeparator(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7,_arg8,_arg9);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXVerticalSeparator_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

static void *SwigFXPyVerticalSeparatorToFXVerticalSeparator(void *ptr) {
    FXPyVerticalSeparator *src;
    FXVerticalSeparator *dest;
    src = (FXPyVerticalSeparator *) ptr;
    dest = (FXVerticalSeparator *) src;
    return (void *) dest;
}

static void *SwigFXPyVerticalSeparatorToFXFrame(void *ptr) {
    FXPyVerticalSeparator *src;
    FXFrame *dest;
    src = (FXPyVerticalSeparator *) ptr;
    dest = (FXFrame *) src;
    return (void *) dest;
}

static void *SwigFXPyVerticalSeparatorToFXWindow(void *ptr) {
    FXPyVerticalSeparator *src;
    FXWindow *dest;
    src = (FXPyVerticalSeparator *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyVerticalSeparatorToFXDrawable(void *ptr) {
    FXPyVerticalSeparator *src;
    FXDrawable *dest;
    src = (FXPyVerticalSeparator *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPyVerticalSeparatorToFXId(void *ptr) {
    FXPyVerticalSeparator *src;
    FXId *dest;
    src = (FXPyVerticalSeparator *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPyVerticalSeparatorToFXObject(void *ptr) {
    FXPyVerticalSeparator *src;
    FXObject *dest;
    src = (FXPyVerticalSeparator *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXVerticalSeparator(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9) (new FXPyVerticalSeparator(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9))
static PyObject *_wrap_new_FXVerticalSeparator(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyVerticalSeparator * _result;
    FXComposite * _arg0;
    FXuint  _arg1 = (FXuint ) (SEPARATOR_GROOVE)|LAYOUT_FILL_Y;
    FXint  _arg2 = (FXint ) 0;
    FXint  _arg3 = (FXint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    FXint  _arg8 = (FXint ) 1;
    FXint  _arg9 = (FXint ) 1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "p","opts","x","y","w","h","pl","pr","pt","pb", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|iiiiiiiii:new_FXVerticalSeparator",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7,&_arg8,&_arg9)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FXVerticalSeparator. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyVerticalSeparator *)new_FXVerticalSeparator(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7,_arg8,_arg9);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyVerticalSeparator_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FXVerticalSeparator_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXVerticalSeparator_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyVerticalSeparator * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXVerticalSeparator_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalSeparator_onDefault. Expected _FXPyVerticalSeparator_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXVerticalSeparator_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXVerticalSeparator_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXVerticalSeparator_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyVerticalSeparator * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXVerticalSeparator_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalSeparator_create. Expected _FXPyVerticalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXVerticalSeparator_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXVerticalSeparator_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXVerticalSeparator_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyVerticalSeparator * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXVerticalSeparator_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalSeparator_destroy. Expected _FXPyVerticalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXVerticalSeparator_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXVerticalSeparator_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXVerticalSeparator_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyVerticalSeparator * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXVerticalSeparator_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalSeparator_detach. Expected _FXPyVerticalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXVerticalSeparator_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXVerticalSeparator_resize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_resize(_swigarg0,_swigarg1))
static PyObject *_wrap_FXVerticalSeparator_resize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyVerticalSeparator * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXVerticalSeparator_resize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalSeparator_resize. Expected _FXPyVerticalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXVerticalSeparator_resize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXVerticalSeparator_getDefaultWidth(_swigobj)  (_swigobj->_getDefaultWidth())
static PyObject *_wrap_FXVerticalSeparator_getDefaultWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyVerticalSeparator * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXVerticalSeparator_getDefaultWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalSeparator_getDefaultWidth. Expected _FXPyVerticalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXVerticalSeparator_getDefaultWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXVerticalSeparator_getDefaultHeight(_swigobj)  (_swigobj->_getDefaultHeight())
static PyObject *_wrap_FXVerticalSeparator_getDefaultHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyVerticalSeparator * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXVerticalSeparator_getDefaultHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalSeparator_getDefaultHeight. Expected _FXPyVerticalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXVerticalSeparator_getDefaultHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXVerticalSeparator_show(_swigobj)  (_swigobj->_show())
static PyObject *_wrap_FXVerticalSeparator_show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyVerticalSeparator * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXVerticalSeparator_show",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalSeparator_show. Expected _FXPyVerticalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXVerticalSeparator_show(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXVerticalSeparator_hide(_swigobj)  (_swigobj->_hide())
static PyObject *_wrap_FXVerticalSeparator_hide(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyVerticalSeparator * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXVerticalSeparator_hide",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalSeparator_hide. Expected _FXPyVerticalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXVerticalSeparator_hide(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXVerticalSeparator_enable(_swigobj)  (_swigobj->_enable())
static PyObject *_wrap_FXVerticalSeparator_enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyVerticalSeparator * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXVerticalSeparator_enable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalSeparator_enable. Expected _FXPyVerticalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXVerticalSeparator_enable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXVerticalSeparator_disable(_swigobj)  (_swigobj->_disable())
static PyObject *_wrap_FXVerticalSeparator_disable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyVerticalSeparator * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXVerticalSeparator_disable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalSeparator_disable. Expected _FXPyVerticalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXVerticalSeparator_disable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXVerticalSeparator_canFocus(_swigobj)  (_swigobj->_canFocus())
static PyObject *_wrap_FXVerticalSeparator_canFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyVerticalSeparator * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXVerticalSeparator_canFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalSeparator_canFocus. Expected _FXPyVerticalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXVerticalSeparator_canFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXVerticalSeparator_setFocus(_swigobj)  (_swigobj->_setFocus())
static PyObject *_wrap_FXVerticalSeparator_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyVerticalSeparator * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXVerticalSeparator_setFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalSeparator_setFocus. Expected _FXPyVerticalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXVerticalSeparator_setFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXVerticalSeparator_killFocus(_swigobj)  (_swigobj->_killFocus())
static PyObject *_wrap_FXVerticalSeparator_killFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyVerticalSeparator * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXVerticalSeparator_killFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalSeparator_killFocus. Expected _FXPyVerticalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXVerticalSeparator_killFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXVerticalSeparator_setDefault(_swigobj,_swigarg0)  (_swigobj->_setDefault(_swigarg0))
static PyObject *_wrap_FXVerticalSeparator_setDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyVerticalSeparator * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FXVerticalSeparator_setDefault",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalSeparator_setDefault. Expected _FXPyVerticalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXVerticalSeparator_setDefault(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXVerticalSeparator_recalc(_swigobj)  (_swigobj->_recalc())
static PyObject *_wrap_FXVerticalSeparator_recalc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyVerticalSeparator * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXVerticalSeparator_recalc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalSeparator_recalc. Expected _FXPyVerticalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXVerticalSeparator_recalc(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXVerticalSeparator_layout(_swigobj)  (_swigobj->_layout())
static PyObject *_wrap_FXVerticalSeparator_layout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyVerticalSeparator * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXVerticalSeparator_layout",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalSeparator_layout. Expected _FXPyVerticalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXVerticalSeparator_layout(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXVerticalSeparator_lower(_swigobj)  (_swigobj->_lowerWindow())
static PyObject *_wrap_FXVerticalSeparator_lower(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyVerticalSeparator * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXVerticalSeparator_lower",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalSeparator_lower. Expected _FXPyVerticalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXVerticalSeparator_lower(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXVerticalSeparator_move(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_move(_swigarg0,_swigarg1))
static PyObject *_wrap_FXVerticalSeparator_move(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyVerticalSeparator * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXVerticalSeparator_move",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalSeparator_move. Expected _FXPyVerticalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXVerticalSeparator_move(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXVerticalSeparator_position(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->_position(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FXVerticalSeparator_position(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyVerticalSeparator * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FXVerticalSeparator_position",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalSeparator_position. Expected _FXPyVerticalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXVerticalSeparator_position(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXVerticalSeparator_isComposite(_swigobj)  (_swigobj->_isComposite())
static PyObject *_wrap_FXVerticalSeparator_isComposite(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyVerticalSeparator * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXVerticalSeparator_isComposite",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalSeparator_isComposite. Expected _FXPyVerticalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXVerticalSeparator_isComposite(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXVerticalSeparator_contains(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_contains(_swigarg0,_swigarg1))
static PyObject *_wrap_FXVerticalSeparator_contains(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyVerticalSeparator * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXVerticalSeparator_contains",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalSeparator_contains. Expected _FXPyVerticalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXVerticalSeparator_contains(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXVerticalSeparator_getWidthForHeight(_swigobj,_swigarg0)  (_swigobj->_getWidthForHeight(_swigarg0))
static PyObject *_wrap_FXVerticalSeparator_getWidthForHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyVerticalSeparator * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXVerticalSeparator_getWidthForHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalSeparator_getWidthForHeight. Expected _FXPyVerticalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXVerticalSeparator_getWidthForHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXVerticalSeparator_getHeightForWidth(_swigobj,_swigarg0)  (_swigobj->_getHeightForWidth(_swigarg0))
static PyObject *_wrap_FXVerticalSeparator_getHeightForWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyVerticalSeparator * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXVerticalSeparator_getHeightForWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalSeparator_getHeightForWidth. Expected _FXPyVerticalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXVerticalSeparator_getHeightForWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXVerticalSeparator_doesSaveUnder(_swigobj)  (_swigobj->_doesSaveUnder())
static PyObject *_wrap_FXVerticalSeparator_doesSaveUnder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyVerticalSeparator * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXVerticalSeparator_doesSaveUnder",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalSeparator_doesSaveUnder. Expected _FXPyVerticalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXVerticalSeparator_doesSaveUnder(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXVerticalSeparator_reparent(_swigobj,_swigarg0)  (_swigobj->_reparent(_swigarg0))
static PyObject *_wrap_FXVerticalSeparator_reparent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyVerticalSeparator * _arg0;
    FXComposite * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","newparent", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXVerticalSeparator_reparent",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalSeparator_reparent. Expected _FXPyVerticalSeparator_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXVerticalSeparator_reparent. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXVerticalSeparator_reparent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXVerticalSeparator_setBackColor(_swigobj,_swigarg0)  (_swigobj->_setBackColor(_swigarg0))
static PyObject *_wrap_FXVerticalSeparator_setBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyVerticalSeparator * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXVerticalSeparator_setBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalSeparator_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalSeparator_setBackColor. Expected _FXPyVerticalSeparator_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXVerticalSeparator_setBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXPackerToFXComposite(void *ptr) {
    FXPacker *src;
    FXComposite *dest;
    src = (FXPacker *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXPackerToFXWindow(void *ptr) {
    FXPacker *src;
    FXWindow *dest;
    src = (FXPacker *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXPackerToFXDrawable(void *ptr) {
    FXPacker *src;
    FXDrawable *dest;
    src = (FXPacker *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPackerToFXId(void *ptr) {
    FXPacker *src;
    FXId *dest;
    src = (FXPacker *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPackerToFXObject(void *ptr) {
    FXPacker *src;
    FXObject *dest;
    src = (FXPacker *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define FX_Packer_onPaint(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onPaint(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Packer_onPaint(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPacker * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Packer_onPaint",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Packer_onPaint. Expected _FXPacker_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Packer_onPaint. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Packer_onPaint(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Packer_onFocusUp(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onFocusUp(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Packer_onFocusUp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPacker * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Packer_onFocusUp",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Packer_onFocusUp. Expected _FXPacker_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Packer_onFocusUp. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Packer_onFocusUp(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Packer_onFocusDown(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onFocusDown(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Packer_onFocusDown(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPacker * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Packer_onFocusDown",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Packer_onFocusDown. Expected _FXPacker_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Packer_onFocusDown. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Packer_onFocusDown(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Packer_onFocusLeft(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onFocusLeft(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Packer_onFocusLeft(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPacker * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Packer_onFocusLeft",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Packer_onFocusLeft. Expected _FXPacker_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Packer_onFocusLeft. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Packer_onFocusLeft(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Packer_onFocusRight(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onFocusRight(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Packer_onFocusRight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPacker * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Packer_onFocusRight",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Packer_onFocusRight. Expected _FXPacker_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Packer_onFocusRight. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Packer_onFocusRight(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define new_FX_Packer(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11) (new FXPacker(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11))
static PyObject *_wrap_new_FX_Packer(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPacker * _result;
    FXComposite * _arg0;
    FXuint  _arg1 = (FXuint ) 0;
    FXint  _arg2 = (FXint ) 0;
    FXint  _arg3 = (FXint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) (4);
    FXint  _arg7 = (FXint ) (4);
    FXint  _arg8 = (FXint ) (4);
    FXint  _arg9 = (FXint ) (4);
    FXint  _arg10 = (FXint ) (4);
    FXint  _arg11 = (FXint ) (4);
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "p","opts","x","y","w","h","pl","pr","pt","pb","hs","vs", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|iiiiiiiiiii:new_FX_Packer",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7,&_arg8,&_arg9,&_arg10,&_arg11)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FX_Packer. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPacker *)new_FX_Packer(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7,_arg8,_arg9,_arg10,_arg11);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPacker_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_Packer_setFrameStyle(_swigobj,_swigarg0)  (_swigobj->setFrameStyle(_swigarg0))
static PyObject *_wrap_FX_Packer_setFrameStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPacker * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","style", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Packer_setFrameStyle",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Packer_setFrameStyle. Expected _FXPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Packer_setFrameStyle(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Packer_getFrameStyle(_swigobj)  (_swigobj->getFrameStyle())
static PyObject *_wrap_FX_Packer_getFrameStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXPacker * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Packer_getFrameStyle",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Packer_getFrameStyle. Expected _FXPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )FX_Packer_getFrameStyle(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Packer_setPackingHints(_swigobj,_swigarg0)  (_swigobj->setPackingHints(_swigarg0))
static PyObject *_wrap_FX_Packer_setPackingHints(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPacker * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","ph", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Packer_setPackingHints",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Packer_setPackingHints. Expected _FXPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Packer_setPackingHints(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Packer_getPackingHints(_swigobj)  (_swigobj->getPackingHints())
static PyObject *_wrap_FX_Packer_getPackingHints(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXPacker * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Packer_getPackingHints",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Packer_getPackingHints. Expected _FXPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )FX_Packer_getPackingHints(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Packer_getHiliteColor(_swigobj)  (_swigobj->getHiliteColor())
static PyObject *_wrap_FX_Packer_getHiliteColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXPacker * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Packer_getHiliteColor",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Packer_getHiliteColor. Expected _FXPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FX_Packer_getHiliteColor(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Packer_getShadowColor(_swigobj)  (_swigobj->getShadowColor())
static PyObject *_wrap_FX_Packer_getShadowColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXPacker * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Packer_getShadowColor",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Packer_getShadowColor. Expected _FXPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FX_Packer_getShadowColor(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Packer_getBorderColor(_swigobj)  (_swigobj->getBorderColor())
static PyObject *_wrap_FX_Packer_getBorderColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXPacker * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Packer_getBorderColor",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Packer_getBorderColor. Expected _FXPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FX_Packer_getBorderColor(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Packer_getBaseColor(_swigobj)  (_swigobj->getBaseColor())
static PyObject *_wrap_FX_Packer_getBaseColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXPacker * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Packer_getBaseColor",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Packer_getBaseColor. Expected _FXPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FX_Packer_getBaseColor(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Packer_setHiliteColor(_swigobj,_swigarg0)  (_swigobj->setHiliteColor(_swigarg0))
static PyObject *_wrap_FX_Packer_setHiliteColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPacker * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Packer_setHiliteColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Packer_setHiliteColor. Expected _FXPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Packer_setHiliteColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Packer_setShadowColor(_swigobj,_swigarg0)  (_swigobj->setShadowColor(_swigarg0))
static PyObject *_wrap_FX_Packer_setShadowColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPacker * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Packer_setShadowColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Packer_setShadowColor. Expected _FXPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Packer_setShadowColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Packer_setBorderColor(_swigobj,_swigarg0)  (_swigobj->setBorderColor(_swigarg0))
static PyObject *_wrap_FX_Packer_setBorderColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPacker * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Packer_setBorderColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Packer_setBorderColor. Expected _FXPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Packer_setBorderColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Packer_setBaseColor(_swigobj,_swigarg0)  (_swigobj->setBaseColor(_swigarg0))
static PyObject *_wrap_FX_Packer_setBaseColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPacker * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Packer_setBaseColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Packer_setBaseColor. Expected _FXPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Packer_setBaseColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Packer_getPadTop(_swigobj)  (_swigobj->getPadTop())
static PyObject *_wrap_FX_Packer_getPadTop(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPacker * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Packer_getPadTop",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Packer_getPadTop. Expected _FXPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Packer_getPadTop(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Packer_getPadBottom(_swigobj)  (_swigobj->getPadBottom())
static PyObject *_wrap_FX_Packer_getPadBottom(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPacker * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Packer_getPadBottom",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Packer_getPadBottom. Expected _FXPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Packer_getPadBottom(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Packer_getPadLeft(_swigobj)  (_swigobj->getPadLeft())
static PyObject *_wrap_FX_Packer_getPadLeft(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPacker * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Packer_getPadLeft",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Packer_getPadLeft. Expected _FXPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Packer_getPadLeft(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Packer_getPadRight(_swigobj)  (_swigobj->getPadRight())
static PyObject *_wrap_FX_Packer_getPadRight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPacker * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Packer_getPadRight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Packer_getPadRight. Expected _FXPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Packer_getPadRight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Packer_setPadTop(_swigobj,_swigarg0)  (_swigobj->setPadTop(_swigarg0))
static PyObject *_wrap_FX_Packer_setPadTop(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPacker * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pt", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Packer_setPadTop",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Packer_setPadTop. Expected _FXPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Packer_setPadTop(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Packer_setPadBottom(_swigobj,_swigarg0)  (_swigobj->setPadBottom(_swigarg0))
static PyObject *_wrap_FX_Packer_setPadBottom(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPacker * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pb", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Packer_setPadBottom",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Packer_setPadBottom. Expected _FXPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Packer_setPadBottom(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Packer_setPadLeft(_swigobj,_swigarg0)  (_swigobj->setPadLeft(_swigarg0))
static PyObject *_wrap_FX_Packer_setPadLeft(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPacker * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pl", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Packer_setPadLeft",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Packer_setPadLeft. Expected _FXPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Packer_setPadLeft(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Packer_setPadRight(_swigobj,_swigarg0)  (_swigobj->setPadRight(_swigarg0))
static PyObject *_wrap_FX_Packer_setPadRight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPacker * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Packer_setPadRight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Packer_setPadRight. Expected _FXPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Packer_setPadRight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Packer_getHSpacing(_swigobj)  (_swigobj->getHSpacing())
static PyObject *_wrap_FX_Packer_getHSpacing(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPacker * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Packer_getHSpacing",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Packer_getHSpacing. Expected _FXPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Packer_getHSpacing(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Packer_getVSpacing(_swigobj)  (_swigobj->getVSpacing())
static PyObject *_wrap_FX_Packer_getVSpacing(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPacker * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Packer_getVSpacing",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Packer_getVSpacing. Expected _FXPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Packer_getVSpacing(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Packer_setHSpacing(_swigobj,_swigarg0)  (_swigobj->setHSpacing(_swigarg0))
static PyObject *_wrap_FX_Packer_setHSpacing(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPacker * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","hs", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Packer_setHSpacing",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Packer_setHSpacing. Expected _FXPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Packer_setHSpacing(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Packer_setVSpacing(_swigobj,_swigarg0)  (_swigobj->setVSpacing(_swigarg0))
static PyObject *_wrap_FX_Packer_setVSpacing(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPacker * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","vs", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Packer_setVSpacing",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Packer_setVSpacing. Expected _FXPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Packer_setVSpacing(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Packer_getBorderWidth(_swigobj)  (_swigobj->getBorderWidth())
static PyObject *_wrap_FX_Packer_getBorderWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPacker * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Packer_getBorderWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Packer_getBorderWidth. Expected _FXPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Packer_getBorderWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static void *SwigFXPyPackerToFXPacker(void *ptr) {
    FXPyPacker *src;
    FXPacker *dest;
    src = (FXPyPacker *) ptr;
    dest = (FXPacker *) src;
    return (void *) dest;
}

static void *SwigFXPyPackerToFXComposite(void *ptr) {
    FXPyPacker *src;
    FXComposite *dest;
    src = (FXPyPacker *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXPyPackerToFXWindow(void *ptr) {
    FXPyPacker *src;
    FXWindow *dest;
    src = (FXPyPacker *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyPackerToFXDrawable(void *ptr) {
    FXPyPacker *src;
    FXDrawable *dest;
    src = (FXPyPacker *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPyPackerToFXId(void *ptr) {
    FXPyPacker *src;
    FXId *dest;
    src = (FXPyPacker *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPyPackerToFXObject(void *ptr) {
    FXPyPacker *src;
    FXObject *dest;
    src = (FXPyPacker *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXPacker(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11) (new FXPyPacker(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11))
static PyObject *_wrap_new_FXPacker(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPacker * _result;
    FXComposite * _arg0;
    FXuint  _arg1 = (FXuint ) 0;
    FXint  _arg2 = (FXint ) 0;
    FXint  _arg3 = (FXint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) (4);
    FXint  _arg7 = (FXint ) (4);
    FXint  _arg8 = (FXint ) (4);
    FXint  _arg9 = (FXint ) (4);
    FXint  _arg10 = (FXint ) (4);
    FXint  _arg11 = (FXint ) (4);
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "p","opts","x","y","w","h","pl","pr","pt","pb","hs","vs", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|iiiiiiiiiii:new_FXPacker",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7,&_arg8,&_arg9,&_arg10,&_arg11)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FXPacker. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyPacker *)new_FXPacker(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7,_arg8,_arg9,_arg10,_arg11);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyPacker_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FXPacker_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXPacker_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyPacker * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXPacker_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPacker_onDefault. Expected _FXPyPacker_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXPacker_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXPacker_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXPacker_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPacker * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXPacker_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPacker_create. Expected _FXPyPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXPacker_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXPacker_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXPacker_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPacker * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXPacker_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPacker_destroy. Expected _FXPyPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXPacker_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXPacker_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXPacker_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPacker * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXPacker_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPacker_detach. Expected _FXPyPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXPacker_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXPacker_resize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_resize(_swigarg0,_swigarg1))
static PyObject *_wrap_FXPacker_resize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPacker * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXPacker_resize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPacker_resize. Expected _FXPyPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXPacker_resize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXPacker_getDefaultWidth(_swigobj)  (_swigobj->_getDefaultWidth())
static PyObject *_wrap_FXPacker_getDefaultWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyPacker * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXPacker_getDefaultWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPacker_getDefaultWidth. Expected _FXPyPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXPacker_getDefaultWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXPacker_getDefaultHeight(_swigobj)  (_swigobj->_getDefaultHeight())
static PyObject *_wrap_FXPacker_getDefaultHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyPacker * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXPacker_getDefaultHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPacker_getDefaultHeight. Expected _FXPyPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXPacker_getDefaultHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXPacker_show(_swigobj)  (_swigobj->_show())
static PyObject *_wrap_FXPacker_show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPacker * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXPacker_show",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPacker_show. Expected _FXPyPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXPacker_show(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXPacker_hide(_swigobj)  (_swigobj->_hide())
static PyObject *_wrap_FXPacker_hide(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPacker * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXPacker_hide",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPacker_hide. Expected _FXPyPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXPacker_hide(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXPacker_enable(_swigobj)  (_swigobj->_enable())
static PyObject *_wrap_FXPacker_enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPacker * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXPacker_enable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPacker_enable. Expected _FXPyPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXPacker_enable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXPacker_disable(_swigobj)  (_swigobj->_disable())
static PyObject *_wrap_FXPacker_disable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPacker * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXPacker_disable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPacker_disable. Expected _FXPyPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXPacker_disable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXPacker_canFocus(_swigobj)  (_swigobj->_canFocus())
static PyObject *_wrap_FXPacker_canFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyPacker * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXPacker_canFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPacker_canFocus. Expected _FXPyPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXPacker_canFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXPacker_setFocus(_swigobj)  (_swigobj->_setFocus())
static PyObject *_wrap_FXPacker_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPacker * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXPacker_setFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPacker_setFocus. Expected _FXPyPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXPacker_setFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXPacker_killFocus(_swigobj)  (_swigobj->_killFocus())
static PyObject *_wrap_FXPacker_killFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPacker * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXPacker_killFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPacker_killFocus. Expected _FXPyPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXPacker_killFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXPacker_setDefault(_swigobj,_swigarg0)  (_swigobj->_setDefault(_swigarg0))
static PyObject *_wrap_FXPacker_setDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPacker * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FXPacker_setDefault",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPacker_setDefault. Expected _FXPyPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXPacker_setDefault(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXPacker_recalc(_swigobj)  (_swigobj->_recalc())
static PyObject *_wrap_FXPacker_recalc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPacker * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXPacker_recalc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPacker_recalc. Expected _FXPyPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXPacker_recalc(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXPacker_layout(_swigobj)  (_swigobj->_layout())
static PyObject *_wrap_FXPacker_layout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPacker * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXPacker_layout",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPacker_layout. Expected _FXPyPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXPacker_layout(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXPacker_lower(_swigobj)  (_swigobj->_lowerWindow())
static PyObject *_wrap_FXPacker_lower(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPacker * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXPacker_lower",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPacker_lower. Expected _FXPyPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXPacker_lower(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXPacker_move(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_move(_swigarg0,_swigarg1))
static PyObject *_wrap_FXPacker_move(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPacker * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXPacker_move",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPacker_move. Expected _FXPyPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXPacker_move(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXPacker_position(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->_position(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FXPacker_position(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPacker * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FXPacker_position",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPacker_position. Expected _FXPyPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXPacker_position(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXPacker_isComposite(_swigobj)  (_swigobj->_isComposite())
static PyObject *_wrap_FXPacker_isComposite(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyPacker * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXPacker_isComposite",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPacker_isComposite. Expected _FXPyPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXPacker_isComposite(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXPacker_contains(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_contains(_swigarg0,_swigarg1))
static PyObject *_wrap_FXPacker_contains(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyPacker * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXPacker_contains",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPacker_contains. Expected _FXPyPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXPacker_contains(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXPacker_getWidthForHeight(_swigobj,_swigarg0)  (_swigobj->_getWidthForHeight(_swigarg0))
static PyObject *_wrap_FXPacker_getWidthForHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyPacker * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXPacker_getWidthForHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPacker_getWidthForHeight. Expected _FXPyPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXPacker_getWidthForHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXPacker_getHeightForWidth(_swigobj,_swigarg0)  (_swigobj->_getHeightForWidth(_swigarg0))
static PyObject *_wrap_FXPacker_getHeightForWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyPacker * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXPacker_getHeightForWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPacker_getHeightForWidth. Expected _FXPyPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXPacker_getHeightForWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXPacker_doesSaveUnder(_swigobj)  (_swigobj->_doesSaveUnder())
static PyObject *_wrap_FXPacker_doesSaveUnder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyPacker * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXPacker_doesSaveUnder",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPacker_doesSaveUnder. Expected _FXPyPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXPacker_doesSaveUnder(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXPacker_reparent(_swigobj,_swigarg0)  (_swigobj->_reparent(_swigarg0))
static PyObject *_wrap_FXPacker_reparent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPacker * _arg0;
    FXComposite * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","newparent", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXPacker_reparent",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPacker_reparent. Expected _FXPyPacker_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXPacker_reparent. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXPacker_reparent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXPacker_setBackColor(_swigobj,_swigarg0)  (_swigobj->_setBackColor(_swigarg0))
static PyObject *_wrap_FXPacker_setBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPacker * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXPacker_setBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPacker_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPacker_setBackColor. Expected _FXPyPacker_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXPacker_setBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXHorizontalFrameToFXPacker(void *ptr) {
    FXHorizontalFrame *src;
    FXPacker *dest;
    src = (FXHorizontalFrame *) ptr;
    dest = (FXPacker *) src;
    return (void *) dest;
}

static void *SwigFXHorizontalFrameToFXComposite(void *ptr) {
    FXHorizontalFrame *src;
    FXComposite *dest;
    src = (FXHorizontalFrame *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXHorizontalFrameToFXWindow(void *ptr) {
    FXHorizontalFrame *src;
    FXWindow *dest;
    src = (FXHorizontalFrame *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXHorizontalFrameToFXDrawable(void *ptr) {
    FXHorizontalFrame *src;
    FXDrawable *dest;
    src = (FXHorizontalFrame *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXHorizontalFrameToFXId(void *ptr) {
    FXHorizontalFrame *src;
    FXId *dest;
    src = (FXHorizontalFrame *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXHorizontalFrameToFXObject(void *ptr) {
    FXHorizontalFrame *src;
    FXObject *dest;
    src = (FXHorizontalFrame *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FX_HorizontalFrame(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11) (new FXHorizontalFrame(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11))
static PyObject *_wrap_new_FX_HorizontalFrame(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXHorizontalFrame * _result;
    FXComposite * _arg0;
    FXuint  _arg1 = (FXuint ) 0;
    FXint  _arg2 = (FXint ) 0;
    FXint  _arg3 = (FXint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) (4);
    FXint  _arg7 = (FXint ) (4);
    FXint  _arg8 = (FXint ) (4);
    FXint  _arg9 = (FXint ) (4);
    FXint  _arg10 = (FXint ) (4);
    FXint  _arg11 = (FXint ) (4);
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "p","opts","x","y","w","h","pl","pr","pt","pb","hs","vs", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|iiiiiiiiiii:new_FX_HorizontalFrame",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7,&_arg8,&_arg9,&_arg10,&_arg11)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FX_HorizontalFrame. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXHorizontalFrame *)new_FX_HorizontalFrame(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7,_arg8,_arg9,_arg10,_arg11);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXHorizontalFrame_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

static void *SwigFXPyHorizontalFrameToFXHorizontalFrame(void *ptr) {
    FXPyHorizontalFrame *src;
    FXHorizontalFrame *dest;
    src = (FXPyHorizontalFrame *) ptr;
    dest = (FXHorizontalFrame *) src;
    return (void *) dest;
}

static void *SwigFXPyHorizontalFrameToFXPacker(void *ptr) {
    FXPyHorizontalFrame *src;
    FXPacker *dest;
    src = (FXPyHorizontalFrame *) ptr;
    dest = (FXPacker *) src;
    return (void *) dest;
}

static void *SwigFXPyHorizontalFrameToFXComposite(void *ptr) {
    FXPyHorizontalFrame *src;
    FXComposite *dest;
    src = (FXPyHorizontalFrame *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXPyHorizontalFrameToFXWindow(void *ptr) {
    FXPyHorizontalFrame *src;
    FXWindow *dest;
    src = (FXPyHorizontalFrame *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyHorizontalFrameToFXDrawable(void *ptr) {
    FXPyHorizontalFrame *src;
    FXDrawable *dest;
    src = (FXPyHorizontalFrame *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPyHorizontalFrameToFXId(void *ptr) {
    FXPyHorizontalFrame *src;
    FXId *dest;
    src = (FXPyHorizontalFrame *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPyHorizontalFrameToFXObject(void *ptr) {
    FXPyHorizontalFrame *src;
    FXObject *dest;
    src = (FXPyHorizontalFrame *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXHorizontalFrame(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11) (new FXPyHorizontalFrame(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11))
static PyObject *_wrap_new_FXHorizontalFrame(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyHorizontalFrame * _result;
    FXComposite * _arg0;
    FXuint  _arg1 = (FXuint ) 0;
    FXint  _arg2 = (FXint ) 0;
    FXint  _arg3 = (FXint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) (4);
    FXint  _arg7 = (FXint ) (4);
    FXint  _arg8 = (FXint ) (4);
    FXint  _arg9 = (FXint ) (4);
    FXint  _arg10 = (FXint ) (4);
    FXint  _arg11 = (FXint ) (4);
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "p","opts","x","y","w","h","pl","pr","pt","pb","hs","vs", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|iiiiiiiiiii:new_FXHorizontalFrame",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7,&_arg8,&_arg9,&_arg10,&_arg11)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FXHorizontalFrame. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyHorizontalFrame *)new_FXHorizontalFrame(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7,_arg8,_arg9,_arg10,_arg11);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyHorizontalFrame_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FXHorizontalFrame_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXHorizontalFrame_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyHorizontalFrame * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXHorizontalFrame_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalFrame_onDefault. Expected _FXPyHorizontalFrame_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXHorizontalFrame_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXHorizontalFrame_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXHorizontalFrame_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyHorizontalFrame * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHorizontalFrame_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalFrame_create. Expected _FXPyHorizontalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXHorizontalFrame_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXHorizontalFrame_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXHorizontalFrame_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyHorizontalFrame * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHorizontalFrame_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalFrame_destroy. Expected _FXPyHorizontalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXHorizontalFrame_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXHorizontalFrame_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXHorizontalFrame_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyHorizontalFrame * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHorizontalFrame_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalFrame_detach. Expected _FXPyHorizontalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXHorizontalFrame_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXHorizontalFrame_resize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_resize(_swigarg0,_swigarg1))
static PyObject *_wrap_FXHorizontalFrame_resize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyHorizontalFrame * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXHorizontalFrame_resize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalFrame_resize. Expected _FXPyHorizontalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXHorizontalFrame_resize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXHorizontalFrame_getDefaultWidth(_swigobj)  (_swigobj->_getDefaultWidth())
static PyObject *_wrap_FXHorizontalFrame_getDefaultWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyHorizontalFrame * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHorizontalFrame_getDefaultWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalFrame_getDefaultWidth. Expected _FXPyHorizontalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXHorizontalFrame_getDefaultWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXHorizontalFrame_getDefaultHeight(_swigobj)  (_swigobj->_getDefaultHeight())
static PyObject *_wrap_FXHorizontalFrame_getDefaultHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyHorizontalFrame * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHorizontalFrame_getDefaultHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalFrame_getDefaultHeight. Expected _FXPyHorizontalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXHorizontalFrame_getDefaultHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXHorizontalFrame_show(_swigobj)  (_swigobj->_show())
static PyObject *_wrap_FXHorizontalFrame_show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyHorizontalFrame * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHorizontalFrame_show",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalFrame_show. Expected _FXPyHorizontalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXHorizontalFrame_show(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXHorizontalFrame_hide(_swigobj)  (_swigobj->_hide())
static PyObject *_wrap_FXHorizontalFrame_hide(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyHorizontalFrame * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHorizontalFrame_hide",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalFrame_hide. Expected _FXPyHorizontalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXHorizontalFrame_hide(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXHorizontalFrame_enable(_swigobj)  (_swigobj->_enable())
static PyObject *_wrap_FXHorizontalFrame_enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyHorizontalFrame * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHorizontalFrame_enable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalFrame_enable. Expected _FXPyHorizontalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXHorizontalFrame_enable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXHorizontalFrame_disable(_swigobj)  (_swigobj->_disable())
static PyObject *_wrap_FXHorizontalFrame_disable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyHorizontalFrame * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHorizontalFrame_disable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalFrame_disable. Expected _FXPyHorizontalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXHorizontalFrame_disable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXHorizontalFrame_canFocus(_swigobj)  (_swigobj->_canFocus())
static PyObject *_wrap_FXHorizontalFrame_canFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyHorizontalFrame * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHorizontalFrame_canFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalFrame_canFocus. Expected _FXPyHorizontalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXHorizontalFrame_canFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXHorizontalFrame_setFocus(_swigobj)  (_swigobj->_setFocus())
static PyObject *_wrap_FXHorizontalFrame_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyHorizontalFrame * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHorizontalFrame_setFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalFrame_setFocus. Expected _FXPyHorizontalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXHorizontalFrame_setFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXHorizontalFrame_killFocus(_swigobj)  (_swigobj->_killFocus())
static PyObject *_wrap_FXHorizontalFrame_killFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyHorizontalFrame * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHorizontalFrame_killFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalFrame_killFocus. Expected _FXPyHorizontalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXHorizontalFrame_killFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXHorizontalFrame_setDefault(_swigobj,_swigarg0)  (_swigobj->_setDefault(_swigarg0))
static PyObject *_wrap_FXHorizontalFrame_setDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyHorizontalFrame * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FXHorizontalFrame_setDefault",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalFrame_setDefault. Expected _FXPyHorizontalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXHorizontalFrame_setDefault(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXHorizontalFrame_recalc(_swigobj)  (_swigobj->_recalc())
static PyObject *_wrap_FXHorizontalFrame_recalc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyHorizontalFrame * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHorizontalFrame_recalc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalFrame_recalc. Expected _FXPyHorizontalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXHorizontalFrame_recalc(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXHorizontalFrame_layout(_swigobj)  (_swigobj->_layout())
static PyObject *_wrap_FXHorizontalFrame_layout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyHorizontalFrame * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHorizontalFrame_layout",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalFrame_layout. Expected _FXPyHorizontalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXHorizontalFrame_layout(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXHorizontalFrame_lower(_swigobj)  (_swigobj->_lowerWindow())
static PyObject *_wrap_FXHorizontalFrame_lower(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyHorizontalFrame * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHorizontalFrame_lower",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalFrame_lower. Expected _FXPyHorizontalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXHorizontalFrame_lower(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXHorizontalFrame_move(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_move(_swigarg0,_swigarg1))
static PyObject *_wrap_FXHorizontalFrame_move(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyHorizontalFrame * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXHorizontalFrame_move",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalFrame_move. Expected _FXPyHorizontalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXHorizontalFrame_move(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXHorizontalFrame_position(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->_position(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FXHorizontalFrame_position(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyHorizontalFrame * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FXHorizontalFrame_position",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalFrame_position. Expected _FXPyHorizontalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXHorizontalFrame_position(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXHorizontalFrame_isComposite(_swigobj)  (_swigobj->_isComposite())
static PyObject *_wrap_FXHorizontalFrame_isComposite(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyHorizontalFrame * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHorizontalFrame_isComposite",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalFrame_isComposite. Expected _FXPyHorizontalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXHorizontalFrame_isComposite(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXHorizontalFrame_contains(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_contains(_swigarg0,_swigarg1))
static PyObject *_wrap_FXHorizontalFrame_contains(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyHorizontalFrame * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXHorizontalFrame_contains",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalFrame_contains. Expected _FXPyHorizontalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXHorizontalFrame_contains(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXHorizontalFrame_getWidthForHeight(_swigobj,_swigarg0)  (_swigobj->_getWidthForHeight(_swigarg0))
static PyObject *_wrap_FXHorizontalFrame_getWidthForHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyHorizontalFrame * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXHorizontalFrame_getWidthForHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalFrame_getWidthForHeight. Expected _FXPyHorizontalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXHorizontalFrame_getWidthForHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXHorizontalFrame_getHeightForWidth(_swigobj,_swigarg0)  (_swigobj->_getHeightForWidth(_swigarg0))
static PyObject *_wrap_FXHorizontalFrame_getHeightForWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyHorizontalFrame * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXHorizontalFrame_getHeightForWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalFrame_getHeightForWidth. Expected _FXPyHorizontalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXHorizontalFrame_getHeightForWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXHorizontalFrame_doesSaveUnder(_swigobj)  (_swigobj->_doesSaveUnder())
static PyObject *_wrap_FXHorizontalFrame_doesSaveUnder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyHorizontalFrame * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXHorizontalFrame_doesSaveUnder",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalFrame_doesSaveUnder. Expected _FXPyHorizontalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXHorizontalFrame_doesSaveUnder(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXHorizontalFrame_reparent(_swigobj,_swigarg0)  (_swigobj->_reparent(_swigarg0))
static PyObject *_wrap_FXHorizontalFrame_reparent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyHorizontalFrame * _arg0;
    FXComposite * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","newparent", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXHorizontalFrame_reparent",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalFrame_reparent. Expected _FXPyHorizontalFrame_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXHorizontalFrame_reparent. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXHorizontalFrame_reparent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXHorizontalFrame_setBackColor(_swigobj,_swigarg0)  (_swigobj->_setBackColor(_swigarg0))
static PyObject *_wrap_FXHorizontalFrame_setBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyHorizontalFrame * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXHorizontalFrame_setBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyHorizontalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXHorizontalFrame_setBackColor. Expected _FXPyHorizontalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXHorizontalFrame_setBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXVerticalFrameToFXPacker(void *ptr) {
    FXVerticalFrame *src;
    FXPacker *dest;
    src = (FXVerticalFrame *) ptr;
    dest = (FXPacker *) src;
    return (void *) dest;
}

static void *SwigFXVerticalFrameToFXComposite(void *ptr) {
    FXVerticalFrame *src;
    FXComposite *dest;
    src = (FXVerticalFrame *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXVerticalFrameToFXWindow(void *ptr) {
    FXVerticalFrame *src;
    FXWindow *dest;
    src = (FXVerticalFrame *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXVerticalFrameToFXDrawable(void *ptr) {
    FXVerticalFrame *src;
    FXDrawable *dest;
    src = (FXVerticalFrame *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXVerticalFrameToFXId(void *ptr) {
    FXVerticalFrame *src;
    FXId *dest;
    src = (FXVerticalFrame *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXVerticalFrameToFXObject(void *ptr) {
    FXVerticalFrame *src;
    FXObject *dest;
    src = (FXVerticalFrame *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FX_VerticalFrame(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11) (new FXVerticalFrame(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11))
static PyObject *_wrap_new_FX_VerticalFrame(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXVerticalFrame * _result;
    FXComposite * _arg0;
    FXuint  _arg1 = (FXuint ) 0;
    FXint  _arg2 = (FXint ) 0;
    FXint  _arg3 = (FXint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) (4);
    FXint  _arg7 = (FXint ) (4);
    FXint  _arg8 = (FXint ) (4);
    FXint  _arg9 = (FXint ) (4);
    FXint  _arg10 = (FXint ) (4);
    FXint  _arg11 = (FXint ) (4);
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "p","opts","x","y","w","h","pl","pr","pt","pb","hs","vs", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|iiiiiiiiiii:new_FX_VerticalFrame",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7,&_arg8,&_arg9,&_arg10,&_arg11)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FX_VerticalFrame. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXVerticalFrame *)new_FX_VerticalFrame(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7,_arg8,_arg9,_arg10,_arg11);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

static void *SwigFXPyVerticalFrameToFXVerticalFrame(void *ptr) {
    FXPyVerticalFrame *src;
    FXVerticalFrame *dest;
    src = (FXPyVerticalFrame *) ptr;
    dest = (FXVerticalFrame *) src;
    return (void *) dest;
}

static void *SwigFXPyVerticalFrameToFXPacker(void *ptr) {
    FXPyVerticalFrame *src;
    FXPacker *dest;
    src = (FXPyVerticalFrame *) ptr;
    dest = (FXPacker *) src;
    return (void *) dest;
}

static void *SwigFXPyVerticalFrameToFXComposite(void *ptr) {
    FXPyVerticalFrame *src;
    FXComposite *dest;
    src = (FXPyVerticalFrame *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXPyVerticalFrameToFXWindow(void *ptr) {
    FXPyVerticalFrame *src;
    FXWindow *dest;
    src = (FXPyVerticalFrame *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyVerticalFrameToFXDrawable(void *ptr) {
    FXPyVerticalFrame *src;
    FXDrawable *dest;
    src = (FXPyVerticalFrame *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPyVerticalFrameToFXId(void *ptr) {
    FXPyVerticalFrame *src;
    FXId *dest;
    src = (FXPyVerticalFrame *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPyVerticalFrameToFXObject(void *ptr) {
    FXPyVerticalFrame *src;
    FXObject *dest;
    src = (FXPyVerticalFrame *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXVerticalFrame(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11) (new FXPyVerticalFrame(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11))
static PyObject *_wrap_new_FXVerticalFrame(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyVerticalFrame * _result;
    FXComposite * _arg0;
    FXuint  _arg1 = (FXuint ) 0;
    FXint  _arg2 = (FXint ) 0;
    FXint  _arg3 = (FXint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) (4);
    FXint  _arg7 = (FXint ) (4);
    FXint  _arg8 = (FXint ) (4);
    FXint  _arg9 = (FXint ) (4);
    FXint  _arg10 = (FXint ) (4);
    FXint  _arg11 = (FXint ) (4);
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "p","opts","x","y","w","h","pl","pr","pt","pb","hs","vs", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|iiiiiiiiiii:new_FXVerticalFrame",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7,&_arg8,&_arg9,&_arg10,&_arg11)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FXVerticalFrame. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyVerticalFrame *)new_FXVerticalFrame(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7,_arg8,_arg9,_arg10,_arg11);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyVerticalFrame_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FXVerticalFrame_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXVerticalFrame_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyVerticalFrame * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXVerticalFrame_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalFrame_onDefault. Expected _FXPyVerticalFrame_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXVerticalFrame_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXVerticalFrame_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXVerticalFrame_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyVerticalFrame * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXVerticalFrame_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalFrame_create. Expected _FXPyVerticalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXVerticalFrame_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXVerticalFrame_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXVerticalFrame_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyVerticalFrame * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXVerticalFrame_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalFrame_destroy. Expected _FXPyVerticalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXVerticalFrame_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXVerticalFrame_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXVerticalFrame_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyVerticalFrame * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXVerticalFrame_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalFrame_detach. Expected _FXPyVerticalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXVerticalFrame_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXVerticalFrame_resize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_resize(_swigarg0,_swigarg1))
static PyObject *_wrap_FXVerticalFrame_resize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyVerticalFrame * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXVerticalFrame_resize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalFrame_resize. Expected _FXPyVerticalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXVerticalFrame_resize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXVerticalFrame_getDefaultWidth(_swigobj)  (_swigobj->_getDefaultWidth())
static PyObject *_wrap_FXVerticalFrame_getDefaultWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyVerticalFrame * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXVerticalFrame_getDefaultWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalFrame_getDefaultWidth. Expected _FXPyVerticalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXVerticalFrame_getDefaultWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXVerticalFrame_getDefaultHeight(_swigobj)  (_swigobj->_getDefaultHeight())
static PyObject *_wrap_FXVerticalFrame_getDefaultHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyVerticalFrame * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXVerticalFrame_getDefaultHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalFrame_getDefaultHeight. Expected _FXPyVerticalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXVerticalFrame_getDefaultHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXVerticalFrame_show(_swigobj)  (_swigobj->_show())
static PyObject *_wrap_FXVerticalFrame_show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyVerticalFrame * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXVerticalFrame_show",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalFrame_show. Expected _FXPyVerticalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXVerticalFrame_show(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXVerticalFrame_hide(_swigobj)  (_swigobj->_hide())
static PyObject *_wrap_FXVerticalFrame_hide(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyVerticalFrame * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXVerticalFrame_hide",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalFrame_hide. Expected _FXPyVerticalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXVerticalFrame_hide(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXVerticalFrame_enable(_swigobj)  (_swigobj->_enable())
static PyObject *_wrap_FXVerticalFrame_enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyVerticalFrame * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXVerticalFrame_enable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalFrame_enable. Expected _FXPyVerticalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXVerticalFrame_enable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXVerticalFrame_disable(_swigobj)  (_swigobj->_disable())
static PyObject *_wrap_FXVerticalFrame_disable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyVerticalFrame * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXVerticalFrame_disable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalFrame_disable. Expected _FXPyVerticalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXVerticalFrame_disable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXVerticalFrame_canFocus(_swigobj)  (_swigobj->_canFocus())
static PyObject *_wrap_FXVerticalFrame_canFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyVerticalFrame * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXVerticalFrame_canFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalFrame_canFocus. Expected _FXPyVerticalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXVerticalFrame_canFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXVerticalFrame_setFocus(_swigobj)  (_swigobj->_setFocus())
static PyObject *_wrap_FXVerticalFrame_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyVerticalFrame * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXVerticalFrame_setFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalFrame_setFocus. Expected _FXPyVerticalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXVerticalFrame_setFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXVerticalFrame_killFocus(_swigobj)  (_swigobj->_killFocus())
static PyObject *_wrap_FXVerticalFrame_killFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyVerticalFrame * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXVerticalFrame_killFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalFrame_killFocus. Expected _FXPyVerticalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXVerticalFrame_killFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXVerticalFrame_setDefault(_swigobj,_swigarg0)  (_swigobj->_setDefault(_swigarg0))
static PyObject *_wrap_FXVerticalFrame_setDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyVerticalFrame * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FXVerticalFrame_setDefault",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalFrame_setDefault. Expected _FXPyVerticalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXVerticalFrame_setDefault(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXVerticalFrame_recalc(_swigobj)  (_swigobj->_recalc())
static PyObject *_wrap_FXVerticalFrame_recalc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyVerticalFrame * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXVerticalFrame_recalc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalFrame_recalc. Expected _FXPyVerticalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXVerticalFrame_recalc(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXVerticalFrame_layout(_swigobj)  (_swigobj->_layout())
static PyObject *_wrap_FXVerticalFrame_layout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyVerticalFrame * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXVerticalFrame_layout",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalFrame_layout. Expected _FXPyVerticalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXVerticalFrame_layout(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXVerticalFrame_lower(_swigobj)  (_swigobj->_lowerWindow())
static PyObject *_wrap_FXVerticalFrame_lower(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyVerticalFrame * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXVerticalFrame_lower",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalFrame_lower. Expected _FXPyVerticalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXVerticalFrame_lower(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXVerticalFrame_move(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_move(_swigarg0,_swigarg1))
static PyObject *_wrap_FXVerticalFrame_move(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyVerticalFrame * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXVerticalFrame_move",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalFrame_move. Expected _FXPyVerticalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXVerticalFrame_move(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXVerticalFrame_position(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->_position(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FXVerticalFrame_position(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyVerticalFrame * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FXVerticalFrame_position",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalFrame_position. Expected _FXPyVerticalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXVerticalFrame_position(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXVerticalFrame_isComposite(_swigobj)  (_swigobj->_isComposite())
static PyObject *_wrap_FXVerticalFrame_isComposite(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyVerticalFrame * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXVerticalFrame_isComposite",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalFrame_isComposite. Expected _FXPyVerticalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXVerticalFrame_isComposite(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXVerticalFrame_contains(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_contains(_swigarg0,_swigarg1))
static PyObject *_wrap_FXVerticalFrame_contains(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyVerticalFrame * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXVerticalFrame_contains",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalFrame_contains. Expected _FXPyVerticalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXVerticalFrame_contains(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXVerticalFrame_getWidthForHeight(_swigobj,_swigarg0)  (_swigobj->_getWidthForHeight(_swigarg0))
static PyObject *_wrap_FXVerticalFrame_getWidthForHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyVerticalFrame * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXVerticalFrame_getWidthForHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalFrame_getWidthForHeight. Expected _FXPyVerticalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXVerticalFrame_getWidthForHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXVerticalFrame_getHeightForWidth(_swigobj,_swigarg0)  (_swigobj->_getHeightForWidth(_swigarg0))
static PyObject *_wrap_FXVerticalFrame_getHeightForWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyVerticalFrame * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXVerticalFrame_getHeightForWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalFrame_getHeightForWidth. Expected _FXPyVerticalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXVerticalFrame_getHeightForWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXVerticalFrame_doesSaveUnder(_swigobj)  (_swigobj->_doesSaveUnder())
static PyObject *_wrap_FXVerticalFrame_doesSaveUnder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyVerticalFrame * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXVerticalFrame_doesSaveUnder",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalFrame_doesSaveUnder. Expected _FXPyVerticalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXVerticalFrame_doesSaveUnder(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXVerticalFrame_reparent(_swigobj,_swigarg0)  (_swigobj->_reparent(_swigarg0))
static PyObject *_wrap_FXVerticalFrame_reparent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyVerticalFrame * _arg0;
    FXComposite * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","newparent", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXVerticalFrame_reparent",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalFrame_reparent. Expected _FXPyVerticalFrame_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXVerticalFrame_reparent. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXVerticalFrame_reparent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXVerticalFrame_setBackColor(_swigobj,_swigarg0)  (_swigobj->_setBackColor(_swigarg0))
static PyObject *_wrap_FXVerticalFrame_setBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyVerticalFrame * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXVerticalFrame_setBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyVerticalFrame_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXVerticalFrame_setBackColor. Expected _FXPyVerticalFrame_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXVerticalFrame_setBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXMatrixToFXPacker(void *ptr) {
    FXMatrix *src;
    FXPacker *dest;
    src = (FXMatrix *) ptr;
    dest = (FXPacker *) src;
    return (void *) dest;
}

static void *SwigFXMatrixToFXComposite(void *ptr) {
    FXMatrix *src;
    FXComposite *dest;
    src = (FXMatrix *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXMatrixToFXWindow(void *ptr) {
    FXMatrix *src;
    FXWindow *dest;
    src = (FXMatrix *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXMatrixToFXDrawable(void *ptr) {
    FXMatrix *src;
    FXDrawable *dest;
    src = (FXMatrix *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXMatrixToFXId(void *ptr) {
    FXMatrix *src;
    FXId *dest;
    src = (FXMatrix *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXMatrixToFXObject(void *ptr) {
    FXMatrix *src;
    FXObject *dest;
    src = (FXMatrix *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define FX_Matrix_onFocusUp(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onFocusUp(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Matrix_onFocusUp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXMatrix * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Matrix_onFocusUp",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Matrix_onFocusUp. Expected _FXMatrix_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Matrix_onFocusUp. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Matrix_onFocusUp(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Matrix_onFocusDown(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onFocusDown(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Matrix_onFocusDown(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXMatrix * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Matrix_onFocusDown",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Matrix_onFocusDown. Expected _FXMatrix_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Matrix_onFocusDown. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Matrix_onFocusDown(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Matrix_onFocusLeft(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onFocusLeft(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Matrix_onFocusLeft(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXMatrix * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Matrix_onFocusLeft",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Matrix_onFocusLeft. Expected _FXMatrix_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Matrix_onFocusLeft. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Matrix_onFocusLeft(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Matrix_onFocusRight(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onFocusRight(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Matrix_onFocusRight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXMatrix * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Matrix_onFocusRight",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Matrix_onFocusRight. Expected _FXMatrix_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Matrix_onFocusRight. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Matrix_onFocusRight(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define new_FX_Matrix(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11,_swigarg12) (new FXMatrix(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11,_swigarg12))
static PyObject *_wrap_new_FX_Matrix(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXMatrix * _result;
    FXComposite * _arg0;
    FXint  _arg1 = (FXint ) 1;
    FXuint  _arg2 = (FXuint ) (MATRIX_BY_ROWS);
    FXint  _arg3 = (FXint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) (4);
    FXint  _arg8 = (FXint ) (4);
    FXint  _arg9 = (FXint ) (4);
    FXint  _arg10 = (FXint ) (4);
    FXint  _arg11 = (FXint ) (4);
    FXint  _arg12 = (FXint ) (4);
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "p","n","opts","x","y","w","h","pl","pr","pt","pb","hs","vs", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|iiiiiiiiiiii:new_FX_Matrix",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7,&_arg8,&_arg9,&_arg10,&_arg11,&_arg12)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FX_Matrix. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXMatrix *)new_FX_Matrix(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7,_arg8,_arg9,_arg10,_arg11,_arg12);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXMatrix_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_Matrix_childAtRowCol(_swigobj,_swigarg0,_swigarg1)  (_swigobj->childAtRowCol(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_Matrix_childAtRowCol(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXWindow * _result;
    FXMatrix * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","r","c", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FX_Matrix_childAtRowCol",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Matrix_childAtRowCol. Expected _FXMatrix_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXWindow *)FX_Matrix_childAtRowCol(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_Matrix_rowOfChild(_swigobj,_swigarg0)  (_swigobj->rowOfChild(_swigarg0))
static PyObject *_wrap_FX_Matrix_rowOfChild(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXMatrix * _arg0;
    FXWindow * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","child", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_Matrix_rowOfChild",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Matrix_rowOfChild. Expected _FXMatrix_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXWindow_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Matrix_rowOfChild(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Matrix_colOfChild(_swigobj,_swigarg0)  (_swigobj->colOfChild(_swigarg0))
static PyObject *_wrap_FX_Matrix_colOfChild(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXMatrix * _arg0;
    FXWindow * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","child", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_Matrix_colOfChild",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Matrix_colOfChild. Expected _FXMatrix_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXWindow_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Matrix_colOfChild(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Matrix_setMatrixStyle(_swigobj,_swigarg0)  (_swigobj->setMatrixStyle(_swigarg0))
static PyObject *_wrap_FX_Matrix_setMatrixStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXMatrix * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","ph", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Matrix_setMatrixStyle",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Matrix_setMatrixStyle. Expected _FXMatrix_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Matrix_setMatrixStyle(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Matrix_getMatrixStyle(_swigobj)  (_swigobj->getMatrixStyle())
static PyObject *_wrap_FX_Matrix_getMatrixStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXMatrix * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Matrix_getMatrixStyle",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Matrix_getMatrixStyle. Expected _FXMatrix_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )FX_Matrix_getMatrixStyle(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Matrix_setNumRows(_swigobj,_swigarg0)  (_swigobj->setNumRows(_swigarg0))
static PyObject *_wrap_FX_Matrix_setNumRows(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXMatrix * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","nr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Matrix_setNumRows",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Matrix_setNumRows. Expected _FXMatrix_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Matrix_setNumRows(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Matrix_getNumRows(_swigobj)  (_swigobj->getNumRows())
static PyObject *_wrap_FX_Matrix_getNumRows(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXMatrix * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Matrix_getNumRows",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Matrix_getNumRows. Expected _FXMatrix_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Matrix_getNumRows(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Matrix_setNumColumns(_swigobj,_swigarg0)  (_swigobj->setNumColumns(_swigarg0))
static PyObject *_wrap_FX_Matrix_setNumColumns(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXMatrix * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","nc", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Matrix_setNumColumns",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Matrix_setNumColumns. Expected _FXMatrix_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Matrix_setNumColumns(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Matrix_getNumColumns(_swigobj)  (_swigobj->getNumColumns())
static PyObject *_wrap_FX_Matrix_getNumColumns(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXMatrix * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Matrix_getNumColumns",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Matrix_getNumColumns. Expected _FXMatrix_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Matrix_getNumColumns(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static void *SwigFXPyMatrixToFXMatrix(void *ptr) {
    FXPyMatrix *src;
    FXMatrix *dest;
    src = (FXPyMatrix *) ptr;
    dest = (FXMatrix *) src;
    return (void *) dest;
}

static void *SwigFXPyMatrixToFXPacker(void *ptr) {
    FXPyMatrix *src;
    FXPacker *dest;
    src = (FXPyMatrix *) ptr;
    dest = (FXPacker *) src;
    return (void *) dest;
}

static void *SwigFXPyMatrixToFXComposite(void *ptr) {
    FXPyMatrix *src;
    FXComposite *dest;
    src = (FXPyMatrix *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXPyMatrixToFXWindow(void *ptr) {
    FXPyMatrix *src;
    FXWindow *dest;
    src = (FXPyMatrix *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyMatrixToFXDrawable(void *ptr) {
    FXPyMatrix *src;
    FXDrawable *dest;
    src = (FXPyMatrix *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPyMatrixToFXId(void *ptr) {
    FXPyMatrix *src;
    FXId *dest;
    src = (FXPyMatrix *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPyMatrixToFXObject(void *ptr) {
    FXPyMatrix *src;
    FXObject *dest;
    src = (FXPyMatrix *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXMatrix(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11,_swigarg12) (new FXPyMatrix(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11,_swigarg12))
static PyObject *_wrap_new_FXMatrix(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMatrix * _result;
    FXComposite * _arg0;
    FXint  _arg1 = (FXint ) 1;
    FXuint  _arg2 = (FXuint ) (MATRIX_BY_ROWS);
    FXint  _arg3 = (FXint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) (4);
    FXint  _arg8 = (FXint ) (4);
    FXint  _arg9 = (FXint ) (4);
    FXint  _arg10 = (FXint ) (4);
    FXint  _arg11 = (FXint ) (4);
    FXint  _arg12 = (FXint ) (4);
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "p","n","opts","x","y","w","h","pl","pr","pt","pb","hs","vs", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|iiiiiiiiiiii:new_FXMatrix",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7,&_arg8,&_arg9,&_arg10,&_arg11,&_arg12)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FXMatrix. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyMatrix *)new_FXMatrix(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7,_arg8,_arg9,_arg10,_arg11,_arg12);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyMatrix_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FXMatrix_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXMatrix_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyMatrix * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXMatrix_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMatrix_onDefault. Expected _FXPyMatrix_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXMatrix_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXMatrix_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXMatrix_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMatrix * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXMatrix_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMatrix_create. Expected _FXPyMatrix_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXMatrix_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXMatrix_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXMatrix_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMatrix * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXMatrix_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMatrix_destroy. Expected _FXPyMatrix_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXMatrix_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXMatrix_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXMatrix_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMatrix * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXMatrix_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMatrix_detach. Expected _FXPyMatrix_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXMatrix_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXMatrix_resize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_resize(_swigarg0,_swigarg1))
static PyObject *_wrap_FXMatrix_resize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMatrix * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXMatrix_resize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMatrix_resize. Expected _FXPyMatrix_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXMatrix_resize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXMatrix_getDefaultWidth(_swigobj)  (_swigobj->_getDefaultWidth())
static PyObject *_wrap_FXMatrix_getDefaultWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyMatrix * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXMatrix_getDefaultWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMatrix_getDefaultWidth. Expected _FXPyMatrix_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXMatrix_getDefaultWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXMatrix_getDefaultHeight(_swigobj)  (_swigobj->_getDefaultHeight())
static PyObject *_wrap_FXMatrix_getDefaultHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyMatrix * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXMatrix_getDefaultHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMatrix_getDefaultHeight. Expected _FXPyMatrix_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXMatrix_getDefaultHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXMatrix_show(_swigobj)  (_swigobj->_show())
static PyObject *_wrap_FXMatrix_show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMatrix * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXMatrix_show",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMatrix_show. Expected _FXPyMatrix_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXMatrix_show(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXMatrix_hide(_swigobj)  (_swigobj->_hide())
static PyObject *_wrap_FXMatrix_hide(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMatrix * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXMatrix_hide",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMatrix_hide. Expected _FXPyMatrix_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXMatrix_hide(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXMatrix_enable(_swigobj)  (_swigobj->_enable())
static PyObject *_wrap_FXMatrix_enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMatrix * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXMatrix_enable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMatrix_enable. Expected _FXPyMatrix_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXMatrix_enable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXMatrix_disable(_swigobj)  (_swigobj->_disable())
static PyObject *_wrap_FXMatrix_disable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMatrix * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXMatrix_disable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMatrix_disable. Expected _FXPyMatrix_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXMatrix_disable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXMatrix_canFocus(_swigobj)  (_swigobj->_canFocus())
static PyObject *_wrap_FXMatrix_canFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyMatrix * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXMatrix_canFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMatrix_canFocus. Expected _FXPyMatrix_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXMatrix_canFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXMatrix_setFocus(_swigobj)  (_swigobj->_setFocus())
static PyObject *_wrap_FXMatrix_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMatrix * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXMatrix_setFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMatrix_setFocus. Expected _FXPyMatrix_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXMatrix_setFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXMatrix_killFocus(_swigobj)  (_swigobj->_killFocus())
static PyObject *_wrap_FXMatrix_killFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMatrix * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXMatrix_killFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMatrix_killFocus. Expected _FXPyMatrix_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXMatrix_killFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXMatrix_setDefault(_swigobj,_swigarg0)  (_swigobj->_setDefault(_swigarg0))
static PyObject *_wrap_FXMatrix_setDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMatrix * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FXMatrix_setDefault",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMatrix_setDefault. Expected _FXPyMatrix_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXMatrix_setDefault(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXMatrix_recalc(_swigobj)  (_swigobj->_recalc())
static PyObject *_wrap_FXMatrix_recalc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMatrix * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXMatrix_recalc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMatrix_recalc. Expected _FXPyMatrix_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXMatrix_recalc(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXMatrix_layout(_swigobj)  (_swigobj->_layout())
static PyObject *_wrap_FXMatrix_layout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMatrix * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXMatrix_layout",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMatrix_layout. Expected _FXPyMatrix_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXMatrix_layout(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXMatrix_lower(_swigobj)  (_swigobj->_lowerWindow())
static PyObject *_wrap_FXMatrix_lower(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMatrix * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXMatrix_lower",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMatrix_lower. Expected _FXPyMatrix_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXMatrix_lower(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXMatrix_move(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_move(_swigarg0,_swigarg1))
static PyObject *_wrap_FXMatrix_move(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMatrix * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXMatrix_move",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMatrix_move. Expected _FXPyMatrix_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXMatrix_move(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXMatrix_position(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->_position(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FXMatrix_position(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMatrix * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FXMatrix_position",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMatrix_position. Expected _FXPyMatrix_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXMatrix_position(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXMatrix_isComposite(_swigobj)  (_swigobj->_isComposite())
static PyObject *_wrap_FXMatrix_isComposite(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyMatrix * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXMatrix_isComposite",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMatrix_isComposite. Expected _FXPyMatrix_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXMatrix_isComposite(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXMatrix_contains(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_contains(_swigarg0,_swigarg1))
static PyObject *_wrap_FXMatrix_contains(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyMatrix * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXMatrix_contains",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMatrix_contains. Expected _FXPyMatrix_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXMatrix_contains(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXMatrix_getWidthForHeight(_swigobj,_swigarg0)  (_swigobj->_getWidthForHeight(_swigarg0))
static PyObject *_wrap_FXMatrix_getWidthForHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyMatrix * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXMatrix_getWidthForHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMatrix_getWidthForHeight. Expected _FXPyMatrix_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXMatrix_getWidthForHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXMatrix_getHeightForWidth(_swigobj,_swigarg0)  (_swigobj->_getHeightForWidth(_swigarg0))
static PyObject *_wrap_FXMatrix_getHeightForWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyMatrix * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXMatrix_getHeightForWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMatrix_getHeightForWidth. Expected _FXPyMatrix_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXMatrix_getHeightForWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXMatrix_doesSaveUnder(_swigobj)  (_swigobj->_doesSaveUnder())
static PyObject *_wrap_FXMatrix_doesSaveUnder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyMatrix * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXMatrix_doesSaveUnder",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMatrix_doesSaveUnder. Expected _FXPyMatrix_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXMatrix_doesSaveUnder(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXMatrix_reparent(_swigobj,_swigarg0)  (_swigobj->_reparent(_swigarg0))
static PyObject *_wrap_FXMatrix_reparent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMatrix * _arg0;
    FXComposite * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","newparent", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXMatrix_reparent",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMatrix_reparent. Expected _FXPyMatrix_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXMatrix_reparent. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXMatrix_reparent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXMatrix_setBackColor(_swigobj,_swigarg0)  (_swigobj->_setBackColor(_swigarg0))
static PyObject *_wrap_FXMatrix_setBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMatrix * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXMatrix_setBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMatrix_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMatrix_setBackColor. Expected _FXPyMatrix_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXMatrix_setBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXGroupBoxToFXPacker(void *ptr) {
    FXGroupBox *src;
    FXPacker *dest;
    src = (FXGroupBox *) ptr;
    dest = (FXPacker *) src;
    return (void *) dest;
}

static void *SwigFXGroupBoxToFXComposite(void *ptr) {
    FXGroupBox *src;
    FXComposite *dest;
    src = (FXGroupBox *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXGroupBoxToFXWindow(void *ptr) {
    FXGroupBox *src;
    FXWindow *dest;
    src = (FXGroupBox *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXGroupBoxToFXDrawable(void *ptr) {
    FXGroupBox *src;
    FXDrawable *dest;
    src = (FXGroupBox *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXGroupBoxToFXId(void *ptr) {
    FXGroupBox *src;
    FXId *dest;
    src = (FXGroupBox *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXGroupBoxToFXObject(void *ptr) {
    FXGroupBox *src;
    FXObject *dest;
    src = (FXGroupBox *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define FX_GroupBox_onPaint(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onPaint(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_GroupBox_onPaint(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXGroupBox * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_GroupBox_onPaint",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXGroupBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_GroupBox_onPaint. Expected _FXGroupBox_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_GroupBox_onPaint. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_GroupBox_onPaint(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_GroupBox_onUncheckOther(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUncheckOther(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_GroupBox_onUncheckOther(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXGroupBox * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_GroupBox_onUncheckOther",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXGroupBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_GroupBox_onUncheckOther. Expected _FXGroupBox_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_GroupBox_onUncheckOther. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_GroupBox_onUncheckOther(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define new_FX_GroupBox(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11,_swigarg12) (new FXGroupBox(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11,_swigarg12))
static PyObject *_wrap_new_FX_GroupBox(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXGroupBox * _result;
    FXComposite * _arg0;
    FXString * _arg1;
    FXuint  _arg2 = (FXuint ) (GROUPBOX_NORMAL);
    FXint  _arg3 = (FXint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) (4);
    FXint  _arg8 = (FXint ) (4);
    FXint  _arg9 = (FXint ) (4);
    FXint  _arg10 = (FXint ) (4);
    FXint  _arg11 = (FXint ) (4);
    FXint  _arg12 = (FXint ) (4);
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "p","text","opts","x","y","w","h","pl","pr","pt","pb","hs","vs", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|iiiiiiiiiii:new_FX_GroupBox",_kwnames,&_argo0,&_obj1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7,&_arg8,&_arg9,&_arg10,&_arg11,&_arg12)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FX_GroupBox. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXGroupBox *)new_FX_GroupBox(_arg0,*_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7,_arg8,_arg9,_arg10,_arg11,_arg12);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXGroupBox_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_GroupBox_setText(_swigobj,_swigarg0)  (_swigobj->setText(_swigarg0))
static PyObject *_wrap_FX_GroupBox_setText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXGroupBox * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","text", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_GroupBox_setText",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXGroupBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_GroupBox_setText. Expected _FXGroupBox_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_GroupBox_setText(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_GroupBox_getText(_swigobj)  (_swigobj->getText())
static PyObject *_wrap_FX_GroupBox_getText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXGroupBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_GroupBox_getText",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXGroupBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_GroupBox_getText. Expected _FXGroupBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_GroupBox_getText(_arg0));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

static void *SwigFXPyGroupBoxToFXGroupBox(void *ptr) {
    FXPyGroupBox *src;
    FXGroupBox *dest;
    src = (FXPyGroupBox *) ptr;
    dest = (FXGroupBox *) src;
    return (void *) dest;
}

static void *SwigFXPyGroupBoxToFXPacker(void *ptr) {
    FXPyGroupBox *src;
    FXPacker *dest;
    src = (FXPyGroupBox *) ptr;
    dest = (FXPacker *) src;
    return (void *) dest;
}

static void *SwigFXPyGroupBoxToFXComposite(void *ptr) {
    FXPyGroupBox *src;
    FXComposite *dest;
    src = (FXPyGroupBox *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXPyGroupBoxToFXWindow(void *ptr) {
    FXPyGroupBox *src;
    FXWindow *dest;
    src = (FXPyGroupBox *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyGroupBoxToFXDrawable(void *ptr) {
    FXPyGroupBox *src;
    FXDrawable *dest;
    src = (FXPyGroupBox *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPyGroupBoxToFXId(void *ptr) {
    FXPyGroupBox *src;
    FXId *dest;
    src = (FXPyGroupBox *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPyGroupBoxToFXObject(void *ptr) {
    FXPyGroupBox *src;
    FXObject *dest;
    src = (FXPyGroupBox *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXGroupBox(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11,_swigarg12) (new FXPyGroupBox(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11,_swigarg12))
static PyObject *_wrap_new_FXGroupBox(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyGroupBox * _result;
    FXComposite * _arg0;
    FXString * _arg1;
    FXuint  _arg2 = (FXuint ) (GROUPBOX_NORMAL);
    FXint  _arg3 = (FXint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) (4);
    FXint  _arg8 = (FXint ) (4);
    FXint  _arg9 = (FXint ) (4);
    FXint  _arg10 = (FXint ) (4);
    FXint  _arg11 = (FXint ) (4);
    FXint  _arg12 = (FXint ) (4);
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "p","text","opts","x","y","w","h","pl","pr","pt","pb","hs","vs", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|iiiiiiiiiii:new_FXGroupBox",_kwnames,&_argo0,&_obj1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7,&_arg8,&_arg9,&_arg10,&_arg11,&_arg12)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FXGroupBox. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyGroupBox *)new_FXGroupBox(_arg0,*_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7,_arg8,_arg9,_arg10,_arg11,_arg12);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyGroupBox_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    delete _arg1;
}
    return _resultobj;
}

#define FXGroupBox_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXGroupBox_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyGroupBox * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXGroupBox_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyGroupBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXGroupBox_onDefault. Expected _FXPyGroupBox_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXGroupBox_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXGroupBox_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXGroupBox_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyGroupBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXGroupBox_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyGroupBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXGroupBox_create. Expected _FXPyGroupBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXGroupBox_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXGroupBox_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXGroupBox_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyGroupBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXGroupBox_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyGroupBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXGroupBox_destroy. Expected _FXPyGroupBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXGroupBox_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXGroupBox_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXGroupBox_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyGroupBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXGroupBox_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyGroupBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXGroupBox_detach. Expected _FXPyGroupBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXGroupBox_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXGroupBox_resize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_resize(_swigarg0,_swigarg1))
static PyObject *_wrap_FXGroupBox_resize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyGroupBox * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXGroupBox_resize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyGroupBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXGroupBox_resize. Expected _FXPyGroupBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXGroupBox_resize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXGroupBox_getDefaultWidth(_swigobj)  (_swigobj->_getDefaultWidth())
static PyObject *_wrap_FXGroupBox_getDefaultWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyGroupBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXGroupBox_getDefaultWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyGroupBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXGroupBox_getDefaultWidth. Expected _FXPyGroupBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXGroupBox_getDefaultWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXGroupBox_getDefaultHeight(_swigobj)  (_swigobj->_getDefaultHeight())
static PyObject *_wrap_FXGroupBox_getDefaultHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyGroupBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXGroupBox_getDefaultHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyGroupBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXGroupBox_getDefaultHeight. Expected _FXPyGroupBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXGroupBox_getDefaultHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXGroupBox_show(_swigobj)  (_swigobj->_show())
static PyObject *_wrap_FXGroupBox_show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyGroupBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXGroupBox_show",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyGroupBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXGroupBox_show. Expected _FXPyGroupBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXGroupBox_show(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXGroupBox_hide(_swigobj)  (_swigobj->_hide())
static PyObject *_wrap_FXGroupBox_hide(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyGroupBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXGroupBox_hide",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyGroupBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXGroupBox_hide. Expected _FXPyGroupBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXGroupBox_hide(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXGroupBox_enable(_swigobj)  (_swigobj->_enable())
static PyObject *_wrap_FXGroupBox_enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyGroupBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXGroupBox_enable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyGroupBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXGroupBox_enable. Expected _FXPyGroupBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXGroupBox_enable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXGroupBox_disable(_swigobj)  (_swigobj->_disable())
static PyObject *_wrap_FXGroupBox_disable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyGroupBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXGroupBox_disable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyGroupBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXGroupBox_disable. Expected _FXPyGroupBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXGroupBox_disable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXGroupBox_canFocus(_swigobj)  (_swigobj->_canFocus())
static PyObject *_wrap_FXGroupBox_canFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyGroupBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXGroupBox_canFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyGroupBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXGroupBox_canFocus. Expected _FXPyGroupBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXGroupBox_canFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXGroupBox_setFocus(_swigobj)  (_swigobj->_setFocus())
static PyObject *_wrap_FXGroupBox_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyGroupBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXGroupBox_setFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyGroupBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXGroupBox_setFocus. Expected _FXPyGroupBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXGroupBox_setFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXGroupBox_killFocus(_swigobj)  (_swigobj->_killFocus())
static PyObject *_wrap_FXGroupBox_killFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyGroupBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXGroupBox_killFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyGroupBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXGroupBox_killFocus. Expected _FXPyGroupBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXGroupBox_killFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXGroupBox_setDefault(_swigobj,_swigarg0)  (_swigobj->_setDefault(_swigarg0))
static PyObject *_wrap_FXGroupBox_setDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyGroupBox * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FXGroupBox_setDefault",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyGroupBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXGroupBox_setDefault. Expected _FXPyGroupBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXGroupBox_setDefault(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXGroupBox_recalc(_swigobj)  (_swigobj->_recalc())
static PyObject *_wrap_FXGroupBox_recalc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyGroupBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXGroupBox_recalc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyGroupBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXGroupBox_recalc. Expected _FXPyGroupBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXGroupBox_recalc(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXGroupBox_layout(_swigobj)  (_swigobj->_layout())
static PyObject *_wrap_FXGroupBox_layout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyGroupBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXGroupBox_layout",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyGroupBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXGroupBox_layout. Expected _FXPyGroupBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXGroupBox_layout(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXGroupBox_lower(_swigobj)  (_swigobj->_lowerWindow())
static PyObject *_wrap_FXGroupBox_lower(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyGroupBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXGroupBox_lower",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyGroupBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXGroupBox_lower. Expected _FXPyGroupBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXGroupBox_lower(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXGroupBox_move(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_move(_swigarg0,_swigarg1))
static PyObject *_wrap_FXGroupBox_move(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyGroupBox * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXGroupBox_move",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyGroupBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXGroupBox_move. Expected _FXPyGroupBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXGroupBox_move(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXGroupBox_position(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->_position(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FXGroupBox_position(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyGroupBox * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FXGroupBox_position",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyGroupBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXGroupBox_position. Expected _FXPyGroupBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXGroupBox_position(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXGroupBox_isComposite(_swigobj)  (_swigobj->_isComposite())
static PyObject *_wrap_FXGroupBox_isComposite(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyGroupBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXGroupBox_isComposite",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyGroupBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXGroupBox_isComposite. Expected _FXPyGroupBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXGroupBox_isComposite(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXGroupBox_contains(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_contains(_swigarg0,_swigarg1))
static PyObject *_wrap_FXGroupBox_contains(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyGroupBox * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXGroupBox_contains",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyGroupBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXGroupBox_contains. Expected _FXPyGroupBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXGroupBox_contains(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXGroupBox_getWidthForHeight(_swigobj,_swigarg0)  (_swigobj->_getWidthForHeight(_swigarg0))
static PyObject *_wrap_FXGroupBox_getWidthForHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyGroupBox * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXGroupBox_getWidthForHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyGroupBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXGroupBox_getWidthForHeight. Expected _FXPyGroupBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXGroupBox_getWidthForHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXGroupBox_getHeightForWidth(_swigobj,_swigarg0)  (_swigobj->_getHeightForWidth(_swigarg0))
static PyObject *_wrap_FXGroupBox_getHeightForWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyGroupBox * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXGroupBox_getHeightForWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyGroupBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXGroupBox_getHeightForWidth. Expected _FXPyGroupBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXGroupBox_getHeightForWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXGroupBox_doesSaveUnder(_swigobj)  (_swigobj->_doesSaveUnder())
static PyObject *_wrap_FXGroupBox_doesSaveUnder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyGroupBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXGroupBox_doesSaveUnder",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyGroupBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXGroupBox_doesSaveUnder. Expected _FXPyGroupBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXGroupBox_doesSaveUnder(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXGroupBox_reparent(_swigobj,_swigarg0)  (_swigobj->_reparent(_swigarg0))
static PyObject *_wrap_FXGroupBox_reparent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyGroupBox * _arg0;
    FXComposite * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","newparent", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXGroupBox_reparent",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyGroupBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXGroupBox_reparent. Expected _FXPyGroupBox_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXGroupBox_reparent. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXGroupBox_reparent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXGroupBox_setBackColor(_swigobj,_swigarg0)  (_swigobj->_setBackColor(_swigarg0))
static PyObject *_wrap_FXGroupBox_setBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyGroupBox * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXGroupBox_setBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyGroupBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXGroupBox_setBackColor. Expected _FXPyGroupBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXGroupBox_setBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXSwitcherToFXPacker(void *ptr) {
    FXSwitcher *src;
    FXPacker *dest;
    src = (FXSwitcher *) ptr;
    dest = (FXPacker *) src;
    return (void *) dest;
}

static void *SwigFXSwitcherToFXComposite(void *ptr) {
    FXSwitcher *src;
    FXComposite *dest;
    src = (FXSwitcher *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXSwitcherToFXWindow(void *ptr) {
    FXSwitcher *src;
    FXWindow *dest;
    src = (FXSwitcher *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXSwitcherToFXDrawable(void *ptr) {
    FXSwitcher *src;
    FXDrawable *dest;
    src = (FXSwitcher *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXSwitcherToFXId(void *ptr) {
    FXSwitcher *src;
    FXId *dest;
    src = (FXSwitcher *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXSwitcherToFXObject(void *ptr) {
    FXSwitcher *src;
    FXObject *dest;
    src = (FXSwitcher *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define FX_Switcher_onPaint(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onPaint(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Switcher_onPaint(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXSwitcher * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Switcher_onPaint",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXSwitcher_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Switcher_onPaint. Expected _FXSwitcher_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Switcher_onPaint. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Switcher_onPaint(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Switcher_onCmdSetValue(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSetValue(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Switcher_onCmdSetValue(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXSwitcher * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Switcher_onCmdSetValue",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXSwitcher_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Switcher_onCmdSetValue. Expected _FXSwitcher_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Switcher_onCmdSetValue. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Switcher_onCmdSetValue(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Switcher_onCmdSetIntValue(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSetIntValue(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Switcher_onCmdSetIntValue(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXSwitcher * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Switcher_onCmdSetIntValue",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXSwitcher_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Switcher_onCmdSetIntValue. Expected _FXSwitcher_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Switcher_onCmdSetIntValue. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Switcher_onCmdSetIntValue(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Switcher_onCmdGetIntValue(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdGetIntValue(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Switcher_onCmdGetIntValue(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXSwitcher * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Switcher_onCmdGetIntValue",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXSwitcher_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Switcher_onCmdGetIntValue. Expected _FXSwitcher_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Switcher_onCmdGetIntValue. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Switcher_onCmdGetIntValue(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Switcher_onCmdOpen(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdOpen(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Switcher_onCmdOpen(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXSwitcher * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Switcher_onCmdOpen",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXSwitcher_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Switcher_onCmdOpen. Expected _FXSwitcher_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Switcher_onCmdOpen. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Switcher_onCmdOpen(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Switcher_onUpdOpen(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdOpen(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Switcher_onUpdOpen(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXSwitcher * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Switcher_onUpdOpen",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXSwitcher_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Switcher_onUpdOpen. Expected _FXSwitcher_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Switcher_onUpdOpen. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Switcher_onUpdOpen(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define new_FX_Switcher(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9) (new FXSwitcher(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9))
static PyObject *_wrap_new_FX_Switcher(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXSwitcher * _result;
    FXComposite * _arg0;
    FXuint  _arg1 = (FXuint ) 0;
    FXint  _arg2 = (FXint ) 0;
    FXint  _arg3 = (FXint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) (4);
    FXint  _arg7 = (FXint ) (4);
    FXint  _arg8 = (FXint ) (4);
    FXint  _arg9 = (FXint ) (4);
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "p","opts","x","y","w","h","pl","pr","pt","pb", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|iiiiiiiii:new_FX_Switcher",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7,&_arg8,&_arg9)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FX_Switcher. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXSwitcher *)new_FX_Switcher(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7,_arg8,_arg9);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXSwitcher_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_Switcher_setCurrent(_swigobj,_swigarg0,_swigarg1)  (_swigobj->setCurrent(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_Switcher_setCurrent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXSwitcher * _arg0;
    FXint  _arg1;
    FXbool  _arg2 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","index","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi|b:FX_Switcher_setCurrent",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXSwitcher_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Switcher_setCurrent. Expected _FXSwitcher_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Switcher_setCurrent(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Switcher_getCurrent(_swigobj)  (_swigobj->getCurrent())
static PyObject *_wrap_FX_Switcher_getCurrent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXSwitcher * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Switcher_getCurrent",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXSwitcher_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Switcher_getCurrent. Expected _FXSwitcher_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Switcher_getCurrent(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Switcher_setSwitcherStyle(_swigobj,_swigarg0)  (_swigobj->setSwitcherStyle(_swigarg0))
static PyObject *_wrap_FX_Switcher_setSwitcherStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXSwitcher * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","style", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Switcher_setSwitcherStyle",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXSwitcher_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Switcher_setSwitcherStyle. Expected _FXSwitcher_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Switcher_setSwitcherStyle(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Switcher_getSwitcherStyle(_swigobj)  (_swigobj->getSwitcherStyle())
static PyObject *_wrap_FX_Switcher_getSwitcherStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXSwitcher * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Switcher_getSwitcherStyle",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXSwitcher_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Switcher_getSwitcherStyle. Expected _FXSwitcher_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )FX_Switcher_getSwitcherStyle(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static void *SwigFXPySwitcherToFXSwitcher(void *ptr) {
    FXPySwitcher *src;
    FXSwitcher *dest;
    src = (FXPySwitcher *) ptr;
    dest = (FXSwitcher *) src;
    return (void *) dest;
}

static void *SwigFXPySwitcherToFXPacker(void *ptr) {
    FXPySwitcher *src;
    FXPacker *dest;
    src = (FXPySwitcher *) ptr;
    dest = (FXPacker *) src;
    return (void *) dest;
}

static void *SwigFXPySwitcherToFXComposite(void *ptr) {
    FXPySwitcher *src;
    FXComposite *dest;
    src = (FXPySwitcher *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXPySwitcherToFXWindow(void *ptr) {
    FXPySwitcher *src;
    FXWindow *dest;
    src = (FXPySwitcher *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXPySwitcherToFXDrawable(void *ptr) {
    FXPySwitcher *src;
    FXDrawable *dest;
    src = (FXPySwitcher *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPySwitcherToFXId(void *ptr) {
    FXPySwitcher *src;
    FXId *dest;
    src = (FXPySwitcher *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPySwitcherToFXObject(void *ptr) {
    FXPySwitcher *src;
    FXObject *dest;
    src = (FXPySwitcher *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXSwitcher(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9) (new FXPySwitcher(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9))
static PyObject *_wrap_new_FXSwitcher(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySwitcher * _result;
    FXComposite * _arg0;
    FXuint  _arg1 = (FXuint ) 0;
    FXint  _arg2 = (FXint ) 0;
    FXint  _arg3 = (FXint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) (4);
    FXint  _arg7 = (FXint ) (4);
    FXint  _arg8 = (FXint ) (4);
    FXint  _arg9 = (FXint ) (4);
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "p","opts","x","y","w","h","pl","pr","pt","pb", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|iiiiiiiii:new_FXSwitcher",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7,&_arg8,&_arg9)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FXSwitcher. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPySwitcher *)new_FXSwitcher(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7,_arg8,_arg9);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPySwitcher_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FXSwitcher_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXSwitcher_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPySwitcher * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXSwitcher_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySwitcher_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSwitcher_onDefault. Expected _FXPySwitcher_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXSwitcher_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXSwitcher_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXSwitcher_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySwitcher * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSwitcher_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySwitcher_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSwitcher_create. Expected _FXPySwitcher_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSwitcher_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSwitcher_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXSwitcher_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySwitcher * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSwitcher_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySwitcher_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSwitcher_destroy. Expected _FXPySwitcher_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSwitcher_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSwitcher_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXSwitcher_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySwitcher * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSwitcher_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySwitcher_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSwitcher_detach. Expected _FXPySwitcher_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSwitcher_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSwitcher_resize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_resize(_swigarg0,_swigarg1))
static PyObject *_wrap_FXSwitcher_resize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySwitcher * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXSwitcher_resize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySwitcher_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSwitcher_resize. Expected _FXPySwitcher_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSwitcher_resize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSwitcher_getDefaultWidth(_swigobj)  (_swigobj->_getDefaultWidth())
static PyObject *_wrap_FXSwitcher_getDefaultWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPySwitcher * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSwitcher_getDefaultWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySwitcher_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSwitcher_getDefaultWidth. Expected _FXPySwitcher_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXSwitcher_getDefaultWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXSwitcher_getDefaultHeight(_swigobj)  (_swigobj->_getDefaultHeight())
static PyObject *_wrap_FXSwitcher_getDefaultHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPySwitcher * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSwitcher_getDefaultHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySwitcher_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSwitcher_getDefaultHeight. Expected _FXPySwitcher_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXSwitcher_getDefaultHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXSwitcher_show(_swigobj)  (_swigobj->_show())
static PyObject *_wrap_FXSwitcher_show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySwitcher * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSwitcher_show",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySwitcher_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSwitcher_show. Expected _FXPySwitcher_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSwitcher_show(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSwitcher_hide(_swigobj)  (_swigobj->_hide())
static PyObject *_wrap_FXSwitcher_hide(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySwitcher * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSwitcher_hide",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySwitcher_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSwitcher_hide. Expected _FXPySwitcher_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSwitcher_hide(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSwitcher_enable(_swigobj)  (_swigobj->_enable())
static PyObject *_wrap_FXSwitcher_enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySwitcher * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSwitcher_enable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySwitcher_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSwitcher_enable. Expected _FXPySwitcher_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSwitcher_enable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSwitcher_disable(_swigobj)  (_swigobj->_disable())
static PyObject *_wrap_FXSwitcher_disable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySwitcher * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSwitcher_disable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySwitcher_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSwitcher_disable. Expected _FXPySwitcher_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSwitcher_disable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSwitcher_canFocus(_swigobj)  (_swigobj->_canFocus())
static PyObject *_wrap_FXSwitcher_canFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPySwitcher * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSwitcher_canFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySwitcher_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSwitcher_canFocus. Expected _FXPySwitcher_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXSwitcher_canFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXSwitcher_setFocus(_swigobj)  (_swigobj->_setFocus())
static PyObject *_wrap_FXSwitcher_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySwitcher * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSwitcher_setFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySwitcher_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSwitcher_setFocus. Expected _FXPySwitcher_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSwitcher_setFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSwitcher_killFocus(_swigobj)  (_swigobj->_killFocus())
static PyObject *_wrap_FXSwitcher_killFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySwitcher * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSwitcher_killFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySwitcher_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSwitcher_killFocus. Expected _FXPySwitcher_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSwitcher_killFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSwitcher_setDefault(_swigobj,_swigarg0)  (_swigobj->_setDefault(_swigarg0))
static PyObject *_wrap_FXSwitcher_setDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySwitcher * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FXSwitcher_setDefault",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySwitcher_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSwitcher_setDefault. Expected _FXPySwitcher_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSwitcher_setDefault(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSwitcher_recalc(_swigobj)  (_swigobj->_recalc())
static PyObject *_wrap_FXSwitcher_recalc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySwitcher * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSwitcher_recalc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySwitcher_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSwitcher_recalc. Expected _FXPySwitcher_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSwitcher_recalc(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSwitcher_layout(_swigobj)  (_swigobj->_layout())
static PyObject *_wrap_FXSwitcher_layout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySwitcher * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSwitcher_layout",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySwitcher_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSwitcher_layout. Expected _FXPySwitcher_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSwitcher_layout(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSwitcher_lower(_swigobj)  (_swigobj->_lowerWindow())
static PyObject *_wrap_FXSwitcher_lower(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySwitcher * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSwitcher_lower",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySwitcher_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSwitcher_lower. Expected _FXPySwitcher_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSwitcher_lower(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSwitcher_move(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_move(_swigarg0,_swigarg1))
static PyObject *_wrap_FXSwitcher_move(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySwitcher * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXSwitcher_move",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySwitcher_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSwitcher_move. Expected _FXPySwitcher_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSwitcher_move(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSwitcher_position(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->_position(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FXSwitcher_position(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySwitcher * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FXSwitcher_position",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySwitcher_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSwitcher_position. Expected _FXPySwitcher_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSwitcher_position(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSwitcher_isComposite(_swigobj)  (_swigobj->_isComposite())
static PyObject *_wrap_FXSwitcher_isComposite(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPySwitcher * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSwitcher_isComposite",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySwitcher_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSwitcher_isComposite. Expected _FXPySwitcher_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXSwitcher_isComposite(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXSwitcher_contains(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_contains(_swigarg0,_swigarg1))
static PyObject *_wrap_FXSwitcher_contains(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPySwitcher * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXSwitcher_contains",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySwitcher_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSwitcher_contains. Expected _FXPySwitcher_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXSwitcher_contains(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXSwitcher_getWidthForHeight(_swigobj,_swigarg0)  (_swigobj->_getWidthForHeight(_swigarg0))
static PyObject *_wrap_FXSwitcher_getWidthForHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPySwitcher * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXSwitcher_getWidthForHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySwitcher_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSwitcher_getWidthForHeight. Expected _FXPySwitcher_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXSwitcher_getWidthForHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXSwitcher_getHeightForWidth(_swigobj,_swigarg0)  (_swigobj->_getHeightForWidth(_swigarg0))
static PyObject *_wrap_FXSwitcher_getHeightForWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPySwitcher * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXSwitcher_getHeightForWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySwitcher_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSwitcher_getHeightForWidth. Expected _FXPySwitcher_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXSwitcher_getHeightForWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXSwitcher_doesSaveUnder(_swigobj)  (_swigobj->_doesSaveUnder())
static PyObject *_wrap_FXSwitcher_doesSaveUnder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPySwitcher * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSwitcher_doesSaveUnder",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySwitcher_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSwitcher_doesSaveUnder. Expected _FXPySwitcher_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXSwitcher_doesSaveUnder(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXSwitcher_reparent(_swigobj,_swigarg0)  (_swigobj->_reparent(_swigarg0))
static PyObject *_wrap_FXSwitcher_reparent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySwitcher * _arg0;
    FXComposite * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","newparent", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXSwitcher_reparent",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySwitcher_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSwitcher_reparent. Expected _FXPySwitcher_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXSwitcher_reparent. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSwitcher_reparent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSwitcher_setBackColor(_swigobj,_swigarg0)  (_swigobj->_setBackColor(_swigarg0))
static PyObject *_wrap_FXSwitcher_setBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySwitcher * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXSwitcher_setBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySwitcher_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSwitcher_setBackColor. Expected _FXPySwitcher_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSwitcher_setBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXScrollAreaToFXComposite(void *ptr) {
    FXScrollArea *src;
    FXComposite *dest;
    src = (FXScrollArea *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXScrollAreaToFXWindow(void *ptr) {
    FXScrollArea *src;
    FXWindow *dest;
    src = (FXScrollArea *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXScrollAreaToFXDrawable(void *ptr) {
    FXScrollArea *src;
    FXDrawable *dest;
    src = (FXScrollArea *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXScrollAreaToFXId(void *ptr) {
    FXScrollArea *src;
    FXId *dest;
    src = (FXScrollArea *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXScrollAreaToFXObject(void *ptr) {
    FXScrollArea *src;
    FXObject *dest;
    src = (FXScrollArea *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define FX_ScrollArea_onHMouseWheel(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onHMouseWheel(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ScrollArea_onHMouseWheel(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXScrollArea * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ScrollArea_onHMouseWheel",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ScrollArea_onHMouseWheel. Expected _FXScrollArea_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ScrollArea_onHMouseWheel. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ScrollArea_onHMouseWheel(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ScrollArea_onVMouseWheel(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onVMouseWheel(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ScrollArea_onVMouseWheel(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXScrollArea * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ScrollArea_onVMouseWheel",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ScrollArea_onVMouseWheel. Expected _FXScrollArea_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ScrollArea_onVMouseWheel. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ScrollArea_onVMouseWheel(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ScrollArea_onHScrollerChanged(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onHScrollerChanged(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ScrollArea_onHScrollerChanged(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXScrollArea * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ScrollArea_onHScrollerChanged",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ScrollArea_onHScrollerChanged. Expected _FXScrollArea_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ScrollArea_onHScrollerChanged. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ScrollArea_onHScrollerChanged(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ScrollArea_onVScrollerChanged(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onVScrollerChanged(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ScrollArea_onVScrollerChanged(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXScrollArea * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ScrollArea_onVScrollerChanged",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ScrollArea_onVScrollerChanged. Expected _FXScrollArea_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ScrollArea_onVScrollerChanged. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ScrollArea_onVScrollerChanged(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ScrollArea_onHScrollerDragged(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onHScrollerDragged(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ScrollArea_onHScrollerDragged(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXScrollArea * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ScrollArea_onHScrollerDragged",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ScrollArea_onHScrollerDragged. Expected _FXScrollArea_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ScrollArea_onHScrollerDragged. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ScrollArea_onHScrollerDragged(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ScrollArea_onVScrollerDragged(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onVScrollerDragged(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ScrollArea_onVScrollerDragged(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXScrollArea * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ScrollArea_onVScrollerDragged",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ScrollArea_onVScrollerDragged. Expected _FXScrollArea_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ScrollArea_onVScrollerDragged. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ScrollArea_onVScrollerDragged(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ScrollArea_onAutoScroll(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onAutoScroll(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ScrollArea_onAutoScroll(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXScrollArea * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ScrollArea_onAutoScroll",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ScrollArea_onAutoScroll. Expected _FXScrollArea_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ScrollArea_onAutoScroll. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ScrollArea_onAutoScroll(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ScrollArea_setScrollStyle(_swigobj,_swigarg0)  (_swigobj->setScrollStyle(_swigarg0))
static PyObject *_wrap_FX_ScrollArea_setScrollStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXScrollArea * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","style", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_ScrollArea_setScrollStyle",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ScrollArea_setScrollStyle. Expected _FXScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_ScrollArea_setScrollStyle(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_ScrollArea_getScrollStyle(_swigobj)  (_swigobj->getScrollStyle())
static PyObject *_wrap_FX_ScrollArea_getScrollStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXScrollArea * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_ScrollArea_getScrollStyle",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ScrollArea_getScrollStyle. Expected _FXScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )FX_ScrollArea_getScrollStyle(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_ScrollArea_isHorizontalScrollable(_swigobj)  (_swigobj->isHorizontalScrollable())
static PyObject *_wrap_FX_ScrollArea_isHorizontalScrollable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXScrollArea * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_ScrollArea_isHorizontalScrollable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ScrollArea_isHorizontalScrollable. Expected _FXScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_ScrollArea_isHorizontalScrollable(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_ScrollArea_isVerticalScrollable(_swigobj)  (_swigobj->isVerticalScrollable())
static PyObject *_wrap_FX_ScrollArea_isVerticalScrollable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXScrollArea * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_ScrollArea_isVerticalScrollable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ScrollArea_isVerticalScrollable. Expected _FXScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_ScrollArea_isVerticalScrollable(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_ScrollArea_horizontalScrollbar(_swigobj)  (_swigobj->horizontalScrollbar())
static PyObject *_wrap_FX_ScrollArea_horizontalScrollbar(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXScrollbar * _result;
    FXScrollArea * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_ScrollArea_horizontalScrollbar",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ScrollArea_horizontalScrollbar. Expected _FXScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXScrollbar *)FX_ScrollArea_horizontalScrollbar(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_ScrollArea_verticalScrollbar(_swigobj)  (_swigobj->verticalScrollbar())
static PyObject *_wrap_FX_ScrollArea_verticalScrollbar(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXScrollbar * _result;
    FXScrollArea * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_ScrollArea_verticalScrollbar",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ScrollArea_verticalScrollbar. Expected _FXScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXScrollbar *)FX_ScrollArea_verticalScrollbar(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_ScrollArea_getXPosition(_swigobj)  (_swigobj->getXPosition())
static PyObject *_wrap_FX_ScrollArea_getXPosition(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXScrollArea * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_ScrollArea_getXPosition",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ScrollArea_getXPosition. Expected _FXScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_ScrollArea_getXPosition(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_ScrollArea_getYPosition(_swigobj)  (_swigobj->getYPosition())
static PyObject *_wrap_FX_ScrollArea_getYPosition(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXScrollArea * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_ScrollArea_getYPosition",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ScrollArea_getYPosition. Expected _FXScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_ScrollArea_getYPosition(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_ScrollArea_setPosition(_swigobj,_swigarg0,_swigarg1)  (_swigobj->setPosition(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_ScrollArea_setPosition(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXScrollArea * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FX_ScrollArea_setPosition",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ScrollArea_setPosition. Expected _FXScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_ScrollArea_setPosition(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static PyObject * FXScrollArea_getPosition(FXScrollArea *self) {
      FXint x, y;
      self->getPosition(x, y);
      FXbool doSave = FXPyRestoreThread();
      PyObject* tuple = PyTuple_New(2);
      if (tuple) {
	PyObject *obj1 = PyInt_FromLong(x);
	if (!obj1 || PyTuple_SetItem(tuple, 0, obj1) < 0) {
	  Py_DECREF(tuple);
          FXPySaveThread(doSave);
	  return NULL;
	}
	PyObject *obj2 = PyInt_FromLong(y);
	if (!obj2 || PyTuple_SetItem(tuple, 1, obj2) < 0) {
	  Py_DECREF(tuple);
          FXPySaveThread(doSave);
	  return NULL;
	}
      }
      FXPySaveThread(doSave);
      return tuple;
    }
static PyObject *_wrap_FX_ScrollArea_getPosition(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    PyObject * _result;
    FXScrollArea * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_ScrollArea_getPosition",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ScrollArea_getPosition. Expected _FXScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (PyObject *)FXScrollArea_getPosition(_arg0);

    FXPy_END_ALLOW_THREADS
}{
  _resultobj = _result;
}
    return _resultobj;
}

#define FX_ScrollArea_getContentWidth(_swigobj)  (_swigobj->getContentWidth())
static PyObject *_wrap_FX_ScrollArea_getContentWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXScrollArea * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_ScrollArea_getContentWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ScrollArea_getContentWidth. Expected _FXScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_ScrollArea_getContentWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_ScrollArea_getContentHeight(_swigobj)  (_swigobj->getContentHeight())
static PyObject *_wrap_FX_ScrollArea_getContentHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXScrollArea * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_ScrollArea_getContentHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ScrollArea_getContentHeight. Expected _FXScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_ScrollArea_getContentHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_ScrollArea_getViewportWidth(_swigobj)  (_swigobj->getViewportWidth())
static PyObject *_wrap_FX_ScrollArea_getViewportWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXScrollArea * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_ScrollArea_getViewportWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ScrollArea_getViewportWidth. Expected _FXScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_ScrollArea_getViewportWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_ScrollArea_getViewportHeight(_swigobj)  (_swigobj->getViewportHeight())
static PyObject *_wrap_FX_ScrollArea_getViewportHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXScrollArea * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_ScrollArea_getViewportHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ScrollArea_getViewportHeight. Expected _FXScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_ScrollArea_getViewportHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_ScrollArea_moveContents(_swigobj,_swigarg0,_swigarg1)  (_swigobj->moveContents(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_ScrollArea_moveContents(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXScrollArea * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FX_ScrollArea_moveContents",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ScrollArea_moveContents. Expected _FXScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_ScrollArea_moveContents(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXPyScrollAreaToFXScrollArea(void *ptr) {
    FXPyScrollArea *src;
    FXScrollArea *dest;
    src = (FXPyScrollArea *) ptr;
    dest = (FXScrollArea *) src;
    return (void *) dest;
}

static void *SwigFXPyScrollAreaToFXComposite(void *ptr) {
    FXPyScrollArea *src;
    FXComposite *dest;
    src = (FXPyScrollArea *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXPyScrollAreaToFXWindow(void *ptr) {
    FXPyScrollArea *src;
    FXWindow *dest;
    src = (FXPyScrollArea *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyScrollAreaToFXDrawable(void *ptr) {
    FXPyScrollArea *src;
    FXDrawable *dest;
    src = (FXPyScrollArea *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPyScrollAreaToFXId(void *ptr) {
    FXPyScrollArea *src;
    FXId *dest;
    src = (FXPyScrollArea *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPyScrollAreaToFXObject(void *ptr) {
    FXPyScrollArea *src;
    FXObject *dest;
    src = (FXPyScrollArea *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXScrollArea(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5) (new FXPyScrollArea(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5))
static PyObject *_wrap_new_FXScrollArea(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollArea * _result;
    FXComposite * _arg0;
    FXuint  _arg1 = (FXuint ) 0;
    FXint  _arg2 = (FXint ) 0;
    FXint  _arg3 = (FXint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "p","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|iiiii:new_FXScrollArea",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4,&_arg5)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FXScrollArea. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyScrollArea *)new_FXScrollArea(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyScrollArea_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FXScrollArea_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXScrollArea_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyScrollArea * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXScrollArea_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollArea_onDefault. Expected _FXPyScrollArea_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXScrollArea_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXScrollArea_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXScrollArea_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollArea * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollArea_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollArea_create. Expected _FXPyScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXScrollArea_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXScrollArea_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXScrollArea_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollArea * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollArea_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollArea_destroy. Expected _FXPyScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXScrollArea_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXScrollArea_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXScrollArea_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollArea * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollArea_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollArea_detach. Expected _FXPyScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXScrollArea_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXScrollArea_resize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_resize(_swigarg0,_swigarg1))
static PyObject *_wrap_FXScrollArea_resize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollArea * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXScrollArea_resize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollArea_resize. Expected _FXPyScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXScrollArea_resize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXScrollArea_getDefaultWidth(_swigobj)  (_swigobj->_getDefaultWidth())
static PyObject *_wrap_FXScrollArea_getDefaultWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyScrollArea * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollArea_getDefaultWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollArea_getDefaultWidth. Expected _FXPyScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXScrollArea_getDefaultWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXScrollArea_getDefaultHeight(_swigobj)  (_swigobj->_getDefaultHeight())
static PyObject *_wrap_FXScrollArea_getDefaultHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyScrollArea * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollArea_getDefaultHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollArea_getDefaultHeight. Expected _FXPyScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXScrollArea_getDefaultHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXScrollArea_show(_swigobj)  (_swigobj->_show())
static PyObject *_wrap_FXScrollArea_show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollArea * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollArea_show",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollArea_show. Expected _FXPyScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXScrollArea_show(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXScrollArea_hide(_swigobj)  (_swigobj->_hide())
static PyObject *_wrap_FXScrollArea_hide(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollArea * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollArea_hide",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollArea_hide. Expected _FXPyScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXScrollArea_hide(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXScrollArea_enable(_swigobj)  (_swigobj->_enable())
static PyObject *_wrap_FXScrollArea_enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollArea * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollArea_enable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollArea_enable. Expected _FXPyScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXScrollArea_enable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXScrollArea_disable(_swigobj)  (_swigobj->_disable())
static PyObject *_wrap_FXScrollArea_disable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollArea * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollArea_disable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollArea_disable. Expected _FXPyScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXScrollArea_disable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXScrollArea_canFocus(_swigobj)  (_swigobj->_canFocus())
static PyObject *_wrap_FXScrollArea_canFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyScrollArea * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollArea_canFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollArea_canFocus. Expected _FXPyScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXScrollArea_canFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXScrollArea_setFocus(_swigobj)  (_swigobj->_setFocus())
static PyObject *_wrap_FXScrollArea_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollArea * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollArea_setFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollArea_setFocus. Expected _FXPyScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXScrollArea_setFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXScrollArea_killFocus(_swigobj)  (_swigobj->_killFocus())
static PyObject *_wrap_FXScrollArea_killFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollArea * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollArea_killFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollArea_killFocus. Expected _FXPyScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXScrollArea_killFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXScrollArea_setDefault(_swigobj,_swigarg0)  (_swigobj->_setDefault(_swigarg0))
static PyObject *_wrap_FXScrollArea_setDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollArea * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FXScrollArea_setDefault",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollArea_setDefault. Expected _FXPyScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXScrollArea_setDefault(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXScrollArea_recalc(_swigobj)  (_swigobj->_recalc())
static PyObject *_wrap_FXScrollArea_recalc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollArea * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollArea_recalc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollArea_recalc. Expected _FXPyScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXScrollArea_recalc(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXScrollArea_layout(_swigobj)  (_swigobj->_layout())
static PyObject *_wrap_FXScrollArea_layout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollArea * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollArea_layout",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollArea_layout. Expected _FXPyScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXScrollArea_layout(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXScrollArea_lower(_swigobj)  (_swigobj->_lowerWindow())
static PyObject *_wrap_FXScrollArea_lower(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollArea * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollArea_lower",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollArea_lower. Expected _FXPyScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXScrollArea_lower(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXScrollArea_move(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_move(_swigarg0,_swigarg1))
static PyObject *_wrap_FXScrollArea_move(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollArea * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXScrollArea_move",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollArea_move. Expected _FXPyScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXScrollArea_move(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXScrollArea_position(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->_position(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FXScrollArea_position(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollArea * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FXScrollArea_position",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollArea_position. Expected _FXPyScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXScrollArea_position(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXScrollArea_isComposite(_swigobj)  (_swigobj->_isComposite())
static PyObject *_wrap_FXScrollArea_isComposite(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyScrollArea * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollArea_isComposite",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollArea_isComposite. Expected _FXPyScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXScrollArea_isComposite(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXScrollArea_contains(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_contains(_swigarg0,_swigarg1))
static PyObject *_wrap_FXScrollArea_contains(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyScrollArea * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXScrollArea_contains",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollArea_contains. Expected _FXPyScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXScrollArea_contains(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXScrollArea_getWidthForHeight(_swigobj,_swigarg0)  (_swigobj->_getWidthForHeight(_swigarg0))
static PyObject *_wrap_FXScrollArea_getWidthForHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyScrollArea * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXScrollArea_getWidthForHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollArea_getWidthForHeight. Expected _FXPyScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXScrollArea_getWidthForHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXScrollArea_getHeightForWidth(_swigobj,_swigarg0)  (_swigobj->_getHeightForWidth(_swigarg0))
static PyObject *_wrap_FXScrollArea_getHeightForWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyScrollArea * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXScrollArea_getHeightForWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollArea_getHeightForWidth. Expected _FXPyScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXScrollArea_getHeightForWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXScrollArea_doesSaveUnder(_swigobj)  (_swigobj->_doesSaveUnder())
static PyObject *_wrap_FXScrollArea_doesSaveUnder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyScrollArea * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollArea_doesSaveUnder",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollArea_doesSaveUnder. Expected _FXPyScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXScrollArea_doesSaveUnder(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXScrollArea_reparent(_swigobj,_swigarg0)  (_swigobj->_reparent(_swigarg0))
static PyObject *_wrap_FXScrollArea_reparent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollArea * _arg0;
    FXComposite * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","newparent", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXScrollArea_reparent",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollArea_reparent. Expected _FXPyScrollArea_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXScrollArea_reparent. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXScrollArea_reparent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXScrollArea_setBackColor(_swigobj,_swigarg0)  (_swigobj->_setBackColor(_swigarg0))
static PyObject *_wrap_FXScrollArea_setBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollArea * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXScrollArea_setBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollArea_setBackColor. Expected _FXPyScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXScrollArea_setBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXScrollArea_getContentWidth(_swigobj)  (_swigobj->_getContentWidth())
static PyObject *_wrap_FXScrollArea_getContentWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyScrollArea * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollArea_getContentWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollArea_getContentWidth. Expected _FXPyScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXScrollArea_getContentWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXScrollArea_getContentHeight(_swigobj)  (_swigobj->_getContentHeight())
static PyObject *_wrap_FXScrollArea_getContentHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyScrollArea * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollArea_getContentHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollArea_getContentHeight. Expected _FXPyScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXScrollArea_getContentHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXScrollArea_getViewportWidth(_swigobj)  (_swigobj->_getViewportWidth())
static PyObject *_wrap_FXScrollArea_getViewportWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyScrollArea * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollArea_getViewportWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollArea_getViewportWidth. Expected _FXPyScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXScrollArea_getViewportWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXScrollArea_getViewportHeight(_swigobj)  (_swigobj->_getViewportHeight())
static PyObject *_wrap_FXScrollArea_getViewportHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyScrollArea * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollArea_getViewportHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollArea_getViewportHeight. Expected _FXPyScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXScrollArea_getViewportHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXScrollArea_moveContents(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_moveContents(_swigarg0,_swigarg1))
static PyObject *_wrap_FXScrollArea_moveContents(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollArea * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXScrollArea_moveContents",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollArea_moveContents. Expected _FXPyScrollArea_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXScrollArea_moveContents(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXScrollWindowToFXScrollArea(void *ptr) {
    FXScrollWindow *src;
    FXScrollArea *dest;
    src = (FXScrollWindow *) ptr;
    dest = (FXScrollArea *) src;
    return (void *) dest;
}

static void *SwigFXScrollWindowToFXComposite(void *ptr) {
    FXScrollWindow *src;
    FXComposite *dest;
    src = (FXScrollWindow *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXScrollWindowToFXWindow(void *ptr) {
    FXScrollWindow *src;
    FXWindow *dest;
    src = (FXScrollWindow *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXScrollWindowToFXDrawable(void *ptr) {
    FXScrollWindow *src;
    FXDrawable *dest;
    src = (FXScrollWindow *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXScrollWindowToFXId(void *ptr) {
    FXScrollWindow *src;
    FXId *dest;
    src = (FXScrollWindow *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXScrollWindowToFXObject(void *ptr) {
    FXScrollWindow *src;
    FXObject *dest;
    src = (FXScrollWindow *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define FX_ScrollWindow_onKeyPress(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onKeyPress(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ScrollWindow_onKeyPress(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXScrollWindow * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ScrollWindow_onKeyPress",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXScrollWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ScrollWindow_onKeyPress. Expected _FXScrollWindow_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ScrollWindow_onKeyPress. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ScrollWindow_onKeyPress(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ScrollWindow_onKeyRelease(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onKeyRelease(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ScrollWindow_onKeyRelease(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXScrollWindow * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ScrollWindow_onKeyRelease",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXScrollWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ScrollWindow_onKeyRelease. Expected _FXScrollWindow_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ScrollWindow_onKeyRelease. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ScrollWindow_onKeyRelease(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ScrollWindow_onFocusSelf(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onFocusSelf(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ScrollWindow_onFocusSelf(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXScrollWindow * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ScrollWindow_onFocusSelf",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXScrollWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ScrollWindow_onFocusSelf. Expected _FXScrollWindow_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ScrollWindow_onFocusSelf. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ScrollWindow_onFocusSelf(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define new_FX_ScrollWindow(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5) (new FXScrollWindow(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5))
static PyObject *_wrap_new_FX_ScrollWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXScrollWindow * _result;
    FXComposite * _arg0;
    FXuint  _arg1 = (FXuint ) 0;
    FXint  _arg2 = (FXint ) 0;
    FXint  _arg3 = (FXint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "p","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|iiiii:new_FX_ScrollWindow",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4,&_arg5)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FX_ScrollWindow. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXScrollWindow *)new_FX_ScrollWindow(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXScrollWindow_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_ScrollWindow_contentWindow(_swigobj)  (_swigobj->contentWindow())
static PyObject *_wrap_FX_ScrollWindow_contentWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXWindow * _result;
    FXScrollWindow * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_ScrollWindow_contentWindow",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXScrollWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ScrollWindow_contentWindow. Expected _FXScrollWindow_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXWindow *)FX_ScrollWindow_contentWindow(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

static void *SwigFXPyScrollWindowToFXScrollWindow(void *ptr) {
    FXPyScrollWindow *src;
    FXScrollWindow *dest;
    src = (FXPyScrollWindow *) ptr;
    dest = (FXScrollWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyScrollWindowToFXScrollArea(void *ptr) {
    FXPyScrollWindow *src;
    FXScrollArea *dest;
    src = (FXPyScrollWindow *) ptr;
    dest = (FXScrollArea *) src;
    return (void *) dest;
}

static void *SwigFXPyScrollWindowToFXComposite(void *ptr) {
    FXPyScrollWindow *src;
    FXComposite *dest;
    src = (FXPyScrollWindow *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXPyScrollWindowToFXWindow(void *ptr) {
    FXPyScrollWindow *src;
    FXWindow *dest;
    src = (FXPyScrollWindow *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyScrollWindowToFXDrawable(void *ptr) {
    FXPyScrollWindow *src;
    FXDrawable *dest;
    src = (FXPyScrollWindow *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPyScrollWindowToFXId(void *ptr) {
    FXPyScrollWindow *src;
    FXId *dest;
    src = (FXPyScrollWindow *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPyScrollWindowToFXObject(void *ptr) {
    FXPyScrollWindow *src;
    FXObject *dest;
    src = (FXPyScrollWindow *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXScrollWindow(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5) (new FXPyScrollWindow(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5))
static PyObject *_wrap_new_FXScrollWindow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollWindow * _result;
    FXComposite * _arg0;
    FXuint  _arg1 = (FXuint ) 0;
    FXint  _arg2 = (FXint ) 0;
    FXint  _arg3 = (FXint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "p","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|iiiii:new_FXScrollWindow",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4,&_arg5)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FXScrollWindow. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyScrollWindow *)new_FXScrollWindow(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyScrollWindow_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FXScrollWindow_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXScrollWindow_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyScrollWindow * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXScrollWindow_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollWindow_onDefault. Expected _FXPyScrollWindow_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXScrollWindow_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXScrollWindow_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXScrollWindow_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollWindow * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollWindow_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollWindow_create. Expected _FXPyScrollWindow_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXScrollWindow_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXScrollWindow_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXScrollWindow_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollWindow * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollWindow_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollWindow_destroy. Expected _FXPyScrollWindow_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXScrollWindow_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXScrollWindow_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXScrollWindow_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollWindow * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollWindow_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollWindow_detach. Expected _FXPyScrollWindow_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXScrollWindow_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXScrollWindow_resize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_resize(_swigarg0,_swigarg1))
static PyObject *_wrap_FXScrollWindow_resize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollWindow * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXScrollWindow_resize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollWindow_resize. Expected _FXPyScrollWindow_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXScrollWindow_resize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXScrollWindow_getDefaultWidth(_swigobj)  (_swigobj->_getDefaultWidth())
static PyObject *_wrap_FXScrollWindow_getDefaultWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyScrollWindow * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollWindow_getDefaultWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollWindow_getDefaultWidth. Expected _FXPyScrollWindow_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXScrollWindow_getDefaultWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXScrollWindow_getDefaultHeight(_swigobj)  (_swigobj->_getDefaultHeight())
static PyObject *_wrap_FXScrollWindow_getDefaultHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyScrollWindow * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollWindow_getDefaultHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollWindow_getDefaultHeight. Expected _FXPyScrollWindow_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXScrollWindow_getDefaultHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXScrollWindow_show(_swigobj)  (_swigobj->_show())
static PyObject *_wrap_FXScrollWindow_show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollWindow * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollWindow_show",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollWindow_show. Expected _FXPyScrollWindow_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXScrollWindow_show(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXScrollWindow_hide(_swigobj)  (_swigobj->_hide())
static PyObject *_wrap_FXScrollWindow_hide(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollWindow * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollWindow_hide",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollWindow_hide. Expected _FXPyScrollWindow_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXScrollWindow_hide(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXScrollWindow_enable(_swigobj)  (_swigobj->_enable())
static PyObject *_wrap_FXScrollWindow_enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollWindow * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollWindow_enable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollWindow_enable. Expected _FXPyScrollWindow_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXScrollWindow_enable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXScrollWindow_disable(_swigobj)  (_swigobj->_disable())
static PyObject *_wrap_FXScrollWindow_disable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollWindow * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollWindow_disable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollWindow_disable. Expected _FXPyScrollWindow_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXScrollWindow_disable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXScrollWindow_canFocus(_swigobj)  (_swigobj->_canFocus())
static PyObject *_wrap_FXScrollWindow_canFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyScrollWindow * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollWindow_canFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollWindow_canFocus. Expected _FXPyScrollWindow_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXScrollWindow_canFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXScrollWindow_setFocus(_swigobj)  (_swigobj->_setFocus())
static PyObject *_wrap_FXScrollWindow_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollWindow * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollWindow_setFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollWindow_setFocus. Expected _FXPyScrollWindow_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXScrollWindow_setFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXScrollWindow_killFocus(_swigobj)  (_swigobj->_killFocus())
static PyObject *_wrap_FXScrollWindow_killFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollWindow * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollWindow_killFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollWindow_killFocus. Expected _FXPyScrollWindow_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXScrollWindow_killFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXScrollWindow_setDefault(_swigobj,_swigarg0)  (_swigobj->_setDefault(_swigarg0))
static PyObject *_wrap_FXScrollWindow_setDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollWindow * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FXScrollWindow_setDefault",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollWindow_setDefault. Expected _FXPyScrollWindow_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXScrollWindow_setDefault(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXScrollWindow_recalc(_swigobj)  (_swigobj->_recalc())
static PyObject *_wrap_FXScrollWindow_recalc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollWindow * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollWindow_recalc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollWindow_recalc. Expected _FXPyScrollWindow_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXScrollWindow_recalc(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXScrollWindow_layout(_swigobj)  (_swigobj->_layout())
static PyObject *_wrap_FXScrollWindow_layout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollWindow * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollWindow_layout",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollWindow_layout. Expected _FXPyScrollWindow_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXScrollWindow_layout(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXScrollWindow_lower(_swigobj)  (_swigobj->_lowerWindow())
static PyObject *_wrap_FXScrollWindow_lower(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollWindow * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollWindow_lower",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollWindow_lower. Expected _FXPyScrollWindow_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXScrollWindow_lower(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXScrollWindow_move(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_move(_swigarg0,_swigarg1))
static PyObject *_wrap_FXScrollWindow_move(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollWindow * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXScrollWindow_move",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollWindow_move. Expected _FXPyScrollWindow_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXScrollWindow_move(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXScrollWindow_position(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->_position(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FXScrollWindow_position(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollWindow * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FXScrollWindow_position",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollWindow_position. Expected _FXPyScrollWindow_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXScrollWindow_position(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXScrollWindow_isComposite(_swigobj)  (_swigobj->_isComposite())
static PyObject *_wrap_FXScrollWindow_isComposite(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyScrollWindow * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollWindow_isComposite",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollWindow_isComposite. Expected _FXPyScrollWindow_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXScrollWindow_isComposite(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXScrollWindow_contains(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_contains(_swigarg0,_swigarg1))
static PyObject *_wrap_FXScrollWindow_contains(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyScrollWindow * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXScrollWindow_contains",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollWindow_contains. Expected _FXPyScrollWindow_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXScrollWindow_contains(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXScrollWindow_getWidthForHeight(_swigobj,_swigarg0)  (_swigobj->_getWidthForHeight(_swigarg0))
static PyObject *_wrap_FXScrollWindow_getWidthForHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyScrollWindow * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXScrollWindow_getWidthForHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollWindow_getWidthForHeight. Expected _FXPyScrollWindow_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXScrollWindow_getWidthForHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXScrollWindow_getHeightForWidth(_swigobj,_swigarg0)  (_swigobj->_getHeightForWidth(_swigarg0))
static PyObject *_wrap_FXScrollWindow_getHeightForWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyScrollWindow * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXScrollWindow_getHeightForWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollWindow_getHeightForWidth. Expected _FXPyScrollWindow_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXScrollWindow_getHeightForWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXScrollWindow_doesSaveUnder(_swigobj)  (_swigobj->_doesSaveUnder())
static PyObject *_wrap_FXScrollWindow_doesSaveUnder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyScrollWindow * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollWindow_doesSaveUnder",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollWindow_doesSaveUnder. Expected _FXPyScrollWindow_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXScrollWindow_doesSaveUnder(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXScrollWindow_reparent(_swigobj,_swigarg0)  (_swigobj->_reparent(_swigarg0))
static PyObject *_wrap_FXScrollWindow_reparent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollWindow * _arg0;
    FXComposite * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","newparent", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXScrollWindow_reparent",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollWindow_reparent. Expected _FXPyScrollWindow_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXScrollWindow_reparent. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXScrollWindow_reparent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXScrollWindow_setBackColor(_swigobj,_swigarg0)  (_swigobj->_setBackColor(_swigarg0))
static PyObject *_wrap_FXScrollWindow_setBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollWindow * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXScrollWindow_setBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollWindow_setBackColor. Expected _FXPyScrollWindow_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXScrollWindow_setBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXScrollWindow_getContentWidth(_swigobj)  (_swigobj->_getContentWidth())
static PyObject *_wrap_FXScrollWindow_getContentWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyScrollWindow * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollWindow_getContentWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollWindow_getContentWidth. Expected _FXPyScrollWindow_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXScrollWindow_getContentWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXScrollWindow_getContentHeight(_swigobj)  (_swigobj->_getContentHeight())
static PyObject *_wrap_FXScrollWindow_getContentHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyScrollWindow * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollWindow_getContentHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollWindow_getContentHeight. Expected _FXPyScrollWindow_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXScrollWindow_getContentHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXScrollWindow_getViewportWidth(_swigobj)  (_swigobj->_getViewportWidth())
static PyObject *_wrap_FXScrollWindow_getViewportWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyScrollWindow * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollWindow_getViewportWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollWindow_getViewportWidth. Expected _FXPyScrollWindow_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXScrollWindow_getViewportWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXScrollWindow_getViewportHeight(_swigobj)  (_swigobj->_getViewportHeight())
static PyObject *_wrap_FXScrollWindow_getViewportHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyScrollWindow * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXScrollWindow_getViewportHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollWindow_getViewportHeight. Expected _FXPyScrollWindow_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXScrollWindow_getViewportHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXScrollWindow_moveContents(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_moveContents(_swigarg0,_swigarg1))
static PyObject *_wrap_FXScrollWindow_moveContents(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyScrollWindow * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXScrollWindow_moveContents",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyScrollWindow_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXScrollWindow_moveContents. Expected _FXPyScrollWindow_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXScrollWindow_moveContents(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXSplitterToFXComposite(void *ptr) {
    FXSplitter *src;
    FXComposite *dest;
    src = (FXSplitter *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXSplitterToFXWindow(void *ptr) {
    FXSplitter *src;
    FXWindow *dest;
    src = (FXSplitter *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXSplitterToFXDrawable(void *ptr) {
    FXSplitter *src;
    FXDrawable *dest;
    src = (FXSplitter *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXSplitterToFXId(void *ptr) {
    FXSplitter *src;
    FXId *dest;
    src = (FXSplitter *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXSplitterToFXObject(void *ptr) {
    FXSplitter *src;
    FXObject *dest;
    src = (FXSplitter *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define FX_Splitter_onLeftBtnPress(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onLeftBtnPress(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Splitter_onLeftBtnPress(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXSplitter * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Splitter_onLeftBtnPress",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXSplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Splitter_onLeftBtnPress. Expected _FXSplitter_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Splitter_onLeftBtnPress. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Splitter_onLeftBtnPress(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Splitter_onLeftBtnRelease(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onLeftBtnRelease(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Splitter_onLeftBtnRelease(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXSplitter * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Splitter_onLeftBtnRelease",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXSplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Splitter_onLeftBtnRelease. Expected _FXSplitter_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Splitter_onLeftBtnRelease. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Splitter_onLeftBtnRelease(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Splitter_onMotion(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onMotion(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Splitter_onMotion(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXSplitter * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Splitter_onMotion",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXSplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Splitter_onMotion. Expected _FXSplitter_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Splitter_onMotion. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Splitter_onMotion(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Splitter_onFocusNext(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onFocusNext(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Splitter_onFocusNext(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXSplitter * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Splitter_onFocusNext",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXSplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Splitter_onFocusNext. Expected _FXSplitter_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Splitter_onFocusNext. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Splitter_onFocusNext(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Splitter_onFocusPrev(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onFocusPrev(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Splitter_onFocusPrev(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXSplitter * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Splitter_onFocusPrev",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXSplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Splitter_onFocusPrev. Expected _FXSplitter_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Splitter_onFocusPrev. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Splitter_onFocusPrev(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Splitter_onFocusUp(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onFocusUp(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Splitter_onFocusUp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXSplitter * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Splitter_onFocusUp",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXSplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Splitter_onFocusUp. Expected _FXSplitter_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Splitter_onFocusUp. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Splitter_onFocusUp(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Splitter_onFocusDown(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onFocusDown(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Splitter_onFocusDown(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXSplitter * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Splitter_onFocusDown",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXSplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Splitter_onFocusDown. Expected _FXSplitter_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Splitter_onFocusDown. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Splitter_onFocusDown(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Splitter_onFocusLeft(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onFocusLeft(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Splitter_onFocusLeft(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXSplitter * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Splitter_onFocusLeft",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXSplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Splitter_onFocusLeft. Expected _FXSplitter_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Splitter_onFocusLeft. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Splitter_onFocusLeft(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Splitter_onFocusRight(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onFocusRight(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Splitter_onFocusRight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXSplitter * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Splitter_onFocusRight",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXSplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Splitter_onFocusRight. Expected _FXSplitter_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Splitter_onFocusRight. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Splitter_onFocusRight(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define new_FX_Splitter(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5) (new FXSplitter(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5))
static PyObject *_wrap_new_FX_Splitter(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXSplitter * _result;
    FXComposite * _arg0;
    FXuint  _arg1 = (FXuint ) (SPLITTER_NORMAL);
    FXint  _arg2 = (FXint ) 0;
    FXint  _arg3 = (FXint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "p","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|iiiii:new_FX_Splitter",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4,&_arg5)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FX_Splitter. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXSplitter *)new_FX_Splitter(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXSplitter_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_Splitter_getSplitterStyle(_swigobj)  (_swigobj->getSplitterStyle())
static PyObject *_wrap_FX_Splitter_getSplitterStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXSplitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Splitter_getSplitterStyle",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXSplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Splitter_getSplitterStyle. Expected _FXSplitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )FX_Splitter_getSplitterStyle(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Splitter_setSplitterStyle(_swigobj,_swigarg0)  (_swigobj->setSplitterStyle(_swigarg0))
static PyObject *_wrap_FX_Splitter_setSplitterStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXSplitter * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","style", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Splitter_setSplitterStyle",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXSplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Splitter_setSplitterStyle. Expected _FXSplitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Splitter_setSplitterStyle(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Splitter_setBarSize(_swigobj,_swigarg0)  (_swigobj->setBarSize(_swigarg0))
static PyObject *_wrap_FX_Splitter_setBarSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXSplitter * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","bs", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Splitter_setBarSize",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXSplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Splitter_setBarSize. Expected _FXSplitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Splitter_setBarSize(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Splitter_getBarSize(_swigobj)  (_swigobj->getBarSize())
static PyObject *_wrap_FX_Splitter_getBarSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXSplitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Splitter_getBarSize",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXSplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Splitter_getBarSize. Expected _FXSplitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Splitter_getBarSize(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static void *SwigFXPySplitterToFXSplitter(void *ptr) {
    FXPySplitter *src;
    FXSplitter *dest;
    src = (FXPySplitter *) ptr;
    dest = (FXSplitter *) src;
    return (void *) dest;
}

static void *SwigFXPySplitterToFXComposite(void *ptr) {
    FXPySplitter *src;
    FXComposite *dest;
    src = (FXPySplitter *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXPySplitterToFXWindow(void *ptr) {
    FXPySplitter *src;
    FXWindow *dest;
    src = (FXPySplitter *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXPySplitterToFXDrawable(void *ptr) {
    FXPySplitter *src;
    FXDrawable *dest;
    src = (FXPySplitter *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPySplitterToFXId(void *ptr) {
    FXPySplitter *src;
    FXId *dest;
    src = (FXPySplitter *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPySplitterToFXObject(void *ptr) {
    FXPySplitter *src;
    FXObject *dest;
    src = (FXPySplitter *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXSplitter(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5) (new FXPySplitter(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5))
static PyObject *_wrap_new_FXSplitter(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySplitter * _result;
    FXComposite * _arg0;
    FXuint  _arg1 = (FXuint ) (SPLITTER_NORMAL);
    FXint  _arg2 = (FXint ) 0;
    FXint  _arg3 = (FXint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "p","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|iiiii:new_FXSplitter",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4,&_arg5)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FXSplitter. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPySplitter *)new_FXSplitter(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPySplitter_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FXSplitter_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXSplitter_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPySplitter * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXSplitter_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSplitter_onDefault. Expected _FXPySplitter_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXSplitter_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXSplitter_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXSplitter_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySplitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSplitter_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSplitter_create. Expected _FXPySplitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSplitter_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSplitter_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXSplitter_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySplitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSplitter_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSplitter_destroy. Expected _FXPySplitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSplitter_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSplitter_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXSplitter_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySplitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSplitter_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSplitter_detach. Expected _FXPySplitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSplitter_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSplitter_resize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_resize(_swigarg0,_swigarg1))
static PyObject *_wrap_FXSplitter_resize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySplitter * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXSplitter_resize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSplitter_resize. Expected _FXPySplitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSplitter_resize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSplitter_getDefaultWidth(_swigobj)  (_swigobj->_getDefaultWidth())
static PyObject *_wrap_FXSplitter_getDefaultWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPySplitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSplitter_getDefaultWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSplitter_getDefaultWidth. Expected _FXPySplitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXSplitter_getDefaultWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXSplitter_getDefaultHeight(_swigobj)  (_swigobj->_getDefaultHeight())
static PyObject *_wrap_FXSplitter_getDefaultHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPySplitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSplitter_getDefaultHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSplitter_getDefaultHeight. Expected _FXPySplitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXSplitter_getDefaultHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXSplitter_show(_swigobj)  (_swigobj->_show())
static PyObject *_wrap_FXSplitter_show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySplitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSplitter_show",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSplitter_show. Expected _FXPySplitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSplitter_show(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSplitter_hide(_swigobj)  (_swigobj->_hide())
static PyObject *_wrap_FXSplitter_hide(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySplitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSplitter_hide",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSplitter_hide. Expected _FXPySplitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSplitter_hide(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSplitter_enable(_swigobj)  (_swigobj->_enable())
static PyObject *_wrap_FXSplitter_enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySplitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSplitter_enable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSplitter_enable. Expected _FXPySplitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSplitter_enable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSplitter_disable(_swigobj)  (_swigobj->_disable())
static PyObject *_wrap_FXSplitter_disable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySplitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSplitter_disable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSplitter_disable. Expected _FXPySplitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSplitter_disable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSplitter_canFocus(_swigobj)  (_swigobj->_canFocus())
static PyObject *_wrap_FXSplitter_canFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPySplitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSplitter_canFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSplitter_canFocus. Expected _FXPySplitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXSplitter_canFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXSplitter_setFocus(_swigobj)  (_swigobj->_setFocus())
static PyObject *_wrap_FXSplitter_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySplitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSplitter_setFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSplitter_setFocus. Expected _FXPySplitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSplitter_setFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSplitter_killFocus(_swigobj)  (_swigobj->_killFocus())
static PyObject *_wrap_FXSplitter_killFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySplitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSplitter_killFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSplitter_killFocus. Expected _FXPySplitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSplitter_killFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSplitter_setDefault(_swigobj,_swigarg0)  (_swigobj->_setDefault(_swigarg0))
static PyObject *_wrap_FXSplitter_setDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySplitter * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FXSplitter_setDefault",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSplitter_setDefault. Expected _FXPySplitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSplitter_setDefault(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSplitter_recalc(_swigobj)  (_swigobj->_recalc())
static PyObject *_wrap_FXSplitter_recalc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySplitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSplitter_recalc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSplitter_recalc. Expected _FXPySplitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSplitter_recalc(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSplitter_layout(_swigobj)  (_swigobj->_layout())
static PyObject *_wrap_FXSplitter_layout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySplitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSplitter_layout",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSplitter_layout. Expected _FXPySplitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSplitter_layout(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSplitter_lower(_swigobj)  (_swigobj->_lowerWindow())
static PyObject *_wrap_FXSplitter_lower(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySplitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSplitter_lower",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSplitter_lower. Expected _FXPySplitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSplitter_lower(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSplitter_move(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_move(_swigarg0,_swigarg1))
static PyObject *_wrap_FXSplitter_move(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySplitter * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXSplitter_move",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSplitter_move. Expected _FXPySplitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSplitter_move(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSplitter_position(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->_position(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FXSplitter_position(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySplitter * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FXSplitter_position",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSplitter_position. Expected _FXPySplitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSplitter_position(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSplitter_isComposite(_swigobj)  (_swigobj->_isComposite())
static PyObject *_wrap_FXSplitter_isComposite(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPySplitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSplitter_isComposite",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSplitter_isComposite. Expected _FXPySplitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXSplitter_isComposite(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXSplitter_contains(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_contains(_swigarg0,_swigarg1))
static PyObject *_wrap_FXSplitter_contains(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPySplitter * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXSplitter_contains",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSplitter_contains. Expected _FXPySplitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXSplitter_contains(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXSplitter_getWidthForHeight(_swigobj,_swigarg0)  (_swigobj->_getWidthForHeight(_swigarg0))
static PyObject *_wrap_FXSplitter_getWidthForHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPySplitter * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXSplitter_getWidthForHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSplitter_getWidthForHeight. Expected _FXPySplitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXSplitter_getWidthForHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXSplitter_getHeightForWidth(_swigobj,_swigarg0)  (_swigobj->_getHeightForWidth(_swigarg0))
static PyObject *_wrap_FXSplitter_getHeightForWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPySplitter * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXSplitter_getHeightForWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSplitter_getHeightForWidth. Expected _FXPySplitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXSplitter_getHeightForWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXSplitter_doesSaveUnder(_swigobj)  (_swigobj->_doesSaveUnder())
static PyObject *_wrap_FXSplitter_doesSaveUnder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPySplitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSplitter_doesSaveUnder",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSplitter_doesSaveUnder. Expected _FXPySplitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXSplitter_doesSaveUnder(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXSplitter_reparent(_swigobj,_swigarg0)  (_swigobj->_reparent(_swigarg0))
static PyObject *_wrap_FXSplitter_reparent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySplitter * _arg0;
    FXComposite * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","newparent", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXSplitter_reparent",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSplitter_reparent. Expected _FXPySplitter_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXSplitter_reparent. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSplitter_reparent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSplitter_setBackColor(_swigobj,_swigarg0)  (_swigobj->_setBackColor(_swigarg0))
static PyObject *_wrap_FXSplitter_setBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySplitter * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXSplitter_setBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySplitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSplitter_setBackColor. Expected _FXPySplitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSplitter_setBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFX4SplitterToFXComposite(void *ptr) {
    FX4Splitter *src;
    FXComposite *dest;
    src = (FX4Splitter *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFX4SplitterToFXWindow(void *ptr) {
    FX4Splitter *src;
    FXWindow *dest;
    src = (FX4Splitter *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFX4SplitterToFXDrawable(void *ptr) {
    FX4Splitter *src;
    FXDrawable *dest;
    src = (FX4Splitter *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFX4SplitterToFXId(void *ptr) {
    FX4Splitter *src;
    FXId *dest;
    src = (FX4Splitter *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFX4SplitterToFXObject(void *ptr) {
    FX4Splitter *src;
    FXObject *dest;
    src = (FX4Splitter *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define FX_4Splitter_onLeftBtnPress(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onLeftBtnPress(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_4Splitter_onLeftBtnPress(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FX4Splitter * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_4Splitter_onLeftBtnPress",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FX4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_4Splitter_onLeftBtnPress. Expected _FX4Splitter_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_4Splitter_onLeftBtnPress. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_4Splitter_onLeftBtnPress(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_4Splitter_onLeftBtnRelease(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onLeftBtnRelease(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_4Splitter_onLeftBtnRelease(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FX4Splitter * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_4Splitter_onLeftBtnRelease",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FX4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_4Splitter_onLeftBtnRelease. Expected _FX4Splitter_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_4Splitter_onLeftBtnRelease. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_4Splitter_onLeftBtnRelease(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_4Splitter_onMotion(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onMotion(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_4Splitter_onMotion(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FX4Splitter * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_4Splitter_onMotion",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FX4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_4Splitter_onMotion. Expected _FX4Splitter_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_4Splitter_onMotion. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_4Splitter_onMotion(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_4Splitter_onFocusNext(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onFocusNext(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_4Splitter_onFocusNext(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FX4Splitter * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_4Splitter_onFocusNext",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FX4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_4Splitter_onFocusNext. Expected _FX4Splitter_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_4Splitter_onFocusNext. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_4Splitter_onFocusNext(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_4Splitter_onFocusPrev(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onFocusPrev(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_4Splitter_onFocusPrev(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FX4Splitter * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_4Splitter_onFocusPrev",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FX4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_4Splitter_onFocusPrev. Expected _FX4Splitter_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_4Splitter_onFocusPrev. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_4Splitter_onFocusPrev(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_4Splitter_onFocusUp(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onFocusUp(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_4Splitter_onFocusUp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FX4Splitter * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_4Splitter_onFocusUp",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FX4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_4Splitter_onFocusUp. Expected _FX4Splitter_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_4Splitter_onFocusUp. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_4Splitter_onFocusUp(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_4Splitter_onFocusDown(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onFocusDown(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_4Splitter_onFocusDown(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FX4Splitter * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_4Splitter_onFocusDown",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FX4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_4Splitter_onFocusDown. Expected _FX4Splitter_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_4Splitter_onFocusDown. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_4Splitter_onFocusDown(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_4Splitter_onFocusLeft(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onFocusLeft(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_4Splitter_onFocusLeft(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FX4Splitter * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_4Splitter_onFocusLeft",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FX4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_4Splitter_onFocusLeft. Expected _FX4Splitter_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_4Splitter_onFocusLeft. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_4Splitter_onFocusLeft(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_4Splitter_onFocusRight(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onFocusRight(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_4Splitter_onFocusRight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FX4Splitter * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_4Splitter_onFocusRight",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FX4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_4Splitter_onFocusRight. Expected _FX4Splitter_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_4Splitter_onFocusRight. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_4Splitter_onFocusRight(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_4Splitter_onCmdExpand(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdExpand(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_4Splitter_onCmdExpand(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FX4Splitter * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_4Splitter_onCmdExpand",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FX4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_4Splitter_onCmdExpand. Expected _FX4Splitter_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_4Splitter_onCmdExpand. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_4Splitter_onCmdExpand(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_4Splitter_onUpdExpand(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdExpand(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_4Splitter_onUpdExpand(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FX4Splitter * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_4Splitter_onUpdExpand",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FX4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_4Splitter_onUpdExpand. Expected _FX4Splitter_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_4Splitter_onUpdExpand. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_4Splitter_onUpdExpand(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define new_FX_4Splitter(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5) (new FX4Splitter(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5))
static PyObject *_wrap_new_FX_4Splitter(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FX4Splitter * _result;
    FXComposite * _arg0;
    FXuint  _arg1 = (FXuint ) (FOURSPLITTER_NORMAL);
    FXint  _arg2 = (FXint ) 0;
    FXint  _arg3 = (FXint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "p","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|iiiii:new_FX_4Splitter",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4,&_arg5)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FX_4Splitter. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FX4Splitter *)new_FX_4Splitter(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FX4Splitter_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_4Splitter_getTopLeft(_swigobj)  (_swigobj->getTopLeft())
static PyObject *_wrap_FX_4Splitter_getTopLeft(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXWindow * _result;
    FX4Splitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_4Splitter_getTopLeft",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FX4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_4Splitter_getTopLeft. Expected _FX4Splitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXWindow *)FX_4Splitter_getTopLeft(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_4Splitter_getTopRight(_swigobj)  (_swigobj->getTopRight())
static PyObject *_wrap_FX_4Splitter_getTopRight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXWindow * _result;
    FX4Splitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_4Splitter_getTopRight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FX4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_4Splitter_getTopRight. Expected _FX4Splitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXWindow *)FX_4Splitter_getTopRight(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_4Splitter_getBottomLeft(_swigobj)  (_swigobj->getBottomLeft())
static PyObject *_wrap_FX_4Splitter_getBottomLeft(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXWindow * _result;
    FX4Splitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_4Splitter_getBottomLeft",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FX4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_4Splitter_getBottomLeft. Expected _FX4Splitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXWindow *)FX_4Splitter_getBottomLeft(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_4Splitter_getBottomRight(_swigobj)  (_swigobj->getBottomRight())
static PyObject *_wrap_FX_4Splitter_getBottomRight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXWindow * _result;
    FX4Splitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_4Splitter_getBottomRight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FX4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_4Splitter_getBottomRight. Expected _FX4Splitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXWindow *)FX_4Splitter_getBottomRight(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_4Splitter_getHSplit(_swigobj)  (_swigobj->getHSplit())
static PyObject *_wrap_FX_4Splitter_getHSplit(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FX4Splitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_4Splitter_getHSplit",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FX4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_4Splitter_getHSplit. Expected _FX4Splitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_4Splitter_getHSplit(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_4Splitter_getVSplit(_swigobj)  (_swigobj->getVSplit())
static PyObject *_wrap_FX_4Splitter_getVSplit(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FX4Splitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_4Splitter_getVSplit",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FX4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_4Splitter_getVSplit. Expected _FX4Splitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_4Splitter_getVSplit(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_4Splitter_setHSplit(_swigobj,_swigarg0)  (_swigobj->setHSplit(_swigarg0))
static PyObject *_wrap_FX_4Splitter_setHSplit(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FX4Splitter * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","s", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_4Splitter_setHSplit",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FX4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_4Splitter_setHSplit. Expected _FX4Splitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_4Splitter_setHSplit(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_4Splitter_setVSplit(_swigobj,_swigarg0)  (_swigobj->setVSplit(_swigarg0))
static PyObject *_wrap_FX_4Splitter_setVSplit(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FX4Splitter * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","s", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_4Splitter_setVSplit",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FX4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_4Splitter_setVSplit. Expected _FX4Splitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_4Splitter_setVSplit(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_4Splitter_getSplitterStyle(_swigobj)  (_swigobj->getSplitterStyle())
static PyObject *_wrap_FX_4Splitter_getSplitterStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FX4Splitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_4Splitter_getSplitterStyle",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FX4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_4Splitter_getSplitterStyle. Expected _FX4Splitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )FX_4Splitter_getSplitterStyle(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_4Splitter_setSplitterStyle(_swigobj,_swigarg0)  (_swigobj->setSplitterStyle(_swigarg0))
static PyObject *_wrap_FX_4Splitter_setSplitterStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FX4Splitter * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","style", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_4Splitter_setSplitterStyle",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FX4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_4Splitter_setSplitterStyle. Expected _FX4Splitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_4Splitter_setSplitterStyle(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_4Splitter_setBarSize(_swigobj,_swigarg0)  (_swigobj->setBarSize(_swigarg0))
static PyObject *_wrap_FX_4Splitter_setBarSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FX4Splitter * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","bs", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_4Splitter_setBarSize",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FX4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_4Splitter_setBarSize. Expected _FX4Splitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_4Splitter_setBarSize(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_4Splitter_getBarSize(_swigobj)  (_swigobj->getBarSize())
static PyObject *_wrap_FX_4Splitter_getBarSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FX4Splitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_4Splitter_getBarSize",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FX4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_4Splitter_getBarSize. Expected _FX4Splitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_4Splitter_getBarSize(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_4Splitter_setExpanded(_swigobj,_swigarg0)  (_swigobj->setExpanded(_swigarg0))
static PyObject *_wrap_FX_4Splitter_setExpanded(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FX4Splitter * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","ex", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_4Splitter_setExpanded",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FX4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_4Splitter_setExpanded. Expected _FX4Splitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_4Splitter_setExpanded(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_4Splitter_getExpanded(_swigobj)  (_swigobj->getExpanded())
static PyObject *_wrap_FX_4Splitter_getExpanded(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FX4Splitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_4Splitter_getExpanded",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FX4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_4Splitter_getExpanded. Expected _FX4Splitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_4Splitter_getExpanded(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static void *SwigFXPy4SplitterToFX4Splitter(void *ptr) {
    FXPy4Splitter *src;
    FX4Splitter *dest;
    src = (FXPy4Splitter *) ptr;
    dest = (FX4Splitter *) src;
    return (void *) dest;
}

static void *SwigFXPy4SplitterToFXComposite(void *ptr) {
    FXPy4Splitter *src;
    FXComposite *dest;
    src = (FXPy4Splitter *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXPy4SplitterToFXWindow(void *ptr) {
    FXPy4Splitter *src;
    FXWindow *dest;
    src = (FXPy4Splitter *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXPy4SplitterToFXDrawable(void *ptr) {
    FXPy4Splitter *src;
    FXDrawable *dest;
    src = (FXPy4Splitter *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPy4SplitterToFXId(void *ptr) {
    FXPy4Splitter *src;
    FXId *dest;
    src = (FXPy4Splitter *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPy4SplitterToFXObject(void *ptr) {
    FXPy4Splitter *src;
    FXObject *dest;
    src = (FXPy4Splitter *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FX4Splitter(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5) (new FXPy4Splitter(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5))
static PyObject *_wrap_new_FX4Splitter(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPy4Splitter * _result;
    FXComposite * _arg0;
    FXuint  _arg1 = (FXuint ) 0;
    FXint  _arg2 = (FXint ) 0;
    FXint  _arg3 = (FXint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "p","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|iiiii:new_FX4Splitter",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4,&_arg5)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FX4Splitter. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPy4Splitter *)new_FX4Splitter(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPy4Splitter_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX4Splitter_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX4Splitter_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPy4Splitter * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX4Splitter_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPy4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX4Splitter_onDefault. Expected _FXPy4Splitter_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX4Splitter_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX4Splitter_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FX4Splitter_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPy4Splitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX4Splitter_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPy4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX4Splitter_create. Expected _FXPy4Splitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX4Splitter_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX4Splitter_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FX4Splitter_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPy4Splitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX4Splitter_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPy4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX4Splitter_destroy. Expected _FXPy4Splitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX4Splitter_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX4Splitter_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FX4Splitter_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPy4Splitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX4Splitter_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPy4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX4Splitter_detach. Expected _FXPy4Splitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX4Splitter_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX4Splitter_resize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_resize(_swigarg0,_swigarg1))
static PyObject *_wrap_FX4Splitter_resize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPy4Splitter * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FX4Splitter_resize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPy4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX4Splitter_resize. Expected _FXPy4Splitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX4Splitter_resize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX4Splitter_getDefaultWidth(_swigobj)  (_swigobj->_getDefaultWidth())
static PyObject *_wrap_FX4Splitter_getDefaultWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPy4Splitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX4Splitter_getDefaultWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPy4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX4Splitter_getDefaultWidth. Expected _FXPy4Splitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX4Splitter_getDefaultWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX4Splitter_getDefaultHeight(_swigobj)  (_swigobj->_getDefaultHeight())
static PyObject *_wrap_FX4Splitter_getDefaultHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPy4Splitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX4Splitter_getDefaultHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPy4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX4Splitter_getDefaultHeight. Expected _FXPy4Splitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX4Splitter_getDefaultHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX4Splitter_show(_swigobj)  (_swigobj->_show())
static PyObject *_wrap_FX4Splitter_show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPy4Splitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX4Splitter_show",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPy4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX4Splitter_show. Expected _FXPy4Splitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX4Splitter_show(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX4Splitter_hide(_swigobj)  (_swigobj->_hide())
static PyObject *_wrap_FX4Splitter_hide(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPy4Splitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX4Splitter_hide",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPy4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX4Splitter_hide. Expected _FXPy4Splitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX4Splitter_hide(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX4Splitter_enable(_swigobj)  (_swigobj->_enable())
static PyObject *_wrap_FX4Splitter_enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPy4Splitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX4Splitter_enable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPy4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX4Splitter_enable. Expected _FXPy4Splitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX4Splitter_enable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX4Splitter_disable(_swigobj)  (_swigobj->_disable())
static PyObject *_wrap_FX4Splitter_disable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPy4Splitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX4Splitter_disable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPy4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX4Splitter_disable. Expected _FXPy4Splitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX4Splitter_disable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX4Splitter_canFocus(_swigobj)  (_swigobj->_canFocus())
static PyObject *_wrap_FX4Splitter_canFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPy4Splitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX4Splitter_canFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPy4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX4Splitter_canFocus. Expected _FXPy4Splitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX4Splitter_canFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX4Splitter_setFocus(_swigobj)  (_swigobj->_setFocus())
static PyObject *_wrap_FX4Splitter_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPy4Splitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX4Splitter_setFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPy4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX4Splitter_setFocus. Expected _FXPy4Splitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX4Splitter_setFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX4Splitter_killFocus(_swigobj)  (_swigobj->_killFocus())
static PyObject *_wrap_FX4Splitter_killFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPy4Splitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX4Splitter_killFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPy4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX4Splitter_killFocus. Expected _FXPy4Splitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX4Splitter_killFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX4Splitter_setDefault(_swigobj,_swigarg0)  (_swigobj->_setDefault(_swigarg0))
static PyObject *_wrap_FX4Splitter_setDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPy4Splitter * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FX4Splitter_setDefault",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPy4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX4Splitter_setDefault. Expected _FXPy4Splitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX4Splitter_setDefault(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX4Splitter_recalc(_swigobj)  (_swigobj->_recalc())
static PyObject *_wrap_FX4Splitter_recalc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPy4Splitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX4Splitter_recalc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPy4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX4Splitter_recalc. Expected _FXPy4Splitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX4Splitter_recalc(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX4Splitter_layout(_swigobj)  (_swigobj->_layout())
static PyObject *_wrap_FX4Splitter_layout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPy4Splitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX4Splitter_layout",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPy4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX4Splitter_layout. Expected _FXPy4Splitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX4Splitter_layout(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX4Splitter_lower(_swigobj)  (_swigobj->_lowerWindow())
static PyObject *_wrap_FX4Splitter_lower(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPy4Splitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX4Splitter_lower",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPy4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX4Splitter_lower. Expected _FXPy4Splitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX4Splitter_lower(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX4Splitter_move(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_move(_swigarg0,_swigarg1))
static PyObject *_wrap_FX4Splitter_move(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPy4Splitter * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FX4Splitter_move",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPy4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX4Splitter_move. Expected _FXPy4Splitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX4Splitter_move(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX4Splitter_position(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->_position(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FX4Splitter_position(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPy4Splitter * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FX4Splitter_position",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPy4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX4Splitter_position. Expected _FXPy4Splitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX4Splitter_position(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX4Splitter_isComposite(_swigobj)  (_swigobj->_isComposite())
static PyObject *_wrap_FX4Splitter_isComposite(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPy4Splitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX4Splitter_isComposite",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPy4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX4Splitter_isComposite. Expected _FXPy4Splitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX4Splitter_isComposite(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX4Splitter_contains(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_contains(_swigarg0,_swigarg1))
static PyObject *_wrap_FX4Splitter_contains(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPy4Splitter * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FX4Splitter_contains",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPy4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX4Splitter_contains. Expected _FXPy4Splitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX4Splitter_contains(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX4Splitter_getWidthForHeight(_swigobj,_swigarg0)  (_swigobj->_getWidthForHeight(_swigarg0))
static PyObject *_wrap_FX4Splitter_getWidthForHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPy4Splitter * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX4Splitter_getWidthForHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPy4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX4Splitter_getWidthForHeight. Expected _FXPy4Splitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX4Splitter_getWidthForHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX4Splitter_getHeightForWidth(_swigobj,_swigarg0)  (_swigobj->_getHeightForWidth(_swigarg0))
static PyObject *_wrap_FX4Splitter_getHeightForWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPy4Splitter * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX4Splitter_getHeightForWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPy4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX4Splitter_getHeightForWidth. Expected _FXPy4Splitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX4Splitter_getHeightForWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX4Splitter_doesSaveUnder(_swigobj)  (_swigobj->_doesSaveUnder())
static PyObject *_wrap_FX4Splitter_doesSaveUnder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPy4Splitter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX4Splitter_doesSaveUnder",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPy4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX4Splitter_doesSaveUnder. Expected _FXPy4Splitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX4Splitter_doesSaveUnder(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX4Splitter_reparent(_swigobj,_swigarg0)  (_swigobj->_reparent(_swigarg0))
static PyObject *_wrap_FX4Splitter_reparent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPy4Splitter * _arg0;
    FXComposite * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","newparent", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX4Splitter_reparent",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPy4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX4Splitter_reparent. Expected _FXPy4Splitter_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX4Splitter_reparent. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX4Splitter_reparent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX4Splitter_setBackColor(_swigobj,_swigarg0)  (_swigobj->_setBackColor(_swigarg0))
static PyObject *_wrap_FX4Splitter_setBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPy4Splitter * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX4Splitter_setBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPy4Splitter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX4Splitter_setBackColor. Expected _FXPy4Splitter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX4Splitter_setBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXShutterItemToFXVerticalFrame(void *ptr) {
    FXShutterItem *src;
    FXVerticalFrame *dest;
    src = (FXShutterItem *) ptr;
    dest = (FXVerticalFrame *) src;
    return (void *) dest;
}

static void *SwigFXShutterItemToFXPacker(void *ptr) {
    FXShutterItem *src;
    FXPacker *dest;
    src = (FXShutterItem *) ptr;
    dest = (FXPacker *) src;
    return (void *) dest;
}

static void *SwigFXShutterItemToFXComposite(void *ptr) {
    FXShutterItem *src;
    FXComposite *dest;
    src = (FXShutterItem *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXShutterItemToFXWindow(void *ptr) {
    FXShutterItem *src;
    FXWindow *dest;
    src = (FXShutterItem *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXShutterItemToFXDrawable(void *ptr) {
    FXShutterItem *src;
    FXDrawable *dest;
    src = (FXShutterItem *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXShutterItemToFXId(void *ptr) {
    FXShutterItem *src;
    FXId *dest;
    src = (FXShutterItem *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXShutterItemToFXObject(void *ptr) {
    FXShutterItem *src;
    FXObject *dest;
    src = (FXShutterItem *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define FX_ShutterItem_onFocusUp(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onFocusUp(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ShutterItem_onFocusUp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXShutterItem * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ShutterItem_onFocusUp",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXShutterItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ShutterItem_onFocusUp. Expected _FXShutterItem_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ShutterItem_onFocusUp. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ShutterItem_onFocusUp(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ShutterItem_onFocusDown(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onFocusDown(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ShutterItem_onFocusDown(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXShutterItem * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ShutterItem_onFocusDown",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXShutterItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ShutterItem_onFocusDown. Expected _FXShutterItem_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ShutterItem_onFocusDown. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ShutterItem_onFocusDown(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ShutterItem_onCmdButton(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdButton(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ShutterItem_onCmdButton(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXShutterItem * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ShutterItem_onCmdButton",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXShutterItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ShutterItem_onCmdButton. Expected _FXShutterItem_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ShutterItem_onCmdButton. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ShutterItem_onCmdButton(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define new_FX_ShutterItem(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11,_swigarg12,_swigarg13) (new FXShutterItem(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11,_swigarg12,_swigarg13))
static PyObject *_wrap_new_FX_ShutterItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXShutterItem * _result;
    FXShutter * _arg0;
    FXString * _arg1;
    FXIcon * _arg2 = (FXIcon *) NULL;
    FXuint  _arg3 = (FXuint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    FXint  _arg8 = (FXint ) (4);
    FXint  _arg9 = (FXint ) (4);
    FXint  _arg10 = (FXint ) (4);
    FXint  _arg11 = (FXint ) (4);
    FXint  _arg12 = (FXint ) (4);
    FXint  _arg13 = (FXint ) (4);
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "p","text","ic","opts","x","y","w","h","pl","pr","pt","pb","hs","vs", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|Oiiiiiiiiiii:new_FX_ShutterItem",_kwnames,&_argo0,&_obj1,&_obj2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7,&_arg8,&_arg9,&_arg10,&_arg11,&_arg12,&_arg13)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FX_ShutterItem. Expected _FXShutter_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
    if (_obj2)
{
    if (_obj2 == Py_None)
	_arg2 = NULL;
    else
	SWIG_GetPtrObj(_obj2, (void**) &_arg2, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXShutterItem *)new_FX_ShutterItem(_arg0,*_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7,_arg8,_arg9,_arg10,_arg11,_arg12,_arg13);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXShutterItem_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_ShutterItem_getButton(_swigobj)  (_swigobj->getButton())
static PyObject *_wrap_FX_ShutterItem_getButton(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXButton * _result;
    FXShutterItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_ShutterItem_getButton",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXShutterItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ShutterItem_getButton. Expected _FXShutterItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXButton *)FX_ShutterItem_getButton(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_ShutterItem_getContent(_swigobj)  (_swigobj->getContent())
static PyObject *_wrap_FX_ShutterItem_getContent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXVerticalFrame * _result;
    FXShutterItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_ShutterItem_getContent",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXShutterItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ShutterItem_getContent. Expected _FXShutterItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXVerticalFrame *)FX_ShutterItem_getContent(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_ShutterItem_setHelpText(_swigobj,_swigarg0)  (_swigobj->setHelpText(_swigarg0))
static PyObject *_wrap_FX_ShutterItem_setHelpText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXShutterItem * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","text", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_ShutterItem_setHelpText",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXShutterItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ShutterItem_setHelpText. Expected _FXShutterItem_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_ShutterItem_setHelpText(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_ShutterItem_getHelpText(_swigobj)  (_swigobj->getHelpText())
static PyObject *_wrap_FX_ShutterItem_getHelpText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXShutterItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_ShutterItem_getHelpText",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXShutterItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ShutterItem_getHelpText. Expected _FXShutterItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_ShutterItem_getHelpText(_arg0));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

#define FX_ShutterItem_setTipText(_swigobj,_swigarg0)  (_swigobj->setTipText(_swigarg0))
static PyObject *_wrap_FX_ShutterItem_setTipText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXShutterItem * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","text", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_ShutterItem_setTipText",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXShutterItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ShutterItem_setTipText. Expected _FXShutterItem_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_ShutterItem_setTipText(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_ShutterItem_getTipText(_swigobj)  (_swigobj->getTipText())
static PyObject *_wrap_FX_ShutterItem_getTipText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXShutterItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_ShutterItem_getTipText",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXShutterItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ShutterItem_getTipText. Expected _FXShutterItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_ShutterItem_getTipText(_arg0));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

static void *SwigFXPyShutterItemToFXShutterItem(void *ptr) {
    FXPyShutterItem *src;
    FXShutterItem *dest;
    src = (FXPyShutterItem *) ptr;
    dest = (FXShutterItem *) src;
    return (void *) dest;
}

static void *SwigFXPyShutterItemToFXVerticalFrame(void *ptr) {
    FXPyShutterItem *src;
    FXVerticalFrame *dest;
    src = (FXPyShutterItem *) ptr;
    dest = (FXVerticalFrame *) src;
    return (void *) dest;
}

static void *SwigFXPyShutterItemToFXPacker(void *ptr) {
    FXPyShutterItem *src;
    FXPacker *dest;
    src = (FXPyShutterItem *) ptr;
    dest = (FXPacker *) src;
    return (void *) dest;
}

static void *SwigFXPyShutterItemToFXComposite(void *ptr) {
    FXPyShutterItem *src;
    FXComposite *dest;
    src = (FXPyShutterItem *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXPyShutterItemToFXWindow(void *ptr) {
    FXPyShutterItem *src;
    FXWindow *dest;
    src = (FXPyShutterItem *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyShutterItemToFXDrawable(void *ptr) {
    FXPyShutterItem *src;
    FXDrawable *dest;
    src = (FXPyShutterItem *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPyShutterItemToFXId(void *ptr) {
    FXPyShutterItem *src;
    FXId *dest;
    src = (FXPyShutterItem *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPyShutterItemToFXObject(void *ptr) {
    FXPyShutterItem *src;
    FXObject *dest;
    src = (FXPyShutterItem *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXShutterItem(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11,_swigarg12,_swigarg13) (new FXPyShutterItem(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11,_swigarg12,_swigarg13))
static PyObject *_wrap_new_FXShutterItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyShutterItem * _result;
    FXShutter * _arg0;
    FXString * _arg1;
    FXIcon * _arg2 = (FXIcon *) NULL;
    FXuint  _arg3 = (FXuint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    FXint  _arg8 = (FXint ) (4);
    FXint  _arg9 = (FXint ) (4);
    FXint  _arg10 = (FXint ) (4);
    FXint  _arg11 = (FXint ) (4);
    FXint  _arg12 = (FXint ) (4);
    FXint  _arg13 = (FXint ) (4);
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "p","text","ic","opts","x","y","w","h","pl","pr","pt","pb","hs","vs", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|Oiiiiiiiiiii:new_FXShutterItem",_kwnames,&_argo0,&_obj1,&_obj2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7,&_arg8,&_arg9,&_arg10,&_arg11,&_arg12,&_arg13)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FXShutterItem. Expected _FXShutter_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
    if (_obj2)
{
    if (_obj2 == Py_None)
	_arg2 = NULL;
    else
	SWIG_GetPtrObj(_obj2, (void**) &_arg2, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyShutterItem *)new_FXShutterItem(_arg0,*_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7,_arg8,_arg9,_arg10,_arg11,_arg12,_arg13);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyShutterItem_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    delete _arg1;
}
    return _resultobj;
}

#define FXShutterItem_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXShutterItem_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyShutterItem * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXShutterItem_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutterItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutterItem_onDefault. Expected _FXPyShutterItem_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXShutterItem_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXShutterItem_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXShutterItem_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyShutterItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXShutterItem_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutterItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutterItem_create. Expected _FXPyShutterItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXShutterItem_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXShutterItem_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXShutterItem_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyShutterItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXShutterItem_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutterItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutterItem_destroy. Expected _FXPyShutterItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXShutterItem_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXShutterItem_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXShutterItem_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyShutterItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXShutterItem_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutterItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutterItem_detach. Expected _FXPyShutterItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXShutterItem_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXShutterItem_resize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_resize(_swigarg0,_swigarg1))
static PyObject *_wrap_FXShutterItem_resize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyShutterItem * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXShutterItem_resize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutterItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutterItem_resize. Expected _FXPyShutterItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXShutterItem_resize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXShutterItem_getDefaultWidth(_swigobj)  (_swigobj->_getDefaultWidth())
static PyObject *_wrap_FXShutterItem_getDefaultWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyShutterItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXShutterItem_getDefaultWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutterItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutterItem_getDefaultWidth. Expected _FXPyShutterItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXShutterItem_getDefaultWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXShutterItem_getDefaultHeight(_swigobj)  (_swigobj->_getDefaultHeight())
static PyObject *_wrap_FXShutterItem_getDefaultHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyShutterItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXShutterItem_getDefaultHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutterItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutterItem_getDefaultHeight. Expected _FXPyShutterItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXShutterItem_getDefaultHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXShutterItem_show(_swigobj)  (_swigobj->_show())
static PyObject *_wrap_FXShutterItem_show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyShutterItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXShutterItem_show",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutterItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutterItem_show. Expected _FXPyShutterItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXShutterItem_show(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXShutterItem_hide(_swigobj)  (_swigobj->_hide())
static PyObject *_wrap_FXShutterItem_hide(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyShutterItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXShutterItem_hide",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutterItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutterItem_hide. Expected _FXPyShutterItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXShutterItem_hide(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXShutterItem_enable(_swigobj)  (_swigobj->_enable())
static PyObject *_wrap_FXShutterItem_enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyShutterItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXShutterItem_enable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutterItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutterItem_enable. Expected _FXPyShutterItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXShutterItem_enable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXShutterItem_disable(_swigobj)  (_swigobj->_disable())
static PyObject *_wrap_FXShutterItem_disable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyShutterItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXShutterItem_disable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutterItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutterItem_disable. Expected _FXPyShutterItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXShutterItem_disable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXShutterItem_canFocus(_swigobj)  (_swigobj->_canFocus())
static PyObject *_wrap_FXShutterItem_canFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyShutterItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXShutterItem_canFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutterItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutterItem_canFocus. Expected _FXPyShutterItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXShutterItem_canFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXShutterItem_setFocus(_swigobj)  (_swigobj->_setFocus())
static PyObject *_wrap_FXShutterItem_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyShutterItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXShutterItem_setFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutterItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutterItem_setFocus. Expected _FXPyShutterItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXShutterItem_setFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXShutterItem_killFocus(_swigobj)  (_swigobj->_killFocus())
static PyObject *_wrap_FXShutterItem_killFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyShutterItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXShutterItem_killFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutterItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutterItem_killFocus. Expected _FXPyShutterItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXShutterItem_killFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXShutterItem_setDefault(_swigobj,_swigarg0)  (_swigobj->_setDefault(_swigarg0))
static PyObject *_wrap_FXShutterItem_setDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyShutterItem * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FXShutterItem_setDefault",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutterItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutterItem_setDefault. Expected _FXPyShutterItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXShutterItem_setDefault(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXShutterItem_recalc(_swigobj)  (_swigobj->_recalc())
static PyObject *_wrap_FXShutterItem_recalc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyShutterItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXShutterItem_recalc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutterItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutterItem_recalc. Expected _FXPyShutterItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXShutterItem_recalc(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXShutterItem_layout(_swigobj)  (_swigobj->_layout())
static PyObject *_wrap_FXShutterItem_layout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyShutterItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXShutterItem_layout",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutterItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutterItem_layout. Expected _FXPyShutterItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXShutterItem_layout(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXShutterItem_lower(_swigobj)  (_swigobj->_lowerWindow())
static PyObject *_wrap_FXShutterItem_lower(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyShutterItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXShutterItem_lower",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutterItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutterItem_lower. Expected _FXPyShutterItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXShutterItem_lower(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXShutterItem_move(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_move(_swigarg0,_swigarg1))
static PyObject *_wrap_FXShutterItem_move(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyShutterItem * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXShutterItem_move",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutterItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutterItem_move. Expected _FXPyShutterItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXShutterItem_move(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXShutterItem_position(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->_position(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FXShutterItem_position(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyShutterItem * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FXShutterItem_position",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutterItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutterItem_position. Expected _FXPyShutterItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXShutterItem_position(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXShutterItem_isComposite(_swigobj)  (_swigobj->_isComposite())
static PyObject *_wrap_FXShutterItem_isComposite(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyShutterItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXShutterItem_isComposite",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutterItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutterItem_isComposite. Expected _FXPyShutterItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXShutterItem_isComposite(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXShutterItem_contains(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_contains(_swigarg0,_swigarg1))
static PyObject *_wrap_FXShutterItem_contains(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyShutterItem * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXShutterItem_contains",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutterItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutterItem_contains. Expected _FXPyShutterItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXShutterItem_contains(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXShutterItem_getWidthForHeight(_swigobj,_swigarg0)  (_swigobj->_getWidthForHeight(_swigarg0))
static PyObject *_wrap_FXShutterItem_getWidthForHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyShutterItem * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXShutterItem_getWidthForHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutterItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutterItem_getWidthForHeight. Expected _FXPyShutterItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXShutterItem_getWidthForHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXShutterItem_getHeightForWidth(_swigobj,_swigarg0)  (_swigobj->_getHeightForWidth(_swigarg0))
static PyObject *_wrap_FXShutterItem_getHeightForWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyShutterItem * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXShutterItem_getHeightForWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutterItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutterItem_getHeightForWidth. Expected _FXPyShutterItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXShutterItem_getHeightForWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXShutterItem_doesSaveUnder(_swigobj)  (_swigobj->_doesSaveUnder())
static PyObject *_wrap_FXShutterItem_doesSaveUnder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyShutterItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXShutterItem_doesSaveUnder",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutterItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutterItem_doesSaveUnder. Expected _FXPyShutterItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXShutterItem_doesSaveUnder(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXShutterItem_reparent(_swigobj,_swigarg0)  (_swigobj->_reparent(_swigarg0))
static PyObject *_wrap_FXShutterItem_reparent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyShutterItem * _arg0;
    FXComposite * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","newparent", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXShutterItem_reparent",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutterItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutterItem_reparent. Expected _FXPyShutterItem_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXShutterItem_reparent. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXShutterItem_reparent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXShutterItem_setBackColor(_swigobj,_swigarg0)  (_swigobj->_setBackColor(_swigarg0))
static PyObject *_wrap_FXShutterItem_setBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyShutterItem * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXShutterItem_setBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutterItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutterItem_setBackColor. Expected _FXPyShutterItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXShutterItem_setBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXShutterToFXVerticalFrame(void *ptr) {
    FXShutter *src;
    FXVerticalFrame *dest;
    src = (FXShutter *) ptr;
    dest = (FXVerticalFrame *) src;
    return (void *) dest;
}

static void *SwigFXShutterToFXPacker(void *ptr) {
    FXShutter *src;
    FXPacker *dest;
    src = (FXShutter *) ptr;
    dest = (FXPacker *) src;
    return (void *) dest;
}

static void *SwigFXShutterToFXComposite(void *ptr) {
    FXShutter *src;
    FXComposite *dest;
    src = (FXShutter *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXShutterToFXWindow(void *ptr) {
    FXShutter *src;
    FXWindow *dest;
    src = (FXShutter *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXShutterToFXDrawable(void *ptr) {
    FXShutter *src;
    FXDrawable *dest;
    src = (FXShutter *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXShutterToFXId(void *ptr) {
    FXShutter *src;
    FXId *dest;
    src = (FXShutter *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXShutterToFXObject(void *ptr) {
    FXShutter *src;
    FXObject *dest;
    src = (FXShutter *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define FX_Shutter_onFocusUp(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onFocusUp(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Shutter_onFocusUp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXShutter * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Shutter_onFocusUp",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Shutter_onFocusUp. Expected _FXShutter_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Shutter_onFocusUp. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Shutter_onFocusUp(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Shutter_onFocusDown(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onFocusDown(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Shutter_onFocusDown(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXShutter * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Shutter_onFocusDown",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Shutter_onFocusDown. Expected _FXShutter_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Shutter_onFocusDown. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Shutter_onFocusDown(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Shutter_onTimeout(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onTimeout(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Shutter_onTimeout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXShutter * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Shutter_onTimeout",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Shutter_onTimeout. Expected _FXShutter_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Shutter_onTimeout. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Shutter_onTimeout(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Shutter_onOpenItem(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onOpenItem(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Shutter_onOpenItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXShutter * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Shutter_onOpenItem",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Shutter_onOpenItem. Expected _FXShutter_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Shutter_onOpenItem. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Shutter_onOpenItem(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Shutter_onCmdSetValue(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSetValue(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Shutter_onCmdSetValue(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXShutter * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Shutter_onCmdSetValue",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Shutter_onCmdSetValue. Expected _FXShutter_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Shutter_onCmdSetValue. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Shutter_onCmdSetValue(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Shutter_onCmdSetIntValue(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSetIntValue(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Shutter_onCmdSetIntValue(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXShutter * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Shutter_onCmdSetIntValue",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Shutter_onCmdSetIntValue. Expected _FXShutter_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Shutter_onCmdSetIntValue. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Shutter_onCmdSetIntValue(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Shutter_onCmdGetIntValue(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdGetIntValue(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Shutter_onCmdGetIntValue(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXShutter * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Shutter_onCmdGetIntValue",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Shutter_onCmdGetIntValue. Expected _FXShutter_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Shutter_onCmdGetIntValue. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Shutter_onCmdGetIntValue(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Shutter_onCmdOpen(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdOpen(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Shutter_onCmdOpen(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXShutter * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Shutter_onCmdOpen",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Shutter_onCmdOpen. Expected _FXShutter_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Shutter_onCmdOpen. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Shutter_onCmdOpen(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_Shutter_onUpdOpen(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdOpen(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Shutter_onUpdOpen(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXShutter * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_Shutter_onUpdOpen",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Shutter_onUpdOpen. Expected _FXShutter_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_Shutter_onUpdOpen. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_Shutter_onUpdOpen(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define new_FX_Shutter(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11,_swigarg12,_swigarg13) (new FXShutter(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11,_swigarg12,_swigarg13))
static PyObject *_wrap_new_FX_Shutter(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXShutter * _result;
    FXComposite * _arg0;
    FXObject * _arg1 = (FXObject *) NULL;
    FXSelector  _arg2 = (FXSelector ) 0;
    FXuint  _arg3 = (FXuint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    FXint  _arg8 = (FXint ) (4);
    FXint  _arg9 = (FXint ) (4);
    FXint  _arg10 = (FXint ) (4);
    FXint  _arg11 = (FXint ) (4);
    FXint  _arg12 = (FXint ) (4);
    FXint  _arg13 = (FXint ) (4);
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "p","tgt","sel","opts","x","y","w","h","pl","pr","pt","pb","hs","vs", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|Oiiiiiiiiiiii:new_FX_Shutter",_kwnames,&_argo0,&_obj1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7,&_arg8,&_arg9,&_arg10,&_arg11,&_arg12,&_arg13)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FX_Shutter. Expected _FXComposite_p.");
        return NULL;
        }
    }
    if (_obj1)
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXShutter *)new_FX_Shutter(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7,_arg8,_arg9,_arg10,_arg11,_arg12,_arg13);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXShutter_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_Shutter_setCurrent(_swigobj,_swigarg0)  (_swigobj->setCurrent(_swigarg0))
static PyObject *_wrap_FX_Shutter_setCurrent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXShutter * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","panel", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_Shutter_setCurrent",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Shutter_setCurrent. Expected _FXShutter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Shutter_setCurrent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Shutter_getCurrent(_swigobj)  (_swigobj->getCurrent())
static PyObject *_wrap_FX_Shutter_getCurrent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXShutter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Shutter_getCurrent",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Shutter_getCurrent. Expected _FXShutter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Shutter_getCurrent(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static void *SwigFXPyShutterToFXShutter(void *ptr) {
    FXPyShutter *src;
    FXShutter *dest;
    src = (FXPyShutter *) ptr;
    dest = (FXShutter *) src;
    return (void *) dest;
}

static void *SwigFXPyShutterToFXVerticalFrame(void *ptr) {
    FXPyShutter *src;
    FXVerticalFrame *dest;
    src = (FXPyShutter *) ptr;
    dest = (FXVerticalFrame *) src;
    return (void *) dest;
}

static void *SwigFXPyShutterToFXPacker(void *ptr) {
    FXPyShutter *src;
    FXPacker *dest;
    src = (FXPyShutter *) ptr;
    dest = (FXPacker *) src;
    return (void *) dest;
}

static void *SwigFXPyShutterToFXComposite(void *ptr) {
    FXPyShutter *src;
    FXComposite *dest;
    src = (FXPyShutter *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXPyShutterToFXWindow(void *ptr) {
    FXPyShutter *src;
    FXWindow *dest;
    src = (FXPyShutter *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyShutterToFXDrawable(void *ptr) {
    FXPyShutter *src;
    FXDrawable *dest;
    src = (FXPyShutter *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPyShutterToFXId(void *ptr) {
    FXPyShutter *src;
    FXId *dest;
    src = (FXPyShutter *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPyShutterToFXObject(void *ptr) {
    FXPyShutter *src;
    FXObject *dest;
    src = (FXPyShutter *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXShutter(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11,_swigarg12,_swigarg13) (new FXPyShutter(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11,_swigarg12,_swigarg13))
static PyObject *_wrap_new_FXShutter(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyShutter * _result;
    FXComposite * _arg0;
    FXObject * _arg1 = (FXObject *) NULL;
    FXSelector  _arg2 = (FXSelector ) 0;
    FXuint  _arg3 = (FXuint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    FXint  _arg8 = (FXint ) (4);
    FXint  _arg9 = (FXint ) (4);
    FXint  _arg10 = (FXint ) (4);
    FXint  _arg11 = (FXint ) (4);
    FXint  _arg12 = (FXint ) (4);
    FXint  _arg13 = (FXint ) (4);
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "p","tgt","sel","opts","x","y","w","h","pl","pr","pt","pb","hs","vs", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|Oiiiiiiiiiiii:new_FXShutter",_kwnames,&_argo0,&_obj1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7,&_arg8,&_arg9,&_arg10,&_arg11,&_arg12,&_arg13)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FXShutter. Expected _FXComposite_p.");
        return NULL;
        }
    }
    if (_obj1)
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyShutter *)new_FXShutter(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7,_arg8,_arg9,_arg10,_arg11,_arg12,_arg13);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyShutter_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FXShutter_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXShutter_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyShutter * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXShutter_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutter_onDefault. Expected _FXPyShutter_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXShutter_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXShutter_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXShutter_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyShutter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXShutter_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutter_create. Expected _FXPyShutter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXShutter_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXShutter_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXShutter_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyShutter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXShutter_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutter_destroy. Expected _FXPyShutter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXShutter_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXShutter_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXShutter_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyShutter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXShutter_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutter_detach. Expected _FXPyShutter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXShutter_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXShutter_resize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_resize(_swigarg0,_swigarg1))
static PyObject *_wrap_FXShutter_resize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyShutter * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXShutter_resize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutter_resize. Expected _FXPyShutter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXShutter_resize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXShutter_getDefaultWidth(_swigobj)  (_swigobj->_getDefaultWidth())
static PyObject *_wrap_FXShutter_getDefaultWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyShutter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXShutter_getDefaultWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutter_getDefaultWidth. Expected _FXPyShutter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXShutter_getDefaultWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXShutter_getDefaultHeight(_swigobj)  (_swigobj->_getDefaultHeight())
static PyObject *_wrap_FXShutter_getDefaultHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyShutter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXShutter_getDefaultHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutter_getDefaultHeight. Expected _FXPyShutter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXShutter_getDefaultHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXShutter_show(_swigobj)  (_swigobj->_show())
static PyObject *_wrap_FXShutter_show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyShutter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXShutter_show",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutter_show. Expected _FXPyShutter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXShutter_show(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXShutter_hide(_swigobj)  (_swigobj->_hide())
static PyObject *_wrap_FXShutter_hide(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyShutter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXShutter_hide",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutter_hide. Expected _FXPyShutter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXShutter_hide(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXShutter_enable(_swigobj)  (_swigobj->_enable())
static PyObject *_wrap_FXShutter_enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyShutter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXShutter_enable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutter_enable. Expected _FXPyShutter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXShutter_enable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXShutter_disable(_swigobj)  (_swigobj->_disable())
static PyObject *_wrap_FXShutter_disable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyShutter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXShutter_disable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutter_disable. Expected _FXPyShutter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXShutter_disable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXShutter_canFocus(_swigobj)  (_swigobj->_canFocus())
static PyObject *_wrap_FXShutter_canFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyShutter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXShutter_canFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutter_canFocus. Expected _FXPyShutter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXShutter_canFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXShutter_setFocus(_swigobj)  (_swigobj->_setFocus())
static PyObject *_wrap_FXShutter_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyShutter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXShutter_setFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutter_setFocus. Expected _FXPyShutter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXShutter_setFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXShutter_killFocus(_swigobj)  (_swigobj->_killFocus())
static PyObject *_wrap_FXShutter_killFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyShutter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXShutter_killFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutter_killFocus. Expected _FXPyShutter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXShutter_killFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXShutter_setDefault(_swigobj,_swigarg0)  (_swigobj->_setDefault(_swigarg0))
static PyObject *_wrap_FXShutter_setDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyShutter * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FXShutter_setDefault",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutter_setDefault. Expected _FXPyShutter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXShutter_setDefault(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXShutter_recalc(_swigobj)  (_swigobj->_recalc())
static PyObject *_wrap_FXShutter_recalc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyShutter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXShutter_recalc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutter_recalc. Expected _FXPyShutter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXShutter_recalc(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXShutter_layout(_swigobj)  (_swigobj->_layout())
static PyObject *_wrap_FXShutter_layout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyShutter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXShutter_layout",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutter_layout. Expected _FXPyShutter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXShutter_layout(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXShutter_lower(_swigobj)  (_swigobj->_lowerWindow())
static PyObject *_wrap_FXShutter_lower(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyShutter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXShutter_lower",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutter_lower. Expected _FXPyShutter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXShutter_lower(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXShutter_move(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_move(_swigarg0,_swigarg1))
static PyObject *_wrap_FXShutter_move(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyShutter * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXShutter_move",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutter_move. Expected _FXPyShutter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXShutter_move(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXShutter_position(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->_position(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FXShutter_position(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyShutter * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FXShutter_position",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutter_position. Expected _FXPyShutter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXShutter_position(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXShutter_isComposite(_swigobj)  (_swigobj->_isComposite())
static PyObject *_wrap_FXShutter_isComposite(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyShutter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXShutter_isComposite",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutter_isComposite. Expected _FXPyShutter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXShutter_isComposite(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXShutter_contains(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_contains(_swigarg0,_swigarg1))
static PyObject *_wrap_FXShutter_contains(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyShutter * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXShutter_contains",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutter_contains. Expected _FXPyShutter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXShutter_contains(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXShutter_getWidthForHeight(_swigobj,_swigarg0)  (_swigobj->_getWidthForHeight(_swigarg0))
static PyObject *_wrap_FXShutter_getWidthForHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyShutter * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXShutter_getWidthForHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutter_getWidthForHeight. Expected _FXPyShutter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXShutter_getWidthForHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXShutter_getHeightForWidth(_swigobj,_swigarg0)  (_swigobj->_getHeightForWidth(_swigarg0))
static PyObject *_wrap_FXShutter_getHeightForWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyShutter * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXShutter_getHeightForWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutter_getHeightForWidth. Expected _FXPyShutter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXShutter_getHeightForWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXShutter_doesSaveUnder(_swigobj)  (_swigobj->_doesSaveUnder())
static PyObject *_wrap_FXShutter_doesSaveUnder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyShutter * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXShutter_doesSaveUnder",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutter_doesSaveUnder. Expected _FXPyShutter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXShutter_doesSaveUnder(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXShutter_reparent(_swigobj,_swigarg0)  (_swigobj->_reparent(_swigarg0))
static PyObject *_wrap_FXShutter_reparent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyShutter * _arg0;
    FXComposite * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","newparent", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXShutter_reparent",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutter_reparent. Expected _FXPyShutter_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXShutter_reparent. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXShutter_reparent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXShutter_setBackColor(_swigobj,_swigarg0)  (_swigobj->_setBackColor(_swigarg0))
static PyObject *_wrap_FXShutter_setBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyShutter * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXShutter_setBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutter_setBackColor. Expected _FXPyShutter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXShutter_setBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXShutter_setCurrent(_swigobj,_swigarg0)  (_swigobj->_setCurrent(_swigarg0))
static PyObject *_wrap_FXShutter_setCurrent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyShutter * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","panel", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXShutter_setCurrent",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyShutter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXShutter_setCurrent. Expected _FXPyShutter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXShutter_setCurrent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static PyMethodDef containerscMethods[] = {
	 { "FXShutter_setCurrent", (PyCFunction) _wrap_FXShutter_setCurrent, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutter_setBackColor", (PyCFunction) _wrap_FXShutter_setBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutter_reparent", (PyCFunction) _wrap_FXShutter_reparent, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutter_doesSaveUnder", (PyCFunction) _wrap_FXShutter_doesSaveUnder, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutter_getHeightForWidth", (PyCFunction) _wrap_FXShutter_getHeightForWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutter_getWidthForHeight", (PyCFunction) _wrap_FXShutter_getWidthForHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutter_contains", (PyCFunction) _wrap_FXShutter_contains, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutter_isComposite", (PyCFunction) _wrap_FXShutter_isComposite, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutter_position", (PyCFunction) _wrap_FXShutter_position, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutter_move", (PyCFunction) _wrap_FXShutter_move, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutter_lower", (PyCFunction) _wrap_FXShutter_lower, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutter_layout", (PyCFunction) _wrap_FXShutter_layout, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutter_recalc", (PyCFunction) _wrap_FXShutter_recalc, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutter_setDefault", (PyCFunction) _wrap_FXShutter_setDefault, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutter_killFocus", (PyCFunction) _wrap_FXShutter_killFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutter_setFocus", (PyCFunction) _wrap_FXShutter_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutter_canFocus", (PyCFunction) _wrap_FXShutter_canFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutter_disable", (PyCFunction) _wrap_FXShutter_disable, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutter_enable", (PyCFunction) _wrap_FXShutter_enable, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutter_hide", (PyCFunction) _wrap_FXShutter_hide, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutter_show", (PyCFunction) _wrap_FXShutter_show, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutter_getDefaultHeight", (PyCFunction) _wrap_FXShutter_getDefaultHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutter_getDefaultWidth", (PyCFunction) _wrap_FXShutter_getDefaultWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutter_resize", (PyCFunction) _wrap_FXShutter_resize, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutter_detach", (PyCFunction) _wrap_FXShutter_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutter_destroy", (PyCFunction) _wrap_FXShutter_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutter_create", (PyCFunction) _wrap_FXShutter_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutter_onDefault", (PyCFunction) _wrap_FXShutter_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXShutter", (PyCFunction) _wrap_new_FXShutter, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Shutter_getCurrent", (PyCFunction) _wrap_FX_Shutter_getCurrent, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Shutter_setCurrent", (PyCFunction) _wrap_FX_Shutter_setCurrent, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_Shutter", (PyCFunction) _wrap_new_FX_Shutter, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Shutter_onUpdOpen", (PyCFunction) _wrap_FX_Shutter_onUpdOpen, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Shutter_onCmdOpen", (PyCFunction) _wrap_FX_Shutter_onCmdOpen, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Shutter_onCmdGetIntValue", (PyCFunction) _wrap_FX_Shutter_onCmdGetIntValue, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Shutter_onCmdSetIntValue", (PyCFunction) _wrap_FX_Shutter_onCmdSetIntValue, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Shutter_onCmdSetValue", (PyCFunction) _wrap_FX_Shutter_onCmdSetValue, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Shutter_onOpenItem", (PyCFunction) _wrap_FX_Shutter_onOpenItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Shutter_onTimeout", (PyCFunction) _wrap_FX_Shutter_onTimeout, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Shutter_onFocusDown", (PyCFunction) _wrap_FX_Shutter_onFocusDown, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Shutter_onFocusUp", (PyCFunction) _wrap_FX_Shutter_onFocusUp, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutterItem_setBackColor", (PyCFunction) _wrap_FXShutterItem_setBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutterItem_reparent", (PyCFunction) _wrap_FXShutterItem_reparent, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutterItem_doesSaveUnder", (PyCFunction) _wrap_FXShutterItem_doesSaveUnder, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutterItem_getHeightForWidth", (PyCFunction) _wrap_FXShutterItem_getHeightForWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutterItem_getWidthForHeight", (PyCFunction) _wrap_FXShutterItem_getWidthForHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutterItem_contains", (PyCFunction) _wrap_FXShutterItem_contains, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutterItem_isComposite", (PyCFunction) _wrap_FXShutterItem_isComposite, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutterItem_position", (PyCFunction) _wrap_FXShutterItem_position, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutterItem_move", (PyCFunction) _wrap_FXShutterItem_move, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutterItem_lower", (PyCFunction) _wrap_FXShutterItem_lower, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutterItem_layout", (PyCFunction) _wrap_FXShutterItem_layout, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutterItem_recalc", (PyCFunction) _wrap_FXShutterItem_recalc, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutterItem_setDefault", (PyCFunction) _wrap_FXShutterItem_setDefault, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutterItem_killFocus", (PyCFunction) _wrap_FXShutterItem_killFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutterItem_setFocus", (PyCFunction) _wrap_FXShutterItem_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutterItem_canFocus", (PyCFunction) _wrap_FXShutterItem_canFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutterItem_disable", (PyCFunction) _wrap_FXShutterItem_disable, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutterItem_enable", (PyCFunction) _wrap_FXShutterItem_enable, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutterItem_hide", (PyCFunction) _wrap_FXShutterItem_hide, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutterItem_show", (PyCFunction) _wrap_FXShutterItem_show, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutterItem_getDefaultHeight", (PyCFunction) _wrap_FXShutterItem_getDefaultHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutterItem_getDefaultWidth", (PyCFunction) _wrap_FXShutterItem_getDefaultWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutterItem_resize", (PyCFunction) _wrap_FXShutterItem_resize, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutterItem_detach", (PyCFunction) _wrap_FXShutterItem_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutterItem_destroy", (PyCFunction) _wrap_FXShutterItem_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutterItem_create", (PyCFunction) _wrap_FXShutterItem_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXShutterItem_onDefault", (PyCFunction) _wrap_FXShutterItem_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXShutterItem", (PyCFunction) _wrap_new_FXShutterItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ShutterItem_getTipText", (PyCFunction) _wrap_FX_ShutterItem_getTipText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ShutterItem_setTipText", (PyCFunction) _wrap_FX_ShutterItem_setTipText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ShutterItem_getHelpText", (PyCFunction) _wrap_FX_ShutterItem_getHelpText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ShutterItem_setHelpText", (PyCFunction) _wrap_FX_ShutterItem_setHelpText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ShutterItem_getContent", (PyCFunction) _wrap_FX_ShutterItem_getContent, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ShutterItem_getButton", (PyCFunction) _wrap_FX_ShutterItem_getButton, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_ShutterItem", (PyCFunction) _wrap_new_FX_ShutterItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ShutterItem_onCmdButton", (PyCFunction) _wrap_FX_ShutterItem_onCmdButton, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ShutterItem_onFocusDown", (PyCFunction) _wrap_FX_ShutterItem_onFocusDown, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ShutterItem_onFocusUp", (PyCFunction) _wrap_FX_ShutterItem_onFocusUp, METH_VARARGS | METH_KEYWORDS },
	 { "FX4Splitter_setBackColor", (PyCFunction) _wrap_FX4Splitter_setBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX4Splitter_reparent", (PyCFunction) _wrap_FX4Splitter_reparent, METH_VARARGS | METH_KEYWORDS },
	 { "FX4Splitter_doesSaveUnder", (PyCFunction) _wrap_FX4Splitter_doesSaveUnder, METH_VARARGS | METH_KEYWORDS },
	 { "FX4Splitter_getHeightForWidth", (PyCFunction) _wrap_FX4Splitter_getHeightForWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FX4Splitter_getWidthForHeight", (PyCFunction) _wrap_FX4Splitter_getWidthForHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FX4Splitter_contains", (PyCFunction) _wrap_FX4Splitter_contains, METH_VARARGS | METH_KEYWORDS },
	 { "FX4Splitter_isComposite", (PyCFunction) _wrap_FX4Splitter_isComposite, METH_VARARGS | METH_KEYWORDS },
	 { "FX4Splitter_position", (PyCFunction) _wrap_FX4Splitter_position, METH_VARARGS | METH_KEYWORDS },
	 { "FX4Splitter_move", (PyCFunction) _wrap_FX4Splitter_move, METH_VARARGS | METH_KEYWORDS },
	 { "FX4Splitter_lower", (PyCFunction) _wrap_FX4Splitter_lower, METH_VARARGS | METH_KEYWORDS },
	 { "FX4Splitter_layout", (PyCFunction) _wrap_FX4Splitter_layout, METH_VARARGS | METH_KEYWORDS },
	 { "FX4Splitter_recalc", (PyCFunction) _wrap_FX4Splitter_recalc, METH_VARARGS | METH_KEYWORDS },
	 { "FX4Splitter_setDefault", (PyCFunction) _wrap_FX4Splitter_setDefault, METH_VARARGS | METH_KEYWORDS },
	 { "FX4Splitter_killFocus", (PyCFunction) _wrap_FX4Splitter_killFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FX4Splitter_setFocus", (PyCFunction) _wrap_FX4Splitter_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FX4Splitter_canFocus", (PyCFunction) _wrap_FX4Splitter_canFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FX4Splitter_disable", (PyCFunction) _wrap_FX4Splitter_disable, METH_VARARGS | METH_KEYWORDS },
	 { "FX4Splitter_enable", (PyCFunction) _wrap_FX4Splitter_enable, METH_VARARGS | METH_KEYWORDS },
	 { "FX4Splitter_hide", (PyCFunction) _wrap_FX4Splitter_hide, METH_VARARGS | METH_KEYWORDS },
	 { "FX4Splitter_show", (PyCFunction) _wrap_FX4Splitter_show, METH_VARARGS | METH_KEYWORDS },
	 { "FX4Splitter_getDefaultHeight", (PyCFunction) _wrap_FX4Splitter_getDefaultHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FX4Splitter_getDefaultWidth", (PyCFunction) _wrap_FX4Splitter_getDefaultWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FX4Splitter_resize", (PyCFunction) _wrap_FX4Splitter_resize, METH_VARARGS | METH_KEYWORDS },
	 { "FX4Splitter_detach", (PyCFunction) _wrap_FX4Splitter_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FX4Splitter_destroy", (PyCFunction) _wrap_FX4Splitter_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FX4Splitter_create", (PyCFunction) _wrap_FX4Splitter_create, METH_VARARGS | METH_KEYWORDS },
	 { "FX4Splitter_onDefault", (PyCFunction) _wrap_FX4Splitter_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX4Splitter", (PyCFunction) _wrap_new_FX4Splitter, METH_VARARGS | METH_KEYWORDS },
	 { "FX_4Splitter_getExpanded", (PyCFunction) _wrap_FX_4Splitter_getExpanded, METH_VARARGS | METH_KEYWORDS },
	 { "FX_4Splitter_setExpanded", (PyCFunction) _wrap_FX_4Splitter_setExpanded, METH_VARARGS | METH_KEYWORDS },
	 { "FX_4Splitter_getBarSize", (PyCFunction) _wrap_FX_4Splitter_getBarSize, METH_VARARGS | METH_KEYWORDS },
	 { "FX_4Splitter_setBarSize", (PyCFunction) _wrap_FX_4Splitter_setBarSize, METH_VARARGS | METH_KEYWORDS },
	 { "FX_4Splitter_setSplitterStyle", (PyCFunction) _wrap_FX_4Splitter_setSplitterStyle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_4Splitter_getSplitterStyle", (PyCFunction) _wrap_FX_4Splitter_getSplitterStyle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_4Splitter_setVSplit", (PyCFunction) _wrap_FX_4Splitter_setVSplit, METH_VARARGS | METH_KEYWORDS },
	 { "FX_4Splitter_setHSplit", (PyCFunction) _wrap_FX_4Splitter_setHSplit, METH_VARARGS | METH_KEYWORDS },
	 { "FX_4Splitter_getVSplit", (PyCFunction) _wrap_FX_4Splitter_getVSplit, METH_VARARGS | METH_KEYWORDS },
	 { "FX_4Splitter_getHSplit", (PyCFunction) _wrap_FX_4Splitter_getHSplit, METH_VARARGS | METH_KEYWORDS },
	 { "FX_4Splitter_getBottomRight", (PyCFunction) _wrap_FX_4Splitter_getBottomRight, METH_VARARGS | METH_KEYWORDS },
	 { "FX_4Splitter_getBottomLeft", (PyCFunction) _wrap_FX_4Splitter_getBottomLeft, METH_VARARGS | METH_KEYWORDS },
	 { "FX_4Splitter_getTopRight", (PyCFunction) _wrap_FX_4Splitter_getTopRight, METH_VARARGS | METH_KEYWORDS },
	 { "FX_4Splitter_getTopLeft", (PyCFunction) _wrap_FX_4Splitter_getTopLeft, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_4Splitter", (PyCFunction) _wrap_new_FX_4Splitter, METH_VARARGS | METH_KEYWORDS },
	 { "FX_4Splitter_onUpdExpand", (PyCFunction) _wrap_FX_4Splitter_onUpdExpand, METH_VARARGS | METH_KEYWORDS },
	 { "FX_4Splitter_onCmdExpand", (PyCFunction) _wrap_FX_4Splitter_onCmdExpand, METH_VARARGS | METH_KEYWORDS },
	 { "FX_4Splitter_onFocusRight", (PyCFunction) _wrap_FX_4Splitter_onFocusRight, METH_VARARGS | METH_KEYWORDS },
	 { "FX_4Splitter_onFocusLeft", (PyCFunction) _wrap_FX_4Splitter_onFocusLeft, METH_VARARGS | METH_KEYWORDS },
	 { "FX_4Splitter_onFocusDown", (PyCFunction) _wrap_FX_4Splitter_onFocusDown, METH_VARARGS | METH_KEYWORDS },
	 { "FX_4Splitter_onFocusUp", (PyCFunction) _wrap_FX_4Splitter_onFocusUp, METH_VARARGS | METH_KEYWORDS },
	 { "FX_4Splitter_onFocusPrev", (PyCFunction) _wrap_FX_4Splitter_onFocusPrev, METH_VARARGS | METH_KEYWORDS },
	 { "FX_4Splitter_onFocusNext", (PyCFunction) _wrap_FX_4Splitter_onFocusNext, METH_VARARGS | METH_KEYWORDS },
	 { "FX_4Splitter_onMotion", (PyCFunction) _wrap_FX_4Splitter_onMotion, METH_VARARGS | METH_KEYWORDS },
	 { "FX_4Splitter_onLeftBtnRelease", (PyCFunction) _wrap_FX_4Splitter_onLeftBtnRelease, METH_VARARGS | METH_KEYWORDS },
	 { "FX_4Splitter_onLeftBtnPress", (PyCFunction) _wrap_FX_4Splitter_onLeftBtnPress, METH_VARARGS | METH_KEYWORDS },
	 { "FXSplitter_setBackColor", (PyCFunction) _wrap_FXSplitter_setBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FXSplitter_reparent", (PyCFunction) _wrap_FXSplitter_reparent, METH_VARARGS | METH_KEYWORDS },
	 { "FXSplitter_doesSaveUnder", (PyCFunction) _wrap_FXSplitter_doesSaveUnder, METH_VARARGS | METH_KEYWORDS },
	 { "FXSplitter_getHeightForWidth", (PyCFunction) _wrap_FXSplitter_getHeightForWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXSplitter_getWidthForHeight", (PyCFunction) _wrap_FXSplitter_getWidthForHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXSplitter_contains", (PyCFunction) _wrap_FXSplitter_contains, METH_VARARGS | METH_KEYWORDS },
	 { "FXSplitter_isComposite", (PyCFunction) _wrap_FXSplitter_isComposite, METH_VARARGS | METH_KEYWORDS },
	 { "FXSplitter_position", (PyCFunction) _wrap_FXSplitter_position, METH_VARARGS | METH_KEYWORDS },
	 { "FXSplitter_move", (PyCFunction) _wrap_FXSplitter_move, METH_VARARGS | METH_KEYWORDS },
	 { "FXSplitter_lower", (PyCFunction) _wrap_FXSplitter_lower, METH_VARARGS | METH_KEYWORDS },
	 { "FXSplitter_layout", (PyCFunction) _wrap_FXSplitter_layout, METH_VARARGS | METH_KEYWORDS },
	 { "FXSplitter_recalc", (PyCFunction) _wrap_FXSplitter_recalc, METH_VARARGS | METH_KEYWORDS },
	 { "FXSplitter_setDefault", (PyCFunction) _wrap_FXSplitter_setDefault, METH_VARARGS | METH_KEYWORDS },
	 { "FXSplitter_killFocus", (PyCFunction) _wrap_FXSplitter_killFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXSplitter_setFocus", (PyCFunction) _wrap_FXSplitter_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXSplitter_canFocus", (PyCFunction) _wrap_FXSplitter_canFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXSplitter_disable", (PyCFunction) _wrap_FXSplitter_disable, METH_VARARGS | METH_KEYWORDS },
	 { "FXSplitter_enable", (PyCFunction) _wrap_FXSplitter_enable, METH_VARARGS | METH_KEYWORDS },
	 { "FXSplitter_hide", (PyCFunction) _wrap_FXSplitter_hide, METH_VARARGS | METH_KEYWORDS },
	 { "FXSplitter_show", (PyCFunction) _wrap_FXSplitter_show, METH_VARARGS | METH_KEYWORDS },
	 { "FXSplitter_getDefaultHeight", (PyCFunction) _wrap_FXSplitter_getDefaultHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXSplitter_getDefaultWidth", (PyCFunction) _wrap_FXSplitter_getDefaultWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXSplitter_resize", (PyCFunction) _wrap_FXSplitter_resize, METH_VARARGS | METH_KEYWORDS },
	 { "FXSplitter_detach", (PyCFunction) _wrap_FXSplitter_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXSplitter_destroy", (PyCFunction) _wrap_FXSplitter_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXSplitter_create", (PyCFunction) _wrap_FXSplitter_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXSplitter_onDefault", (PyCFunction) _wrap_FXSplitter_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXSplitter", (PyCFunction) _wrap_new_FXSplitter, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Splitter_getBarSize", (PyCFunction) _wrap_FX_Splitter_getBarSize, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Splitter_setBarSize", (PyCFunction) _wrap_FX_Splitter_setBarSize, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Splitter_setSplitterStyle", (PyCFunction) _wrap_FX_Splitter_setSplitterStyle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Splitter_getSplitterStyle", (PyCFunction) _wrap_FX_Splitter_getSplitterStyle, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_Splitter", (PyCFunction) _wrap_new_FX_Splitter, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Splitter_onFocusRight", (PyCFunction) _wrap_FX_Splitter_onFocusRight, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Splitter_onFocusLeft", (PyCFunction) _wrap_FX_Splitter_onFocusLeft, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Splitter_onFocusDown", (PyCFunction) _wrap_FX_Splitter_onFocusDown, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Splitter_onFocusUp", (PyCFunction) _wrap_FX_Splitter_onFocusUp, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Splitter_onFocusPrev", (PyCFunction) _wrap_FX_Splitter_onFocusPrev, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Splitter_onFocusNext", (PyCFunction) _wrap_FX_Splitter_onFocusNext, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Splitter_onMotion", (PyCFunction) _wrap_FX_Splitter_onMotion, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Splitter_onLeftBtnRelease", (PyCFunction) _wrap_FX_Splitter_onLeftBtnRelease, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Splitter_onLeftBtnPress", (PyCFunction) _wrap_FX_Splitter_onLeftBtnPress, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollWindow_moveContents", (PyCFunction) _wrap_FXScrollWindow_moveContents, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollWindow_getViewportHeight", (PyCFunction) _wrap_FXScrollWindow_getViewportHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollWindow_getViewportWidth", (PyCFunction) _wrap_FXScrollWindow_getViewportWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollWindow_getContentHeight", (PyCFunction) _wrap_FXScrollWindow_getContentHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollWindow_getContentWidth", (PyCFunction) _wrap_FXScrollWindow_getContentWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollWindow_setBackColor", (PyCFunction) _wrap_FXScrollWindow_setBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollWindow_reparent", (PyCFunction) _wrap_FXScrollWindow_reparent, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollWindow_doesSaveUnder", (PyCFunction) _wrap_FXScrollWindow_doesSaveUnder, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollWindow_getHeightForWidth", (PyCFunction) _wrap_FXScrollWindow_getHeightForWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollWindow_getWidthForHeight", (PyCFunction) _wrap_FXScrollWindow_getWidthForHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollWindow_contains", (PyCFunction) _wrap_FXScrollWindow_contains, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollWindow_isComposite", (PyCFunction) _wrap_FXScrollWindow_isComposite, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollWindow_position", (PyCFunction) _wrap_FXScrollWindow_position, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollWindow_move", (PyCFunction) _wrap_FXScrollWindow_move, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollWindow_lower", (PyCFunction) _wrap_FXScrollWindow_lower, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollWindow_layout", (PyCFunction) _wrap_FXScrollWindow_layout, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollWindow_recalc", (PyCFunction) _wrap_FXScrollWindow_recalc, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollWindow_setDefault", (PyCFunction) _wrap_FXScrollWindow_setDefault, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollWindow_killFocus", (PyCFunction) _wrap_FXScrollWindow_killFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollWindow_setFocus", (PyCFunction) _wrap_FXScrollWindow_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollWindow_canFocus", (PyCFunction) _wrap_FXScrollWindow_canFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollWindow_disable", (PyCFunction) _wrap_FXScrollWindow_disable, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollWindow_enable", (PyCFunction) _wrap_FXScrollWindow_enable, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollWindow_hide", (PyCFunction) _wrap_FXScrollWindow_hide, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollWindow_show", (PyCFunction) _wrap_FXScrollWindow_show, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollWindow_getDefaultHeight", (PyCFunction) _wrap_FXScrollWindow_getDefaultHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollWindow_getDefaultWidth", (PyCFunction) _wrap_FXScrollWindow_getDefaultWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollWindow_resize", (PyCFunction) _wrap_FXScrollWindow_resize, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollWindow_detach", (PyCFunction) _wrap_FXScrollWindow_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollWindow_destroy", (PyCFunction) _wrap_FXScrollWindow_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollWindow_create", (PyCFunction) _wrap_FXScrollWindow_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollWindow_onDefault", (PyCFunction) _wrap_FXScrollWindow_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXScrollWindow", (PyCFunction) _wrap_new_FXScrollWindow, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ScrollWindow_contentWindow", (PyCFunction) _wrap_FX_ScrollWindow_contentWindow, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_ScrollWindow", (PyCFunction) _wrap_new_FX_ScrollWindow, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ScrollWindow_onFocusSelf", (PyCFunction) _wrap_FX_ScrollWindow_onFocusSelf, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ScrollWindow_onKeyRelease", (PyCFunction) _wrap_FX_ScrollWindow_onKeyRelease, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ScrollWindow_onKeyPress", (PyCFunction) _wrap_FX_ScrollWindow_onKeyPress, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollArea_moveContents", (PyCFunction) _wrap_FXScrollArea_moveContents, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollArea_getViewportHeight", (PyCFunction) _wrap_FXScrollArea_getViewportHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollArea_getViewportWidth", (PyCFunction) _wrap_FXScrollArea_getViewportWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollArea_getContentHeight", (PyCFunction) _wrap_FXScrollArea_getContentHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollArea_getContentWidth", (PyCFunction) _wrap_FXScrollArea_getContentWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollArea_setBackColor", (PyCFunction) _wrap_FXScrollArea_setBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollArea_reparent", (PyCFunction) _wrap_FXScrollArea_reparent, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollArea_doesSaveUnder", (PyCFunction) _wrap_FXScrollArea_doesSaveUnder, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollArea_getHeightForWidth", (PyCFunction) _wrap_FXScrollArea_getHeightForWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollArea_getWidthForHeight", (PyCFunction) _wrap_FXScrollArea_getWidthForHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollArea_contains", (PyCFunction) _wrap_FXScrollArea_contains, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollArea_isComposite", (PyCFunction) _wrap_FXScrollArea_isComposite, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollArea_position", (PyCFunction) _wrap_FXScrollArea_position, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollArea_move", (PyCFunction) _wrap_FXScrollArea_move, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollArea_lower", (PyCFunction) _wrap_FXScrollArea_lower, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollArea_layout", (PyCFunction) _wrap_FXScrollArea_layout, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollArea_recalc", (PyCFunction) _wrap_FXScrollArea_recalc, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollArea_setDefault", (PyCFunction) _wrap_FXScrollArea_setDefault, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollArea_killFocus", (PyCFunction) _wrap_FXScrollArea_killFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollArea_setFocus", (PyCFunction) _wrap_FXScrollArea_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollArea_canFocus", (PyCFunction) _wrap_FXScrollArea_canFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollArea_disable", (PyCFunction) _wrap_FXScrollArea_disable, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollArea_enable", (PyCFunction) _wrap_FXScrollArea_enable, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollArea_hide", (PyCFunction) _wrap_FXScrollArea_hide, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollArea_show", (PyCFunction) _wrap_FXScrollArea_show, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollArea_getDefaultHeight", (PyCFunction) _wrap_FXScrollArea_getDefaultHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollArea_getDefaultWidth", (PyCFunction) _wrap_FXScrollArea_getDefaultWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollArea_resize", (PyCFunction) _wrap_FXScrollArea_resize, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollArea_detach", (PyCFunction) _wrap_FXScrollArea_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollArea_destroy", (PyCFunction) _wrap_FXScrollArea_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollArea_create", (PyCFunction) _wrap_FXScrollArea_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXScrollArea_onDefault", (PyCFunction) _wrap_FXScrollArea_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXScrollArea", (PyCFunction) _wrap_new_FXScrollArea, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ScrollArea_moveContents", (PyCFunction) _wrap_FX_ScrollArea_moveContents, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ScrollArea_getViewportHeight", (PyCFunction) _wrap_FX_ScrollArea_getViewportHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ScrollArea_getViewportWidth", (PyCFunction) _wrap_FX_ScrollArea_getViewportWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ScrollArea_getContentHeight", (PyCFunction) _wrap_FX_ScrollArea_getContentHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ScrollArea_getContentWidth", (PyCFunction) _wrap_FX_ScrollArea_getContentWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ScrollArea_getPosition", (PyCFunction) _wrap_FX_ScrollArea_getPosition, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ScrollArea_setPosition", (PyCFunction) _wrap_FX_ScrollArea_setPosition, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ScrollArea_getYPosition", (PyCFunction) _wrap_FX_ScrollArea_getYPosition, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ScrollArea_getXPosition", (PyCFunction) _wrap_FX_ScrollArea_getXPosition, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ScrollArea_verticalScrollbar", (PyCFunction) _wrap_FX_ScrollArea_verticalScrollbar, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ScrollArea_horizontalScrollbar", (PyCFunction) _wrap_FX_ScrollArea_horizontalScrollbar, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ScrollArea_isVerticalScrollable", (PyCFunction) _wrap_FX_ScrollArea_isVerticalScrollable, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ScrollArea_isHorizontalScrollable", (PyCFunction) _wrap_FX_ScrollArea_isHorizontalScrollable, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ScrollArea_getScrollStyle", (PyCFunction) _wrap_FX_ScrollArea_getScrollStyle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ScrollArea_setScrollStyle", (PyCFunction) _wrap_FX_ScrollArea_setScrollStyle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ScrollArea_onAutoScroll", (PyCFunction) _wrap_FX_ScrollArea_onAutoScroll, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ScrollArea_onVScrollerDragged", (PyCFunction) _wrap_FX_ScrollArea_onVScrollerDragged, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ScrollArea_onHScrollerDragged", (PyCFunction) _wrap_FX_ScrollArea_onHScrollerDragged, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ScrollArea_onVScrollerChanged", (PyCFunction) _wrap_FX_ScrollArea_onVScrollerChanged, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ScrollArea_onHScrollerChanged", (PyCFunction) _wrap_FX_ScrollArea_onHScrollerChanged, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ScrollArea_onVMouseWheel", (PyCFunction) _wrap_FX_ScrollArea_onVMouseWheel, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ScrollArea_onHMouseWheel", (PyCFunction) _wrap_FX_ScrollArea_onHMouseWheel, METH_VARARGS | METH_KEYWORDS },
	 { "FXSwitcher_setBackColor", (PyCFunction) _wrap_FXSwitcher_setBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FXSwitcher_reparent", (PyCFunction) _wrap_FXSwitcher_reparent, METH_VARARGS | METH_KEYWORDS },
	 { "FXSwitcher_doesSaveUnder", (PyCFunction) _wrap_FXSwitcher_doesSaveUnder, METH_VARARGS | METH_KEYWORDS },
	 { "FXSwitcher_getHeightForWidth", (PyCFunction) _wrap_FXSwitcher_getHeightForWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXSwitcher_getWidthForHeight", (PyCFunction) _wrap_FXSwitcher_getWidthForHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXSwitcher_contains", (PyCFunction) _wrap_FXSwitcher_contains, METH_VARARGS | METH_KEYWORDS },
	 { "FXSwitcher_isComposite", (PyCFunction) _wrap_FXSwitcher_isComposite, METH_VARARGS | METH_KEYWORDS },
	 { "FXSwitcher_position", (PyCFunction) _wrap_FXSwitcher_position, METH_VARARGS | METH_KEYWORDS },
	 { "FXSwitcher_move", (PyCFunction) _wrap_FXSwitcher_move, METH_VARARGS | METH_KEYWORDS },
	 { "FXSwitcher_lower", (PyCFunction) _wrap_FXSwitcher_lower, METH_VARARGS | METH_KEYWORDS },
	 { "FXSwitcher_layout", (PyCFunction) _wrap_FXSwitcher_layout, METH_VARARGS | METH_KEYWORDS },
	 { "FXSwitcher_recalc", (PyCFunction) _wrap_FXSwitcher_recalc, METH_VARARGS | METH_KEYWORDS },
	 { "FXSwitcher_setDefault", (PyCFunction) _wrap_FXSwitcher_setDefault, METH_VARARGS | METH_KEYWORDS },
	 { "FXSwitcher_killFocus", (PyCFunction) _wrap_FXSwitcher_killFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXSwitcher_setFocus", (PyCFunction) _wrap_FXSwitcher_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXSwitcher_canFocus", (PyCFunction) _wrap_FXSwitcher_canFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXSwitcher_disable", (PyCFunction) _wrap_FXSwitcher_disable, METH_VARARGS | METH_KEYWORDS },
	 { "FXSwitcher_enable", (PyCFunction) _wrap_FXSwitcher_enable, METH_VARARGS | METH_KEYWORDS },
	 { "FXSwitcher_hide", (PyCFunction) _wrap_FXSwitcher_hide, METH_VARARGS | METH_KEYWORDS },
	 { "FXSwitcher_show", (PyCFunction) _wrap_FXSwitcher_show, METH_VARARGS | METH_KEYWORDS },
	 { "FXSwitcher_getDefaultHeight", (PyCFunction) _wrap_FXSwitcher_getDefaultHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXSwitcher_getDefaultWidth", (PyCFunction) _wrap_FXSwitcher_getDefaultWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXSwitcher_resize", (PyCFunction) _wrap_FXSwitcher_resize, METH_VARARGS | METH_KEYWORDS },
	 { "FXSwitcher_detach", (PyCFunction) _wrap_FXSwitcher_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXSwitcher_destroy", (PyCFunction) _wrap_FXSwitcher_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXSwitcher_create", (PyCFunction) _wrap_FXSwitcher_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXSwitcher_onDefault", (PyCFunction) _wrap_FXSwitcher_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXSwitcher", (PyCFunction) _wrap_new_FXSwitcher, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Switcher_getSwitcherStyle", (PyCFunction) _wrap_FX_Switcher_getSwitcherStyle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Switcher_setSwitcherStyle", (PyCFunction) _wrap_FX_Switcher_setSwitcherStyle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Switcher_getCurrent", (PyCFunction) _wrap_FX_Switcher_getCurrent, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Switcher_setCurrent", (PyCFunction) _wrap_FX_Switcher_setCurrent, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_Switcher", (PyCFunction) _wrap_new_FX_Switcher, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Switcher_onUpdOpen", (PyCFunction) _wrap_FX_Switcher_onUpdOpen, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Switcher_onCmdOpen", (PyCFunction) _wrap_FX_Switcher_onCmdOpen, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Switcher_onCmdGetIntValue", (PyCFunction) _wrap_FX_Switcher_onCmdGetIntValue, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Switcher_onCmdSetIntValue", (PyCFunction) _wrap_FX_Switcher_onCmdSetIntValue, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Switcher_onCmdSetValue", (PyCFunction) _wrap_FX_Switcher_onCmdSetValue, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Switcher_onPaint", (PyCFunction) _wrap_FX_Switcher_onPaint, METH_VARARGS | METH_KEYWORDS },
	 { "FXGroupBox_setBackColor", (PyCFunction) _wrap_FXGroupBox_setBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FXGroupBox_reparent", (PyCFunction) _wrap_FXGroupBox_reparent, METH_VARARGS | METH_KEYWORDS },
	 { "FXGroupBox_doesSaveUnder", (PyCFunction) _wrap_FXGroupBox_doesSaveUnder, METH_VARARGS | METH_KEYWORDS },
	 { "FXGroupBox_getHeightForWidth", (PyCFunction) _wrap_FXGroupBox_getHeightForWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXGroupBox_getWidthForHeight", (PyCFunction) _wrap_FXGroupBox_getWidthForHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXGroupBox_contains", (PyCFunction) _wrap_FXGroupBox_contains, METH_VARARGS | METH_KEYWORDS },
	 { "FXGroupBox_isComposite", (PyCFunction) _wrap_FXGroupBox_isComposite, METH_VARARGS | METH_KEYWORDS },
	 { "FXGroupBox_position", (PyCFunction) _wrap_FXGroupBox_position, METH_VARARGS | METH_KEYWORDS },
	 { "FXGroupBox_move", (PyCFunction) _wrap_FXGroupBox_move, METH_VARARGS | METH_KEYWORDS },
	 { "FXGroupBox_lower", (PyCFunction) _wrap_FXGroupBox_lower, METH_VARARGS | METH_KEYWORDS },
	 { "FXGroupBox_layout", (PyCFunction) _wrap_FXGroupBox_layout, METH_VARARGS | METH_KEYWORDS },
	 { "FXGroupBox_recalc", (PyCFunction) _wrap_FXGroupBox_recalc, METH_VARARGS | METH_KEYWORDS },
	 { "FXGroupBox_setDefault", (PyCFunction) _wrap_FXGroupBox_setDefault, METH_VARARGS | METH_KEYWORDS },
	 { "FXGroupBox_killFocus", (PyCFunction) _wrap_FXGroupBox_killFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXGroupBox_setFocus", (PyCFunction) _wrap_FXGroupBox_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXGroupBox_canFocus", (PyCFunction) _wrap_FXGroupBox_canFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXGroupBox_disable", (PyCFunction) _wrap_FXGroupBox_disable, METH_VARARGS | METH_KEYWORDS },
	 { "FXGroupBox_enable", (PyCFunction) _wrap_FXGroupBox_enable, METH_VARARGS | METH_KEYWORDS },
	 { "FXGroupBox_hide", (PyCFunction) _wrap_FXGroupBox_hide, METH_VARARGS | METH_KEYWORDS },
	 { "FXGroupBox_show", (PyCFunction) _wrap_FXGroupBox_show, METH_VARARGS | METH_KEYWORDS },
	 { "FXGroupBox_getDefaultHeight", (PyCFunction) _wrap_FXGroupBox_getDefaultHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXGroupBox_getDefaultWidth", (PyCFunction) _wrap_FXGroupBox_getDefaultWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXGroupBox_resize", (PyCFunction) _wrap_FXGroupBox_resize, METH_VARARGS | METH_KEYWORDS },
	 { "FXGroupBox_detach", (PyCFunction) _wrap_FXGroupBox_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXGroupBox_destroy", (PyCFunction) _wrap_FXGroupBox_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXGroupBox_create", (PyCFunction) _wrap_FXGroupBox_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXGroupBox_onDefault", (PyCFunction) _wrap_FXGroupBox_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXGroupBox", (PyCFunction) _wrap_new_FXGroupBox, METH_VARARGS | METH_KEYWORDS },
	 { "FX_GroupBox_getText", (PyCFunction) _wrap_FX_GroupBox_getText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_GroupBox_setText", (PyCFunction) _wrap_FX_GroupBox_setText, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_GroupBox", (PyCFunction) _wrap_new_FX_GroupBox, METH_VARARGS | METH_KEYWORDS },
	 { "FX_GroupBox_onUncheckOther", (PyCFunction) _wrap_FX_GroupBox_onUncheckOther, METH_VARARGS | METH_KEYWORDS },
	 { "FX_GroupBox_onPaint", (PyCFunction) _wrap_FX_GroupBox_onPaint, METH_VARARGS | METH_KEYWORDS },
	 { "FXMatrix_setBackColor", (PyCFunction) _wrap_FXMatrix_setBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FXMatrix_reparent", (PyCFunction) _wrap_FXMatrix_reparent, METH_VARARGS | METH_KEYWORDS },
	 { "FXMatrix_doesSaveUnder", (PyCFunction) _wrap_FXMatrix_doesSaveUnder, METH_VARARGS | METH_KEYWORDS },
	 { "FXMatrix_getHeightForWidth", (PyCFunction) _wrap_FXMatrix_getHeightForWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXMatrix_getWidthForHeight", (PyCFunction) _wrap_FXMatrix_getWidthForHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXMatrix_contains", (PyCFunction) _wrap_FXMatrix_contains, METH_VARARGS | METH_KEYWORDS },
	 { "FXMatrix_isComposite", (PyCFunction) _wrap_FXMatrix_isComposite, METH_VARARGS | METH_KEYWORDS },
	 { "FXMatrix_position", (PyCFunction) _wrap_FXMatrix_position, METH_VARARGS | METH_KEYWORDS },
	 { "FXMatrix_move", (PyCFunction) _wrap_FXMatrix_move, METH_VARARGS | METH_KEYWORDS },
	 { "FXMatrix_lower", (PyCFunction) _wrap_FXMatrix_lower, METH_VARARGS | METH_KEYWORDS },
	 { "FXMatrix_layout", (PyCFunction) _wrap_FXMatrix_layout, METH_VARARGS | METH_KEYWORDS },
	 { "FXMatrix_recalc", (PyCFunction) _wrap_FXMatrix_recalc, METH_VARARGS | METH_KEYWORDS },
	 { "FXMatrix_setDefault", (PyCFunction) _wrap_FXMatrix_setDefault, METH_VARARGS | METH_KEYWORDS },
	 { "FXMatrix_killFocus", (PyCFunction) _wrap_FXMatrix_killFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXMatrix_setFocus", (PyCFunction) _wrap_FXMatrix_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXMatrix_canFocus", (PyCFunction) _wrap_FXMatrix_canFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXMatrix_disable", (PyCFunction) _wrap_FXMatrix_disable, METH_VARARGS | METH_KEYWORDS },
	 { "FXMatrix_enable", (PyCFunction) _wrap_FXMatrix_enable, METH_VARARGS | METH_KEYWORDS },
	 { "FXMatrix_hide", (PyCFunction) _wrap_FXMatrix_hide, METH_VARARGS | METH_KEYWORDS },
	 { "FXMatrix_show", (PyCFunction) _wrap_FXMatrix_show, METH_VARARGS | METH_KEYWORDS },
	 { "FXMatrix_getDefaultHeight", (PyCFunction) _wrap_FXMatrix_getDefaultHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXMatrix_getDefaultWidth", (PyCFunction) _wrap_FXMatrix_getDefaultWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXMatrix_resize", (PyCFunction) _wrap_FXMatrix_resize, METH_VARARGS | METH_KEYWORDS },
	 { "FXMatrix_detach", (PyCFunction) _wrap_FXMatrix_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXMatrix_destroy", (PyCFunction) _wrap_FXMatrix_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXMatrix_create", (PyCFunction) _wrap_FXMatrix_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXMatrix_onDefault", (PyCFunction) _wrap_FXMatrix_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXMatrix", (PyCFunction) _wrap_new_FXMatrix, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Matrix_getNumColumns", (PyCFunction) _wrap_FX_Matrix_getNumColumns, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Matrix_setNumColumns", (PyCFunction) _wrap_FX_Matrix_setNumColumns, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Matrix_getNumRows", (PyCFunction) _wrap_FX_Matrix_getNumRows, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Matrix_setNumRows", (PyCFunction) _wrap_FX_Matrix_setNumRows, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Matrix_getMatrixStyle", (PyCFunction) _wrap_FX_Matrix_getMatrixStyle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Matrix_setMatrixStyle", (PyCFunction) _wrap_FX_Matrix_setMatrixStyle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Matrix_colOfChild", (PyCFunction) _wrap_FX_Matrix_colOfChild, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Matrix_rowOfChild", (PyCFunction) _wrap_FX_Matrix_rowOfChild, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Matrix_childAtRowCol", (PyCFunction) _wrap_FX_Matrix_childAtRowCol, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_Matrix", (PyCFunction) _wrap_new_FX_Matrix, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Matrix_onFocusRight", (PyCFunction) _wrap_FX_Matrix_onFocusRight, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Matrix_onFocusLeft", (PyCFunction) _wrap_FX_Matrix_onFocusLeft, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Matrix_onFocusDown", (PyCFunction) _wrap_FX_Matrix_onFocusDown, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Matrix_onFocusUp", (PyCFunction) _wrap_FX_Matrix_onFocusUp, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalFrame_setBackColor", (PyCFunction) _wrap_FXVerticalFrame_setBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalFrame_reparent", (PyCFunction) _wrap_FXVerticalFrame_reparent, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalFrame_doesSaveUnder", (PyCFunction) _wrap_FXVerticalFrame_doesSaveUnder, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalFrame_getHeightForWidth", (PyCFunction) _wrap_FXVerticalFrame_getHeightForWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalFrame_getWidthForHeight", (PyCFunction) _wrap_FXVerticalFrame_getWidthForHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalFrame_contains", (PyCFunction) _wrap_FXVerticalFrame_contains, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalFrame_isComposite", (PyCFunction) _wrap_FXVerticalFrame_isComposite, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalFrame_position", (PyCFunction) _wrap_FXVerticalFrame_position, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalFrame_move", (PyCFunction) _wrap_FXVerticalFrame_move, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalFrame_lower", (PyCFunction) _wrap_FXVerticalFrame_lower, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalFrame_layout", (PyCFunction) _wrap_FXVerticalFrame_layout, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalFrame_recalc", (PyCFunction) _wrap_FXVerticalFrame_recalc, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalFrame_setDefault", (PyCFunction) _wrap_FXVerticalFrame_setDefault, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalFrame_killFocus", (PyCFunction) _wrap_FXVerticalFrame_killFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalFrame_setFocus", (PyCFunction) _wrap_FXVerticalFrame_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalFrame_canFocus", (PyCFunction) _wrap_FXVerticalFrame_canFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalFrame_disable", (PyCFunction) _wrap_FXVerticalFrame_disable, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalFrame_enable", (PyCFunction) _wrap_FXVerticalFrame_enable, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalFrame_hide", (PyCFunction) _wrap_FXVerticalFrame_hide, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalFrame_show", (PyCFunction) _wrap_FXVerticalFrame_show, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalFrame_getDefaultHeight", (PyCFunction) _wrap_FXVerticalFrame_getDefaultHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalFrame_getDefaultWidth", (PyCFunction) _wrap_FXVerticalFrame_getDefaultWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalFrame_resize", (PyCFunction) _wrap_FXVerticalFrame_resize, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalFrame_detach", (PyCFunction) _wrap_FXVerticalFrame_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalFrame_destroy", (PyCFunction) _wrap_FXVerticalFrame_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalFrame_create", (PyCFunction) _wrap_FXVerticalFrame_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalFrame_onDefault", (PyCFunction) _wrap_FXVerticalFrame_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXVerticalFrame", (PyCFunction) _wrap_new_FXVerticalFrame, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_VerticalFrame", (PyCFunction) _wrap_new_FX_VerticalFrame, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalFrame_setBackColor", (PyCFunction) _wrap_FXHorizontalFrame_setBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalFrame_reparent", (PyCFunction) _wrap_FXHorizontalFrame_reparent, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalFrame_doesSaveUnder", (PyCFunction) _wrap_FXHorizontalFrame_doesSaveUnder, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalFrame_getHeightForWidth", (PyCFunction) _wrap_FXHorizontalFrame_getHeightForWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalFrame_getWidthForHeight", (PyCFunction) _wrap_FXHorizontalFrame_getWidthForHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalFrame_contains", (PyCFunction) _wrap_FXHorizontalFrame_contains, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalFrame_isComposite", (PyCFunction) _wrap_FXHorizontalFrame_isComposite, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalFrame_position", (PyCFunction) _wrap_FXHorizontalFrame_position, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalFrame_move", (PyCFunction) _wrap_FXHorizontalFrame_move, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalFrame_lower", (PyCFunction) _wrap_FXHorizontalFrame_lower, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalFrame_layout", (PyCFunction) _wrap_FXHorizontalFrame_layout, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalFrame_recalc", (PyCFunction) _wrap_FXHorizontalFrame_recalc, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalFrame_setDefault", (PyCFunction) _wrap_FXHorizontalFrame_setDefault, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalFrame_killFocus", (PyCFunction) _wrap_FXHorizontalFrame_killFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalFrame_setFocus", (PyCFunction) _wrap_FXHorizontalFrame_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalFrame_canFocus", (PyCFunction) _wrap_FXHorizontalFrame_canFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalFrame_disable", (PyCFunction) _wrap_FXHorizontalFrame_disable, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalFrame_enable", (PyCFunction) _wrap_FXHorizontalFrame_enable, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalFrame_hide", (PyCFunction) _wrap_FXHorizontalFrame_hide, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalFrame_show", (PyCFunction) _wrap_FXHorizontalFrame_show, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalFrame_getDefaultHeight", (PyCFunction) _wrap_FXHorizontalFrame_getDefaultHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalFrame_getDefaultWidth", (PyCFunction) _wrap_FXHorizontalFrame_getDefaultWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalFrame_resize", (PyCFunction) _wrap_FXHorizontalFrame_resize, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalFrame_detach", (PyCFunction) _wrap_FXHorizontalFrame_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalFrame_destroy", (PyCFunction) _wrap_FXHorizontalFrame_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalFrame_create", (PyCFunction) _wrap_FXHorizontalFrame_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalFrame_onDefault", (PyCFunction) _wrap_FXHorizontalFrame_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXHorizontalFrame", (PyCFunction) _wrap_new_FXHorizontalFrame, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_HorizontalFrame", (PyCFunction) _wrap_new_FX_HorizontalFrame, METH_VARARGS | METH_KEYWORDS },
	 { "FXPacker_setBackColor", (PyCFunction) _wrap_FXPacker_setBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FXPacker_reparent", (PyCFunction) _wrap_FXPacker_reparent, METH_VARARGS | METH_KEYWORDS },
	 { "FXPacker_doesSaveUnder", (PyCFunction) _wrap_FXPacker_doesSaveUnder, METH_VARARGS | METH_KEYWORDS },
	 { "FXPacker_getHeightForWidth", (PyCFunction) _wrap_FXPacker_getHeightForWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXPacker_getWidthForHeight", (PyCFunction) _wrap_FXPacker_getWidthForHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXPacker_contains", (PyCFunction) _wrap_FXPacker_contains, METH_VARARGS | METH_KEYWORDS },
	 { "FXPacker_isComposite", (PyCFunction) _wrap_FXPacker_isComposite, METH_VARARGS | METH_KEYWORDS },
	 { "FXPacker_position", (PyCFunction) _wrap_FXPacker_position, METH_VARARGS | METH_KEYWORDS },
	 { "FXPacker_move", (PyCFunction) _wrap_FXPacker_move, METH_VARARGS | METH_KEYWORDS },
	 { "FXPacker_lower", (PyCFunction) _wrap_FXPacker_lower, METH_VARARGS | METH_KEYWORDS },
	 { "FXPacker_layout", (PyCFunction) _wrap_FXPacker_layout, METH_VARARGS | METH_KEYWORDS },
	 { "FXPacker_recalc", (PyCFunction) _wrap_FXPacker_recalc, METH_VARARGS | METH_KEYWORDS },
	 { "FXPacker_setDefault", (PyCFunction) _wrap_FXPacker_setDefault, METH_VARARGS | METH_KEYWORDS },
	 { "FXPacker_killFocus", (PyCFunction) _wrap_FXPacker_killFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXPacker_setFocus", (PyCFunction) _wrap_FXPacker_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXPacker_canFocus", (PyCFunction) _wrap_FXPacker_canFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXPacker_disable", (PyCFunction) _wrap_FXPacker_disable, METH_VARARGS | METH_KEYWORDS },
	 { "FXPacker_enable", (PyCFunction) _wrap_FXPacker_enable, METH_VARARGS | METH_KEYWORDS },
	 { "FXPacker_hide", (PyCFunction) _wrap_FXPacker_hide, METH_VARARGS | METH_KEYWORDS },
	 { "FXPacker_show", (PyCFunction) _wrap_FXPacker_show, METH_VARARGS | METH_KEYWORDS },
	 { "FXPacker_getDefaultHeight", (PyCFunction) _wrap_FXPacker_getDefaultHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXPacker_getDefaultWidth", (PyCFunction) _wrap_FXPacker_getDefaultWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXPacker_resize", (PyCFunction) _wrap_FXPacker_resize, METH_VARARGS | METH_KEYWORDS },
	 { "FXPacker_detach", (PyCFunction) _wrap_FXPacker_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXPacker_destroy", (PyCFunction) _wrap_FXPacker_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXPacker_create", (PyCFunction) _wrap_FXPacker_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXPacker_onDefault", (PyCFunction) _wrap_FXPacker_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXPacker", (PyCFunction) _wrap_new_FXPacker, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Packer_getBorderWidth", (PyCFunction) _wrap_FX_Packer_getBorderWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Packer_setVSpacing", (PyCFunction) _wrap_FX_Packer_setVSpacing, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Packer_setHSpacing", (PyCFunction) _wrap_FX_Packer_setHSpacing, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Packer_getVSpacing", (PyCFunction) _wrap_FX_Packer_getVSpacing, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Packer_getHSpacing", (PyCFunction) _wrap_FX_Packer_getHSpacing, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Packer_setPadRight", (PyCFunction) _wrap_FX_Packer_setPadRight, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Packer_setPadLeft", (PyCFunction) _wrap_FX_Packer_setPadLeft, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Packer_setPadBottom", (PyCFunction) _wrap_FX_Packer_setPadBottom, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Packer_setPadTop", (PyCFunction) _wrap_FX_Packer_setPadTop, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Packer_getPadRight", (PyCFunction) _wrap_FX_Packer_getPadRight, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Packer_getPadLeft", (PyCFunction) _wrap_FX_Packer_getPadLeft, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Packer_getPadBottom", (PyCFunction) _wrap_FX_Packer_getPadBottom, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Packer_getPadTop", (PyCFunction) _wrap_FX_Packer_getPadTop, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Packer_setBaseColor", (PyCFunction) _wrap_FX_Packer_setBaseColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Packer_setBorderColor", (PyCFunction) _wrap_FX_Packer_setBorderColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Packer_setShadowColor", (PyCFunction) _wrap_FX_Packer_setShadowColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Packer_setHiliteColor", (PyCFunction) _wrap_FX_Packer_setHiliteColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Packer_getBaseColor", (PyCFunction) _wrap_FX_Packer_getBaseColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Packer_getBorderColor", (PyCFunction) _wrap_FX_Packer_getBorderColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Packer_getShadowColor", (PyCFunction) _wrap_FX_Packer_getShadowColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Packer_getHiliteColor", (PyCFunction) _wrap_FX_Packer_getHiliteColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Packer_getPackingHints", (PyCFunction) _wrap_FX_Packer_getPackingHints, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Packer_setPackingHints", (PyCFunction) _wrap_FX_Packer_setPackingHints, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Packer_getFrameStyle", (PyCFunction) _wrap_FX_Packer_getFrameStyle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Packer_setFrameStyle", (PyCFunction) _wrap_FX_Packer_setFrameStyle, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_Packer", (PyCFunction) _wrap_new_FX_Packer, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Packer_onFocusRight", (PyCFunction) _wrap_FX_Packer_onFocusRight, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Packer_onFocusLeft", (PyCFunction) _wrap_FX_Packer_onFocusLeft, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Packer_onFocusDown", (PyCFunction) _wrap_FX_Packer_onFocusDown, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Packer_onFocusUp", (PyCFunction) _wrap_FX_Packer_onFocusUp, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Packer_onPaint", (PyCFunction) _wrap_FX_Packer_onPaint, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalSeparator_setBackColor", (PyCFunction) _wrap_FXVerticalSeparator_setBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalSeparator_reparent", (PyCFunction) _wrap_FXVerticalSeparator_reparent, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalSeparator_doesSaveUnder", (PyCFunction) _wrap_FXVerticalSeparator_doesSaveUnder, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalSeparator_getHeightForWidth", (PyCFunction) _wrap_FXVerticalSeparator_getHeightForWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalSeparator_getWidthForHeight", (PyCFunction) _wrap_FXVerticalSeparator_getWidthForHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalSeparator_contains", (PyCFunction) _wrap_FXVerticalSeparator_contains, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalSeparator_isComposite", (PyCFunction) _wrap_FXVerticalSeparator_isComposite, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalSeparator_position", (PyCFunction) _wrap_FXVerticalSeparator_position, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalSeparator_move", (PyCFunction) _wrap_FXVerticalSeparator_move, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalSeparator_lower", (PyCFunction) _wrap_FXVerticalSeparator_lower, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalSeparator_layout", (PyCFunction) _wrap_FXVerticalSeparator_layout, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalSeparator_recalc", (PyCFunction) _wrap_FXVerticalSeparator_recalc, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalSeparator_setDefault", (PyCFunction) _wrap_FXVerticalSeparator_setDefault, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalSeparator_killFocus", (PyCFunction) _wrap_FXVerticalSeparator_killFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalSeparator_setFocus", (PyCFunction) _wrap_FXVerticalSeparator_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalSeparator_canFocus", (PyCFunction) _wrap_FXVerticalSeparator_canFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalSeparator_disable", (PyCFunction) _wrap_FXVerticalSeparator_disable, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalSeparator_enable", (PyCFunction) _wrap_FXVerticalSeparator_enable, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalSeparator_hide", (PyCFunction) _wrap_FXVerticalSeparator_hide, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalSeparator_show", (PyCFunction) _wrap_FXVerticalSeparator_show, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalSeparator_getDefaultHeight", (PyCFunction) _wrap_FXVerticalSeparator_getDefaultHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalSeparator_getDefaultWidth", (PyCFunction) _wrap_FXVerticalSeparator_getDefaultWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalSeparator_resize", (PyCFunction) _wrap_FXVerticalSeparator_resize, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalSeparator_detach", (PyCFunction) _wrap_FXVerticalSeparator_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalSeparator_destroy", (PyCFunction) _wrap_FXVerticalSeparator_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalSeparator_create", (PyCFunction) _wrap_FXVerticalSeparator_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXVerticalSeparator_onDefault", (PyCFunction) _wrap_FXVerticalSeparator_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXVerticalSeparator", (PyCFunction) _wrap_new_FXVerticalSeparator, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_VerticalSeparator", (PyCFunction) _wrap_new_FX_VerticalSeparator, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalSeparator_setBackColor", (PyCFunction) _wrap_FXHorizontalSeparator_setBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalSeparator_reparent", (PyCFunction) _wrap_FXHorizontalSeparator_reparent, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalSeparator_doesSaveUnder", (PyCFunction) _wrap_FXHorizontalSeparator_doesSaveUnder, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalSeparator_getHeightForWidth", (PyCFunction) _wrap_FXHorizontalSeparator_getHeightForWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalSeparator_getWidthForHeight", (PyCFunction) _wrap_FXHorizontalSeparator_getWidthForHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalSeparator_contains", (PyCFunction) _wrap_FXHorizontalSeparator_contains, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalSeparator_isComposite", (PyCFunction) _wrap_FXHorizontalSeparator_isComposite, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalSeparator_position", (PyCFunction) _wrap_FXHorizontalSeparator_position, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalSeparator_move", (PyCFunction) _wrap_FXHorizontalSeparator_move, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalSeparator_lower", (PyCFunction) _wrap_FXHorizontalSeparator_lower, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalSeparator_layout", (PyCFunction) _wrap_FXHorizontalSeparator_layout, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalSeparator_recalc", (PyCFunction) _wrap_FXHorizontalSeparator_recalc, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalSeparator_setDefault", (PyCFunction) _wrap_FXHorizontalSeparator_setDefault, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalSeparator_killFocus", (PyCFunction) _wrap_FXHorizontalSeparator_killFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalSeparator_setFocus", (PyCFunction) _wrap_FXHorizontalSeparator_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalSeparator_canFocus", (PyCFunction) _wrap_FXHorizontalSeparator_canFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalSeparator_disable", (PyCFunction) _wrap_FXHorizontalSeparator_disable, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalSeparator_enable", (PyCFunction) _wrap_FXHorizontalSeparator_enable, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalSeparator_hide", (PyCFunction) _wrap_FXHorizontalSeparator_hide, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalSeparator_show", (PyCFunction) _wrap_FXHorizontalSeparator_show, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalSeparator_getDefaultHeight", (PyCFunction) _wrap_FXHorizontalSeparator_getDefaultHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalSeparator_getDefaultWidth", (PyCFunction) _wrap_FXHorizontalSeparator_getDefaultWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalSeparator_resize", (PyCFunction) _wrap_FXHorizontalSeparator_resize, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalSeparator_detach", (PyCFunction) _wrap_FXHorizontalSeparator_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalSeparator_destroy", (PyCFunction) _wrap_FXHorizontalSeparator_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalSeparator_create", (PyCFunction) _wrap_FXHorizontalSeparator_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXHorizontalSeparator_onDefault", (PyCFunction) _wrap_FXHorizontalSeparator_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXHorizontalSeparator", (PyCFunction) _wrap_new_FXHorizontalSeparator, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_HorizontalSeparator", (PyCFunction) _wrap_new_FX_HorizontalSeparator, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXDCPrint", (PyCFunction) _wrap_new_FXDCPrint, METH_VARARGS | METH_KEYWORDS },
	 { "delete_FX_DCPrint", (PyCFunction) _wrap_delete_FX_DCPrint, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DCPrint_endPage", (PyCFunction) _wrap_FX_DCPrint_endPage, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DCPrint_beginPage", (PyCFunction) _wrap_FX_DCPrint_beginPage, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DCPrint_endPrint", (PyCFunction) _wrap_FX_DCPrint_endPrint, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DCPrint_beginPrint", (PyCFunction) _wrap_FX_DCPrint_beginPrint, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_DCPrint", (PyCFunction) _wrap_new_FX_DCPrint, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXDCWindow", (PyCFunction) _wrap_new_FXDCWindow, METH_VARARGS | METH_KEYWORDS },
	 { "delete_FX_DCWindow", (PyCFunction) _wrap_delete_FX_DCWindow, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DCWindow_end", (PyCFunction) _wrap_FX_DCWindow_end, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DCWindow_begin", (PyCFunction) _wrap_FX_DCWindow_begin, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_DCWindow", (PyCFunction) _wrap_new_FX_DCWindow, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXDC", (PyCFunction) _wrap_new_FXDC, METH_VARARGS | METH_KEYWORDS },
	 { "delete_FX_DC", (PyCFunction) _wrap_delete_FX_DC, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_clipChildren", (PyCFunction) _wrap_FX_DC_clipChildren, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_getTextFont", (PyCFunction) _wrap_FX_DC_getTextFont, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_setTextFont", (PyCFunction) _wrap_FX_DC_setTextFont, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_clearClipMask", (PyCFunction) _wrap_FX_DC_clearClipMask, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_setClipMask", (PyCFunction) _wrap_FX_DC_setClipMask, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_clearClipRectangle", (PyCFunction) _wrap_FX_DC_clearClipRectangle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_getClipHeight", (PyCFunction) _wrap_FX_DC_getClipHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_getClipWidth", (PyCFunction) _wrap_FX_DC_getClipWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_getClipY", (PyCFunction) _wrap_FX_DC_getClipY, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_getClipX", (PyCFunction) _wrap_FX_DC_getClipX, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_setClipRectangle", (PyCFunction) _wrap_FX_DC_setClipRectangle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_getClipRectangle", (PyCFunction) _wrap_FX_DC_getClipRectangle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_setClipRectangle2", (PyCFunction) _wrap_FX_DC_setClipRectangle2, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_setClipRegion", (PyCFunction) _wrap_FX_DC_setClipRegion, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_getStipplePattern", (PyCFunction) _wrap_FX_DC_getStipplePattern, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_setStipple2", (PyCFunction) _wrap_FX_DC_setStipple2, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_getStippleBitmap", (PyCFunction) _wrap_FX_DC_getStippleBitmap, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_setStipple", (PyCFunction) _wrap_FX_DC_setStipple, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_getTile", (PyCFunction) _wrap_FX_DC_getTile, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_setTile", (PyCFunction) _wrap_FX_DC_setTile, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_getFunction", (PyCFunction) _wrap_FX_DC_getFunction, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_setFunction", (PyCFunction) _wrap_FX_DC_setFunction, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_getFillRule", (PyCFunction) _wrap_FX_DC_getFillRule, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_setFillRule", (PyCFunction) _wrap_FX_DC_setFillRule, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_getFillStyle", (PyCFunction) _wrap_FX_DC_getFillStyle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_setFillStyle", (PyCFunction) _wrap_FX_DC_setFillStyle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_getLineStyle", (PyCFunction) _wrap_FX_DC_getLineStyle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_setLineStyle", (PyCFunction) _wrap_FX_DC_setLineStyle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_getLineJoin", (PyCFunction) _wrap_FX_DC_getLineJoin, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_setLineJoin", (PyCFunction) _wrap_FX_DC_setLineJoin, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_getLineCap", (PyCFunction) _wrap_FX_DC_getLineCap, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_setLineCap", (PyCFunction) _wrap_FX_DC_setLineCap, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_getLineWidth", (PyCFunction) _wrap_FX_DC_getLineWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_setLineWidth", (PyCFunction) _wrap_FX_DC_setLineWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_getDashLength", (PyCFunction) _wrap_FX_DC_getDashLength, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_getDashOffset", (PyCFunction) _wrap_FX_DC_getDashOffset, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_getDashPattern", (PyCFunction) _wrap_FX_DC_getDashPattern, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_setDashes", (PyCFunction) _wrap_FX_DC_setDashes, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_setBackground", (PyCFunction) _wrap_FX_DC_setBackground, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_setForeground", (PyCFunction) _wrap_FX_DC_setForeground, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_drawImageText", (PyCFunction) _wrap_FX_DC_drawImageText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_drawText", (PyCFunction) _wrap_FX_DC_drawText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_drawIconSunken", (PyCFunction) _wrap_FX_DC_drawIconSunken, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_drawIconShaded", (PyCFunction) _wrap_FX_DC_drawIconShaded, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_drawIcon", (PyCFunction) _wrap_FX_DC_drawIcon, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_drawBitmap", (PyCFunction) _wrap_FX_DC_drawBitmap, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_drawImage", (PyCFunction) _wrap_FX_DC_drawImage, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_drawArea", (PyCFunction) _wrap_FX_DC_drawArea, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_drawFocusRectangle", (PyCFunction) _wrap_FX_DC_drawFocusRectangle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_drawHashBox", (PyCFunction) _wrap_FX_DC_drawHashBox, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_fillComplexPolygonRel", (PyCFunction) _wrap_FX_DC_fillComplexPolygonRel, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_fillConcavePolygonRel", (PyCFunction) _wrap_FX_DC_fillConcavePolygonRel, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_fillPolygonRel", (PyCFunction) _wrap_FX_DC_fillPolygonRel, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_fillComplexPolygon", (PyCFunction) _wrap_FX_DC_fillComplexPolygon, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_fillConcavePolygon", (PyCFunction) _wrap_FX_DC_fillConcavePolygon, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_fillPolygon", (PyCFunction) _wrap_FX_DC_fillPolygon, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_fillArcs", (PyCFunction) _wrap_FX_DC_fillArcs, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_fillArc", (PyCFunction) _wrap_FX_DC_fillArc, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_fillRectangles", (PyCFunction) _wrap_FX_DC_fillRectangles, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_fillRectangle", (PyCFunction) _wrap_FX_DC_fillRectangle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_drawArcs", (PyCFunction) _wrap_FX_DC_drawArcs, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_drawArc", (PyCFunction) _wrap_FX_DC_drawArc, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_drawRectangles", (PyCFunction) _wrap_FX_DC_drawRectangles, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_drawRectangle", (PyCFunction) _wrap_FX_DC_drawRectangle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_drawLineSegments", (PyCFunction) _wrap_FX_DC_drawLineSegments, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_drawLinesRel", (PyCFunction) _wrap_FX_DC_drawLinesRel, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_drawLines", (PyCFunction) _wrap_FX_DC_drawLines, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_drawLine", (PyCFunction) _wrap_FX_DC_drawLine, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_drawPointsRel", (PyCFunction) _wrap_FX_DC_drawPointsRel, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_drawPoints", (PyCFunction) _wrap_FX_DC_drawPoints, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_drawPoint", (PyCFunction) _wrap_FX_DC_drawPoint, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_readPixel", (PyCFunction) _wrap_FX_DC_readPixel, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DC_getApp", (PyCFunction) _wrap_FX_DC_getApp, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_DC", (PyCFunction) _wrap_new_FX_DC, METH_VARARGS | METH_KEYWORDS },
	 { "FXArc_b_get", (PyCFunction) _wrap_FXArc_b_get, METH_VARARGS | METH_KEYWORDS },
	 { "FXArc_b_set", (PyCFunction) _wrap_FXArc_b_set, METH_VARARGS | METH_KEYWORDS },
	 { "FXArc_a_get", (PyCFunction) _wrap_FXArc_a_get, METH_VARARGS | METH_KEYWORDS },
	 { "FXArc_a_set", (PyCFunction) _wrap_FXArc_a_set, METH_VARARGS | METH_KEYWORDS },
	 { "FXArc_h_get", (PyCFunction) _wrap_FXArc_h_get, METH_VARARGS | METH_KEYWORDS },
	 { "FXArc_h_set", (PyCFunction) _wrap_FXArc_h_set, METH_VARARGS | METH_KEYWORDS },
	 { "FXArc_w_get", (PyCFunction) _wrap_FXArc_w_get, METH_VARARGS | METH_KEYWORDS },
	 { "FXArc_w_set", (PyCFunction) _wrap_FXArc_w_set, METH_VARARGS | METH_KEYWORDS },
	 { "FXArc_y_get", (PyCFunction) _wrap_FXArc_y_get, METH_VARARGS | METH_KEYWORDS },
	 { "FXArc_y_set", (PyCFunction) _wrap_FXArc_y_set, METH_VARARGS | METH_KEYWORDS },
	 { "FXArc_x_get", (PyCFunction) _wrap_FXArc_x_get, METH_VARARGS | METH_KEYWORDS },
	 { "FXArc_x_set", (PyCFunction) _wrap_FXArc_x_set, METH_VARARGS | METH_KEYWORDS },
	 { "FXSegment_y2_get", (PyCFunction) _wrap_FXSegment_y2_get, METH_VARARGS | METH_KEYWORDS },
	 { "FXSegment_y2_set", (PyCFunction) _wrap_FXSegment_y2_set, METH_VARARGS | METH_KEYWORDS },
	 { "FXSegment_x2_get", (PyCFunction) _wrap_FXSegment_x2_get, METH_VARARGS | METH_KEYWORDS },
	 { "FXSegment_x2_set", (PyCFunction) _wrap_FXSegment_x2_set, METH_VARARGS | METH_KEYWORDS },
	 { "FXSegment_y1_get", (PyCFunction) _wrap_FXSegment_y1_get, METH_VARARGS | METH_KEYWORDS },
	 { "FXSegment_y1_set", (PyCFunction) _wrap_FXSegment_y1_set, METH_VARARGS | METH_KEYWORDS },
	 { "FXSegment_x1_get", (PyCFunction) _wrap_FXSegment_x1_get, METH_VARARGS | METH_KEYWORDS },
	 { "FXSegment_x1_set", (PyCFunction) _wrap_FXSegment_x1_set, METH_VARARGS | METH_KEYWORDS },
	 { "Create4Splitter2", (PyCFunction) _wrap_Create4Splitter2, METH_VARARGS | METH_KEYWORDS },
	 { "Create4Splitter1", (PyCFunction) _wrap_Create4Splitter1, METH_VARARGS | METH_KEYWORDS },
	 { "CreateSplitter2", (PyCFunction) _wrap_CreateSplitter2, METH_VARARGS | METH_KEYWORDS },
	 { "CreateSplitter1", (PyCFunction) _wrap_CreateSplitter1, METH_VARARGS | METH_KEYWORDS },
	 { "CreateClippedDCWindow", (PyCFunction) _wrap_CreateClippedDCWindow, METH_VARARGS | METH_KEYWORDS },
	 { "CreateDCWindow", (PyCFunction) _wrap_CreateDCWindow, METH_VARARGS | METH_KEYWORDS },
	 { NULL, NULL }
};
#ifdef __cplusplus
}
#endif
/*
 * This table is used by the pointer type-checker
 */
static struct { char *n1; char *n2; void *(*pcnv)(void *); } _swig_mapping[] = {
    { "_class_FXPyBMPImage","_FXPyBMPImage",0},
    { "_class_FXPyICOImage","_FXPyICOImage",0},
    { "_FXPyDelegator","_class_FXPyDelegator",0},
    { "_FX4Splitter","_class_FXPy4Splitter",SwigFXPy4SplitterToFX4Splitter},
    { "_FX4Splitter","_FXPy4Splitter",SwigFXPy4SplitterToFX4Splitter},
    { "_FX4Splitter","_class_FX4Splitter",0},
    { "_signed_long","_FXTime",0},
    { "_signed_long","_long",0},
    { "_class_FXPyPCXImage","_FXPyPCXImage",0},
    { "_class_FXTIFIcon","_FXTIFIcon",0},
    { "_FXPyHorizontalFrame","_class_FXPyHorizontalFrame",0},
    { "_double","_FXdouble",0},
    { "_FXPyObject","_class_FXPyObject",0},
    { "_FXPyGIFIcon","_class_FXPyGIFIcon",0},
    { "_FXBMPIcon","_class_FXBMPIcon",0},
    { "_FXICOIcon","_class_FXICOIcon",0},
    { "_class_FXSettings","_FXSettings",0},
    { "_class_FXRegistry","_FXRegistry",0},
    { "_class_FXMainWindow","_FXMainWindow",0},
    { "_FXTopWindow","_class_FXTopWindow",0},
    { "_FXPySwitcher","_class_FXPySwitcher",0},
    { "_FXShutterItem","_class_FXPyShutterItem",SwigFXPyShutterItemToFXShutterItem},
    { "_FXShutterItem","_FXPyShutterItem",SwigFXPyShutterItemToFXShutterItem},
    { "_FXShutterItem","_class_FXShutterItem",0},
    { "_class_FXVisual","_FXVisual",0},
    { "_FXIcon","_class_FXIcon",0},
    { "_FXPyMatrix","_class_FXPyMatrix",0},
    { "_class_FXDCPrint","_class_FXPyDCPrint",SwigFXPyDCPrintToFXDCPrint},
    { "_class_FXDCPrint","_FXPyDCPrint",SwigFXPyDCPrintToFXDCPrint},
    { "_class_FXDCPrint","_FXDCPrint",0},
    { "_class_FXGroupBox","_class_FXPyGroupBox",SwigFXPyGroupBoxToFXGroupBox},
    { "_class_FXGroupBox","_FXPyGroupBox",SwigFXPyGroupBoxToFXGroupBox},
    { "_class_FXGroupBox","_FXGroupBox",0},
    { "_FXTGAImage","_class_FXTGAImage",0},
    { "_class_FXPyTGAIcon","_FXPyTGAIcon",0},
    { "_FXPyStream","_class_FXPyStream",0},
    { "_class_FXPyDict","_FXPyDict",0},
    { "_class_FXRegion","_FXRegion",0},
    { "_FXShutter","_class_FXPyShutter",SwigFXPyShutterToFXShutter},
    { "_FXShutter","_FXPyShutter",SwigFXPyShutterToFXShutter},
    { "_FXShutter","_class_FXShutter",0},
    { "_FXPyPNGImage","_class_FXPyPNGImage",0},
    { "_class_FXAccelTable","_FXAccelTable",0},
    { "_FXPyApp","_class_FXPyApp",0},
    { "_FXDCWindow","_class_FXPyDCWindow",SwigFXPyDCWindowToFXDCWindow},
    { "_FXDCWindow","_FXPyDCWindow",SwigFXPyDCWindowToFXDCWindow},
    { "_FXDCWindow","_class_FXDCWindow",0},
    { "_FXPyScrollArea","_class_FXPyScrollArea",0},
    { "_class_FXPyId","_FXPyId",0},
    { "_class_FXCanvas","_FXCanvas",0},
    { "_FXApp","_class_FXApp",0},
    { "_class_FXPyRecentFiles","_FXPyRecentFiles",0},
    { "_class_FXPyDebugTarget","_FXPyDebugTarget",0},
    { "_class_FXCommand","_FXCommand",0},
    { "_class_FXPyFrame","_FXPyFrame",0},
    { "_long","_FXPixel",0},
    { "_long","_FXTime",0},
    { "_long","_unsigned_long",0},
    { "_long","_signed_long",0},
    { "_FXComposite","_class_FXPyShutter",SwigFXPyShutterToFXComposite},
    { "_FXComposite","_FXPyShutter",SwigFXPyShutterToFXComposite},
    { "_FXComposite","_class_FXShutter",SwigFXShutterToFXComposite},
    { "_FXComposite","_FXShutter",SwigFXShutterToFXComposite},
    { "_FXComposite","_class_FXPyShutterItem",SwigFXPyShutterItemToFXComposite},
    { "_FXComposite","_FXPyShutterItem",SwigFXPyShutterItemToFXComposite},
    { "_FXComposite","_class_FXShutterItem",SwigFXShutterItemToFXComposite},
    { "_FXComposite","_FXShutterItem",SwigFXShutterItemToFXComposite},
    { "_FXComposite","_class_FXPy4Splitter",SwigFXPy4SplitterToFXComposite},
    { "_FXComposite","_FXPy4Splitter",SwigFXPy4SplitterToFXComposite},
    { "_FXComposite","_class_FX4Splitter",SwigFX4SplitterToFXComposite},
    { "_FXComposite","_FX4Splitter",SwigFX4SplitterToFXComposite},
    { "_FXComposite","_class_FXPySplitter",SwigFXPySplitterToFXComposite},
    { "_FXComposite","_FXPySplitter",SwigFXPySplitterToFXComposite},
    { "_FXComposite","_class_FXSplitter",SwigFXSplitterToFXComposite},
    { "_FXComposite","_FXSplitter",SwigFXSplitterToFXComposite},
    { "_FXComposite","_class_FXPyScrollWindow",SwigFXPyScrollWindowToFXComposite},
    { "_FXComposite","_FXPyScrollWindow",SwigFXPyScrollWindowToFXComposite},
    { "_FXComposite","_class_FXScrollWindow",SwigFXScrollWindowToFXComposite},
    { "_FXComposite","_FXScrollWindow",SwigFXScrollWindowToFXComposite},
    { "_FXComposite","_class_FXPyScrollArea",SwigFXPyScrollAreaToFXComposite},
    { "_FXComposite","_FXPyScrollArea",SwigFXPyScrollAreaToFXComposite},
    { "_FXComposite","_class_FXScrollArea",SwigFXScrollAreaToFXComposite},
    { "_FXComposite","_FXScrollArea",SwigFXScrollAreaToFXComposite},
    { "_FXComposite","_class_FXPySwitcher",SwigFXPySwitcherToFXComposite},
    { "_FXComposite","_FXPySwitcher",SwigFXPySwitcherToFXComposite},
    { "_FXComposite","_class_FXSwitcher",SwigFXSwitcherToFXComposite},
    { "_FXComposite","_FXSwitcher",SwigFXSwitcherToFXComposite},
    { "_FXComposite","_class_FXPyGroupBox",SwigFXPyGroupBoxToFXComposite},
    { "_FXComposite","_FXPyGroupBox",SwigFXPyGroupBoxToFXComposite},
    { "_FXComposite","_class_FXGroupBox",SwigFXGroupBoxToFXComposite},
    { "_FXComposite","_FXGroupBox",SwigFXGroupBoxToFXComposite},
    { "_FXComposite","_class_FXPyMatrix",SwigFXPyMatrixToFXComposite},
    { "_FXComposite","_FXPyMatrix",SwigFXPyMatrixToFXComposite},
    { "_FXComposite","_class_FXMatrix",SwigFXMatrixToFXComposite},
    { "_FXComposite","_FXMatrix",SwigFXMatrixToFXComposite},
    { "_FXComposite","_class_FXPyVerticalFrame",SwigFXPyVerticalFrameToFXComposite},
    { "_FXComposite","_FXPyVerticalFrame",SwigFXPyVerticalFrameToFXComposite},
    { "_FXComposite","_class_FXVerticalFrame",SwigFXVerticalFrameToFXComposite},
    { "_FXComposite","_FXVerticalFrame",SwigFXVerticalFrameToFXComposite},
    { "_FXComposite","_class_FXPyHorizontalFrame",SwigFXPyHorizontalFrameToFXComposite},
    { "_FXComposite","_FXPyHorizontalFrame",SwigFXPyHorizontalFrameToFXComposite},
    { "_FXComposite","_class_FXHorizontalFrame",SwigFXHorizontalFrameToFXComposite},
    { "_FXComposite","_FXHorizontalFrame",SwigFXHorizontalFrameToFXComposite},
    { "_FXComposite","_class_FXPyPacker",SwigFXPyPackerToFXComposite},
    { "_FXComposite","_FXPyPacker",SwigFXPyPackerToFXComposite},
    { "_FXComposite","_class_FXPacker",SwigFXPackerToFXComposite},
    { "_FXComposite","_FXPacker",SwigFXPackerToFXComposite},
    { "_FXComposite","_class_FXComposite",0},
    { "_struct_FXArc","_FXArc",0},
    { "_FXRGBIcon","_class_FXRGBIcon",0},
    { "_FXScrollArea","_class_FXPyScrollWindow",SwigFXPyScrollWindowToFXScrollArea},
    { "_FXScrollArea","_FXPyScrollWindow",SwigFXPyScrollWindowToFXScrollArea},
    { "_FXScrollArea","_class_FXScrollWindow",SwigFXScrollWindowToFXScrollArea},
    { "_FXScrollArea","_FXScrollWindow",SwigFXScrollWindowToFXScrollArea},
    { "_FXScrollArea","_class_FXPyScrollArea",SwigFXPyScrollAreaToFXScrollArea},
    { "_FXScrollArea","_FXPyScrollArea",SwigFXPyScrollAreaToFXScrollArea},
    { "_FXScrollArea","_class_FXScrollArea",0},
    { "_FXPrinter","_struct_FXPrinter",0},
    { "_class_FXId","_class_FXPyShutter",SwigFXPyShutterToFXId},
    { "_class_FXId","_FXPyShutter",SwigFXPyShutterToFXId},
    { "_class_FXId","_class_FXShutter",SwigFXShutterToFXId},
    { "_class_FXId","_FXShutter",SwigFXShutterToFXId},
    { "_class_FXId","_class_FXPyShutterItem",SwigFXPyShutterItemToFXId},
    { "_class_FXId","_FXPyShutterItem",SwigFXPyShutterItemToFXId},
    { "_class_FXId","_class_FXShutterItem",SwigFXShutterItemToFXId},
    { "_class_FXId","_FXShutterItem",SwigFXShutterItemToFXId},
    { "_class_FXId","_class_FXPy4Splitter",SwigFXPy4SplitterToFXId},
    { "_class_FXId","_FXPy4Splitter",SwigFXPy4SplitterToFXId},
    { "_class_FXId","_class_FX4Splitter",SwigFX4SplitterToFXId},
    { "_class_FXId","_FX4Splitter",SwigFX4SplitterToFXId},
    { "_class_FXId","_class_FXPySplitter",SwigFXPySplitterToFXId},
    { "_class_FXId","_FXPySplitter",SwigFXPySplitterToFXId},
    { "_class_FXId","_class_FXSplitter",SwigFXSplitterToFXId},
    { "_class_FXId","_FXSplitter",SwigFXSplitterToFXId},
    { "_class_FXId","_class_FXPyScrollWindow",SwigFXPyScrollWindowToFXId},
    { "_class_FXId","_FXPyScrollWindow",SwigFXPyScrollWindowToFXId},
    { "_class_FXId","_class_FXScrollWindow",SwigFXScrollWindowToFXId},
    { "_class_FXId","_FXScrollWindow",SwigFXScrollWindowToFXId},
    { "_class_FXId","_class_FXPyScrollArea",SwigFXPyScrollAreaToFXId},
    { "_class_FXId","_FXPyScrollArea",SwigFXPyScrollAreaToFXId},
    { "_class_FXId","_class_FXScrollArea",SwigFXScrollAreaToFXId},
    { "_class_FXId","_FXScrollArea",SwigFXScrollAreaToFXId},
    { "_class_FXId","_class_FXPySwitcher",SwigFXPySwitcherToFXId},
    { "_class_FXId","_FXPySwitcher",SwigFXPySwitcherToFXId},
    { "_class_FXId","_class_FXSwitcher",SwigFXSwitcherToFXId},
    { "_class_FXId","_FXSwitcher",SwigFXSwitcherToFXId},
    { "_class_FXId","_class_FXPyGroupBox",SwigFXPyGroupBoxToFXId},
    { "_class_FXId","_FXPyGroupBox",SwigFXPyGroupBoxToFXId},
    { "_class_FXId","_class_FXGroupBox",SwigFXGroupBoxToFXId},
    { "_class_FXId","_FXGroupBox",SwigFXGroupBoxToFXId},
    { "_class_FXId","_class_FXPyMatrix",SwigFXPyMatrixToFXId},
    { "_class_FXId","_FXPyMatrix",SwigFXPyMatrixToFXId},
    { "_class_FXId","_class_FXMatrix",SwigFXMatrixToFXId},
    { "_class_FXId","_FXMatrix",SwigFXMatrixToFXId},
    { "_class_FXId","_class_FXPyVerticalFrame",SwigFXPyVerticalFrameToFXId},
    { "_class_FXId","_FXPyVerticalFrame",SwigFXPyVerticalFrameToFXId},
    { "_class_FXId","_class_FXVerticalFrame",SwigFXVerticalFrameToFXId},
    { "_class_FXId","_FXVerticalFrame",SwigFXVerticalFrameToFXId},
    { "_class_FXId","_class_FXPyHorizontalFrame",SwigFXPyHorizontalFrameToFXId},
    { "_class_FXId","_FXPyHorizontalFrame",SwigFXPyHorizontalFrameToFXId},
    { "_class_FXId","_class_FXHorizontalFrame",SwigFXHorizontalFrameToFXId},
    { "_class_FXId","_FXHorizontalFrame",SwigFXHorizontalFrameToFXId},
    { "_class_FXId","_class_FXPyPacker",SwigFXPyPackerToFXId},
    { "_class_FXId","_FXPyPacker",SwigFXPyPackerToFXId},
    { "_class_FXId","_class_FXPacker",SwigFXPackerToFXId},
    { "_class_FXId","_FXPacker",SwigFXPackerToFXId},
    { "_class_FXId","_class_FXPyVerticalSeparator",SwigFXPyVerticalSeparatorToFXId},
    { "_class_FXId","_FXPyVerticalSeparator",SwigFXPyVerticalSeparatorToFXId},
    { "_class_FXId","_class_FXVerticalSeparator",SwigFXVerticalSeparatorToFXId},
    { "_class_FXId","_FXVerticalSeparator",SwigFXVerticalSeparatorToFXId},
    { "_class_FXId","_class_FXPyHorizontalSeparator",SwigFXPyHorizontalSeparatorToFXId},
    { "_class_FXId","_FXPyHorizontalSeparator",SwigFXPyHorizontalSeparatorToFXId},
    { "_class_FXId","_class_FXHorizontalSeparator",SwigFXHorizontalSeparatorToFXId},
    { "_class_FXId","_FXHorizontalSeparator",SwigFXHorizontalSeparatorToFXId},
    { "_class_FXId","_FXId",0},
    { "_FXPyHorizontalSeparator","_class_FXPyHorizontalSeparator",0},
    { "_float","_FXfloat",0},
    { "_FXPyDrawable","_class_FXPyDrawable",0},
    { "_class_FXPyXPMIcon","_FXPyXPMIcon",0},
    { "_FXPyScrollWindow","_class_FXPyScrollWindow",0},
    { "_FXshort","_short",0},
    { "_FXshort","_signed_short",0},
    { "_FXshort","_unsigned_short",0},
    { "_FXshort","_FXushort",0},
    { "_FXFontDesc","_struct_FXFontDesc",0},
    { "_FXArc","_struct_FXArc",0},
    { "_FXSize","_class_FXSize",0},
    { "_class_FXBMPIcon","_FXBMPIcon",0},
    { "_class_FXICOIcon","_FXICOIcon",0},
    { "_FXPyShell","_class_FXPyShell",0},
    { "_class_FXPyTIFIcon","_FXPyTIFIcon",0},
    { "_FXSegment","_struct_FXSegment",0},
    { "_FXJPGImage","_class_FXJPGImage",0},
    { "_class_FXPySwitcher","_FXPySwitcher",0},
    { "_class_FXTIFImage","_FXTIFImage",0},
    { "_FXPyPCXIcon","_class_FXPyPCXIcon",0},
    { "_FXDC","_class_FXPyDCPrint",SwigFXPyDCPrintToFXDC},
    { "_FXDC","_FXPyDCPrint",SwigFXPyDCPrintToFXDC},
    { "_FXDC","_class_FXDCPrint",SwigFXDCPrintToFXDC},
    { "_FXDC","_FXDCPrint",SwigFXDCPrintToFXDC},
    { "_FXDC","_class_FXPyDCWindow",SwigFXPyDCWindowToFXDC},
    { "_FXDC","_FXPyDCWindow",SwigFXPyDCWindowToFXDC},
    { "_FXDC","_class_FXDCWindow",SwigFXDCWindowToFXDC},
    { "_FXDC","_FXDCWindow",SwigFXDCWindowToFXDC},
    { "_FXDC","_class_FXPyDC",SwigFXPyDCToFXDC},
    { "_FXDC","_FXPyDC",SwigFXPyDCToFXDC},
    { "_FXDC","_class_FXDC",0},
    { "_class_FXIcon","_FXIcon",0},
    { "_FXPopup","_class_FXPopup",0},
    { "_FXPy4Splitter","_class_FXPy4Splitter",0},
    { "_FXint","_FXInputHandle",0},
    { "_FXint","_FXDragType",0},
    { "_FXint","_FXHotKey",0},
    { "_FXint","_FXColor",0},
    { "_FXint","_FXID",0},
    { "_FXint","_FXSelector",0},
    { "_FXint","_int",0},
    { "_FXint","_signed_int",0},
    { "_FXint","_unsigned_int",0},
    { "_FXint","_FXuint",0},
    { "_FXPyPNGIcon","_class_FXPyPNGIcon",0},
    { "_class_FXWindow","_class_FXPyShutter",SwigFXPyShutterToFXWindow},
    { "_class_FXWindow","_FXPyShutter",SwigFXPyShutterToFXWindow},
    { "_class_FXWindow","_class_FXShutter",SwigFXShutterToFXWindow},
    { "_class_FXWindow","_FXShutter",SwigFXShutterToFXWindow},
    { "_class_FXWindow","_class_FXPyShutterItem",SwigFXPyShutterItemToFXWindow},
    { "_class_FXWindow","_FXPyShutterItem",SwigFXPyShutterItemToFXWindow},
    { "_class_FXWindow","_class_FXShutterItem",SwigFXShutterItemToFXWindow},
    { "_class_FXWindow","_FXShutterItem",SwigFXShutterItemToFXWindow},
    { "_class_FXWindow","_class_FXPy4Splitter",SwigFXPy4SplitterToFXWindow},
    { "_class_FXWindow","_FXPy4Splitter",SwigFXPy4SplitterToFXWindow},
    { "_class_FXWindow","_class_FX4Splitter",SwigFX4SplitterToFXWindow},
    { "_class_FXWindow","_FX4Splitter",SwigFX4SplitterToFXWindow},
    { "_class_FXWindow","_class_FXPySplitter",SwigFXPySplitterToFXWindow},
    { "_class_FXWindow","_FXPySplitter",SwigFXPySplitterToFXWindow},
    { "_class_FXWindow","_class_FXSplitter",SwigFXSplitterToFXWindow},
    { "_class_FXWindow","_FXSplitter",SwigFXSplitterToFXWindow},
    { "_class_FXWindow","_class_FXPyScrollWindow",SwigFXPyScrollWindowToFXWindow},
    { "_class_FXWindow","_FXPyScrollWindow",SwigFXPyScrollWindowToFXWindow},
    { "_class_FXWindow","_class_FXScrollWindow",SwigFXScrollWindowToFXWindow},
    { "_class_FXWindow","_FXScrollWindow",SwigFXScrollWindowToFXWindow},
    { "_class_FXWindow","_class_FXPyScrollArea",SwigFXPyScrollAreaToFXWindow},
    { "_class_FXWindow","_FXPyScrollArea",SwigFXPyScrollAreaToFXWindow},
    { "_class_FXWindow","_class_FXScrollArea",SwigFXScrollAreaToFXWindow},
    { "_class_FXWindow","_FXScrollArea",SwigFXScrollAreaToFXWindow},
    { "_class_FXWindow","_class_FXPySwitcher",SwigFXPySwitcherToFXWindow},
    { "_class_FXWindow","_FXPySwitcher",SwigFXPySwitcherToFXWindow},
    { "_class_FXWindow","_class_FXSwitcher",SwigFXSwitcherToFXWindow},
    { "_class_FXWindow","_FXSwitcher",SwigFXSwitcherToFXWindow},
    { "_class_FXWindow","_class_FXPyGroupBox",SwigFXPyGroupBoxToFXWindow},
    { "_class_FXWindow","_FXPyGroupBox",SwigFXPyGroupBoxToFXWindow},
    { "_class_FXWindow","_class_FXGroupBox",SwigFXGroupBoxToFXWindow},
    { "_class_FXWindow","_FXGroupBox",SwigFXGroupBoxToFXWindow},
    { "_class_FXWindow","_class_FXPyMatrix",SwigFXPyMatrixToFXWindow},
    { "_class_FXWindow","_FXPyMatrix",SwigFXPyMatrixToFXWindow},
    { "_class_FXWindow","_class_FXMatrix",SwigFXMatrixToFXWindow},
    { "_class_FXWindow","_FXMatrix",SwigFXMatrixToFXWindow},
    { "_class_FXWindow","_class_FXPyVerticalFrame",SwigFXPyVerticalFrameToFXWindow},
    { "_class_FXWindow","_FXPyVerticalFrame",SwigFXPyVerticalFrameToFXWindow},
    { "_class_FXWindow","_class_FXVerticalFrame",SwigFXVerticalFrameToFXWindow},
    { "_class_FXWindow","_FXVerticalFrame",SwigFXVerticalFrameToFXWindow},
    { "_class_FXWindow","_class_FXPyHorizontalFrame",SwigFXPyHorizontalFrameToFXWindow},
    { "_class_FXWindow","_FXPyHorizontalFrame",SwigFXPyHorizontalFrameToFXWindow},
    { "_class_FXWindow","_class_FXHorizontalFrame",SwigFXHorizontalFrameToFXWindow},
    { "_class_FXWindow","_FXHorizontalFrame",SwigFXHorizontalFrameToFXWindow},
    { "_class_FXWindow","_class_FXPyPacker",SwigFXPyPackerToFXWindow},
    { "_class_FXWindow","_FXPyPacker",SwigFXPyPackerToFXWindow},
    { "_class_FXWindow","_class_FXPacker",SwigFXPackerToFXWindow},
    { "_class_FXWindow","_FXPacker",SwigFXPackerToFXWindow},
    { "_class_FXWindow","_class_FXPyVerticalSeparator",SwigFXPyVerticalSeparatorToFXWindow},
    { "_class_FXWindow","_FXPyVerticalSeparator",SwigFXPyVerticalSeparatorToFXWindow},
    { "_class_FXWindow","_class_FXVerticalSeparator",SwigFXVerticalSeparatorToFXWindow},
    { "_class_FXWindow","_FXVerticalSeparator",SwigFXVerticalSeparatorToFXWindow},
    { "_class_FXWindow","_class_FXPyHorizontalSeparator",SwigFXPyHorizontalSeparatorToFXWindow},
    { "_class_FXWindow","_FXPyHorizontalSeparator",SwigFXPyHorizontalSeparatorToFXWindow},
    { "_class_FXWindow","_class_FXHorizontalSeparator",SwigFXHorizontalSeparatorToFXWindow},
    { "_class_FXWindow","_FXHorizontalSeparator",SwigFXHorizontalSeparatorToFXWindow},
    { "_class_FXWindow","_FXWindow",0},
    { "_FXPyRootWindow","_class_FXPyRootWindow",0},
    { "_class_FXShutter","_class_FXPyShutter",SwigFXPyShutterToFXShutter},
    { "_class_FXShutter","_FXPyShutter",SwigFXPyShutterToFXShutter},
    { "_class_FXShutter","_FXShutter",0},
    { "_FXushort","_FXshort",0},
    { "_FXushort","_unsigned_short",0},
    { "_FXushort","_short",0},
    { "_class_FXPoint","_FXPoint",0},
    { "_class_FXPyPNGImage","_FXPyPNGImage",0},
    { "_class_FXPyDCPrint","_FXPyDCPrint",0},
    { "_FXPyVisual","_class_FXPyVisual",0},
    { "_class_FXRectangle","_FXRectangle",0},
    { "_class_FXPyFont","_FXPyFont",0},
    { "_FXPyFileStream","_class_FXPyFileStream",0},
    { "_FXRGBImage","_class_FXRGBImage",0},
    { "_FXRootWindow","_class_FXRootWindow",0},
    { "_class_FXPacker","_class_FXPyShutter",SwigFXPyShutterToFXPacker},
    { "_class_FXPacker","_FXPyShutter",SwigFXPyShutterToFXPacker},
    { "_class_FXPacker","_class_FXShutter",SwigFXShutterToFXPacker},
    { "_class_FXPacker","_FXShutter",SwigFXShutterToFXPacker},
    { "_class_FXPacker","_class_FXPyShutterItem",SwigFXPyShutterItemToFXPacker},
    { "_class_FXPacker","_FXPyShutterItem",SwigFXPyShutterItemToFXPacker},
    { "_class_FXPacker","_class_FXShutterItem",SwigFXShutterItemToFXPacker},
    { "_class_FXPacker","_FXShutterItem",SwigFXShutterItemToFXPacker},
    { "_class_FXPacker","_class_FXPySwitcher",SwigFXPySwitcherToFXPacker},
    { "_class_FXPacker","_FXPySwitcher",SwigFXPySwitcherToFXPacker},
    { "_class_FXPacker","_class_FXSwitcher",SwigFXSwitcherToFXPacker},
    { "_class_FXPacker","_FXSwitcher",SwigFXSwitcherToFXPacker},
    { "_class_FXPacker","_class_FXPyGroupBox",SwigFXPyGroupBoxToFXPacker},
    { "_class_FXPacker","_FXPyGroupBox",SwigFXPyGroupBoxToFXPacker},
    { "_class_FXPacker","_class_FXGroupBox",SwigFXGroupBoxToFXPacker},
    { "_class_FXPacker","_FXGroupBox",SwigFXGroupBoxToFXPacker},
    { "_class_FXPacker","_class_FXPyMatrix",SwigFXPyMatrixToFXPacker},
    { "_class_FXPacker","_FXPyMatrix",SwigFXPyMatrixToFXPacker},
    { "_class_FXPacker","_class_FXMatrix",SwigFXMatrixToFXPacker},
    { "_class_FXPacker","_FXMatrix",SwigFXMatrixToFXPacker},
    { "_class_FXPacker","_class_FXPyVerticalFrame",SwigFXPyVerticalFrameToFXPacker},
    { "_class_FXPacker","_FXPyVerticalFrame",SwigFXPyVerticalFrameToFXPacker},
    { "_class_FXPacker","_class_FXVerticalFrame",SwigFXVerticalFrameToFXPacker},
    { "_class_FXPacker","_FXVerticalFrame",SwigFXVerticalFrameToFXPacker},
    { "_class_FXPacker","_class_FXPyHorizontalFrame",SwigFXPyHorizontalFrameToFXPacker},
    { "_class_FXPacker","_FXPyHorizontalFrame",SwigFXPyHorizontalFrameToFXPacker},
    { "_class_FXPacker","_class_FXHorizontalFrame",SwigFXHorizontalFrameToFXPacker},
    { "_class_FXPacker","_FXHorizontalFrame",SwigFXHorizontalFrameToFXPacker},
    { "_class_FXPacker","_class_FXPyPacker",SwigFXPyPackerToFXPacker},
    { "_class_FXPacker","_FXPyPacker",SwigFXPyPackerToFXPacker},
    { "_class_FXPacker","_FXPacker",0},
    { "_FXPyXPMImage","_class_FXPyXPMImage",0},
    { "_FXPyDataTarget","_class_FXPyDataTarget",0},
    { "_FXPyTopWindow","_class_FXPyTopWindow",0},
    { "_FXObject","_class_FXPyShutter",SwigFXPyShutterToFXObject},
    { "_FXObject","_FXPyShutter",SwigFXPyShutterToFXObject},
    { "_FXObject","_class_FXShutter",SwigFXShutterToFXObject},
    { "_FXObject","_FXShutter",SwigFXShutterToFXObject},
    { "_FXObject","_class_FXPyShutterItem",SwigFXPyShutterItemToFXObject},
    { "_FXObject","_FXPyShutterItem",SwigFXPyShutterItemToFXObject},
    { "_FXObject","_class_FXShutterItem",SwigFXShutterItemToFXObject},
    { "_FXObject","_FXShutterItem",SwigFXShutterItemToFXObject},
    { "_FXObject","_class_FXPy4Splitter",SwigFXPy4SplitterToFXObject},
    { "_FXObject","_FXPy4Splitter",SwigFXPy4SplitterToFXObject},
    { "_FXObject","_class_FX4Splitter",SwigFX4SplitterToFXObject},
    { "_FXObject","_FX4Splitter",SwigFX4SplitterToFXObject},
    { "_FXObject","_class_FXPySplitter",SwigFXPySplitterToFXObject},
    { "_FXObject","_FXPySplitter",SwigFXPySplitterToFXObject},
    { "_FXObject","_class_FXSplitter",SwigFXSplitterToFXObject},
    { "_FXObject","_FXSplitter",SwigFXSplitterToFXObject},
    { "_FXObject","_class_FXPyScrollWindow",SwigFXPyScrollWindowToFXObject},
    { "_FXObject","_FXPyScrollWindow",SwigFXPyScrollWindowToFXObject},
    { "_FXObject","_class_FXScrollWindow",SwigFXScrollWindowToFXObject},
    { "_FXObject","_FXScrollWindow",SwigFXScrollWindowToFXObject},
    { "_FXObject","_class_FXPyScrollArea",SwigFXPyScrollAreaToFXObject},
    { "_FXObject","_FXPyScrollArea",SwigFXPyScrollAreaToFXObject},
    { "_FXObject","_class_FXScrollArea",SwigFXScrollAreaToFXObject},
    { "_FXObject","_FXScrollArea",SwigFXScrollAreaToFXObject},
    { "_FXObject","_class_FXPySwitcher",SwigFXPySwitcherToFXObject},
    { "_FXObject","_FXPySwitcher",SwigFXPySwitcherToFXObject},
    { "_FXObject","_class_FXSwitcher",SwigFXSwitcherToFXObject},
    { "_FXObject","_FXSwitcher",SwigFXSwitcherToFXObject},
    { "_FXObject","_class_FXPyGroupBox",SwigFXPyGroupBoxToFXObject},
    { "_FXObject","_FXPyGroupBox",SwigFXPyGroupBoxToFXObject},
    { "_FXObject","_class_FXGroupBox",SwigFXGroupBoxToFXObject},
    { "_FXObject","_FXGroupBox",SwigFXGroupBoxToFXObject},
    { "_FXObject","_class_FXPyMatrix",SwigFXPyMatrixToFXObject},
    { "_FXObject","_FXPyMatrix",SwigFXPyMatrixToFXObject},
    { "_FXObject","_class_FXMatrix",SwigFXMatrixToFXObject},
    { "_FXObject","_FXMatrix",SwigFXMatrixToFXObject},
    { "_FXObject","_class_FXPyVerticalFrame",SwigFXPyVerticalFrameToFXObject},
    { "_FXObject","_FXPyVerticalFrame",SwigFXPyVerticalFrameToFXObject},
    { "_FXObject","_class_FXVerticalFrame",SwigFXVerticalFrameToFXObject},
    { "_FXObject","_FXVerticalFrame",SwigFXVerticalFrameToFXObject},
    { "_FXObject","_class_FXPyHorizontalFrame",SwigFXPyHorizontalFrameToFXObject},
    { "_FXObject","_FXPyHorizontalFrame",SwigFXPyHorizontalFrameToFXObject},
    { "_FXObject","_class_FXHorizontalFrame",SwigFXHorizontalFrameToFXObject},
    { "_FXObject","_FXHorizontalFrame",SwigFXHorizontalFrameToFXObject},
    { "_FXObject","_class_FXPyPacker",SwigFXPyPackerToFXObject},
    { "_FXObject","_FXPyPacker",SwigFXPyPackerToFXObject},
    { "_FXObject","_class_FXPacker",SwigFXPackerToFXObject},
    { "_FXObject","_FXPacker",SwigFXPackerToFXObject},
    { "_FXObject","_class_FXPyVerticalSeparator",SwigFXPyVerticalSeparatorToFXObject},
    { "_FXObject","_FXPyVerticalSeparator",SwigFXPyVerticalSeparatorToFXObject},
    { "_FXObject","_class_FXVerticalSeparator",SwigFXVerticalSeparatorToFXObject},
    { "_FXObject","_FXVerticalSeparator",SwigFXVerticalSeparatorToFXObject},
    { "_FXObject","_class_FXPyHorizontalSeparator",SwigFXPyHorizontalSeparatorToFXObject},
    { "_FXObject","_FXPyHorizontalSeparator",SwigFXPyHorizontalSeparatorToFXObject},
    { "_FXObject","_class_FXHorizontalSeparator",SwigFXHorizontalSeparatorToFXObject},
    { "_FXObject","_FXHorizontalSeparator",SwigFXHorizontalSeparatorToFXObject},
    { "_FXObject","_class_FXObject",0},
    { "_FXPyGIFImage","_class_FXPyGIFImage",0},
    { "_FXBMPImage","_class_FXBMPImage",0},
    { "_FXICOImage","_class_FXICOImage",0},
    { "_class_FXRGBIcon","_FXRGBIcon",0},
    { "_FXRecentFiles","_class_FXRecentFiles",0},
    { "_FXDebugTarget","_class_FXDebugTarget",0},
    { "_class_FXPyCommand","_FXPyCommand",0},
    { "_class_FXScrollArea","_class_FXPyScrollWindow",SwigFXPyScrollWindowToFXScrollArea},
    { "_class_FXScrollArea","_FXPyScrollWindow",SwigFXPyScrollWindowToFXScrollArea},
    { "_class_FXScrollArea","_class_FXScrollWindow",SwigFXScrollWindowToFXScrollArea},
    { "_class_FXScrollArea","_FXScrollWindow",SwigFXScrollWindowToFXScrollArea},
    { "_class_FXScrollArea","_class_FXPyScrollArea",SwigFXPyScrollAreaToFXScrollArea},
    { "_class_FXScrollArea","_FXPyScrollArea",SwigFXPyScrollAreaToFXScrollArea},
    { "_class_FXScrollArea","_FXScrollArea",0},
    { "_FXPySplitter","_class_FXPySplitter",0},
    { "_FXPCXImage","_class_FXPCXImage",0},
    { "_FXFileStream","_class_FXFileStream",0},
    { "_class_FXPyDelegator","_FXPyDelegator",0},
    { "_FXPyCanvas","_class_FXPyCanvas",0},
    { "_class_FXPyDrawable","_FXPyDrawable",0},
    { "_FXPyImage","_class_FXPyImage",0},
    { "_FXGIFIcon","_class_FXGIFIcon",0},
    { "_FXColor","_FXInputHandle",0},
    { "_FXColor","_FXDragType",0},
    { "_FXColor","_FXHotKey",0},
    { "_FXColor","_FXuint",0},
    { "_FXColor","_int",0},
    { "_FXColor","_unsigned_int",0},
    { "_FXColor","_FXint",0},
    { "_FXColor","_FXSelector",0},
    { "_FXColor","_FXID",0},
    { "_FXPyJPGIcon","_class_FXPyJPGIcon",0},
    { "_FXDataTarget","_class_FXDataTarget",0},
    { "_class_FXPyHorizontalFrame","_FXPyHorizontalFrame",0},
    { "_FXTime","_FXPixel",0},
    { "_FXTime","_long",0},
    { "_FXTime","_signed_long",0},
    { "_FXTime","_unsigned_long",0},
    { "_FXHotKey","_FXInputHandle",0},
    { "_FXHotKey","_FXDragType",0},
    { "_FXHotKey","_FXuint",0},
    { "_FXHotKey","_int",0},
    { "_FXHotKey","_unsigned_int",0},
    { "_FXHotKey","_FXint",0},
    { "_FXHotKey","_FXSelector",0},
    { "_FXHotKey","_FXID",0},
    { "_FXHotKey","_FXColor",0},
    { "_class_FXSize","_FXSize",0},
    { "_class_FXPyObject","_FXPyObject",0},
    { "_class_FXPyShell","_FXPyShell",0},
    { "_FXPyDC","_class_FXPyDC",0},
    { "_struct_FXFontDesc","_FXFontDesc",0},
    { "_FXMatrix","_class_FXPyMatrix",SwigFXPyMatrixToFXMatrix},
    { "_FXMatrix","_FXPyMatrix",SwigFXPyMatrixToFXMatrix},
    { "_FXMatrix","_class_FXMatrix",0},
    { "_class_FXPyBMPIcon","_FXPyBMPIcon",0},
    { "_class_FXPyICOIcon","_FXPyICOIcon",0},
    { "_char","_FXchar",0},
    { "_FXdouble","_double",0},
    { "_FXStream","_class_FXStream",0},
    { "_FXPyStringDict","_class_FXPyStringDict",0},
    { "_FXFrame","_class_FXPyVerticalSeparator",SwigFXPyVerticalSeparatorToFXFrame},
    { "_FXFrame","_FXPyVerticalSeparator",SwigFXPyVerticalSeparatorToFXFrame},
    { "_FXFrame","_class_FXVerticalSeparator",SwigFXVerticalSeparatorToFXFrame},
    { "_FXFrame","_FXVerticalSeparator",SwigFXVerticalSeparatorToFXFrame},
    { "_FXFrame","_class_FXPyHorizontalSeparator",SwigFXPyHorizontalSeparatorToFXFrame},
    { "_FXFrame","_FXPyHorizontalSeparator",SwigFXPyHorizontalSeparatorToFXFrame},
    { "_FXFrame","_class_FXHorizontalSeparator",SwigFXHorizontalSeparatorToFXFrame},
    { "_FXFrame","_FXHorizontalSeparator",SwigFXHorizontalSeparatorToFXFrame},
    { "_FXFrame","_class_FXFrame",0},
    { "_FXObjectPtr","_FXObject_p",0},
    { "_FXPyComposite","_class_FXPyComposite",0},
    { "_class_FXShutterItem","_class_FXPyShutterItem",SwigFXPyShutterItemToFXShutterItem},
    { "_class_FXShutterItem","_FXPyShutterItem",SwigFXPyShutterItemToFXShutterItem},
    { "_class_FXShutterItem","_FXShutterItem",0},
    { "_class_FXDelegator","_FXDelegator",0},
    { "_FXVerticalFrame","_class_FXPyShutter",SwigFXPyShutterToFXVerticalFrame},
    { "_FXVerticalFrame","_FXPyShutter",SwigFXPyShutterToFXVerticalFrame},
    { "_FXVerticalFrame","_class_FXShutter",SwigFXShutterToFXVerticalFrame},
    { "_FXVerticalFrame","_FXShutter",SwigFXShutterToFXVerticalFrame},
    { "_FXVerticalFrame","_class_FXPyShutterItem",SwigFXPyShutterItemToFXVerticalFrame},
    { "_FXVerticalFrame","_FXPyShutterItem",SwigFXPyShutterItemToFXVerticalFrame},
    { "_FXVerticalFrame","_class_FXShutterItem",SwigFXShutterItemToFXVerticalFrame},
    { "_FXVerticalFrame","_FXShutterItem",SwigFXShutterItemToFXVerticalFrame},
    { "_FXVerticalFrame","_class_FXPyVerticalFrame",SwigFXPyVerticalFrameToFXVerticalFrame},
    { "_FXVerticalFrame","_FXPyVerticalFrame",SwigFXPyVerticalFrameToFXVerticalFrame},
    { "_FXVerticalFrame","_class_FXVerticalFrame",0},
    { "_class_FXPyMatrix","_FXPyMatrix",0},
    { "_FXbool","_FXuchar",0},
    { "_FXbool","_unsigned_char",0},
    { "_class_FXTGAImage","_FXTGAImage",0},
    { "_class_FXPyStream","_FXPyStream",0},
    { "_FXStringDict","_class_FXStringDict",0},
    { "_FXPyGroupBox","_class_FXPyGroupBox",0},
    { "_class_FXPyApp","_FXPyApp",0},
    { "_class_FXDCWindow","_class_FXPyDCWindow",SwigFXPyDCWindowToFXDCWindow},
    { "_class_FXDCWindow","_FXPyDCWindow",SwigFXPyDCWindowToFXDCWindow},
    { "_class_FXDCWindow","_FXDCWindow",0},
    { "_class_FXPyShutter","_FXPyShutter",0},
    { "_FXPyWindow","_class_FXPyWindow",0},
    { "_class_FXRootWindow","_FXRootWindow",0},
    { "_class_FXPyXPMImage","_FXPyXPMImage",0},
    { "_class_FXPyGIFImage","_FXPyGIFImage",0},
    { "_class_FXPyVerticalFrame","_FXPyVerticalFrame",0},
    { "_class_FXPySplitter","_FXPySplitter",0},
    { "_class_FXFileStream","_FXFileStream",0},
    { "_class_FXPyMainWindow","_FXPyMainWindow",0},
    { "_class_FXHorizontalFrame","_class_FXPyHorizontalFrame",SwigFXPyHorizontalFrameToFXHorizontalFrame},
    { "_class_FXHorizontalFrame","_FXPyHorizontalFrame",SwigFXPyHorizontalFrameToFXHorizontalFrame},
    { "_class_FXHorizontalFrame","_FXHorizontalFrame",0},
    { "_class_FXPyImage","_FXPyImage",0},
    { "_class_FXGIFIcon","_FXGIFIcon",0},
    { "_class_FXPyRGBIcon","_FXPyRGBIcon",0},
    { "_FXPyPacker","_class_FXPyPacker",0},
    { "_class_FXPyScrollWindow","_FXPyScrollWindow",0},
    { "_unsigned_long","_FXPixel",0},
    { "_unsigned_long","_FXTime",0},
    { "_unsigned_long","_long",0},
    { "_class_FXDataTarget","_FXDataTarget",0},
    { "_class_FXScrollWindow","_class_FXPyScrollWindow",SwigFXPyScrollWindowToFXScrollWindow},
    { "_class_FXScrollWindow","_FXPyScrollWindow",SwigFXPyScrollWindowToFXScrollWindow},
    { "_class_FXScrollWindow","_FXScrollWindow",0},
    { "_class_FXPyDC","_FXPyDC",0},
    { "_FXPyVerticalSeparator","_class_FXPyVerticalSeparator",0},
    { "_FXPCXIcon","_class_FXPCXIcon",0},
    { "_FXSwitcher","_class_FXPySwitcher",SwigFXPySwitcherToFXSwitcher},
    { "_FXSwitcher","_FXPySwitcher",SwigFXPySwitcherToFXSwitcher},
    { "_FXSwitcher","_class_FXSwitcher",0},
    { "_class_FXJPGImage","_FXJPGImage",0},
    { "_class_FXPyIcon","_FXPyIcon",0},
    { "_class_FXPyAccelTable","_FXPyAccelTable",0},
    { "_class_FXDC","_class_FXPyDCPrint",SwigFXPyDCPrintToFXDC},
    { "_class_FXDC","_FXPyDCPrint",SwigFXPyDCPrintToFXDC},
    { "_class_FXDC","_class_FXDCPrint",SwigFXDCPrintToFXDC},
    { "_class_FXDC","_FXDCPrint",SwigFXDCPrintToFXDC},
    { "_class_FXDC","_class_FXPyDCWindow",SwigFXPyDCWindowToFXDC},
    { "_class_FXDC","_FXPyDCWindow",SwigFXPyDCWindowToFXDC},
    { "_class_FXDC","_class_FXDCWindow",SwigFXDCWindowToFXDC},
    { "_class_FXDC","_FXDCWindow",SwigFXDCWindowToFXDC},
    { "_class_FXDC","_class_FXPyDC",SwigFXPyDCToFXDC},
    { "_class_FXDC","_FXPyDC",SwigFXPyDCToFXDC},
    { "_class_FXDC","_FXDC",0},
    { "_FXVisual","_class_FXVisual",0},
    { "_FXPyTIFImage","_class_FXPyTIFImage",0},
    { "_FXPNGIcon","_class_FXPNGIcon",0},
    { "_class_FXPopup","_FXPopup",0},
    { "_class_FXVerticalFrame","_class_FXPyShutter",SwigFXPyShutterToFXVerticalFrame},
    { "_class_FXVerticalFrame","_FXPyShutter",SwigFXPyShutterToFXVerticalFrame},
    { "_class_FXVerticalFrame","_class_FXShutter",SwigFXShutterToFXVerticalFrame},
    { "_class_FXVerticalFrame","_FXShutter",SwigFXShutterToFXVerticalFrame},
    { "_class_FXVerticalFrame","_class_FXPyShutterItem",SwigFXPyShutterItemToFXVerticalFrame},
    { "_class_FXVerticalFrame","_FXPyShutterItem",SwigFXPyShutterItemToFXVerticalFrame},
    { "_class_FXVerticalFrame","_class_FXShutterItem",SwigFXShutterItemToFXVerticalFrame},
    { "_class_FXVerticalFrame","_FXShutterItem",SwigFXShutterItemToFXVerticalFrame},
    { "_class_FXVerticalFrame","_class_FXPyVerticalFrame",SwigFXPyVerticalFrameToFXVerticalFrame},
    { "_class_FXVerticalFrame","_FXPyVerticalFrame",SwigFXPyVerticalFrameToFXVerticalFrame},
    { "_class_FXVerticalFrame","_FXVerticalFrame",0},
    { "_signed_int","_FXInputHandle",0},
    { "_signed_int","_FXint",0},
    { "_signed_int","_int",0},
    { "_class_FXPy4Splitter","_FXPy4Splitter",0},
    { "_FXPNGImage","_class_FXPNGImage",0},
    { "_FXPyTGAIcon","_class_FXPyTGAIcon",0},
    { "_FXPyDict","_class_FXPyDict",0},
    { "_class_FXStringDict","_FXStringDict",0},
    { "_FXRegion","_class_FXRegion",0},
    { "_class_FXPyGroupBox","_FXPyGroupBox",0},
    { "_FXVerticalSeparator","_class_FXPyVerticalSeparator",SwigFXPyVerticalSeparatorToFXVerticalSeparator},
    { "_FXVerticalSeparator","_FXPyVerticalSeparator",SwigFXPyVerticalSeparatorToFXVerticalSeparator},
    { "_FXVerticalSeparator","_class_FXVerticalSeparator",0},
    { "_FXRawEvent","__XEvent",0},
    { "_class_FXPyVisual","_FXPyVisual",0},
    { "_FXShell","_class_FXShell",0},
    { "_FXCanvas","_class_FXCanvas",0},
    { "_class_FXRGBImage","_FXRGBImage",0},
    { "_unsigned_short","_FXshort",0},
    { "_unsigned_short","_FXushort",0},
    { "_unsigned_short","_short",0},
    { "_class_FXPyTopWindow","_FXPyTopWindow",0},
    { "_class_FXBMPImage","_FXBMPImage",0},
    { "_class_FXICOImage","_FXICOImage",0},
    { "_class_FXRecentFiles","_FXRecentFiles",0},
    { "_class_FXDebugTarget","_FXDebugTarget",0},
    { "_FXDrawable","_class_FXPyShutter",SwigFXPyShutterToFXDrawable},
    { "_FXDrawable","_FXPyShutter",SwigFXPyShutterToFXDrawable},
    { "_FXDrawable","_class_FXShutter",SwigFXShutterToFXDrawable},
    { "_FXDrawable","_FXShutter",SwigFXShutterToFXDrawable},
    { "_FXDrawable","_class_FXPyShutterItem",SwigFXPyShutterItemToFXDrawable},
    { "_FXDrawable","_FXPyShutterItem",SwigFXPyShutterItemToFXDrawable},
    { "_FXDrawable","_class_FXShutterItem",SwigFXShutterItemToFXDrawable},
    { "_FXDrawable","_FXShutterItem",SwigFXShutterItemToFXDrawable},
    { "_FXDrawable","_class_FXPy4Splitter",SwigFXPy4SplitterToFXDrawable},
    { "_FXDrawable","_FXPy4Splitter",SwigFXPy4SplitterToFXDrawable},
    { "_FXDrawable","_class_FX4Splitter",SwigFX4SplitterToFXDrawable},
    { "_FXDrawable","_FX4Splitter",SwigFX4SplitterToFXDrawable},
    { "_FXDrawable","_class_FXPySplitter",SwigFXPySplitterToFXDrawable},
    { "_FXDrawable","_FXPySplitter",SwigFXPySplitterToFXDrawable},
    { "_FXDrawable","_class_FXSplitter",SwigFXSplitterToFXDrawable},
    { "_FXDrawable","_FXSplitter",SwigFXSplitterToFXDrawable},
    { "_FXDrawable","_class_FXPyScrollWindow",SwigFXPyScrollWindowToFXDrawable},
    { "_FXDrawable","_FXPyScrollWindow",SwigFXPyScrollWindowToFXDrawable},
    { "_FXDrawable","_class_FXScrollWindow",SwigFXScrollWindowToFXDrawable},
    { "_FXDrawable","_FXScrollWindow",SwigFXScrollWindowToFXDrawable},
    { "_FXDrawable","_class_FXPyScrollArea",SwigFXPyScrollAreaToFXDrawable},
    { "_FXDrawable","_FXPyScrollArea",SwigFXPyScrollAreaToFXDrawable},
    { "_FXDrawable","_class_FXScrollArea",SwigFXScrollAreaToFXDrawable},
    { "_FXDrawable","_FXScrollArea",SwigFXScrollAreaToFXDrawable},
    { "_FXDrawable","_class_FXPySwitcher",SwigFXPySwitcherToFXDrawable},
    { "_FXDrawable","_FXPySwitcher",SwigFXPySwitcherToFXDrawable},
    { "_FXDrawable","_class_FXSwitcher",SwigFXSwitcherToFXDrawable},
    { "_FXDrawable","_FXSwitcher",SwigFXSwitcherToFXDrawable},
    { "_FXDrawable","_class_FXPyGroupBox",SwigFXPyGroupBoxToFXDrawable},
    { "_FXDrawable","_FXPyGroupBox",SwigFXPyGroupBoxToFXDrawable},
    { "_FXDrawable","_class_FXGroupBox",SwigFXGroupBoxToFXDrawable},
    { "_FXDrawable","_FXGroupBox",SwigFXGroupBoxToFXDrawable},
    { "_FXDrawable","_class_FXPyMatrix",SwigFXPyMatrixToFXDrawable},
    { "_FXDrawable","_FXPyMatrix",SwigFXPyMatrixToFXDrawable},
    { "_FXDrawable","_class_FXMatrix",SwigFXMatrixToFXDrawable},
    { "_FXDrawable","_FXMatrix",SwigFXMatrixToFXDrawable},
    { "_FXDrawable","_class_FXPyVerticalFrame",SwigFXPyVerticalFrameToFXDrawable},
    { "_FXDrawable","_FXPyVerticalFrame",SwigFXPyVerticalFrameToFXDrawable},
    { "_FXDrawable","_class_FXVerticalFrame",SwigFXVerticalFrameToFXDrawable},
    { "_FXDrawable","_FXVerticalFrame",SwigFXVerticalFrameToFXDrawable},
    { "_FXDrawable","_class_FXPyHorizontalFrame",SwigFXPyHorizontalFrameToFXDrawable},
    { "_FXDrawable","_FXPyHorizontalFrame",SwigFXPyHorizontalFrameToFXDrawable},
    { "_FXDrawable","_class_FXHorizontalFrame",SwigFXHorizontalFrameToFXDrawable},
    { "_FXDrawable","_FXHorizontalFrame",SwigFXHorizontalFrameToFXDrawable},
    { "_FXDrawable","_class_FXPyPacker",SwigFXPyPackerToFXDrawable},
    { "_FXDrawable","_FXPyPacker",SwigFXPyPackerToFXDrawable},
    { "_FXDrawable","_class_FXPacker",SwigFXPackerToFXDrawable},
    { "_FXDrawable","_FXPacker",SwigFXPackerToFXDrawable},
    { "_FXDrawable","_class_FXPyVerticalSeparator",SwigFXPyVerticalSeparatorToFXDrawable},
    { "_FXDrawable","_FXPyVerticalSeparator",SwigFXPyVerticalSeparatorToFXDrawable},
    { "_FXDrawable","_class_FXVerticalSeparator",SwigFXVerticalSeparatorToFXDrawable},
    { "_FXDrawable","_FXVerticalSeparator",SwigFXVerticalSeparatorToFXDrawable},
    { "_FXDrawable","_class_FXPyHorizontalSeparator",SwigFXPyHorizontalSeparatorToFXDrawable},
    { "_FXDrawable","_FXPyHorizontalSeparator",SwigFXPyHorizontalSeparatorToFXDrawable},
    { "_FXDrawable","_class_FXHorizontalSeparator",SwigFXHorizontalSeparatorToFXDrawable},
    { "_FXDrawable","_FXHorizontalSeparator",SwigFXHorizontalSeparatorToFXDrawable},
    { "_FXDrawable","_class_FXDrawable",0},
    { "_class_FXPCXImage","_FXPCXImage",0},
    { "_FXJPGIcon","_class_FXJPGIcon",0},
    { "_class_FXPyCanvas","_FXPyCanvas",0},
    { "_class_FX4Splitter","_class_FXPy4Splitter",SwigFXPy4SplitterToFX4Splitter},
    { "_class_FX4Splitter","_FXPy4Splitter",SwigFXPy4SplitterToFX4Splitter},
    { "_class_FX4Splitter","_FX4Splitter",0},
    { "_FXPyXPMIcon","_class_FXPyXPMIcon",0},
    { "_FXObject_p","_FXObjectPtr",0},
    { "_FXID","_FXInputHandle",0},
    { "_FXID","_FXDragType",0},
    { "_FXID","_FXHotKey",0},
    { "_FXID","_FXColor",0},
    { "_FXID","_unsigned_int",0},
    { "_FXID","_int",0},
    { "_FXID","_FXuint",0},
    { "_FXID","_FXint",0},
    { "_FXID","_FXSelector",0},
    { "_FXHorizontalSeparator","_class_FXPyHorizontalSeparator",SwigFXPyHorizontalSeparatorToFXHorizontalSeparator},
    { "_FXHorizontalSeparator","_FXPyHorizontalSeparator",SwigFXPyHorizontalSeparatorToFXHorizontalSeparator},
    { "_FXHorizontalSeparator","_class_FXHorizontalSeparator",0},
    { "_class_FXPyGIFIcon","_FXPyGIFIcon",0},
    { "_class_FXPyVerticalSeparator","_FXPyVerticalSeparator",0},
    { "_struct_FXPrinter","_FXPrinter",0},
    { "_FXPyTIFIcon","_class_FXPyTIFIcon",0},
    { "_class_FXPCXIcon","_FXPCXIcon",0},
    { "_signed_short","_FXshort",0},
    { "_signed_short","_short",0},
    { "_class_FXFrame","_class_FXPyVerticalSeparator",SwigFXPyVerticalSeparatorToFXFrame},
    { "_class_FXFrame","_FXPyVerticalSeparator",SwigFXPyVerticalSeparatorToFXFrame},
    { "_class_FXFrame","_class_FXVerticalSeparator",SwigFXVerticalSeparatorToFXFrame},
    { "_class_FXFrame","_FXVerticalSeparator",SwigFXVerticalSeparatorToFXFrame},
    { "_class_FXFrame","_class_FXPyHorizontalSeparator",SwigFXPyHorizontalSeparatorToFXFrame},
    { "_class_FXFrame","_FXPyHorizontalSeparator",SwigFXPyHorizontalSeparatorToFXFrame},
    { "_class_FXFrame","_class_FXHorizontalSeparator",SwigFXHorizontalSeparatorToFXFrame},
    { "_class_FXFrame","_FXHorizontalSeparator",SwigFXHorizontalSeparatorToFXFrame},
    { "_class_FXFrame","_FXFrame",0},
    { "_class_FXTopWindow","_FXTopWindow",0},
    { "_FXfloat","_float",0},
    { "_FXEvent","_struct_FXEvent",0},
    { "_class_FXPyComposite","_FXPyComposite",0},
    { "_class_FXPyTIFImage","_FXPyTIFImage",0},
    { "_class_FXPNGIcon","_FXPNGIcon",0},
    { "_struct_FXSegment","_FXSegment",0},
    { "_unsigned_char","_FXbool",0},
    { "_unsigned_char","_FXuchar",0},
    { "_FXPixel","_unsigned_long",0},
    { "_FXPixel","_long",0},
    { "_FXPixel","_FXTime",0},
    { "_FXImage","_class_FXImage",0},
    { "_FXWindow","_class_FXPyShutter",SwigFXPyShutterToFXWindow},
    { "_FXWindow","_FXPyShutter",SwigFXPyShutterToFXWindow},
    { "_FXWindow","_class_FXShutter",SwigFXShutterToFXWindow},
    { "_FXWindow","_FXShutter",SwigFXShutterToFXWindow},
    { "_FXWindow","_class_FXPyShutterItem",SwigFXPyShutterItemToFXWindow},
    { "_FXWindow","_FXPyShutterItem",SwigFXPyShutterItemToFXWindow},
    { "_FXWindow","_class_FXShutterItem",SwigFXShutterItemToFXWindow},
    { "_FXWindow","_FXShutterItem",SwigFXShutterItemToFXWindow},
    { "_FXWindow","_class_FXPy4Splitter",SwigFXPy4SplitterToFXWindow},
    { "_FXWindow","_FXPy4Splitter",SwigFXPy4SplitterToFXWindow},
    { "_FXWindow","_class_FX4Splitter",SwigFX4SplitterToFXWindow},
    { "_FXWindow","_FX4Splitter",SwigFX4SplitterToFXWindow},
    { "_FXWindow","_class_FXPySplitter",SwigFXPySplitterToFXWindow},
    { "_FXWindow","_FXPySplitter",SwigFXPySplitterToFXWindow},
    { "_FXWindow","_class_FXSplitter",SwigFXSplitterToFXWindow},
    { "_FXWindow","_FXSplitter",SwigFXSplitterToFXWindow},
    { "_FXWindow","_class_FXPyScrollWindow",SwigFXPyScrollWindowToFXWindow},
    { "_FXWindow","_FXPyScrollWindow",SwigFXPyScrollWindowToFXWindow},
    { "_FXWindow","_class_FXScrollWindow",SwigFXScrollWindowToFXWindow},
    { "_FXWindow","_FXScrollWindow",SwigFXScrollWindowToFXWindow},
    { "_FXWindow","_class_FXPyScrollArea",SwigFXPyScrollAreaToFXWindow},
    { "_FXWindow","_FXPyScrollArea",SwigFXPyScrollAreaToFXWindow},
    { "_FXWindow","_class_FXScrollArea",SwigFXScrollAreaToFXWindow},
    { "_FXWindow","_FXScrollArea",SwigFXScrollAreaToFXWindow},
    { "_FXWindow","_class_FXPySwitcher",SwigFXPySwitcherToFXWindow},
    { "_FXWindow","_FXPySwitcher",SwigFXPySwitcherToFXWindow},
    { "_FXWindow","_class_FXSwitcher",SwigFXSwitcherToFXWindow},
    { "_FXWindow","_FXSwitcher",SwigFXSwitcherToFXWindow},
    { "_FXWindow","_class_FXPyGroupBox",SwigFXPyGroupBoxToFXWindow},
    { "_FXWindow","_FXPyGroupBox",SwigFXPyGroupBoxToFXWindow},
    { "_FXWindow","_class_FXGroupBox",SwigFXGroupBoxToFXWindow},
    { "_FXWindow","_FXGroupBox",SwigFXGroupBoxToFXWindow},
    { "_FXWindow","_class_FXPyMatrix",SwigFXPyMatrixToFXWindow},
    { "_FXWindow","_FXPyMatrix",SwigFXPyMatrixToFXWindow},
    { "_FXWindow","_class_FXMatrix",SwigFXMatrixToFXWindow},
    { "_FXWindow","_FXMatrix",SwigFXMatrixToFXWindow},
    { "_FXWindow","_class_FXPyVerticalFrame",SwigFXPyVerticalFrameToFXWindow},
    { "_FXWindow","_FXPyVerticalFrame",SwigFXPyVerticalFrameToFXWindow},
    { "_FXWindow","_class_FXVerticalFrame",SwigFXVerticalFrameToFXWindow},
    { "_FXWindow","_FXVerticalFrame",SwigFXVerticalFrameToFXWindow},
    { "_FXWindow","_class_FXPyHorizontalFrame",SwigFXPyHorizontalFrameToFXWindow},
    { "_FXWindow","_FXPyHorizontalFrame",SwigFXPyHorizontalFrameToFXWindow},
    { "_FXWindow","_class_FXHorizontalFrame",SwigFXHorizontalFrameToFXWindow},
    { "_FXWindow","_FXHorizontalFrame",SwigFXHorizontalFrameToFXWindow},
    { "_FXWindow","_class_FXPyPacker",SwigFXPyPackerToFXWindow},
    { "_FXWindow","_FXPyPacker",SwigFXPyPackerToFXWindow},
    { "_FXWindow","_class_FXPacker",SwigFXPackerToFXWindow},
    { "_FXWindow","_FXPacker",SwigFXPackerToFXWindow},
    { "_FXWindow","_class_FXPyVerticalSeparator",SwigFXPyVerticalSeparatorToFXWindow},
    { "_FXWindow","_FXPyVerticalSeparator",SwigFXPyVerticalSeparatorToFXWindow},
    { "_FXWindow","_class_FXVerticalSeparator",SwigFXVerticalSeparatorToFXWindow},
    { "_FXWindow","_FXVerticalSeparator",SwigFXVerticalSeparatorToFXWindow},
    { "_FXWindow","_class_FXPyHorizontalSeparator",SwigFXPyHorizontalSeparatorToFXWindow},
    { "_FXWindow","_FXPyHorizontalSeparator",SwigFXPyHorizontalSeparatorToFXWindow},
    { "_FXWindow","_class_FXHorizontalSeparator",SwigFXHorizontalSeparatorToFXWindow},
    { "_FXWindow","_FXHorizontalSeparator",SwigFXHorizontalSeparatorToFXWindow},
    { "_FXWindow","_class_FXWindow",0},
    { "_unsigned_int","_FXInputHandle",0},
    { "_unsigned_int","_FXDragType",0},
    { "_unsigned_int","_FXHotKey",0},
    { "_unsigned_int","_FXColor",0},
    { "_unsigned_int","_FXID",0},
    { "_unsigned_int","_FXSelector",0},
    { "_unsigned_int","_FXint",0},
    { "_unsigned_int","_FXuint",0},
    { "_unsigned_int","_int",0},
    { "_FXPyTGAImage","_class_FXPyTGAImage",0},
    { "_FXDict","_class_FXDict",0},
    { "_FXPyDCPrint","_class_FXPyDCPrint",0},
    { "_FXuint","_FXInputHandle",0},
    { "_FXuint","_FXDragType",0},
    { "_FXuint","_FXHotKey",0},
    { "_FXuint","_FXColor",0},
    { "_FXuint","_FXID",0},
    { "_FXuint","_FXSelector",0},
    { "_FXuint","_FXint",0},
    { "_FXuint","_unsigned_int",0},
    { "_FXuint","_int",0},
    { "_class_FXPyScrollArea","_FXPyScrollArea",0},
    { "_short","_FXshort",0},
    { "_short","_FXushort",0},
    { "_short","_unsigned_short",0},
    { "_short","_signed_short",0},
    { "_FXRectangle","_class_FXRectangle",0},
    { "_FXPyFont","_class_FXPyFont",0},
    { "_FXPyDCWindow","_class_FXPyDCWindow",0},
    { "_class_FXApp","_FXApp",0},
    { "_FXXPMImage","_class_FXXPMImage",0},
    { "_class_FXPyWindow","_FXPyWindow",0},
    { "_FXPacker","_class_FXPyShutter",SwigFXPyShutterToFXPacker},
    { "_FXPacker","_FXPyShutter",SwigFXPyShutterToFXPacker},
    { "_FXPacker","_class_FXShutter",SwigFXShutterToFXPacker},
    { "_FXPacker","_FXShutter",SwigFXShutterToFXPacker},
    { "_FXPacker","_class_FXPyShutterItem",SwigFXPyShutterItemToFXPacker},
    { "_FXPacker","_FXPyShutterItem",SwigFXPyShutterItemToFXPacker},
    { "_FXPacker","_class_FXShutterItem",SwigFXShutterItemToFXPacker},
    { "_FXPacker","_FXShutterItem",SwigFXShutterItemToFXPacker},
    { "_FXPacker","_class_FXPySwitcher",SwigFXPySwitcherToFXPacker},
    { "_FXPacker","_FXPySwitcher",SwigFXPySwitcherToFXPacker},
    { "_FXPacker","_class_FXSwitcher",SwigFXSwitcherToFXPacker},
    { "_FXPacker","_FXSwitcher",SwigFXSwitcherToFXPacker},
    { "_FXPacker","_class_FXPyGroupBox",SwigFXPyGroupBoxToFXPacker},
    { "_FXPacker","_FXPyGroupBox",SwigFXPyGroupBoxToFXPacker},
    { "_FXPacker","_class_FXGroupBox",SwigFXGroupBoxToFXPacker},
    { "_FXPacker","_FXGroupBox",SwigFXGroupBoxToFXPacker},
    { "_FXPacker","_class_FXPyMatrix",SwigFXPyMatrixToFXPacker},
    { "_FXPacker","_FXPyMatrix",SwigFXPyMatrixToFXPacker},
    { "_FXPacker","_class_FXMatrix",SwigFXMatrixToFXPacker},
    { "_FXPacker","_FXMatrix",SwigFXMatrixToFXPacker},
    { "_FXPacker","_class_FXPyVerticalFrame",SwigFXPyVerticalFrameToFXPacker},
    { "_FXPacker","_FXPyVerticalFrame",SwigFXPyVerticalFrameToFXPacker},
    { "_FXPacker","_class_FXVerticalFrame",SwigFXVerticalFrameToFXPacker},
    { "_FXPacker","_FXVerticalFrame",SwigFXVerticalFrameToFXPacker},
    { "_FXPacker","_class_FXPyHorizontalFrame",SwigFXPyHorizontalFrameToFXPacker},
    { "_FXPacker","_FXPyHorizontalFrame",SwigFXPyHorizontalFrameToFXPacker},
    { "_FXPacker","_class_FXHorizontalFrame",SwigFXHorizontalFrameToFXPacker},
    { "_FXPacker","_FXHorizontalFrame",SwigFXHorizontalFrameToFXPacker},
    { "_FXPacker","_class_FXPyPacker",SwigFXPyPackerToFXPacker},
    { "_FXPacker","_FXPyPacker",SwigFXPyPackerToFXPacker},
    { "_FXPacker","_class_FXPacker",0},
    { "_FXGIFImage","_class_FXGIFImage",0},
    { "_class_FXComposite","_class_FXPyShutter",SwigFXPyShutterToFXComposite},
    { "_class_FXComposite","_FXPyShutter",SwigFXPyShutterToFXComposite},
    { "_class_FXComposite","_class_FXShutter",SwigFXShutterToFXComposite},
    { "_class_FXComposite","_FXShutter",SwigFXShutterToFXComposite},
    { "_class_FXComposite","_class_FXPyShutterItem",SwigFXPyShutterItemToFXComposite},
    { "_class_FXComposite","_FXPyShutterItem",SwigFXPyShutterItemToFXComposite},
    { "_class_FXComposite","_class_FXShutterItem",SwigFXShutterItemToFXComposite},
    { "_class_FXComposite","_FXShutterItem",SwigFXShutterItemToFXComposite},
    { "_class_FXComposite","_class_FXPy4Splitter",SwigFXPy4SplitterToFXComposite},
    { "_class_FXComposite","_FXPy4Splitter",SwigFXPy4SplitterToFXComposite},
    { "_class_FXComposite","_class_FX4Splitter",SwigFX4SplitterToFXComposite},
    { "_class_FXComposite","_FX4Splitter",SwigFX4SplitterToFXComposite},
    { "_class_FXComposite","_class_FXPySplitter",SwigFXPySplitterToFXComposite},
    { "_class_FXComposite","_FXPySplitter",SwigFXPySplitterToFXComposite},
    { "_class_FXComposite","_class_FXSplitter",SwigFXSplitterToFXComposite},
    { "_class_FXComposite","_FXSplitter",SwigFXSplitterToFXComposite},
    { "_class_FXComposite","_class_FXPyScrollWindow",SwigFXPyScrollWindowToFXComposite},
    { "_class_FXComposite","_FXPyScrollWindow",SwigFXPyScrollWindowToFXComposite},
    { "_class_FXComposite","_class_FXScrollWindow",SwigFXScrollWindowToFXComposite},
    { "_class_FXComposite","_FXScrollWindow",SwigFXScrollWindowToFXComposite},
    { "_class_FXComposite","_class_FXPyScrollArea",SwigFXPyScrollAreaToFXComposite},
    { "_class_FXComposite","_FXPyScrollArea",SwigFXPyScrollAreaToFXComposite},
    { "_class_FXComposite","_class_FXScrollArea",SwigFXScrollAreaToFXComposite},
    { "_class_FXComposite","_FXScrollArea",SwigFXScrollAreaToFXComposite},
    { "_class_FXComposite","_class_FXPySwitcher",SwigFXPySwitcherToFXComposite},
    { "_class_FXComposite","_FXPySwitcher",SwigFXPySwitcherToFXComposite},
    { "_class_FXComposite","_class_FXSwitcher",SwigFXSwitcherToFXComposite},
    { "_class_FXComposite","_FXSwitcher",SwigFXSwitcherToFXComposite},
    { "_class_FXComposite","_class_FXPyGroupBox",SwigFXPyGroupBoxToFXComposite},
    { "_class_FXComposite","_FXPyGroupBox",SwigFXPyGroupBoxToFXComposite},
    { "_class_FXComposite","_class_FXGroupBox",SwigFXGroupBoxToFXComposite},
    { "_class_FXComposite","_FXGroupBox",SwigFXGroupBoxToFXComposite},
    { "_class_FXComposite","_class_FXPyMatrix",SwigFXPyMatrixToFXComposite},
    { "_class_FXComposite","_FXPyMatrix",SwigFXPyMatrixToFXComposite},
    { "_class_FXComposite","_class_FXMatrix",SwigFXMatrixToFXComposite},
    { "_class_FXComposite","_FXMatrix",SwigFXMatrixToFXComposite},
    { "_class_FXComposite","_class_FXPyVerticalFrame",SwigFXPyVerticalFrameToFXComposite},
    { "_class_FXComposite","_FXPyVerticalFrame",SwigFXPyVerticalFrameToFXComposite},
    { "_class_FXComposite","_class_FXVerticalFrame",SwigFXVerticalFrameToFXComposite},
    { "_class_FXComposite","_FXVerticalFrame",SwigFXVerticalFrameToFXComposite},
    { "_class_FXComposite","_class_FXPyHorizontalFrame",SwigFXPyHorizontalFrameToFXComposite},
    { "_class_FXComposite","_FXPyHorizontalFrame",SwigFXPyHorizontalFrameToFXComposite},
    { "_class_FXComposite","_class_FXHorizontalFrame",SwigFXHorizontalFrameToFXComposite},
    { "_class_FXComposite","_FXHorizontalFrame",SwigFXHorizontalFrameToFXComposite},
    { "_class_FXComposite","_class_FXPyPacker",SwigFXPyPackerToFXComposite},
    { "_class_FXComposite","_FXPyPacker",SwigFXPyPackerToFXComposite},
    { "_class_FXComposite","_class_FXPacker",SwigFXPackerToFXComposite},
    { "_class_FXComposite","_FXPacker",SwigFXPackerToFXComposite},
    { "_class_FXComposite","_FXComposite",0},
    { "_FXSplitter","_class_FXPySplitter",SwigFXPySplitterToFXSplitter},
    { "_FXSplitter","_FXPySplitter",SwigFXPySplitterToFXSplitter},
    { "_FXSplitter","_class_FXSplitter",0},
    { "_FXPyCommand","_class_FXPyCommand",0},
    { "_class_FXJPGIcon","_FXJPGIcon",0},
    { "_class_FXPyHorizontalSeparator","_FXPyHorizontalSeparator",0},
    { "_FXchar","_char",0},
    { "_class_FXPyPacker","_FXPyPacker",0},
    { "_FXuchar","_FXbool",0},
    { "_FXuchar","_unsigned_char",0},
    { "_class_FXHorizontalSeparator","_class_FXPyHorizontalSeparator",SwigFXPyHorizontalSeparatorToFXHorizontalSeparator},
    { "_class_FXHorizontalSeparator","_FXPyHorizontalSeparator",SwigFXPyHorizontalSeparatorToFXHorizontalSeparator},
    { "_class_FXHorizontalSeparator","_FXHorizontalSeparator",0},
    { "_int","_FXInputHandle",0},
    { "_int","_FXDragType",0},
    { "_int","_FXHotKey",0},
    { "_int","_FXColor",0},
    { "_int","_FXID",0},
    { "_int","_FXSelector",0},
    { "_int","_FXint",0},
    { "_int","_FXuint",0},
    { "_int","_unsigned_int",0},
    { "_int","_signed_int",0},
    { "_FXDragType","_FXInputHandle",0},
    { "_FXDragType","_FXID",0},
    { "_FXDragType","_FXSelector",0},
    { "_FXDragType","_FXint",0},
    { "_FXDragType","_FXuint",0},
    { "_FXDragType","_int",0},
    { "_FXDragType","_unsigned_int",0},
    { "_FXDragType","_FXColor",0},
    { "_FXDragType","_FXHotKey",0},
    { "_FXSettings","_class_FXSettings",0},
    { "_FXRegistry","_class_FXRegistry",0},
    { "_FXPyBMPIcon","_class_FXPyBMPIcon",0},
    { "_FXPyICOIcon","_class_FXPyICOIcon",0},
    { "_class_FXSwitcher","_class_FXPySwitcher",SwigFXPySwitcherToFXSwitcher},
    { "_class_FXSwitcher","_FXPySwitcher",SwigFXPySwitcherToFXSwitcher},
    { "_class_FXSwitcher","_FXSwitcher",0},
    { "_FXPyShutterItem","_class_FXPyShutterItem",0},
    { "_FXPSBounds","_struct_FXPSBounds",0},
    { "_FXPyJPGImage","_class_FXPyJPGImage",0},
    { "_class_FXPyPCXIcon","_FXPyPCXIcon",0},
    { "_FXTGAIcon","_class_FXTGAIcon",0},
    { "_FXDelegator","_class_FXDelegator",0},
    { "_FXGroupBox","_class_FXPyGroupBox",SwigFXPyGroupBoxToFXGroupBox},
    { "_FXGroupBox","_FXPyGroupBox",SwigFXPyGroupBoxToFXGroupBox},
    { "_FXGroupBox","_class_FXGroupBox",0},
    { "_class_FXPNGImage","_FXPNGImage",0},
    { "_class_FXPyPNGIcon","_FXPyPNGIcon",0},
    { "_class_FXPyRootWindow","_FXPyRootWindow",0},
    { "_class_FXPyTGAImage","_FXPyTGAImage",0},
    { "_class_FXDict","_FXDict",0},
    { "_class_FXVerticalSeparator","_class_FXPyVerticalSeparator",SwigFXPyVerticalSeparatorToFXVerticalSeparator},
    { "_class_FXVerticalSeparator","_FXPyVerticalSeparator",SwigFXPyVerticalSeparatorToFXVerticalSeparator},
    { "_class_FXVerticalSeparator","_FXVerticalSeparator",0},
    { "_class_FXShell","_FXShell",0},
    { "_FXPyShutter","_class_FXPyShutter",0},
    { "_FXInputHandle","_FXint",0},
    { "_FXInputHandle","_FXuint",0},
    { "_FXInputHandle","_unsigned_int",0},
    { "_FXInputHandle","_signed_int",0},
    { "_FXInputHandle","_int",0},
    { "_FXInputHandle","_FXSelector",0},
    { "_FXInputHandle","_FXID",0},
    { "_FXInputHandle","_FXColor",0},
    { "_FXInputHandle","_FXHotKey",0},
    { "_FXInputHandle","_FXDragType",0},
    { "_class_FXPyFileStream","_FXPyFileStream",0},
    { "_class_FXPyDCWindow","_FXPyDCWindow",0},
    { "_FXFont","_class_FXFont",0},
    { "_FXPyRGBImage","_class_FXPyRGBImage",0},
    { "_class_FXPyDataTarget","_FXPyDataTarget",0},
    { "_class_FXObject","_class_FXPyShutter",SwigFXPyShutterToFXObject},
    { "_class_FXObject","_FXPyShutter",SwigFXPyShutterToFXObject},
    { "_class_FXObject","_class_FXShutter",SwigFXShutterToFXObject},
    { "_class_FXObject","_FXShutter",SwigFXShutterToFXObject},
    { "_class_FXObject","_class_FXPyShutterItem",SwigFXPyShutterItemToFXObject},
    { "_class_FXObject","_FXPyShutterItem",SwigFXPyShutterItemToFXObject},
    { "_class_FXObject","_class_FXShutterItem",SwigFXShutterItemToFXObject},
    { "_class_FXObject","_FXShutterItem",SwigFXShutterItemToFXObject},
    { "_class_FXObject","_class_FXPy4Splitter",SwigFXPy4SplitterToFXObject},
    { "_class_FXObject","_FXPy4Splitter",SwigFXPy4SplitterToFXObject},
    { "_class_FXObject","_class_FX4Splitter",SwigFX4SplitterToFXObject},
    { "_class_FXObject","_FX4Splitter",SwigFX4SplitterToFXObject},
    { "_class_FXObject","_class_FXPySplitter",SwigFXPySplitterToFXObject},
    { "_class_FXObject","_FXPySplitter",SwigFXPySplitterToFXObject},
    { "_class_FXObject","_class_FXSplitter",SwigFXSplitterToFXObject},
    { "_class_FXObject","_FXSplitter",SwigFXSplitterToFXObject},
    { "_class_FXObject","_class_FXPyScrollWindow",SwigFXPyScrollWindowToFXObject},
    { "_class_FXObject","_FXPyScrollWindow",SwigFXPyScrollWindowToFXObject},
    { "_class_FXObject","_class_FXScrollWindow",SwigFXScrollWindowToFXObject},
    { "_class_FXObject","_FXScrollWindow",SwigFXScrollWindowToFXObject},
    { "_class_FXObject","_class_FXPyScrollArea",SwigFXPyScrollAreaToFXObject},
    { "_class_FXObject","_FXPyScrollArea",SwigFXPyScrollAreaToFXObject},
    { "_class_FXObject","_class_FXScrollArea",SwigFXScrollAreaToFXObject},
    { "_class_FXObject","_FXScrollArea",SwigFXScrollAreaToFXObject},
    { "_class_FXObject","_class_FXPySwitcher",SwigFXPySwitcherToFXObject},
    { "_class_FXObject","_FXPySwitcher",SwigFXPySwitcherToFXObject},
    { "_class_FXObject","_class_FXSwitcher",SwigFXSwitcherToFXObject},
    { "_class_FXObject","_FXSwitcher",SwigFXSwitcherToFXObject},
    { "_class_FXObject","_class_FXPyGroupBox",SwigFXPyGroupBoxToFXObject},
    { "_class_FXObject","_FXPyGroupBox",SwigFXPyGroupBoxToFXObject},
    { "_class_FXObject","_class_FXGroupBox",SwigFXGroupBoxToFXObject},
    { "_class_FXObject","_FXGroupBox",SwigFXGroupBoxToFXObject},
    { "_class_FXObject","_class_FXPyMatrix",SwigFXPyMatrixToFXObject},
    { "_class_FXObject","_FXPyMatrix",SwigFXPyMatrixToFXObject},
    { "_class_FXObject","_class_FXMatrix",SwigFXMatrixToFXObject},
    { "_class_FXObject","_FXMatrix",SwigFXMatrixToFXObject},
    { "_class_FXObject","_class_FXPyVerticalFrame",SwigFXPyVerticalFrameToFXObject},
    { "_class_FXObject","_FXPyVerticalFrame",SwigFXPyVerticalFrameToFXObject},
    { "_class_FXObject","_class_FXVerticalFrame",SwigFXVerticalFrameToFXObject},
    { "_class_FXObject","_FXVerticalFrame",SwigFXVerticalFrameToFXObject},
    { "_class_FXObject","_class_FXPyHorizontalFrame",SwigFXPyHorizontalFrameToFXObject},
    { "_class_FXObject","_FXPyHorizontalFrame",SwigFXPyHorizontalFrameToFXObject},
    { "_class_FXObject","_class_FXHorizontalFrame",SwigFXHorizontalFrameToFXObject},
    { "_class_FXObject","_FXHorizontalFrame",SwigFXHorizontalFrameToFXObject},
    { "_class_FXObject","_class_FXPyPacker",SwigFXPyPackerToFXObject},
    { "_class_FXObject","_FXPyPacker",SwigFXPyPackerToFXObject},
    { "_class_FXObject","_class_FXPacker",SwigFXPackerToFXObject},
    { "_class_FXObject","_FXPacker",SwigFXPackerToFXObject},
    { "_class_FXObject","_class_FXPyVerticalSeparator",SwigFXPyVerticalSeparatorToFXObject},
    { "_class_FXObject","_FXPyVerticalSeparator",SwigFXPyVerticalSeparatorToFXObject},
    { "_class_FXObject","_class_FXVerticalSeparator",SwigFXVerticalSeparatorToFXObject},
    { "_class_FXObject","_FXVerticalSeparator",SwigFXVerticalSeparatorToFXObject},
    { "_class_FXObject","_class_FXPyHorizontalSeparator",SwigFXPyHorizontalSeparatorToFXObject},
    { "_class_FXObject","_FXPyHorizontalSeparator",SwigFXPyHorizontalSeparatorToFXObject},
    { "_class_FXObject","_class_FXHorizontalSeparator",SwigFXHorizontalSeparatorToFXObject},
    { "_class_FXObject","_FXHorizontalSeparator",SwigFXHorizontalSeparatorToFXObject},
    { "_class_FXObject","_FXObject",0},
    { "_FXXPMIcon","_class_FXXPMIcon",0},
    { "_FXPyPopup","_class_FXPyPopup",0},
    { "_FXPyVerticalFrame","_class_FXPyVerticalFrame",0},
    { "_FXId","_class_FXPyShutter",SwigFXPyShutterToFXId},
    { "_FXId","_FXPyShutter",SwigFXPyShutterToFXId},
    { "_FXId","_class_FXShutter",SwigFXShutterToFXId},
    { "_FXId","_FXShutter",SwigFXShutterToFXId},
    { "_FXId","_class_FXPyShutterItem",SwigFXPyShutterItemToFXId},
    { "_FXId","_FXPyShutterItem",SwigFXPyShutterItemToFXId},
    { "_FXId","_class_FXShutterItem",SwigFXShutterItemToFXId},
    { "_FXId","_FXShutterItem",SwigFXShutterItemToFXId},
    { "_FXId","_class_FXPy4Splitter",SwigFXPy4SplitterToFXId},
    { "_FXId","_FXPy4Splitter",SwigFXPy4SplitterToFXId},
    { "_FXId","_class_FX4Splitter",SwigFX4SplitterToFXId},
    { "_FXId","_FX4Splitter",SwigFX4SplitterToFXId},
    { "_FXId","_class_FXPySplitter",SwigFXPySplitterToFXId},
    { "_FXId","_FXPySplitter",SwigFXPySplitterToFXId},
    { "_FXId","_class_FXSplitter",SwigFXSplitterToFXId},
    { "_FXId","_FXSplitter",SwigFXSplitterToFXId},
    { "_FXId","_class_FXPyScrollWindow",SwigFXPyScrollWindowToFXId},
    { "_FXId","_FXPyScrollWindow",SwigFXPyScrollWindowToFXId},
    { "_FXId","_class_FXScrollWindow",SwigFXScrollWindowToFXId},
    { "_FXId","_FXScrollWindow",SwigFXScrollWindowToFXId},
    { "_FXId","_class_FXPyScrollArea",SwigFXPyScrollAreaToFXId},
    { "_FXId","_FXPyScrollArea",SwigFXPyScrollAreaToFXId},
    { "_FXId","_class_FXScrollArea",SwigFXScrollAreaToFXId},
    { "_FXId","_FXScrollArea",SwigFXScrollAreaToFXId},
    { "_FXId","_class_FXPySwitcher",SwigFXPySwitcherToFXId},
    { "_FXId","_FXPySwitcher",SwigFXPySwitcherToFXId},
    { "_FXId","_class_FXSwitcher",SwigFXSwitcherToFXId},
    { "_FXId","_FXSwitcher",SwigFXSwitcherToFXId},
    { "_FXId","_class_FXPyGroupBox",SwigFXPyGroupBoxToFXId},
    { "_FXId","_FXPyGroupBox",SwigFXPyGroupBoxToFXId},
    { "_FXId","_class_FXGroupBox",SwigFXGroupBoxToFXId},
    { "_FXId","_FXGroupBox",SwigFXGroupBoxToFXId},
    { "_FXId","_class_FXPyMatrix",SwigFXPyMatrixToFXId},
    { "_FXId","_FXPyMatrix",SwigFXPyMatrixToFXId},
    { "_FXId","_class_FXMatrix",SwigFXMatrixToFXId},
    { "_FXId","_FXMatrix",SwigFXMatrixToFXId},
    { "_FXId","_class_FXPyVerticalFrame",SwigFXPyVerticalFrameToFXId},
    { "_FXId","_FXPyVerticalFrame",SwigFXPyVerticalFrameToFXId},
    { "_FXId","_class_FXVerticalFrame",SwigFXVerticalFrameToFXId},
    { "_FXId","_FXVerticalFrame",SwigFXVerticalFrameToFXId},
    { "_FXId","_class_FXPyHorizontalFrame",SwigFXPyHorizontalFrameToFXId},
    { "_FXId","_FXPyHorizontalFrame",SwigFXPyHorizontalFrameToFXId},
    { "_FXId","_class_FXHorizontalFrame",SwigFXHorizontalFrameToFXId},
    { "_FXId","_FXHorizontalFrame",SwigFXHorizontalFrameToFXId},
    { "_FXId","_class_FXPyPacker",SwigFXPyPackerToFXId},
    { "_FXId","_FXPyPacker",SwigFXPyPackerToFXId},
    { "_FXId","_class_FXPacker",SwigFXPackerToFXId},
    { "_FXId","_FXPacker",SwigFXPackerToFXId},
    { "_FXId","_class_FXPyVerticalSeparator",SwigFXPyVerticalSeparatorToFXId},
    { "_FXId","_FXPyVerticalSeparator",SwigFXPyVerticalSeparatorToFXId},
    { "_FXId","_class_FXVerticalSeparator",SwigFXVerticalSeparatorToFXId},
    { "_FXId","_FXVerticalSeparator",SwigFXVerticalSeparatorToFXId},
    { "_FXId","_class_FXPyHorizontalSeparator",SwigFXPyHorizontalSeparatorToFXId},
    { "_FXId","_FXPyHorizontalSeparator",SwigFXPyHorizontalSeparatorToFXId},
    { "_FXId","_class_FXHorizontalSeparator",SwigFXHorizontalSeparatorToFXId},
    { "_FXId","_FXHorizontalSeparator",SwigFXHorizontalSeparatorToFXId},
    { "_FXId","_class_FXId",0},
    { "_class_FXDrawable","_class_FXPyShutter",SwigFXPyShutterToFXDrawable},
    { "_class_FXDrawable","_FXPyShutter",SwigFXPyShutterToFXDrawable},
    { "_class_FXDrawable","_class_FXShutter",SwigFXShutterToFXDrawable},
    { "_class_FXDrawable","_FXShutter",SwigFXShutterToFXDrawable},
    { "_class_FXDrawable","_class_FXPyShutterItem",SwigFXPyShutterItemToFXDrawable},
    { "_class_FXDrawable","_FXPyShutterItem",SwigFXPyShutterItemToFXDrawable},
    { "_class_FXDrawable","_class_FXShutterItem",SwigFXShutterItemToFXDrawable},
    { "_class_FXDrawable","_FXShutterItem",SwigFXShutterItemToFXDrawable},
    { "_class_FXDrawable","_class_FXPy4Splitter",SwigFXPy4SplitterToFXDrawable},
    { "_class_FXDrawable","_FXPy4Splitter",SwigFXPy4SplitterToFXDrawable},
    { "_class_FXDrawable","_class_FX4Splitter",SwigFX4SplitterToFXDrawable},
    { "_class_FXDrawable","_FX4Splitter",SwigFX4SplitterToFXDrawable},
    { "_class_FXDrawable","_class_FXPySplitter",SwigFXPySplitterToFXDrawable},
    { "_class_FXDrawable","_FXPySplitter",SwigFXPySplitterToFXDrawable},
    { "_class_FXDrawable","_class_FXSplitter",SwigFXSplitterToFXDrawable},
    { "_class_FXDrawable","_FXSplitter",SwigFXSplitterToFXDrawable},
    { "_class_FXDrawable","_class_FXPyScrollWindow",SwigFXPyScrollWindowToFXDrawable},
    { "_class_FXDrawable","_FXPyScrollWindow",SwigFXPyScrollWindowToFXDrawable},
    { "_class_FXDrawable","_class_FXScrollWindow",SwigFXScrollWindowToFXDrawable},
    { "_class_FXDrawable","_FXScrollWindow",SwigFXScrollWindowToFXDrawable},
    { "_class_FXDrawable","_class_FXPyScrollArea",SwigFXPyScrollAreaToFXDrawable},
    { "_class_FXDrawable","_FXPyScrollArea",SwigFXPyScrollAreaToFXDrawable},
    { "_class_FXDrawable","_class_FXScrollArea",SwigFXScrollAreaToFXDrawable},
    { "_class_FXDrawable","_FXScrollArea",SwigFXScrollAreaToFXDrawable},
    { "_class_FXDrawable","_class_FXPySwitcher",SwigFXPySwitcherToFXDrawable},
    { "_class_FXDrawable","_FXPySwitcher",SwigFXPySwitcherToFXDrawable},
    { "_class_FXDrawable","_class_FXSwitcher",SwigFXSwitcherToFXDrawable},
    { "_class_FXDrawable","_FXSwitcher",SwigFXSwitcherToFXDrawable},
    { "_class_FXDrawable","_class_FXPyGroupBox",SwigFXPyGroupBoxToFXDrawable},
    { "_class_FXDrawable","_FXPyGroupBox",SwigFXPyGroupBoxToFXDrawable},
    { "_class_FXDrawable","_class_FXGroupBox",SwigFXGroupBoxToFXDrawable},
    { "_class_FXDrawable","_FXGroupBox",SwigFXGroupBoxToFXDrawable},
    { "_class_FXDrawable","_class_FXPyMatrix",SwigFXPyMatrixToFXDrawable},
    { "_class_FXDrawable","_FXPyMatrix",SwigFXPyMatrixToFXDrawable},
    { "_class_FXDrawable","_class_FXMatrix",SwigFXMatrixToFXDrawable},
    { "_class_FXDrawable","_FXMatrix",SwigFXMatrixToFXDrawable},
    { "_class_FXDrawable","_class_FXPyVerticalFrame",SwigFXPyVerticalFrameToFXDrawable},
    { "_class_FXDrawable","_FXPyVerticalFrame",SwigFXPyVerticalFrameToFXDrawable},
    { "_class_FXDrawable","_class_FXVerticalFrame",SwigFXVerticalFrameToFXDrawable},
    { "_class_FXDrawable","_FXVerticalFrame",SwigFXVerticalFrameToFXDrawable},
    { "_class_FXDrawable","_class_FXPyHorizontalFrame",SwigFXPyHorizontalFrameToFXDrawable},
    { "_class_FXDrawable","_FXPyHorizontalFrame",SwigFXPyHorizontalFrameToFXDrawable},
    { "_class_FXDrawable","_class_FXHorizontalFrame",SwigFXHorizontalFrameToFXDrawable},
    { "_class_FXDrawable","_FXHorizontalFrame",SwigFXHorizontalFrameToFXDrawable},
    { "_class_FXDrawable","_class_FXPyPacker",SwigFXPyPackerToFXDrawable},
    { "_class_FXDrawable","_FXPyPacker",SwigFXPyPackerToFXDrawable},
    { "_class_FXDrawable","_class_FXPacker",SwigFXPackerToFXDrawable},
    { "_class_FXDrawable","_FXPacker",SwigFXPackerToFXDrawable},
    { "_class_FXDrawable","_class_FXPyVerticalSeparator",SwigFXPyVerticalSeparatorToFXDrawable},
    { "_class_FXDrawable","_FXPyVerticalSeparator",SwigFXPyVerticalSeparatorToFXDrawable},
    { "_class_FXDrawable","_class_FXVerticalSeparator",SwigFXVerticalSeparatorToFXDrawable},
    { "_class_FXDrawable","_FXVerticalSeparator",SwigFXVerticalSeparatorToFXDrawable},
    { "_class_FXDrawable","_class_FXPyHorizontalSeparator",SwigFXPyHorizontalSeparatorToFXDrawable},
    { "_class_FXDrawable","_FXPyHorizontalSeparator",SwigFXPyHorizontalSeparatorToFXDrawable},
    { "_class_FXDrawable","_class_FXHorizontalSeparator",SwigFXHorizontalSeparatorToFXDrawable},
    { "_class_FXDrawable","_FXHorizontalSeparator",SwigFXHorizontalSeparatorToFXDrawable},
    { "_class_FXDrawable","_FXDrawable",0},
    { "_FXPyBMPImage","_class_FXPyBMPImage",0},
    { "_FXPyICOImage","_class_FXPyICOImage",0},
    { "_FXPyMainWindow","_class_FXPyMainWindow",0},
    { "_FXHorizontalFrame","_class_FXPyHorizontalFrame",SwigFXPyHorizontalFrameToFXHorizontalFrame},
    { "_FXHorizontalFrame","_FXPyHorizontalFrame",SwigFXPyHorizontalFrameToFXHorizontalFrame},
    { "_FXHorizontalFrame","_class_FXHorizontalFrame",0},
    { "_FXPyPCXImage","_class_FXPyPCXImage",0},
    { "_FXPyRGBIcon","_class_FXPyRGBIcon",0},
    { "_class_FXPyJPGIcon","_FXPyJPGIcon",0},
    { "_FXTIFIcon","_class_FXTIFIcon",0},
    { "_FXScrollWindow","_class_FXPyScrollWindow",SwigFXPyScrollWindowToFXScrollWindow},
    { "_FXScrollWindow","_FXPyScrollWindow",SwigFXPyScrollWindowToFXScrollWindow},
    { "_FXScrollWindow","_class_FXScrollWindow",0},
    { "_FXMainWindow","_class_FXMainWindow",0},
    { "_class_FXMatrix","_class_FXPyMatrix",SwigFXPyMatrixToFXMatrix},
    { "_class_FXMatrix","_FXPyMatrix",SwigFXPyMatrixToFXMatrix},
    { "_class_FXMatrix","_FXMatrix",0},
    { "__XEvent","_FXRawEvent",0},
    { "_class_FXPyShutterItem","_FXPyShutterItem",0},
    { "_struct_FXEvent","_FXEvent",0},
    { "_class_FXStream","_FXStream",0},
    { "_class_FXPyStringDict","_FXPyStringDict",0},
    { "_class_FXPyJPGImage","_FXPyJPGImage",0},
    { "_FXTIFImage","_class_FXTIFImage",0},
    { "_FXPyIcon","_class_FXPyIcon",0},
    { "_FXPyAccelTable","_class_FXPyAccelTable",0},
    { "_class_FXTGAIcon","_FXTGAIcon",0},
    { "_struct_FXPSBounds","_FXPSBounds",0},
    { "_FXDCPrint","_class_FXPyDCPrint",SwigFXPyDCPrintToFXDCPrint},
    { "_FXDCPrint","_FXPyDCPrint",SwigFXPyDCPrintToFXDCPrint},
    { "_FXDCPrint","_class_FXDCPrint",0},
    { "_class_FXImage","_FXImage",0},
    { "_FXPoint","_class_FXPoint",0},
    { "_FXAccelTable","_class_FXAccelTable",0},
    { "_FXPyId","_class_FXPyId",0},
    { "_FXSelector","_FXInputHandle",0},
    { "_FXSelector","_FXDragType",0},
    { "_FXSelector","_FXHotKey",0},
    { "_FXSelector","_FXColor",0},
    { "_FXSelector","_FXID",0},
    { "_FXSelector","_FXuint",0},
    { "_FXSelector","_int",0},
    { "_FXSelector","_unsigned_int",0},
    { "_FXSelector","_FXint",0},
    { "_class_FXFont","_FXFont",0},
    { "_class_FXXPMImage","_FXXPMImage",0},
    { "_FXPyRecentFiles","_class_FXPyRecentFiles",0},
    { "_FXPyDebugTarget","_class_FXPyDebugTarget",0},
    { "_FXCommand","_class_FXCommand",0},
    { "_FXPyFrame","_class_FXPyFrame",0},
    { "_class_FXGIFImage","_FXGIFImage",0},
    { "_class_FXPyRGBImage","_FXPyRGBImage",0},
    { "_class_FXSplitter","_class_FXPySplitter",SwigFXPySplitterToFXSplitter},
    { "_class_FXSplitter","_FXPySplitter",SwigFXPySplitterToFXSplitter},
    { "_class_FXSplitter","_FXSplitter",0},
    { "_class_FXXPMIcon","_FXXPMIcon",0},
    { "_class_FXPyPopup","_FXPyPopup",0},
{0,0,0}};

static PyObject *SWIG_globals;
#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT(void) initcontainersc() {
	 PyObject *m, *d;
	 SWIG_globals = SWIG_newvarlink();
	 m = Py_InitModule("containersc", containerscMethods);
	 d = PyModule_GetDict(m);
	 PyDict_SetItemString(d,"BLT_CLR", PyInt_FromLong((long) BLT_CLR));
	 PyDict_SetItemString(d,"BLT_SRC_AND_DST", PyInt_FromLong((long) BLT_SRC_AND_DST));
	 PyDict_SetItemString(d,"BLT_SRC_AND_NOT_DST", PyInt_FromLong((long) BLT_SRC_AND_NOT_DST));
	 PyDict_SetItemString(d,"BLT_SRC", PyInt_FromLong((long) BLT_SRC));
	 PyDict_SetItemString(d,"BLT_NOT_SRC_AND_DST", PyInt_FromLong((long) BLT_NOT_SRC_AND_DST));
	 PyDict_SetItemString(d,"BLT_DST", PyInt_FromLong((long) BLT_DST));
	 PyDict_SetItemString(d,"BLT_SRC_XOR_DST", PyInt_FromLong((long) BLT_SRC_XOR_DST));
	 PyDict_SetItemString(d,"BLT_SRC_OR_DST", PyInt_FromLong((long) BLT_SRC_OR_DST));
	 PyDict_SetItemString(d,"BLT_NOT_SRC_AND_NOT_DST", PyInt_FromLong((long) BLT_NOT_SRC_AND_NOT_DST));
	 PyDict_SetItemString(d,"BLT_NOT_SRC_XOR_DST", PyInt_FromLong((long) BLT_NOT_SRC_XOR_DST));
	 PyDict_SetItemString(d,"BLT_NOT_DST", PyInt_FromLong((long) BLT_NOT_DST));
	 PyDict_SetItemString(d,"BLT_SRC_OR_NOT_DST", PyInt_FromLong((long) BLT_SRC_OR_NOT_DST));
	 PyDict_SetItemString(d,"BLT_NOT_SRC", PyInt_FromLong((long) BLT_NOT_SRC));
	 PyDict_SetItemString(d,"BLT_NOT_SRC_OR_DST", PyInt_FromLong((long) BLT_NOT_SRC_OR_DST));
	 PyDict_SetItemString(d,"BLT_NOT_SRC_OR_NOT_DST", PyInt_FromLong((long) BLT_NOT_SRC_OR_NOT_DST));
	 PyDict_SetItemString(d,"BLT_SET", PyInt_FromLong((long) BLT_SET));
	 PyDict_SetItemString(d,"LINE_SOLID", PyInt_FromLong((long) LINE_SOLID));
	 PyDict_SetItemString(d,"LINE_ONOFF_DASH", PyInt_FromLong((long) LINE_ONOFF_DASH));
	 PyDict_SetItemString(d,"LINE_DOUBLE_DASH", PyInt_FromLong((long) LINE_DOUBLE_DASH));
	 PyDict_SetItemString(d,"CAP_NOT_LAST", PyInt_FromLong((long) CAP_NOT_LAST));
	 PyDict_SetItemString(d,"CAP_BUTT", PyInt_FromLong((long) CAP_BUTT));
	 PyDict_SetItemString(d,"CAP_ROUND", PyInt_FromLong((long) CAP_ROUND));
	 PyDict_SetItemString(d,"CAP_PROJECTING", PyInt_FromLong((long) CAP_PROJECTING));
	 PyDict_SetItemString(d,"JOIN_MITER", PyInt_FromLong((long) JOIN_MITER));
	 PyDict_SetItemString(d,"JOIN_ROUND", PyInt_FromLong((long) JOIN_ROUND));
	 PyDict_SetItemString(d,"JOIN_BEVEL", PyInt_FromLong((long) JOIN_BEVEL));
	 PyDict_SetItemString(d,"FILL_SOLID", PyInt_FromLong((long) FILL_SOLID));
	 PyDict_SetItemString(d,"FILL_TILED", PyInt_FromLong((long) FILL_TILED));
	 PyDict_SetItemString(d,"FILL_STIPPLED", PyInt_FromLong((long) FILL_STIPPLED));
	 PyDict_SetItemString(d,"FILL_OPAQUESTIPPLED", PyInt_FromLong((long) FILL_OPAQUESTIPPLED));
	 PyDict_SetItemString(d,"RULE_EVEN_ODD", PyInt_FromLong((long) RULE_EVEN_ODD));
	 PyDict_SetItemString(d,"RULE_WINDING", PyInt_FromLong((long) RULE_WINDING));
	 PyDict_SetItemString(d,"STIPPLE_0", PyInt_FromLong((long) STIPPLE_0));
	 PyDict_SetItemString(d,"STIPPLE_NONE", PyInt_FromLong((long) STIPPLE_NONE));
	 PyDict_SetItemString(d,"STIPPLE_BLACK", PyInt_FromLong((long) STIPPLE_BLACK));
	 PyDict_SetItemString(d,"STIPPLE_1", PyInt_FromLong((long) STIPPLE_1));
	 PyDict_SetItemString(d,"STIPPLE_2", PyInt_FromLong((long) STIPPLE_2));
	 PyDict_SetItemString(d,"STIPPLE_3", PyInt_FromLong((long) STIPPLE_3));
	 PyDict_SetItemString(d,"STIPPLE_4", PyInt_FromLong((long) STIPPLE_4));
	 PyDict_SetItemString(d,"STIPPLE_5", PyInt_FromLong((long) STIPPLE_5));
	 PyDict_SetItemString(d,"STIPPLE_6", PyInt_FromLong((long) STIPPLE_6));
	 PyDict_SetItemString(d,"STIPPLE_7", PyInt_FromLong((long) STIPPLE_7));
	 PyDict_SetItemString(d,"STIPPLE_8", PyInt_FromLong((long) STIPPLE_8));
	 PyDict_SetItemString(d,"STIPPLE_GRAY", PyInt_FromLong((long) STIPPLE_GRAY));
	 PyDict_SetItemString(d,"STIPPLE_9", PyInt_FromLong((long) STIPPLE_9));
	 PyDict_SetItemString(d,"STIPPLE_10", PyInt_FromLong((long) STIPPLE_10));
	 PyDict_SetItemString(d,"STIPPLE_11", PyInt_FromLong((long) STIPPLE_11));
	 PyDict_SetItemString(d,"STIPPLE_12", PyInt_FromLong((long) STIPPLE_12));
	 PyDict_SetItemString(d,"STIPPLE_13", PyInt_FromLong((long) STIPPLE_13));
	 PyDict_SetItemString(d,"STIPPLE_14", PyInt_FromLong((long) STIPPLE_14));
	 PyDict_SetItemString(d,"STIPPLE_15", PyInt_FromLong((long) STIPPLE_15));
	 PyDict_SetItemString(d,"STIPPLE_16", PyInt_FromLong((long) STIPPLE_16));
	 PyDict_SetItemString(d,"STIPPLE_WHITE", PyInt_FromLong((long) STIPPLE_WHITE));
	 PyDict_SetItemString(d,"STIPPLE_HORZ", PyInt_FromLong((long) STIPPLE_HORZ));
	 PyDict_SetItemString(d,"STIPPLE_VERT", PyInt_FromLong((long) STIPPLE_VERT));
	 PyDict_SetItemString(d,"STIPPLE_CROSS", PyInt_FromLong((long) STIPPLE_CROSS));
	 PyDict_SetItemString(d,"STIPPLE_DIAG", PyInt_FromLong((long) STIPPLE_DIAG));
	 PyDict_SetItemString(d,"STIPPLE_REVDIAG", PyInt_FromLong((long) STIPPLE_REVDIAG));
	 PyDict_SetItemString(d,"STIPPLE_CROSSDIAG", PyInt_FromLong((long) STIPPLE_CROSSDIAG));
	 PyDict_SetItemString(d,"SEPARATOR_NONE", PyInt_FromLong((long) SEPARATOR_NONE));
	 PyDict_SetItemString(d,"SEPARATOR_GROOVE", PyInt_FromLong((long) SEPARATOR_GROOVE));
	 PyDict_SetItemString(d,"SEPARATOR_RIDGE", PyInt_FromLong((long) SEPARATOR_RIDGE));
	 PyDict_SetItemString(d,"SEPARATOR_LINE", PyInt_FromLong((long) SEPARATOR_LINE));
	 PyDict_SetItemString(d,"DEFAULT_SPACING", PyInt_FromLong((long) 4));
	 PyDict_SetItemString(d,"MATRIX_BY_ROWS", PyInt_FromLong((long) MATRIX_BY_ROWS));
	 PyDict_SetItemString(d,"MATRIX_BY_COLUMNS", PyInt_FromLong((long) MATRIX_BY_COLUMNS));
	 PyDict_SetItemString(d,"GROUPBOX_TITLE_LEFT", PyInt_FromLong((long) GROUPBOX_TITLE_LEFT));
	 PyDict_SetItemString(d,"GROUPBOX_TITLE_CENTER", PyInt_FromLong((long) GROUPBOX_TITLE_CENTER));
	 PyDict_SetItemString(d,"GROUPBOX_TITLE_RIGHT", PyInt_FromLong((long) GROUPBOX_TITLE_RIGHT));
	 PyDict_SetItemString(d,"GROUPBOX_NORMAL", PyInt_FromLong((long) GROUPBOX_NORMAL));
	 PyDict_SetItemString(d,"SWITCHER_HCOLLAPSE", PyInt_FromLong((long) SWITCHER_HCOLLAPSE));
	 PyDict_SetItemString(d,"SWITCHER_VCOLLAPSE", PyInt_FromLong((long) SWITCHER_VCOLLAPSE));
	 PyDict_SetItemString(d,"SCROLLERS_NORMAL", PyInt_FromLong((long) SCROLLERS_NORMAL));
	 PyDict_SetItemString(d,"HSCROLLER_ALWAYS", PyInt_FromLong((long) HSCROLLER_ALWAYS));
	 PyDict_SetItemString(d,"HSCROLLER_NEVER", PyInt_FromLong((long) HSCROLLER_NEVER));
	 PyDict_SetItemString(d,"VSCROLLER_ALWAYS", PyInt_FromLong((long) VSCROLLER_ALWAYS));
	 PyDict_SetItemString(d,"VSCROLLER_NEVER", PyInt_FromLong((long) VSCROLLER_NEVER));
	 PyDict_SetItemString(d,"HSCROLLING_ON", PyInt_FromLong((long) HSCROLLING_ON));
	 PyDict_SetItemString(d,"HSCROLLING_OFF", PyInt_FromLong((long) HSCROLLING_OFF));
	 PyDict_SetItemString(d,"VSCROLLING_ON", PyInt_FromLong((long) VSCROLLING_ON));
	 PyDict_SetItemString(d,"VSCROLLING_OFF", PyInt_FromLong((long) VSCROLLING_OFF));
	 PyDict_SetItemString(d,"SCROLLERS_TRACK", PyInt_FromLong((long) SCROLLERS_TRACK));
	 PyDict_SetItemString(d,"SCROLLERS_DONT_TRACK", PyInt_FromLong((long) SCROLLERS_DONT_TRACK));
	 PyDict_SetItemString(d,"SPLITTER_HORIZONTAL", PyInt_FromLong((long) SPLITTER_HORIZONTAL));
	 PyDict_SetItemString(d,"SPLITTER_VERTICAL", PyInt_FromLong((long) SPLITTER_VERTICAL));
	 PyDict_SetItemString(d,"SPLITTER_REVERSED", PyInt_FromLong((long) SPLITTER_REVERSED));
	 PyDict_SetItemString(d,"SPLITTER_TRACKING", PyInt_FromLong((long) SPLITTER_TRACKING));
	 PyDict_SetItemString(d,"SPLITTER_NORMAL", PyInt_FromLong((long) SPLITTER_NORMAL));
	 PyDict_SetItemString(d,"FOURSPLITTER_TRACKING", PyInt_FromLong((long) FOURSPLITTER_TRACKING));
	 PyDict_SetItemString(d,"FOURSPLITTER_NORMAL", PyInt_FromLong((long) FOURSPLITTER_NORMAL));
	 PyDict_SetItemString(d,"FX_Switcher_ID_OPEN_FIRST", PyInt_FromLong((long) FXSwitcher::ID_OPEN_FIRST));
	 PyDict_SetItemString(d,"FX_Switcher_ID_OPEN_LAST", PyInt_FromLong((long) FXSwitcher::ID_OPEN_LAST));
	 PyDict_SetItemString(d,"FX_Switcher_ID_LAST", PyInt_FromLong((long) FXSwitcher::ID_LAST));
	 PyDict_SetItemString(d,"FX_4Splitter_ID_EXPAND_ALL", PyInt_FromLong((long) FX4Splitter::ID_EXPAND_ALL));
	 PyDict_SetItemString(d,"FX_4Splitter_ID_EXPAND_TOPLEFT", PyInt_FromLong((long) FX4Splitter::ID_EXPAND_TOPLEFT));
	 PyDict_SetItemString(d,"FX_4Splitter_ID_EXPAND_TOPRIGHT", PyInt_FromLong((long) FX4Splitter::ID_EXPAND_TOPRIGHT));
	 PyDict_SetItemString(d,"FX_4Splitter_ID_EXPAND_BOTTOMLEFT", PyInt_FromLong((long) FX4Splitter::ID_EXPAND_BOTTOMLEFT));
	 PyDict_SetItemString(d,"FX_4Splitter_ID_EXPAND_BOTTOMRIGHT", PyInt_FromLong((long) FX4Splitter::ID_EXPAND_BOTTOMRIGHT));
	 PyDict_SetItemString(d,"FX_4Splitter_ID_LAST", PyInt_FromLong((long) FX4Splitter::ID_LAST));
	 PyDict_SetItemString(d,"FX_ShutterItem_ID_SHUTTERITEM_BUTTON", PyInt_FromLong((long) FXShutterItem::ID_SHUTTERITEM_BUTTON));
	 PyDict_SetItemString(d,"FX_ShutterItem_ID_LAST", PyInt_FromLong((long) FXShutterItem::ID_LAST));
	 PyDict_SetItemString(d,"FX_Shutter_ID_SHUTTER_TIMEOUT", PyInt_FromLong((long) FXShutter::ID_SHUTTER_TIMEOUT));
	 PyDict_SetItemString(d,"FX_Shutter_ID_OPEN_SHUTTERITEM", PyInt_FromLong((long) FXShutter::ID_OPEN_SHUTTERITEM));
	 PyDict_SetItemString(d,"FX_Shutter_ID_OPEN_FIRST", PyInt_FromLong((long) FXShutter::ID_OPEN_FIRST));
	 PyDict_SetItemString(d,"FX_Shutter_ID_OPEN_LAST", PyInt_FromLong((long) FXShutter::ID_OPEN_LAST));
	 PyDict_SetItemString(d,"FX_Shutter_ID_LAST", PyInt_FromLong((long) FXShutter::ID_LAST));
{
   int i;
   for (i = 0; _swig_mapping[i].n1; i++)
        SWIG_RegisterMapping(_swig_mapping[i].n1,_swig_mapping[i].n2,_swig_mapping[i].pcnv);
}
}
