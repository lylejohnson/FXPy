/*
 * FILE : ../src/treelist.cpp
 * 
 * This file was automatically generated by :
 * Simplified Wrapper and Interface Generator (SWIG)
 * Version 1.1 (Build 883)
 * 
 * Portions Copyright (c) 1995-1998
 * The University of Utah and The Regents of the University of California.
 * Permission is granted to distribute this file in any manner provided
 * this notice remains intact.
 * 
 * Do not make changes to this file--changes will be lost!
 *
 */


#define SWIGCODE
/* Implementation : PYTHON */

#define SWIGPYTHON
#include <string.h>
#include <stdlib.h>
/* Definitions for Windows/Unix exporting */
#if defined(__WIN32__)
#   if defined(_MSC_VER)
#	define SWIGEXPORT(a) __declspec(dllexport) a
#   else
#	if defined(__BORLANDC__)
#	    define SWIGEXPORT(a) a _export 
#	else
#	    define SWIGEXPORT(a) a 
#	endif
#   endif
#else
#   define SWIGEXPORT(a) a 
#endif

#include "Python.h"

#ifdef __cplusplus
extern "C" {
#endif
extern void SWIG_MakePtr(char *, void *, char *);
extern void SWIG_RegisterMapping(char *, char *, void *(*)(void *));
extern char *SWIG_GetPtr(char *, void **, char *);
extern char *SWIG_GetPtrObj(PyObject *, void **, char *);
extern void SWIG_addvarlink(PyObject *, char *, PyObject *(*)(void), int (*)(PyObject *));
extern PyObject *SWIG_newvarlink(void);
#ifdef __cplusplus
}
#endif
#define SWIG_init    inittreelistc

#define SWIG_name    "treelistc"

#include "fx.h"
#include "fx3d.h"
#include "FXCURCursor.h"
#include "FXJPGImage.h"
#include "FXJPGIcon.h"
#include "FXPNGIcon.h"
#include "FXPNGImage.h"
#include "FXTIFIcon.h"
#include "FXTIFImage.h"
#include "FXRGBIcon.h"
#include "FXRGBImage.h"
#include "FXICOIcon.h"
#include "FXICOImage.h"
#include "FXPyApp.h"
#include "FXPy.h"

static PyObject* l_output_helper(PyObject* target, PyObject* o) {
    PyObject*   o2;
    if (!target) {                   
        target = o;
    } else if (target == Py_None) {  
        Py_DECREF(Py_None);
        target = o;
    } else {                         
        if (!PyList_Check(target)) {
            o2 = target;
            target = PyList_New(0);
            PyList_Append(target, o2);
	    Py_XDECREF(o2);
        }
        PyList_Append(target,o);
	Py_XDECREF(o);
    }
    return target;
}

static PyObject* t_output_helper(PyObject* target, PyObject* o) {
    PyObject*   o2;
    PyObject*   o3;

    if (!target) {                   
        target = o;
    } else if (target == Py_None) {  
        Py_DECREF(Py_None);
        target = o;
    } else {                         
        if (!PyTuple_Check(target)) {
            o2 = target;
            target = PyTuple_New(1);
            PyTuple_SetItem(target, 0, o2);
        }
        o3 = PyTuple_New(1);            
        PyTuple_SetItem(o3, 0, o);      

        o2 = target;
        target = PySequence_Concat(o2, o3); 
        Py_DECREF(o2);                      
        Py_DECREF(o3);
    }
    return target;
}
#ifdef __cplusplus
extern "C" {
#endif
static void *SwigFXTreeItemToFXObject(void *ptr) {
    FXTreeItem *src;
    FXObject *dest;
    src = (FXTreeItem *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FX_TreeItem(_swigarg0,_swigarg1,_swigarg2,_swigarg3) (new FXTreeItem(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_new_FX_TreeItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _result;
    FXString * _arg0;
    FXIcon * _arg1 = (FXIcon *) NULL;
    FXIcon * _arg2 = (FXIcon *) NULL;
    void * _arg3 = (void *) NULL;
    PyObject * _obj0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "text","oi","ci","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|OOO:new_FX_TreeItem",_kwnames,&_obj0,&_obj1,&_obj2,&_obj3)) 
        return NULL;
{
    if (_obj0 == Py_None)
	_arg0 = new FXString;
    else if (!PyString_Check(_obj0)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg0 = new FXString(PyString_AsString(_obj0));
}
    if (_obj1)
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXIcon_p");
}
    if (_obj2)
{
    if (_obj2 == Py_None)
	_arg2 = NULL;
    else
	SWIG_GetPtrObj(_obj2, (void**) &_arg2, "_FXIcon_p");
}
    if (_obj3)
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTreeItem *)new_FX_TreeItem(*_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
{
    delete _arg0;
}
    return _resultobj;
}

#define FX_TreeItem_getParent(_swigobj)  (_swigobj->getParent())
static PyObject *_wrap_FX_TreeItem_getParent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _result;
    FXTreeItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeItem_getParent",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeItem_getParent. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTreeItem *)FX_TreeItem_getParent(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_TreeItem_getNext(_swigobj)  (_swigobj->getNext())
static PyObject *_wrap_FX_TreeItem_getNext(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _result;
    FXTreeItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeItem_getNext",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeItem_getNext. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTreeItem *)FX_TreeItem_getNext(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_TreeItem_getPrev(_swigobj)  (_swigobj->getPrev())
static PyObject *_wrap_FX_TreeItem_getPrev(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _result;
    FXTreeItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeItem_getPrev",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeItem_getPrev. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTreeItem *)FX_TreeItem_getPrev(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_TreeItem_getFirst(_swigobj)  (_swigobj->getFirst())
static PyObject *_wrap_FX_TreeItem_getFirst(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _result;
    FXTreeItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeItem_getFirst",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeItem_getFirst. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTreeItem *)FX_TreeItem_getFirst(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_TreeItem_getLast(_swigobj)  (_swigobj->getLast())
static PyObject *_wrap_FX_TreeItem_getLast(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _result;
    FXTreeItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeItem_getLast",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeItem_getLast. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTreeItem *)FX_TreeItem_getLast(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_TreeItem_getBelow(_swigobj)  (_swigobj->getBelow())
static PyObject *_wrap_FX_TreeItem_getBelow(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _result;
    FXTreeItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeItem_getBelow",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeItem_getBelow. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTreeItem *)FX_TreeItem_getBelow(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_TreeItem_getAbove(_swigobj)  (_swigobj->getAbove())
static PyObject *_wrap_FX_TreeItem_getAbove(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _result;
    FXTreeItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeItem_getAbove",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeItem_getAbove. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTreeItem *)FX_TreeItem_getAbove(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_TreeItem_getWidth(_swigobj,_swigarg0)  (_swigobj->getWidth(_swigarg0))
static PyObject *_wrap_FX_TreeItem_getWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTreeItem * _arg0;
    FXTreeList * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","list", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeItem_getWidth",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeItem_getWidth. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeItem_getWidth. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_TreeItem_getWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_TreeItem_getHeight(_swigobj,_swigarg0)  (_swigobj->getHeight(_swigarg0))
static PyObject *_wrap_FX_TreeItem_getHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTreeItem * _arg0;
    FXTreeList * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","list", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeItem_getHeight",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeItem_getHeight. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeItem_getHeight. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_TreeItem_getHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_TreeItem_create(_swigobj)  (_swigobj->create())
static PyObject *_wrap_FX_TreeItem_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeItem_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeItem_create. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeItem_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeItem_detach(_swigobj)  (_swigobj->detach())
static PyObject *_wrap_FX_TreeItem_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeItem_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeItem_detach. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeItem_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeItem_destroy(_swigobj)  (_swigobj->destroy())
static PyObject *_wrap_FX_TreeItem_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeItem_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeItem_destroy. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeItem_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeItem_getNumChildren(_swigobj)  (_swigobj->getNumChildren())
static PyObject *_wrap_FX_TreeItem_getNumChildren(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTreeItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeItem_getNumChildren",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeItem_getNumChildren. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_TreeItem_getNumChildren(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_TreeItem_getText(_swigobj)  (_swigobj->getText())
static PyObject *_wrap_FX_TreeItem_getText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXTreeItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeItem_getText",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeItem_getText. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_TreeItem_getText(_arg0));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

#define FX_TreeItem_setText(_swigobj,_swigarg0)  (_swigobj->setText(_swigarg0))
static PyObject *_wrap_FX_TreeItem_setText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","text", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeItem_setText",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeItem_setText. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeItem_setText(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_TreeItem_getOpenIcon(_swigobj)  (_swigobj->getOpenIcon())
static PyObject *_wrap_FX_TreeItem_getOpenIcon(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIcon * _result;
    FXTreeItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeItem_getOpenIcon",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeItem_getOpenIcon. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXIcon *)FX_TreeItem_getOpenIcon(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_TreeItem_setOpenIcon(_swigobj,_swigarg0)  (_swigobj->setOpenIcon(_swigarg0))
static PyObject *_wrap_FX_TreeItem_setOpenIcon(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _arg0;
    FXIcon * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","ic", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeItem_setOpenIcon",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeItem_setOpenIcon. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeItem_setOpenIcon(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeItem_getClosedIcon(_swigobj)  (_swigobj->getClosedIcon())
static PyObject *_wrap_FX_TreeItem_getClosedIcon(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIcon * _result;
    FXTreeItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeItem_getClosedIcon",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeItem_getClosedIcon. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXIcon *)FX_TreeItem_getClosedIcon(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_TreeItem_setClosedIcon(_swigobj,_swigarg0)  (_swigobj->setClosedIcon(_swigarg0))
static PyObject *_wrap_FX_TreeItem_setClosedIcon(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _arg0;
    FXIcon * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","ic", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeItem_setClosedIcon",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeItem_setClosedIcon. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeItem_setClosedIcon(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void  FXTreeItem_setData(FXTreeItem *self,PyObject * ptr) {
      FXPySetData(self, ptr);
    }
static PyObject *_wrap_FX_TreeItem_setData(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _arg0;
    PyObject * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeItem_setData",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeItem_setData. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
  _arg1 = _obj1;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeItem_setData(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static PyObject * FXTreeItem_getData(FXTreeItem *self) {
      return FXPyGetData(self);
    }
static PyObject *_wrap_FX_TreeItem_getData(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    PyObject * _result;
    FXTreeItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeItem_getData",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeItem_getData. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (PyObject *)FXTreeItem_getData(_arg0);

    FXPy_END_ALLOW_THREADS
}{
  _resultobj = _result;
}
    return _resultobj;
}

#define FX_TreeItem_hasFocus(_swigobj)  (_swigobj->hasFocus())
static PyObject *_wrap_FX_TreeItem_hasFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTreeItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeItem_hasFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeItem_hasFocus. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_TreeItem_hasFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_TreeItem_setFocus(_swigobj,_swigarg0)  (_swigobj->setFocus(_swigarg0))
static PyObject *_wrap_FX_TreeItem_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","focus", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FX_TreeItem_setFocus",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeItem_setFocus. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeItem_setFocus(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeItem_isSelected(_swigobj)  (_swigobj->isSelected())
static PyObject *_wrap_FX_TreeItem_isSelected(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTreeItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeItem_isSelected",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeItem_isSelected. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_TreeItem_isSelected(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_TreeItem_setSelected(_swigobj,_swigarg0)  (_swigobj->setSelected(_swigarg0))
static PyObject *_wrap_FX_TreeItem_setSelected(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","selected", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FX_TreeItem_setSelected",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeItem_setSelected. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeItem_setSelected(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeItem_isOpened(_swigobj)  (_swigobj->isOpened())
static PyObject *_wrap_FX_TreeItem_isOpened(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTreeItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeItem_isOpened",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeItem_isOpened. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_TreeItem_isOpened(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_TreeItem_setOpened(_swigobj,_swigarg0)  (_swigobj->setOpened(_swigarg0))
static PyObject *_wrap_FX_TreeItem_setOpened(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","opened", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FX_TreeItem_setOpened",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeItem_setOpened. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeItem_setOpened(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeItem_isExpanded(_swigobj)  (_swigobj->isExpanded())
static PyObject *_wrap_FX_TreeItem_isExpanded(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTreeItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeItem_isExpanded",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeItem_isExpanded. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_TreeItem_isExpanded(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_TreeItem_setExpanded(_swigobj,_swigarg0)  (_swigobj->setExpanded(_swigarg0))
static PyObject *_wrap_FX_TreeItem_setExpanded(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","expanded", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FX_TreeItem_setExpanded",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeItem_setExpanded. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeItem_setExpanded(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeItem_isEnabled(_swigobj)  (_swigobj->isEnabled())
static PyObject *_wrap_FX_TreeItem_isEnabled(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTreeItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeItem_isEnabled",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeItem_isEnabled. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_TreeItem_isEnabled(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_TreeItem_setEnabled(_swigobj,_swigarg0)  (_swigobj->setEnabled(_swigarg0))
static PyObject *_wrap_FX_TreeItem_setEnabled(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enabled", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FX_TreeItem_setEnabled",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeItem_setEnabled. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeItem_setEnabled(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeItem_isDraggable(_swigobj)  (_swigobj->isDraggable())
static PyObject *_wrap_FX_TreeItem_isDraggable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTreeItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeItem_isDraggable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeItem_isDraggable. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_TreeItem_isDraggable(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_TreeItem_setDraggable(_swigobj,_swigarg0)  (_swigobj->setDraggable(_swigarg0))
static PyObject *_wrap_FX_TreeItem_setDraggable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","draggable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FX_TreeItem_setDraggable",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeItem_setDraggable. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeItem_setDraggable(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeItem_isIconOwned(_swigobj)  (_swigobj->isIconOwned())
static PyObject *_wrap_FX_TreeItem_isIconOwned(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXTreeItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeItem_isIconOwned",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeItem_isIconOwned. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )FX_TreeItem_isIconOwned(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_TreeItem_setIconOwned(_swigobj,_swigarg0)  (_swigobj->setIconOwned(_swigarg0))
static PyObject *_wrap_FX_TreeItem_setIconOwned(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _arg0;
    FXuint  _arg1 = (FXuint ) 384;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","owned", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|i:FX_TreeItem_setIconOwned",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeItem_setIconOwned. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeItem_setIconOwned(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXPyTreeItemToFXTreeItem(void *ptr) {
    FXPyTreeItem *src;
    FXTreeItem *dest;
    src = (FXPyTreeItem *) ptr;
    dest = (FXTreeItem *) src;
    return (void *) dest;
}

static void *SwigFXPyTreeItemToFXObject(void *ptr) {
    FXPyTreeItem *src;
    FXObject *dest;
    src = (FXPyTreeItem *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXTreeItem(_swigarg0,_swigarg1,_swigarg2,_swigarg3) (new FXPyTreeItem(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_new_FXTreeItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeItem * _result;
    FXString * _arg0;
    FXIcon * _arg1 = (FXIcon *) NULL;
    FXIcon * _arg2 = (FXIcon *) NULL;
    void * _arg3 = (void *) NULL;
    PyObject * _obj0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "text","oi","ci","ptr", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|OOO:new_FXTreeItem",_kwnames,&_obj0,&_obj1,&_obj2,&_obj3)) 
        return NULL;
{
    if (_obj0 == Py_None)
	_arg0 = new FXString;
    else if (!PyString_Check(_obj0)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg0 = new FXString(PyString_AsString(_obj0));
}
    if (_obj1)
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXIcon_p");
}
    if (_obj2)
{
    if (_obj2 == Py_None)
	_arg2 = NULL;
    else
	SWIG_GetPtrObj(_obj2, (void**) &_arg2, "_FXIcon_p");
}
    if (_obj3)
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyTreeItem *)new_FXTreeItem(*_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyTreeItem_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    delete _arg0;
}
    return _resultobj;
}

#define FXTreeItem_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXTreeItem_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyTreeItem * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXTreeItem_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeItem_onDefault. Expected _FXPyTreeItem_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXTreeItem_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXTreeItem_setText(_swigobj,_swigarg0)  (_swigobj->_setText(_swigarg0))
static PyObject *_wrap_FXTreeItem_setText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeItem * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","text", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXTreeItem_setText",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeItem_setText. Expected _FXPyTreeItem_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeItem_setText(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FXTreeItem_setOpenIcon(_swigobj,_swigarg0)  (_swigobj->_setOpenIcon(_swigarg0))
static PyObject *_wrap_FXTreeItem_setOpenIcon(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeItem * _arg0;
    FXIcon * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","ic", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXTreeItem_setOpenIcon",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeItem_setOpenIcon. Expected _FXPyTreeItem_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeItem_setOpenIcon(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeItem_setClosedIcon(_swigobj,_swigarg0)  (_swigobj->_setClosedIcon(_swigarg0))
static PyObject *_wrap_FXTreeItem_setClosedIcon(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeItem * _arg0;
    FXIcon * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","ic", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXTreeItem_setClosedIcon",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeItem_setClosedIcon. Expected _FXPyTreeItem_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeItem_setClosedIcon(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeItem_setFocus(_swigobj,_swigarg0)  (_swigobj->_setFocus(_swigarg0))
static PyObject *_wrap_FXTreeItem_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeItem * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","focus", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FXTreeItem_setFocus",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeItem_setFocus. Expected _FXPyTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeItem_setFocus(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeItem_setSelected(_swigobj,_swigarg0)  (_swigobj->_setSelected(_swigarg0))
static PyObject *_wrap_FXTreeItem_setSelected(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeItem * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","selected", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FXTreeItem_setSelected",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeItem_setSelected. Expected _FXPyTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeItem_setSelected(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeItem_setOpened(_swigobj,_swigarg0)  (_swigobj->_setOpened(_swigarg0))
static PyObject *_wrap_FXTreeItem_setOpened(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeItem * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","opened", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FXTreeItem_setOpened",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeItem_setOpened. Expected _FXPyTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeItem_setOpened(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeItem_setExpanded(_swigobj,_swigarg0)  (_swigobj->_setExpanded(_swigarg0))
static PyObject *_wrap_FXTreeItem_setExpanded(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeItem * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","expanded", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FXTreeItem_setExpanded",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeItem_setExpanded. Expected _FXPyTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeItem_setExpanded(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeItem_setEnabled(_swigobj,_swigarg0)  (_swigobj->_setEnabled(_swigarg0))
static PyObject *_wrap_FXTreeItem_setEnabled(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeItem * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enabled", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FXTreeItem_setEnabled",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeItem_setEnabled. Expected _FXPyTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeItem_setEnabled(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeItem_setDraggable(_swigobj,_swigarg0)  (_swigobj->_setDraggable(_swigarg0))
static PyObject *_wrap_FXTreeItem_setDraggable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeItem * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","draggable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FXTreeItem_setDraggable",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeItem_setDraggable. Expected _FXPyTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeItem_setDraggable(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeItem_setIconOwned(_swigobj,_swigarg0)  (_swigobj->_setIconOwned(_swigarg0))
static PyObject *_wrap_FXTreeItem_setIconOwned(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeItem * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","owned", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXTreeItem_setIconOwned",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeItem_setIconOwned. Expected _FXPyTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeItem_setIconOwned(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeItem_getWidth(_swigobj,_swigarg0)  (_swigobj->_getWidth(_swigarg0))
static PyObject *_wrap_FXTreeItem_getWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyTreeItem * _arg0;
    FXTreeList * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","list", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXTreeItem_getWidth",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeItem_getWidth. Expected _FXPyTreeItem_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXTreeItem_getWidth. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXTreeItem_getWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXTreeItem_getHeight(_swigobj,_swigarg0)  (_swigobj->_getHeight(_swigarg0))
static PyObject *_wrap_FXTreeItem_getHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyTreeItem * _arg0;
    FXTreeList * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","list", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXTreeItem_getHeight",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeItem_getHeight. Expected _FXPyTreeItem_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXTreeItem_getHeight. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXTreeItem_getHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXTreeItem_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXTreeItem_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeItem_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeItem_create. Expected _FXPyTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeItem_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeItem_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXTreeItem_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeItem_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeItem_detach. Expected _FXPyTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeItem_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeItem_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXTreeItem_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeItem_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeItem_destroy. Expected _FXPyTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeItem_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXTreeListToFXScrollArea(void *ptr) {
    FXTreeList *src;
    FXScrollArea *dest;
    src = (FXTreeList *) ptr;
    dest = (FXScrollArea *) src;
    return (void *) dest;
}

static void *SwigFXTreeListToFXComposite(void *ptr) {
    FXTreeList *src;
    FXComposite *dest;
    src = (FXTreeList *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXTreeListToFXWindow(void *ptr) {
    FXTreeList *src;
    FXWindow *dest;
    src = (FXTreeList *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXTreeListToFXDrawable(void *ptr) {
    FXTreeList *src;
    FXDrawable *dest;
    src = (FXTreeList *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXTreeListToFXId(void *ptr) {
    FXTreeList *src;
    FXId *dest;
    src = (FXTreeList *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXTreeListToFXObject(void *ptr) {
    FXTreeList *src;
    FXObject *dest;
    src = (FXTreeList *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define FX_TreeList_onPaint(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onPaint(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeList_onPaint(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTreeList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_TreeList_onPaint",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_onPaint. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_TreeList_onPaint. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_TreeList_onPaint(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_TreeList_onEnter(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onEnter(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeList_onEnter(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTreeList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_TreeList_onEnter",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_onEnter. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_TreeList_onEnter. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_TreeList_onEnter(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_TreeList_onLeave(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onLeave(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeList_onLeave(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTreeList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_TreeList_onLeave",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_onLeave. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_TreeList_onLeave. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_TreeList_onLeave(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_TreeList_onUngrabbed(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUngrabbed(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeList_onUngrabbed(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTreeList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_TreeList_onUngrabbed",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_onUngrabbed. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_TreeList_onUngrabbed. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_TreeList_onUngrabbed(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_TreeList_onMotion(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onMotion(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeList_onMotion(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTreeList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_TreeList_onMotion",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_onMotion. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_TreeList_onMotion. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_TreeList_onMotion(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_TreeList_onKeyPress(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onKeyPress(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeList_onKeyPress(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTreeList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_TreeList_onKeyPress",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_onKeyPress. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_TreeList_onKeyPress. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_TreeList_onKeyPress(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_TreeList_onKeyRelease(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onKeyRelease(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeList_onKeyRelease(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTreeList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_TreeList_onKeyRelease",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_onKeyRelease. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_TreeList_onKeyRelease. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_TreeList_onKeyRelease(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_TreeList_onLeftBtnPress(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onLeftBtnPress(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeList_onLeftBtnPress(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTreeList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_TreeList_onLeftBtnPress",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_onLeftBtnPress. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_TreeList_onLeftBtnPress. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_TreeList_onLeftBtnPress(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_TreeList_onLeftBtnRelease(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onLeftBtnRelease(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeList_onLeftBtnRelease(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTreeList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_TreeList_onLeftBtnRelease",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_onLeftBtnRelease. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_TreeList_onLeftBtnRelease. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_TreeList_onLeftBtnRelease(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_TreeList_onRightBtnPress(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onRightBtnPress(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeList_onRightBtnPress(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTreeList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_TreeList_onRightBtnPress",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_onRightBtnPress. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_TreeList_onRightBtnPress. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_TreeList_onRightBtnPress(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_TreeList_onRightBtnRelease(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onRightBtnRelease(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeList_onRightBtnRelease(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTreeList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_TreeList_onRightBtnRelease",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_onRightBtnRelease. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_TreeList_onRightBtnRelease. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_TreeList_onRightBtnRelease(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_TreeList_onQueryTip(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onQueryTip(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeList_onQueryTip(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTreeList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_TreeList_onQueryTip",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_onQueryTip. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_TreeList_onQueryTip. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_TreeList_onQueryTip(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_TreeList_onQueryHelp(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onQueryHelp(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeList_onQueryHelp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTreeList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_TreeList_onQueryHelp",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_onQueryHelp. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_TreeList_onQueryHelp. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_TreeList_onQueryHelp(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_TreeList_onTipTimer(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onTipTimer(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeList_onTipTimer(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTreeList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_TreeList_onTipTimer",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_onTipTimer. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_TreeList_onTipTimer. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_TreeList_onTipTimer(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_TreeList_onFocusIn(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onFocusIn(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeList_onFocusIn(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTreeList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_TreeList_onFocusIn",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_onFocusIn. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_TreeList_onFocusIn. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_TreeList_onFocusIn(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_TreeList_onFocusOut(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onFocusOut(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeList_onFocusOut(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTreeList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_TreeList_onFocusOut",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_onFocusOut. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_TreeList_onFocusOut. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_TreeList_onFocusOut(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_TreeList_onAutoScroll(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onAutoScroll(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeList_onAutoScroll(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTreeList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_TreeList_onAutoScroll",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_onAutoScroll. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_TreeList_onAutoScroll. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_TreeList_onAutoScroll(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_TreeList_onClicked(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onClicked(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeList_onClicked(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTreeList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_TreeList_onClicked",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_onClicked. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_TreeList_onClicked. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_TreeList_onClicked(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_TreeList_onDoubleClicked(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onDoubleClicked(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeList_onDoubleClicked(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTreeList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_TreeList_onDoubleClicked",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_onDoubleClicked. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_TreeList_onDoubleClicked. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_TreeList_onDoubleClicked(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_TreeList_onTripleClicked(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onTripleClicked(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeList_onTripleClicked(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTreeList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_TreeList_onTripleClicked",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_onTripleClicked. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_TreeList_onTripleClicked. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_TreeList_onTripleClicked(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_TreeList_onCommand(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCommand(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeList_onCommand(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTreeList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_TreeList_onCommand",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_onCommand. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_TreeList_onCommand. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_TreeList_onCommand(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_TreeList_onSelected(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onSelected(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeList_onSelected(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTreeList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_TreeList_onSelected",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_onSelected. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_TreeList_onSelected. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_TreeList_onSelected(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_TreeList_onDeselected(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onDeselected(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeList_onDeselected(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTreeList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_TreeList_onDeselected",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_onDeselected. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_TreeList_onDeselected. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_TreeList_onDeselected(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_TreeList_onOpened(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onOpened(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeList_onOpened(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTreeList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_TreeList_onOpened",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_onOpened. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_TreeList_onOpened. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_TreeList_onOpened(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_TreeList_onClosed(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onClosed(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeList_onClosed(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTreeList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_TreeList_onClosed",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_onClosed. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_TreeList_onClosed. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_TreeList_onClosed(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_TreeList_onExpanded(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onExpanded(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeList_onExpanded(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTreeList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_TreeList_onExpanded",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_onExpanded. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_TreeList_onExpanded. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_TreeList_onExpanded(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_TreeList_onCollapsed(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCollapsed(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeList_onCollapsed(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTreeList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_TreeList_onCollapsed",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_onCollapsed. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_TreeList_onCollapsed. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_TreeList_onCollapsed(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_TreeList_onLookupTimer(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onLookupTimer(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeList_onLookupTimer(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTreeList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_TreeList_onLookupTimer",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_onLookupTimer. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_TreeList_onLookupTimer. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_TreeList_onLookupTimer(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define new_FX_TreeList(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8) (new FXTreeList(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8))
static PyObject *_wrap_new_FX_TreeList(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeList * _result;
    FXComposite * _arg0;
    FXint  _arg1;
    FXObject * _arg2 = (FXObject *) NULL;
    FXSelector  _arg3 = (FXSelector ) 0;
    FXuint  _arg4 = (FXuint ) (TREELIST_NORMAL);
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    FXint  _arg8 = (FXint ) 0;
    PyObject * _argo0 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "p","nvis","tgt","sel","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi|Oiiiiii:new_FX_TreeList",_kwnames,&_argo0,&_arg1,&_obj2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7,&_arg8)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FX_TreeList. Expected _FXComposite_p.");
        return NULL;
        }
    }
    if (_obj2)
{
    if (_obj2 == Py_None)
	_arg2 = NULL;
    else
	SWIG_GetPtrObj(_obj2, (void**) &_arg2, "_FXObject_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTreeList *)new_FX_TreeList(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7,_arg8);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXTreeList_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_TreeList_getNumItems(_swigobj)  (_swigobj->getNumItems())
static PyObject *_wrap_FX_TreeList_getNumItems(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTreeList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeList_getNumItems",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_getNumItems. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_TreeList_getNumItems(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_TreeList_getNumVisible(_swigobj)  (_swigobj->getNumVisible())
static PyObject *_wrap_FX_TreeList_getNumVisible(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTreeList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeList_getNumVisible",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_getNumVisible. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_TreeList_getNumVisible(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_TreeList_setNumVisible(_swigobj,_swigarg0)  (_swigobj->setNumVisible(_swigarg0))
static PyObject *_wrap_FX_TreeList_setNumVisible(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeList * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","nvis", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_TreeList_setNumVisible",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_setNumVisible. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeList_setNumVisible(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeList_getFirstItem(_swigobj)  (_swigobj->getFirstItem())
static PyObject *_wrap_FX_TreeList_getFirstItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _result;
    FXTreeList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeList_getFirstItem",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_getFirstItem. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTreeItem *)FX_TreeList_getFirstItem(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_TreeList_getLastItem(_swigobj)  (_swigobj->getLastItem())
static PyObject *_wrap_FX_TreeList_getLastItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _result;
    FXTreeList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeList_getLastItem",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_getLastItem. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTreeItem *)FX_TreeList_getLastItem(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

static FXTreeItem * FXTreeList_addItemFirst(FXTreeList *self,PyObject * treeItem,const FXString & text,FXIcon * oi,FXIcon * ci,void * ptr,FXbool  notify) {
	FXTreeItem *item = NULL;
	if (treeItem != Py_None)
	    item = (FXTreeItem*) FXPyGetFXObject(treeItem);
	return (FXTreeItem*) self->addItemFirst(item, text, oi, ci, ptr, notify);
      }
static PyObject *_wrap_FX_TreeList_addItemFirst(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _result;
    FXTreeList * _arg0;
    PyObject * _arg1;
    FXString * _arg2;
    FXIcon * _arg3 = (FXIcon *) NULL;
    FXIcon * _arg4 = (FXIcon *) NULL;
    void * _arg5 = (void *) NULL;
    FXbool  _arg6 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    PyObject * _obj3 = 0;
    PyObject * _obj4 = 0;
    PyObject * _obj5 = 0;
    char *_kwnames[] = { "self","treeItem","text","oi","ci","ptr","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO|OOOb:FX_TreeList_addItemFirst",_kwnames,&_argo0,&_obj1,&_obj2,&_obj3,&_obj4,&_obj5,&_arg6)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_addItemFirst. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    _arg1 = _obj1;
}
{
    if (_obj2 == Py_None)
	_arg2 = new FXString;
    else if (!PyString_Check(_obj2)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg2 = new FXString(PyString_AsString(_obj2));
}
    if (_obj3)
{
    if (_obj3 == Py_None)
	_arg3 = NULL;
    else
	SWIG_GetPtrObj(_obj3, (void**) &_arg3, "_FXIcon_p");
}
    if (_obj4)
{
    if (_obj4 == Py_None)
	_arg4 = NULL;
    else
	SWIG_GetPtrObj(_obj4, (void**) &_arg4, "_FXIcon_p");
}
    if (_obj5)
{
    _arg5 = NULL;
    if (PyObject_HasAttrString(_obj5, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj5, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg5 = NULL;
	}
	else
	    _arg5 = (void*) _obj5;
	Py_DECREF(obj);
    }
    else
	_arg5 = (void*) _obj5;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTreeItem *)FXTreeList_addItemFirst(_arg0,_arg1,*_arg2,_arg3,_arg4,_arg5,_arg6);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
{
    delete _arg2;
}
    return _resultobj;
}

static FXTreeItem * FXTreeList_addItemFirst2(FXTreeList *self,PyObject * treeItem,FXTreeItem * item,FXbool  notify) {
	FXTreeItem *parentItem = NULL;
	if (treeItem != Py_None)
	    parentItem = (FXTreeItem*) FXPyGetFXObject(treeItem);
	return (FXTreeItem*) self->addItemFirst(parentItem,item,notify);
      }
static PyObject *_wrap_FX_TreeList_addItemFirst2(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _result;
    FXTreeList * _arg0;
    PyObject * _arg1;
    FXTreeItem * _arg2;
    FXbool  _arg3 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo2 = 0;
    char *_kwnames[] = { "self","treeItem","item","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO|b:FX_TreeList_addItemFirst2",_kwnames,&_argo0,&_obj1,&_argo2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_addItemFirst2. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    _arg1 = _obj1;
}
    if (_argo2) {
        if (_argo2 == Py_None) { _arg2 = NULL; }
        else if (SWIG_GetPtrObj(_argo2,(void **) &_arg2,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of FX_TreeList_addItemFirst2. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTreeItem *)FXTreeList_addItemFirst2(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

static FXTreeItem * FXTreeList_addItemLast(FXTreeList *self,PyObject * treeItem,const FXString & text,FXIcon * oi,FXIcon * ci,void * ptr,FXbool  notify) {
	FXTreeItem *item = NULL;
	if (treeItem != Py_None)
	    item = (FXTreeItem*) FXPyGetFXObject(treeItem);
	return (FXTreeItem*) self->addItemLast(item, text, oi, ci, ptr, notify);
      }
static PyObject *_wrap_FX_TreeList_addItemLast(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _result;
    FXTreeList * _arg0;
    PyObject * _arg1;
    FXString * _arg2;
    FXIcon * _arg3 = (FXIcon *) NULL;
    FXIcon * _arg4 = (FXIcon *) NULL;
    void * _arg5 = (void *) NULL;
    FXbool  _arg6 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    PyObject * _obj3 = 0;
    PyObject * _obj4 = 0;
    PyObject * _obj5 = 0;
    char *_kwnames[] = { "self","treeItem","text","oi","ci","ptr","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO|OOOb:FX_TreeList_addItemLast",_kwnames,&_argo0,&_obj1,&_obj2,&_obj3,&_obj4,&_obj5,&_arg6)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_addItemLast. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    _arg1 = _obj1;
}
{
    if (_obj2 == Py_None)
	_arg2 = new FXString;
    else if (!PyString_Check(_obj2)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg2 = new FXString(PyString_AsString(_obj2));
}
    if (_obj3)
{
    if (_obj3 == Py_None)
	_arg3 = NULL;
    else
	SWIG_GetPtrObj(_obj3, (void**) &_arg3, "_FXIcon_p");
}
    if (_obj4)
{
    if (_obj4 == Py_None)
	_arg4 = NULL;
    else
	SWIG_GetPtrObj(_obj4, (void**) &_arg4, "_FXIcon_p");
}
    if (_obj5)
{
    _arg5 = NULL;
    if (PyObject_HasAttrString(_obj5, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj5, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg5 = NULL;
	}
	else
	    _arg5 = (void*) _obj5;
	Py_DECREF(obj);
    }
    else
	_arg5 = (void*) _obj5;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTreeItem *)FXTreeList_addItemLast(_arg0,_arg1,*_arg2,_arg3,_arg4,_arg5,_arg6);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
{
    delete _arg2;
}
    return _resultobj;
}

static FXTreeItem * FXTreeList_addItemLast2(FXTreeList *self,PyObject * treeItem,FXTreeItem * item,FXbool  notify) {
	FXTreeItem *parentItem = NULL;
	if (treeItem != Py_None)
	    parentItem = (FXTreeItem*) FXPyGetFXObject(treeItem);
	return (FXTreeItem*) self->addItemLast(parentItem,item,notify);
      }
static PyObject *_wrap_FX_TreeList_addItemLast2(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _result;
    FXTreeList * _arg0;
    PyObject * _arg1;
    FXTreeItem * _arg2;
    FXbool  _arg3 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo2 = 0;
    char *_kwnames[] = { "self","treeItem","item","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO|b:FX_TreeList_addItemLast2",_kwnames,&_argo0,&_obj1,&_argo2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_addItemLast2. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    _arg1 = _obj1;
}
    if (_argo2) {
        if (_argo2 == Py_None) { _arg2 = NULL; }
        else if (SWIG_GetPtrObj(_argo2,(void **) &_arg2,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of FX_TreeList_addItemLast2. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTreeItem *)FXTreeList_addItemLast2(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_TreeList_addItemBefore(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5)  (_swigobj->addItemBefore(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5))
static PyObject *_wrap_FX_TreeList_addItemBefore(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _result;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    FXString * _arg2;
    FXIcon * _arg3 = (FXIcon *) NULL;
    FXIcon * _arg4 = (FXIcon *) NULL;
    void * _arg5 = (void *) NULL;
    FXbool  _arg6 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    PyObject * _obj2 = 0;
    PyObject * _obj3 = 0;
    PyObject * _obj4 = 0;
    PyObject * _obj5 = 0;
    char *_kwnames[] = { "self","other","text","oi","ci","ptr","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO|OOOb:FX_TreeList_addItemBefore",_kwnames,&_argo0,&_argo1,&_obj2,&_obj3,&_obj4,&_obj5,&_arg6)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_addItemBefore. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_addItemBefore. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    if (_obj2 == Py_None)
	_arg2 = new FXString;
    else if (!PyString_Check(_obj2)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg2 = new FXString(PyString_AsString(_obj2));
}
    if (_obj3)
{
    if (_obj3 == Py_None)
	_arg3 = NULL;
    else
	SWIG_GetPtrObj(_obj3, (void**) &_arg3, "_FXIcon_p");
}
    if (_obj4)
{
    if (_obj4 == Py_None)
	_arg4 = NULL;
    else
	SWIG_GetPtrObj(_obj4, (void**) &_arg4, "_FXIcon_p");
}
    if (_obj5)
{
    _arg5 = NULL;
    if (PyObject_HasAttrString(_obj5, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj5, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg5 = NULL;
	}
	else
	    _arg5 = (void*) _obj5;
	Py_DECREF(obj);
    }
    else
	_arg5 = (void*) _obj5;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTreeItem *)FX_TreeList_addItemBefore(_arg0,_arg1,*_arg2,_arg3,_arg4,_arg5,_arg6);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
{
    delete _arg2;
}
    return _resultobj;
}

#define FX_TreeList_addItemAfter(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5)  (_swigobj->addItemAfter(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5))
static PyObject *_wrap_FX_TreeList_addItemAfter(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _result;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    FXString * _arg2;
    FXIcon * _arg3 = (FXIcon *) NULL;
    FXIcon * _arg4 = (FXIcon *) NULL;
    void * _arg5 = (void *) NULL;
    FXbool  _arg6 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    PyObject * _obj2 = 0;
    PyObject * _obj3 = 0;
    PyObject * _obj4 = 0;
    PyObject * _obj5 = 0;
    char *_kwnames[] = { "self","other","text","oi","ci","ptr","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO|OOOb:FX_TreeList_addItemAfter",_kwnames,&_argo0,&_argo1,&_obj2,&_obj3,&_obj4,&_obj5,&_arg6)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_addItemAfter. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_addItemAfter. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    if (_obj2 == Py_None)
	_arg2 = new FXString;
    else if (!PyString_Check(_obj2)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg2 = new FXString(PyString_AsString(_obj2));
}
    if (_obj3)
{
    if (_obj3 == Py_None)
	_arg3 = NULL;
    else
	SWIG_GetPtrObj(_obj3, (void**) &_arg3, "_FXIcon_p");
}
    if (_obj4)
{
    if (_obj4 == Py_None)
	_arg4 = NULL;
    else
	SWIG_GetPtrObj(_obj4, (void**) &_arg4, "_FXIcon_p");
}
    if (_obj5)
{
    _arg5 = NULL;
    if (PyObject_HasAttrString(_obj5, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj5, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg5 = NULL;
	}
	else
	    _arg5 = (void*) _obj5;
	Py_DECREF(obj);
    }
    else
	_arg5 = (void*) _obj5;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTreeItem *)FX_TreeList_addItemAfter(_arg0,_arg1,*_arg2,_arg3,_arg4,_arg5,_arg6);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
{
    delete _arg2;
}
    return _resultobj;
}

#define FX_TreeList_addItemBefore2(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->addItemBefore(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeList_addItemBefore2(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _result;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    FXTreeItem * _arg2;
    FXbool  _arg3 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    PyObject * _argo2 = 0;
    char *_kwnames[] = { "self","other","item","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO|b:FX_TreeList_addItemBefore2",_kwnames,&_argo0,&_argo1,&_argo2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_addItemBefore2. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_addItemBefore2. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
    if (_argo2) {
        if (_argo2 == Py_None) { _arg2 = NULL; }
        else if (SWIG_GetPtrObj(_argo2,(void **) &_arg2,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of FX_TreeList_addItemBefore2. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTreeItem *)FX_TreeList_addItemBefore2(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_TreeList_addItemAfter2(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->addItemAfter(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeList_addItemAfter2(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _result;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    FXTreeItem * _arg2;
    FXbool  _arg3 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    PyObject * _argo2 = 0;
    char *_kwnames[] = { "self","other","item","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO|b:FX_TreeList_addItemAfter2",_kwnames,&_argo0,&_argo1,&_argo2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_addItemAfter2. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_addItemAfter2. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
    if (_argo2) {
        if (_argo2 == Py_None) { _arg2 = NULL; }
        else if (SWIG_GetPtrObj(_argo2,(void **) &_arg2,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of FX_TreeList_addItemAfter2. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTreeItem *)FX_TreeList_addItemAfter2(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_TreeList_removeItem(_swigobj,_swigarg0,_swigarg1)  (_swigobj->removeItem(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_TreeList_removeItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    FXbool  _arg2 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","item","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|b:FX_TreeList_removeItem",_kwnames,&_argo0,&_argo1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_removeItem. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_removeItem. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeList_removeItem(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeList_removeItems(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->removeItems(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeList_removeItems(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    FXTreeItem * _arg2;
    FXbool  _arg3 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    PyObject * _argo2 = 0;
    char *_kwnames[] = { "self","fm","to","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO|b:FX_TreeList_removeItems",_kwnames,&_argo0,&_argo1,&_argo2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_removeItems. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_removeItems. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
    if (_argo2) {
        if (_argo2 == Py_None) { _arg2 = NULL; }
        else if (SWIG_GetPtrObj(_argo2,(void **) &_arg2,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of FX_TreeList_removeItems. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeList_removeItems(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeList_clearItems(_swigobj,_swigarg0)  (_swigobj->clearItems(_swigarg0))
static PyObject *_wrap_FX_TreeList_clearItems(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeList * _arg0;
    FXbool  _arg1 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FX_TreeList_clearItems",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_clearItems. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeList_clearItems(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeList_getItemWidth(_swigobj,_swigarg0)  (_swigobj->getItemWidth(_swigarg0))
static PyObject *_wrap_FX_TreeList_getItemWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","item", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeList_getItemWidth",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_getItemWidth. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_getItemWidth. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_TreeList_getItemWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_TreeList_getItemHeight(_swigobj,_swigarg0)  (_swigobj->getItemHeight(_swigarg0))
static PyObject *_wrap_FX_TreeList_getItemHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","item", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeList_getItemHeight",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_getItemHeight. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_getItemHeight. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_TreeList_getItemHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_TreeList_getItemAt(_swigobj,_swigarg0,_swigarg1)  (_swigobj->getItemAt(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_TreeList_getItemAt(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _result;
    FXTreeList * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FX_TreeList_getItemAt",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_getItemAt. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTreeItem *)FX_TreeList_getItemAt(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_TreeList_findItem(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->findItem(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeList_findItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _result;
    FXTreeList * _arg0;
    FXString * _arg1;
    FXTreeItem * _arg2 = (FXTreeItem *) NULL;
    FXuint  _arg3 = (FXuint ) SEARCH_FORWARD|SEARCH_WRAP;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo2 = 0;
    char *_kwnames[] = { "self","text","start","flags", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|Oi:FX_TreeList_findItem",_kwnames,&_argo0,&_obj1,&_argo2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_findItem. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
    if (_argo2) {
        if (_argo2 == Py_None) { _arg2 = NULL; }
        else if (SWIG_GetPtrObj(_argo2,(void **) &_arg2,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of FX_TreeList_findItem. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTreeItem *)FX_TreeList_findItem(_arg0,*_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_TreeList_makeItemVisible(_swigobj,_swigarg0)  (_swigobj->makeItemVisible(_swigarg0))
static PyObject *_wrap_FX_TreeList_makeItemVisible(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","item", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeList_makeItemVisible",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_makeItemVisible. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_makeItemVisible. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeList_makeItemVisible(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeList_setItemText(_swigobj,_swigarg0,_swigarg1)  (_swigobj->setItemText(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_TreeList_setItemText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    FXString * _arg2;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "self","item","text", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO:FX_TreeList_setItemText",_kwnames,&_argo0,&_argo1,&_obj2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_setItemText. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_setItemText. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    if (_obj2 == Py_None)
	_arg2 = new FXString;
    else if (!PyString_Check(_obj2)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg2 = new FXString(PyString_AsString(_obj2));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeList_setItemText(_arg0,_arg1,*_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg2;
}
    return _resultobj;
}

#define FX_TreeList_getItemText(_swigobj,_swigarg0)  (_swigobj->getItemText(_swigarg0))
static PyObject *_wrap_FX_TreeList_getItemText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","item", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeList_getItemText",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_getItemText. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_getItemText. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_TreeList_getItemText(_arg0,_arg1));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

#define FX_TreeList_setItemOpenIcon(_swigobj,_swigarg0,_swigarg1)  (_swigobj->setItemOpenIcon(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_TreeList_setItemOpenIcon(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    FXIcon * _arg2;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "self","item","icon", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO:FX_TreeList_setItemOpenIcon",_kwnames,&_argo0,&_argo1,&_obj2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_setItemOpenIcon. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_setItemOpenIcon. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    if (_obj2 == Py_None)
	_arg2 = NULL;
    else
	SWIG_GetPtrObj(_obj2, (void**) &_arg2, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeList_setItemOpenIcon(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeList_getItemOpenIcon(_swigobj,_swigarg0)  (_swigobj->getItemOpenIcon(_swigarg0))
static PyObject *_wrap_FX_TreeList_getItemOpenIcon(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIcon * _result;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","item", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeList_getItemOpenIcon",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_getItemOpenIcon. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_getItemOpenIcon. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXIcon *)FX_TreeList_getItemOpenIcon(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_TreeList_setItemClosedIcon(_swigobj,_swigarg0,_swigarg1)  (_swigobj->setItemClosedIcon(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_TreeList_setItemClosedIcon(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    FXIcon * _arg2;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "self","item","icon", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO:FX_TreeList_setItemClosedIcon",_kwnames,&_argo0,&_argo1,&_obj2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_setItemClosedIcon. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_setItemClosedIcon. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    if (_obj2 == Py_None)
	_arg2 = NULL;
    else
	SWIG_GetPtrObj(_obj2, (void**) &_arg2, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeList_setItemClosedIcon(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeList_getItemClosedIcon(_swigobj,_swigarg0)  (_swigobj->getItemClosedIcon(_swigarg0))
static PyObject *_wrap_FX_TreeList_getItemClosedIcon(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIcon * _result;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","item", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeList_getItemClosedIcon",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_getItemClosedIcon. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_getItemClosedIcon. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXIcon *)FX_TreeList_getItemClosedIcon(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_TreeList_setItemData(_swigobj,_swigarg0,_swigarg1)  (_swigobj->setItemData(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_TreeList_setItemData(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    void * _arg2;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "self","item","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO:FX_TreeList_setItemData",_kwnames,&_argo0,&_argo1,&_obj2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_setItemData. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_setItemData. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    _arg2 = NULL;
    if (PyObject_HasAttrString(_obj2, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj2, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg2 = NULL;
	}
	else
	    _arg2 = (void*) _obj2;
	Py_DECREF(obj);
    }
    else
	_arg2 = (void*) _obj2;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeList_setItemData(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeList_getItemData(_swigobj,_swigarg0)  (_swigobj->getItemData(_swigarg0))
static PyObject *_wrap_FX_TreeList_getItemData(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    void * _result;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","item", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeList_getItemData",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_getItemData. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_getItemData. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (void *)FX_TreeList_getItemData(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_void_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_TreeList_isItemSelected(_swigobj,_swigarg0)  (_swigobj->isItemSelected(_swigarg0))
static PyObject *_wrap_FX_TreeList_isItemSelected(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","item", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeList_isItemSelected",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_isItemSelected. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_isItemSelected. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_TreeList_isItemSelected(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_TreeList_isItemCurrent(_swigobj,_swigarg0)  (_swigobj->isItemCurrent(_swigarg0))
static PyObject *_wrap_FX_TreeList_isItemCurrent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","item", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeList_isItemCurrent",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_isItemCurrent. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_isItemCurrent. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_TreeList_isItemCurrent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_TreeList_isItemVisible(_swigobj,_swigarg0)  (_swigobj->isItemVisible(_swigarg0))
static PyObject *_wrap_FX_TreeList_isItemVisible(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","item", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeList_isItemVisible",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_isItemVisible. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_isItemVisible. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_TreeList_isItemVisible(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_TreeList_isItemOpened(_swigobj,_swigarg0)  (_swigobj->isItemOpened(_swigarg0))
static PyObject *_wrap_FX_TreeList_isItemOpened(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","item", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeList_isItemOpened",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_isItemOpened. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_isItemOpened. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_TreeList_isItemOpened(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_TreeList_isItemExpanded(_swigobj,_swigarg0)  (_swigobj->isItemExpanded(_swigarg0))
static PyObject *_wrap_FX_TreeList_isItemExpanded(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","item", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeList_isItemExpanded",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_isItemExpanded. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_isItemExpanded. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_TreeList_isItemExpanded(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_TreeList_isItemLeaf(_swigobj,_swigarg0)  (_swigobj->isItemLeaf(_swigarg0))
static PyObject *_wrap_FX_TreeList_isItemLeaf(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","item", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeList_isItemLeaf",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_isItemLeaf. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_isItemLeaf. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_TreeList_isItemLeaf(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_TreeList_isItemEnabled(_swigobj,_swigarg0)  (_swigobj->isItemEnabled(_swigarg0))
static PyObject *_wrap_FX_TreeList_isItemEnabled(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","item", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeList_isItemEnabled",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_isItemEnabled. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_isItemEnabled. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_TreeList_isItemEnabled(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_TreeList_hitItem(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->hitItem(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeList_hitItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    FXint  _arg2;
    FXint  _arg3;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","item","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOii:FX_TreeList_hitItem",_kwnames,&_argo0,&_argo1,&_arg2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_hitItem. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_hitItem. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_TreeList_hitItem(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_TreeList_updateItem(_swigobj,_swigarg0)  (_swigobj->updateItem(_swigarg0))
static PyObject *_wrap_FX_TreeList_updateItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","item", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeList_updateItem",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_updateItem. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_updateItem. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeList_updateItem(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeList_enableItem(_swigobj,_swigarg0)  (_swigobj->enableItem(_swigarg0))
static PyObject *_wrap_FX_TreeList_enableItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","item", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeList_enableItem",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_enableItem. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_enableItem. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_TreeList_enableItem(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_TreeList_disableItem(_swigobj,_swigarg0)  (_swigobj->disableItem(_swigarg0))
static PyObject *_wrap_FX_TreeList_disableItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","item", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeList_disableItem",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_disableItem. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_disableItem. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_TreeList_disableItem(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_TreeList_selectItem(_swigobj,_swigarg0,_swigarg1)  (_swigobj->selectItem(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_TreeList_selectItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    FXbool  _arg2 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","item","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|b:FX_TreeList_selectItem",_kwnames,&_argo0,&_argo1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_selectItem. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_selectItem. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_TreeList_selectItem(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_TreeList_deselectItem(_swigobj,_swigarg0,_swigarg1)  (_swigobj->deselectItem(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_TreeList_deselectItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    FXbool  _arg2 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","item","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|b:FX_TreeList_deselectItem",_kwnames,&_argo0,&_argo1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_deselectItem. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_deselectItem. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_TreeList_deselectItem(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_TreeList_toggleItem(_swigobj,_swigarg0,_swigarg1)  (_swigobj->toggleItem(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_TreeList_toggleItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    FXbool  _arg2 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","item","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|b:FX_TreeList_toggleItem",_kwnames,&_argo0,&_argo1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_toggleItem. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_toggleItem. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_TreeList_toggleItem(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_TreeList_openItem(_swigobj,_swigarg0,_swigarg1)  (_swigobj->openItem(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_TreeList_openItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    FXbool  _arg2 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","item","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|b:FX_TreeList_openItem",_kwnames,&_argo0,&_argo1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_openItem. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_openItem. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_TreeList_openItem(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_TreeList_closeItem(_swigobj,_swigarg0,_swigarg1)  (_swigobj->closeItem(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_TreeList_closeItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    FXbool  _arg2 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","item","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|b:FX_TreeList_closeItem",_kwnames,&_argo0,&_argo1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_closeItem. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_closeItem. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_TreeList_closeItem(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_TreeList_collapseTree(_swigobj,_swigarg0,_swigarg1)  (_swigobj->collapseTree(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_TreeList_collapseTree(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    FXbool  _arg2 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","tree","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|b:FX_TreeList_collapseTree",_kwnames,&_argo0,&_argo1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_collapseTree. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_collapseTree. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_TreeList_collapseTree(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_TreeList_expandTree(_swigobj,_swigarg0,_swigarg1)  (_swigobj->expandTree(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_TreeList_expandTree(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    FXbool  _arg2 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","tree","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|b:FX_TreeList_expandTree",_kwnames,&_argo0,&_argo1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_expandTree. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_expandTree. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_TreeList_expandTree(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_TreeList_reparentItem(_swigobj,_swigarg0,_swigarg1)  (_swigobj->reparentItem(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_TreeList_reparentItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    FXTreeItem * _arg2;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    PyObject * _argo2 = 0;
    char *_kwnames[] = { "self","item","p", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO:FX_TreeList_reparentItem",_kwnames,&_argo0,&_argo1,&_argo2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_reparentItem. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_reparentItem. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
    if (_argo2) {
        if (_argo2 == Py_None) { _arg2 = NULL; }
        else if (SWIG_GetPtrObj(_argo2,(void **) &_arg2,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of FX_TreeList_reparentItem. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeList_reparentItem(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeList_setCurrentItem(_swigobj,_swigarg0,_swigarg1)  (_swigobj->setCurrentItem(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_TreeList_setCurrentItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    FXbool  _arg2 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","item","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|b:FX_TreeList_setCurrentItem",_kwnames,&_argo0,&_argo1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_setCurrentItem. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_setCurrentItem. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeList_setCurrentItem(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeList_getCurrentItem(_swigobj)  (_swigobj->getCurrentItem())
static PyObject *_wrap_FX_TreeList_getCurrentItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _result;
    FXTreeList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeList_getCurrentItem",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_getCurrentItem. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTreeItem *)FX_TreeList_getCurrentItem(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_TreeList_setAnchorItem(_swigobj,_swigarg0)  (_swigobj->setAnchorItem(_swigarg0))
static PyObject *_wrap_FX_TreeList_setAnchorItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","item", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeList_setAnchorItem",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_setAnchorItem. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_setAnchorItem. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeList_setAnchorItem(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeList_getAnchorItem(_swigobj)  (_swigobj->getAnchorItem())
static PyObject *_wrap_FX_TreeList_getAnchorItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _result;
    FXTreeList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeList_getAnchorItem",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_getAnchorItem. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTreeItem *)FX_TreeList_getAnchorItem(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_TreeList_getCursorItem(_swigobj)  (_swigobj->getCursorItem())
static PyObject *_wrap_FX_TreeList_getCursorItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _result;
    FXTreeList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeList_getCursorItem",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_getCursorItem. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTreeItem *)FX_TreeList_getCursorItem(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_TreeList_extendSelection(_swigobj,_swigarg0,_swigarg1)  (_swigobj->extendSelection(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_TreeList_extendSelection(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    FXbool  _arg2 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","item","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|b:FX_TreeList_extendSelection",_kwnames,&_argo0,&_argo1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_extendSelection. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_extendSelection. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_TreeList_extendSelection(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_TreeList_killSelection(_swigobj,_swigarg0)  (_swigobj->killSelection(_swigarg0))
static PyObject *_wrap_FX_TreeList_killSelection(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTreeList * _arg0;
    FXbool  _arg1 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FX_TreeList_killSelection",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_killSelection. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_TreeList_killSelection(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_TreeList_sortItems(_swigobj)  (_swigobj->sortItems())
static PyObject *_wrap_FX_TreeList_sortItems(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeList_sortItems",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_sortItems. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeList_sortItems(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeList_sortChildItems(_swigobj,_swigarg0)  (_swigobj->sortChildItems(_swigarg0))
static PyObject *_wrap_FX_TreeList_sortChildItems(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeList * _arg0;
    FXTreeItem * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","item", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeList_sortChildItems",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_sortChildItems. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_sortChildItems. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeList_sortChildItems(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeList_setFont(_swigobj,_swigarg0)  (_swigobj->setFont(_swigarg0))
static PyObject *_wrap_FX_TreeList_setFont(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeList * _arg0;
    FXFont * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","fnt", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeList_setFont",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_setFont. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXFont_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_setFont. Expected _FXFont_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeList_setFont(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeList_getFont(_swigobj)  (_swigobj->getFont())
static PyObject *_wrap_FX_TreeList_getFont(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFont * _result;
    FXTreeList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeList_getFont",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_getFont. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXFont *)FX_TreeList_getFont(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_TreeList_getTextColor(_swigobj)  (_swigobj->getTextColor())
static PyObject *_wrap_FX_TreeList_getTextColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXTreeList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeList_getTextColor",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_getTextColor. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FX_TreeList_getTextColor(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_TreeList_setTextColor(_swigobj,_swigarg0)  (_swigobj->setTextColor(_swigarg0))
static PyObject *_wrap_FX_TreeList_setTextColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeList * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_TreeList_setTextColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_setTextColor. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeList_setTextColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeList_getSelBackColor(_swigobj)  (_swigobj->getSelBackColor())
static PyObject *_wrap_FX_TreeList_getSelBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXTreeList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeList_getSelBackColor",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_getSelBackColor. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FX_TreeList_getSelBackColor(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_TreeList_setSelBackColor(_swigobj,_swigarg0)  (_swigobj->setSelBackColor(_swigarg0))
static PyObject *_wrap_FX_TreeList_setSelBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeList * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_TreeList_setSelBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_setSelBackColor. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeList_setSelBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeList_getSelTextColor(_swigobj)  (_swigobj->getSelTextColor())
static PyObject *_wrap_FX_TreeList_getSelTextColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXTreeList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeList_getSelTextColor",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_getSelTextColor. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FX_TreeList_getSelTextColor(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_TreeList_setSelTextColor(_swigobj,_swigarg0)  (_swigobj->setSelTextColor(_swigarg0))
static PyObject *_wrap_FX_TreeList_setSelTextColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeList * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_TreeList_setSelTextColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_setSelTextColor. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeList_setSelTextColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeList_getLineColor(_swigobj)  (_swigobj->getLineColor())
static PyObject *_wrap_FX_TreeList_getLineColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXTreeList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeList_getLineColor",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_getLineColor. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FX_TreeList_getLineColor(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_TreeList_setLineColor(_swigobj,_swigarg0)  (_swigobj->setLineColor(_swigarg0))
static PyObject *_wrap_FX_TreeList_setLineColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeList * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_TreeList_setLineColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_setLineColor. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeList_setLineColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeList_setIndent(_swigobj,_swigarg0)  (_swigobj->setIndent(_swigarg0))
static PyObject *_wrap_FX_TreeList_setIndent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeList * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","in", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_TreeList_setIndent",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_setIndent. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeList_setIndent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeList_getIndent(_swigobj)  (_swigobj->getIndent())
static PyObject *_wrap_FX_TreeList_getIndent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTreeList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeList_getIndent",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_getIndent. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_TreeList_getIndent(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_TreeList_setHelpText(_swigobj,_swigarg0)  (_swigobj->setHelpText(_swigarg0))
static PyObject *_wrap_FX_TreeList_setHelpText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeList * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","text", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeList_setHelpText",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_setHelpText. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeList_setHelpText(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_TreeList_getHelpText(_swigobj)  (_swigobj->getHelpText())
static PyObject *_wrap_FX_TreeList_getHelpText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXTreeList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeList_getHelpText",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_getHelpText. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_TreeList_getHelpText(_arg0));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

#define FX_TreeList_getSortFunc(_swigobj)  (_swigobj->getSortFunc())
static PyObject *_wrap_FX_TreeList_getSortFunc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeListSortFunc  _result;
    FXTreeList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeList_getSortFunc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_getSortFunc. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTreeListSortFunc )FX_TreeList_getSortFunc(_arg0);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXTreeListSortFunc");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_TreeList_setSortFunc(_swigobj,_swigarg0)  (_swigobj->setSortFunc(_swigarg0))
static PyObject *_wrap_FX_TreeList_setSortFunc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeList * _arg0;
    FXTreeListSortFunc  _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","func", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeList_setSortFunc",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_setSortFunc. Expected _FXTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeListSortFunc")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeList_setSortFunc. Expected _FXTreeListSortFunc.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeList_setSortFunc(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeList_getListStyle(_swigobj)  (_swigobj->getListStyle())
static PyObject *_wrap_FX_TreeList_getListStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXTreeList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeList_getListStyle",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_getListStyle. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )FX_TreeList_getListStyle(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_TreeList_setListStyle(_swigobj,_swigarg0)  (_swigobj->setListStyle(_swigarg0))
static PyObject *_wrap_FX_TreeList_setListStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeList * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","style", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_TreeList_setListStyle",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeList_setListStyle. Expected _FXTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeList_setListStyle(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXPyTreeListToFXTreeList(void *ptr) {
    FXPyTreeList *src;
    FXTreeList *dest;
    src = (FXPyTreeList *) ptr;
    dest = (FXTreeList *) src;
    return (void *) dest;
}

static void *SwigFXPyTreeListToFXScrollArea(void *ptr) {
    FXPyTreeList *src;
    FXScrollArea *dest;
    src = (FXPyTreeList *) ptr;
    dest = (FXScrollArea *) src;
    return (void *) dest;
}

static void *SwigFXPyTreeListToFXComposite(void *ptr) {
    FXPyTreeList *src;
    FXComposite *dest;
    src = (FXPyTreeList *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXPyTreeListToFXWindow(void *ptr) {
    FXPyTreeList *src;
    FXWindow *dest;
    src = (FXPyTreeList *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyTreeListToFXDrawable(void *ptr) {
    FXPyTreeList *src;
    FXDrawable *dest;
    src = (FXPyTreeList *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPyTreeListToFXId(void *ptr) {
    FXPyTreeList *src;
    FXId *dest;
    src = (FXPyTreeList *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPyTreeListToFXObject(void *ptr) {
    FXPyTreeList *src;
    FXObject *dest;
    src = (FXPyTreeList *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXTreeList(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8) (new FXPyTreeList(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8))
static PyObject *_wrap_new_FXTreeList(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeList * _result;
    FXComposite * _arg0;
    FXint  _arg1;
    FXObject * _arg2 = (FXObject *) NULL;
    FXSelector  _arg3 = (FXSelector ) 0;
    FXuint  _arg4 = (FXuint ) (TREELIST_NORMAL);
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    FXint  _arg8 = (FXint ) 0;
    PyObject * _argo0 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "p","nvis","tgt","sel","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi|Oiiiiii:new_FXTreeList",_kwnames,&_argo0,&_arg1,&_obj2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7,&_arg8)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FXTreeList. Expected _FXComposite_p.");
        return NULL;
        }
    }
    if (_obj2)
{
    if (_obj2 == Py_None)
	_arg2 = NULL;
    else
	SWIG_GetPtrObj(_obj2, (void**) &_arg2, "_FXObject_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyTreeList *)new_FXTreeList(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7,_arg8);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyTreeList_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FXTreeList_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXTreeList_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyTreeList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXTreeList_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeList_onDefault. Expected _FXPyTreeList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXTreeList_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXTreeList_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXTreeList_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeList_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeList_create. Expected _FXPyTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeList_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeList_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXTreeList_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeList_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeList_destroy. Expected _FXPyTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeList_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeList_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXTreeList_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeList_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeList_detach. Expected _FXPyTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeList_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeList_resize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_resize(_swigarg0,_swigarg1))
static PyObject *_wrap_FXTreeList_resize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeList * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXTreeList_resize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeList_resize. Expected _FXPyTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeList_resize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeList_getDefaultWidth(_swigobj)  (_swigobj->_getDefaultWidth())
static PyObject *_wrap_FXTreeList_getDefaultWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyTreeList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeList_getDefaultWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeList_getDefaultWidth. Expected _FXPyTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXTreeList_getDefaultWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXTreeList_getDefaultHeight(_swigobj)  (_swigobj->_getDefaultHeight())
static PyObject *_wrap_FXTreeList_getDefaultHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyTreeList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeList_getDefaultHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeList_getDefaultHeight. Expected _FXPyTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXTreeList_getDefaultHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXTreeList_show(_swigobj)  (_swigobj->_show())
static PyObject *_wrap_FXTreeList_show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeList_show",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeList_show. Expected _FXPyTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeList_show(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeList_hide(_swigobj)  (_swigobj->_hide())
static PyObject *_wrap_FXTreeList_hide(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeList_hide",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeList_hide. Expected _FXPyTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeList_hide(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeList_enable(_swigobj)  (_swigobj->_enable())
static PyObject *_wrap_FXTreeList_enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeList_enable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeList_enable. Expected _FXPyTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeList_enable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeList_disable(_swigobj)  (_swigobj->_disable())
static PyObject *_wrap_FXTreeList_disable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeList_disable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeList_disable. Expected _FXPyTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeList_disable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeList_canFocus(_swigobj)  (_swigobj->_canFocus())
static PyObject *_wrap_FXTreeList_canFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyTreeList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeList_canFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeList_canFocus. Expected _FXPyTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXTreeList_canFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXTreeList_setFocus(_swigobj)  (_swigobj->_setFocus())
static PyObject *_wrap_FXTreeList_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeList_setFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeList_setFocus. Expected _FXPyTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeList_setFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeList_killFocus(_swigobj)  (_swigobj->_killFocus())
static PyObject *_wrap_FXTreeList_killFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeList_killFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeList_killFocus. Expected _FXPyTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeList_killFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeList_setDefault(_swigobj,_swigarg0)  (_swigobj->_setDefault(_swigarg0))
static PyObject *_wrap_FXTreeList_setDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeList * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FXTreeList_setDefault",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeList_setDefault. Expected _FXPyTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeList_setDefault(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeList_recalc(_swigobj)  (_swigobj->_recalc())
static PyObject *_wrap_FXTreeList_recalc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeList_recalc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeList_recalc. Expected _FXPyTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeList_recalc(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeList_layout(_swigobj)  (_swigobj->_layout())
static PyObject *_wrap_FXTreeList_layout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeList_layout",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeList_layout. Expected _FXPyTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeList_layout(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeList_lower(_swigobj)  (_swigobj->_lowerWindow())
static PyObject *_wrap_FXTreeList_lower(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeList_lower",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeList_lower. Expected _FXPyTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeList_lower(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeList_move(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_move(_swigarg0,_swigarg1))
static PyObject *_wrap_FXTreeList_move(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeList * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXTreeList_move",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeList_move. Expected _FXPyTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeList_move(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeList_position(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->_position(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FXTreeList_position(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeList * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FXTreeList_position",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeList_position. Expected _FXPyTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeList_position(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeList_isComposite(_swigobj)  (_swigobj->_isComposite())
static PyObject *_wrap_FXTreeList_isComposite(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyTreeList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeList_isComposite",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeList_isComposite. Expected _FXPyTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXTreeList_isComposite(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXTreeList_contains(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_contains(_swigarg0,_swigarg1))
static PyObject *_wrap_FXTreeList_contains(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyTreeList * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXTreeList_contains",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeList_contains. Expected _FXPyTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXTreeList_contains(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXTreeList_getWidthForHeight(_swigobj,_swigarg0)  (_swigobj->_getWidthForHeight(_swigarg0))
static PyObject *_wrap_FXTreeList_getWidthForHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyTreeList * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXTreeList_getWidthForHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeList_getWidthForHeight. Expected _FXPyTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXTreeList_getWidthForHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXTreeList_getHeightForWidth(_swigobj,_swigarg0)  (_swigobj->_getHeightForWidth(_swigarg0))
static PyObject *_wrap_FXTreeList_getHeightForWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyTreeList * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXTreeList_getHeightForWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeList_getHeightForWidth. Expected _FXPyTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXTreeList_getHeightForWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXTreeList_doesSaveUnder(_swigobj)  (_swigobj->_doesSaveUnder())
static PyObject *_wrap_FXTreeList_doesSaveUnder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyTreeList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeList_doesSaveUnder",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeList_doesSaveUnder. Expected _FXPyTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXTreeList_doesSaveUnder(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXTreeList_reparent(_swigobj,_swigarg0)  (_swigobj->_reparent(_swigarg0))
static PyObject *_wrap_FXTreeList_reparent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeList * _arg0;
    FXComposite * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","newparent", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXTreeList_reparent",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeList_reparent. Expected _FXPyTreeList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXTreeList_reparent. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeList_reparent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeList_setBackColor(_swigobj,_swigarg0)  (_swigobj->_setBackColor(_swigarg0))
static PyObject *_wrap_FXTreeList_setBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeList * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXTreeList_setBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeList_setBackColor. Expected _FXPyTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeList_setBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeList_getContentWidth(_swigobj)  (_swigobj->_getContentWidth())
static PyObject *_wrap_FXTreeList_getContentWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyTreeList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeList_getContentWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeList_getContentWidth. Expected _FXPyTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXTreeList_getContentWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXTreeList_getContentHeight(_swigobj)  (_swigobj->_getContentHeight())
static PyObject *_wrap_FXTreeList_getContentHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyTreeList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeList_getContentHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeList_getContentHeight. Expected _FXPyTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXTreeList_getContentHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXTreeList_getViewportWidth(_swigobj)  (_swigobj->_getViewportWidth())
static PyObject *_wrap_FXTreeList_getViewportWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyTreeList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeList_getViewportWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeList_getViewportWidth. Expected _FXPyTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXTreeList_getViewportWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXTreeList_getViewportHeight(_swigobj)  (_swigobj->_getViewportHeight())
static PyObject *_wrap_FXTreeList_getViewportHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyTreeList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeList_getViewportHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeList_getViewportHeight. Expected _FXPyTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXTreeList_getViewportHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXTreeList_moveContents(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_moveContents(_swigarg0,_swigarg1))
static PyObject *_wrap_FXTreeList_moveContents(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeList * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXTreeList_moveContents",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeList_moveContents. Expected _FXPyTreeList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeList_moveContents(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXTreeListBoxToFXPacker(void *ptr) {
    FXTreeListBox *src;
    FXPacker *dest;
    src = (FXTreeListBox *) ptr;
    dest = (FXPacker *) src;
    return (void *) dest;
}

static void *SwigFXTreeListBoxToFXComposite(void *ptr) {
    FXTreeListBox *src;
    FXComposite *dest;
    src = (FXTreeListBox *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXTreeListBoxToFXWindow(void *ptr) {
    FXTreeListBox *src;
    FXWindow *dest;
    src = (FXTreeListBox *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXTreeListBoxToFXDrawable(void *ptr) {
    FXTreeListBox *src;
    FXDrawable *dest;
    src = (FXTreeListBox *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXTreeListBoxToFXId(void *ptr) {
    FXTreeListBox *src;
    FXId *dest;
    src = (FXTreeListBox *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXTreeListBoxToFXObject(void *ptr) {
    FXTreeListBox *src;
    FXObject *dest;
    src = (FXTreeListBox *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define FX_TreeListBox_onFocusUp(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onFocusUp(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeListBox_onFocusUp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTreeListBox * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_TreeListBox_onFocusUp",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_onFocusUp. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_TreeListBox_onFocusUp. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_TreeListBox_onFocusUp(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_TreeListBox_onFocusDown(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onFocusDown(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeListBox_onFocusDown(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTreeListBox * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_TreeListBox_onFocusDown",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_onFocusDown. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_TreeListBox_onFocusDown. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_TreeListBox_onFocusDown(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_TreeListBox_onChanged(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onChanged(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeListBox_onChanged(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTreeListBox * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_TreeListBox_onChanged",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_onChanged. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_TreeListBox_onChanged. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_TreeListBox_onChanged(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_TreeListBox_onCommand(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCommand(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeListBox_onCommand(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTreeListBox * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_TreeListBox_onCommand",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_onCommand. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_TreeListBox_onCommand. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_TreeListBox_onCommand(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_TreeListBox_onFieldButton(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onFieldButton(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeListBox_onFieldButton(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTreeListBox * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_TreeListBox_onFieldButton",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_onFieldButton. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_TreeListBox_onFieldButton. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_TreeListBox_onFieldButton(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_TreeListBox_onTreeChanged(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onTreeChanged(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeListBox_onTreeChanged(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTreeListBox * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_TreeListBox_onTreeChanged",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_onTreeChanged. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_TreeListBox_onTreeChanged. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_TreeListBox_onTreeChanged(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_TreeListBox_onTreeClicked(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onTreeClicked(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeListBox_onTreeClicked(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTreeListBox * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_TreeListBox_onTreeClicked",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_onTreeClicked. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_TreeListBox_onTreeClicked. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_TreeListBox_onTreeClicked(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_TreeListBox_onUpdFmTree(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdFmTree(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeListBox_onUpdFmTree(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXTreeListBox * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_TreeListBox_onUpdFmTree",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_onUpdFmTree. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_TreeListBox_onUpdFmTree. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_TreeListBox_onUpdFmTree(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define new_FX_TreeListBox(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11,_swigarg12) (new FXTreeListBox(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11,_swigarg12))
static PyObject *_wrap_new_FX_TreeListBox(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeListBox * _result;
    FXComposite * _arg0;
    FXint  _arg1;
    FXObject * _arg2 = (FXObject *) NULL;
    FXSelector  _arg3 = (FXSelector ) 0;
    FXuint  _arg4 = (FXuint ) FRAME_SUNKEN|FRAME_THICK|(TREELISTBOX_NORMAL);
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    FXint  _arg8 = (FXint ) 0;
    FXint  _arg9 = (FXint ) DEFAULT_PAD;
    FXint  _arg10 = (FXint ) DEFAULT_PAD;
    FXint  _arg11 = (FXint ) DEFAULT_PAD;
    FXint  _arg12 = (FXint ) DEFAULT_PAD;
    PyObject * _argo0 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "p","nvis","tgt","sel","opts","x","y","w","h","pl","pr","pt","pb", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi|Oiiiiiiiiii:new_FX_TreeListBox",_kwnames,&_argo0,&_arg1,&_obj2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7,&_arg8,&_arg9,&_arg10,&_arg11,&_arg12)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FX_TreeListBox. Expected _FXComposite_p.");
        return NULL;
        }
    }
    if (_obj2)
{
    if (_obj2 == Py_None)
	_arg2 = NULL;
    else
	SWIG_GetPtrObj(_obj2, (void**) &_arg2, "_FXObject_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTreeListBox *)new_FX_TreeListBox(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7,_arg8,_arg9,_arg10,_arg11,_arg12);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXTreeListBox_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_TreeListBox_getNumItems(_swigobj)  (_swigobj->getNumItems())
static PyObject *_wrap_FX_TreeListBox_getNumItems(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTreeListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeListBox_getNumItems",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_getNumItems. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_TreeListBox_getNumItems(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_TreeListBox_getNumVisible(_swigobj)  (_swigobj->getNumVisible())
static PyObject *_wrap_FX_TreeListBox_getNumVisible(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXTreeListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeListBox_getNumVisible",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_getNumVisible. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_TreeListBox_getNumVisible(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_TreeListBox_setNumVisible(_swigobj,_swigarg0)  (_swigobj->setNumVisible(_swigarg0))
static PyObject *_wrap_FX_TreeListBox_setNumVisible(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeListBox * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","nvis", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_TreeListBox_setNumVisible",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_setNumVisible. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeListBox_setNumVisible(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeListBox_getFirstItem(_swigobj)  (_swigobj->getFirstItem())
static PyObject *_wrap_FX_TreeListBox_getFirstItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _result;
    FXTreeListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeListBox_getFirstItem",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_getFirstItem. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTreeItem *)FX_TreeListBox_getFirstItem(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_TreeListBox_getLastItem(_swigobj)  (_swigobj->getLastItem())
static PyObject *_wrap_FX_TreeListBox_getLastItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _result;
    FXTreeListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeListBox_getLastItem",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_getLastItem. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTreeItem *)FX_TreeListBox_getLastItem(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

static FXTreeItem * FXTreeListBox_addItemFirst(FXTreeListBox *self,PyObject * treeItem,const FXString & text,FXIcon * oi,FXIcon * ci,void * ptr) {
      FXTreeItem *item = 0;
      if (treeItem != Py_None)
	item = (FXTreeItem*) FXPyGetFXObject(treeItem);
      return (FXTreeItem*) self->addItemFirst(item, text, oi, ci, ptr);
      }
static PyObject *_wrap_FX_TreeListBox_addItemFirst(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _result;
    FXTreeListBox * _arg0;
    PyObject * _arg1;
    FXString * _arg2;
    FXIcon * _arg3 = (FXIcon *) NULL;
    FXIcon * _arg4 = (FXIcon *) NULL;
    void * _arg5 = (void *) NULL;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    PyObject * _obj3 = 0;
    PyObject * _obj4 = 0;
    PyObject * _obj5 = 0;
    char *_kwnames[] = { "self","treeItem","text","oi","ci","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO|OOO:FX_TreeListBox_addItemFirst",_kwnames,&_argo0,&_obj1,&_obj2,&_obj3,&_obj4,&_obj5)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_addItemFirst. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
{
    _arg1 = _obj1;
}
{
    if (_obj2 == Py_None)
	_arg2 = new FXString;
    else if (!PyString_Check(_obj2)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg2 = new FXString(PyString_AsString(_obj2));
}
    if (_obj3)
{
    if (_obj3 == Py_None)
	_arg3 = NULL;
    else
	SWIG_GetPtrObj(_obj3, (void**) &_arg3, "_FXIcon_p");
}
    if (_obj4)
{
    if (_obj4 == Py_None)
	_arg4 = NULL;
    else
	SWIG_GetPtrObj(_obj4, (void**) &_arg4, "_FXIcon_p");
}
    if (_obj5)
{
    _arg5 = NULL;
    if (PyObject_HasAttrString(_obj5, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj5, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg5 = NULL;
	}
	else
	    _arg5 = (void*) _obj5;
	Py_DECREF(obj);
    }
    else
	_arg5 = (void*) _obj5;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTreeItem *)FXTreeListBox_addItemFirst(_arg0,_arg1,*_arg2,_arg3,_arg4,_arg5);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
{
    delete _arg2;
}
    return _resultobj;
}

static FXTreeItem * FXTreeListBox_addItemFirst2(FXTreeListBox *self,PyObject * treeItem,FXTreeItem * item) {
      FXTreeItem *parentItem = NULL;
      if (treeItem != Py_None)
        parentItem = (FXTreeItem*) FXPyGetFXObject(treeItem);
      return (FXTreeItem*) self->addItemFirst(parentItem, item);
      }
static PyObject *_wrap_FX_TreeListBox_addItemFirst2(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _result;
    FXTreeListBox * _arg0;
    PyObject * _arg1;
    FXTreeItem * _arg2;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo2 = 0;
    char *_kwnames[] = { "self","treeItem","item", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO:FX_TreeListBox_addItemFirst2",_kwnames,&_argo0,&_obj1,&_argo2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_addItemFirst2. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
{
    _arg1 = _obj1;
}
    if (_argo2) {
        if (_argo2 == Py_None) { _arg2 = NULL; }
        else if (SWIG_GetPtrObj(_argo2,(void **) &_arg2,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of FX_TreeListBox_addItemFirst2. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTreeItem *)FXTreeListBox_addItemFirst2(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

static FXTreeItem * FXTreeListBox_addItemLast(FXTreeListBox *self,PyObject * treeItem,const FXString & text,FXIcon * oi,FXIcon * ci,void * ptr) {
      FXTreeItem *item = 0;
      if (treeItem != Py_None)
	item = (FXTreeItem*) FXPyGetFXObject(treeItem);
      return (FXTreeItem*) self->addItemLast(item, text, oi, ci, ptr);
    }
static PyObject *_wrap_FX_TreeListBox_addItemLast(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _result;
    FXTreeListBox * _arg0;
    PyObject * _arg1;
    FXString * _arg2;
    FXIcon * _arg3 = (FXIcon *) NULL;
    FXIcon * _arg4 = (FXIcon *) NULL;
    void * _arg5 = (void *) NULL;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    PyObject * _obj3 = 0;
    PyObject * _obj4 = 0;
    PyObject * _obj5 = 0;
    char *_kwnames[] = { "self","treeItem","text","oi","ci","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO|OOO:FX_TreeListBox_addItemLast",_kwnames,&_argo0,&_obj1,&_obj2,&_obj3,&_obj4,&_obj5)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_addItemLast. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
{
    _arg1 = _obj1;
}
{
    if (_obj2 == Py_None)
	_arg2 = new FXString;
    else if (!PyString_Check(_obj2)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg2 = new FXString(PyString_AsString(_obj2));
}
    if (_obj3)
{
    if (_obj3 == Py_None)
	_arg3 = NULL;
    else
	SWIG_GetPtrObj(_obj3, (void**) &_arg3, "_FXIcon_p");
}
    if (_obj4)
{
    if (_obj4 == Py_None)
	_arg4 = NULL;
    else
	SWIG_GetPtrObj(_obj4, (void**) &_arg4, "_FXIcon_p");
}
    if (_obj5)
{
    _arg5 = NULL;
    if (PyObject_HasAttrString(_obj5, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj5, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg5 = NULL;
	}
	else
	    _arg5 = (void*) _obj5;
	Py_DECREF(obj);
    }
    else
	_arg5 = (void*) _obj5;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTreeItem *)FXTreeListBox_addItemLast(_arg0,_arg1,*_arg2,_arg3,_arg4,_arg5);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
{
    delete _arg2;
}
    return _resultobj;
}

static FXTreeItem * FXTreeListBox_addItemLast2(FXTreeListBox *self,PyObject * treeItem,FXTreeItem * item) {
      FXTreeItem *parentItem = NULL;
      if (treeItem != Py_None)
        parentItem = (FXTreeItem*) FXPyGetFXObject(treeItem);
      return (FXTreeItem*) self->addItemLast(parentItem, item);
      }
static PyObject *_wrap_FX_TreeListBox_addItemLast2(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _result;
    FXTreeListBox * _arg0;
    PyObject * _arg1;
    FXTreeItem * _arg2;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo2 = 0;
    char *_kwnames[] = { "self","treeItem","item", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO:FX_TreeListBox_addItemLast2",_kwnames,&_argo0,&_obj1,&_argo2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_addItemLast2. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
{
    _arg1 = _obj1;
}
    if (_argo2) {
        if (_argo2 == Py_None) { _arg2 = NULL; }
        else if (SWIG_GetPtrObj(_argo2,(void **) &_arg2,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of FX_TreeListBox_addItemLast2. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTreeItem *)FXTreeListBox_addItemLast2(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_TreeListBox_addItemAfter(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4)  (_swigobj->addItemAfter(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4))
static PyObject *_wrap_FX_TreeListBox_addItemAfter(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _result;
    FXTreeListBox * _arg0;
    FXTreeItem * _arg1;
    FXString * _arg2;
    FXIcon * _arg3 = (FXIcon *) NULL;
    FXIcon * _arg4 = (FXIcon *) NULL;
    void * _arg5 = (void *) NULL;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    PyObject * _obj2 = 0;
    PyObject * _obj3 = 0;
    PyObject * _obj4 = 0;
    PyObject * _obj5 = 0;
    char *_kwnames[] = { "self","other","text","oi","ci","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO|OOO:FX_TreeListBox_addItemAfter",_kwnames,&_argo0,&_argo1,&_obj2,&_obj3,&_obj4,&_obj5)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_addItemAfter. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeListBox_addItemAfter. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    if (_obj2 == Py_None)
	_arg2 = new FXString;
    else if (!PyString_Check(_obj2)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg2 = new FXString(PyString_AsString(_obj2));
}
    if (_obj3)
{
    if (_obj3 == Py_None)
	_arg3 = NULL;
    else
	SWIG_GetPtrObj(_obj3, (void**) &_arg3, "_FXIcon_p");
}
    if (_obj4)
{
    if (_obj4 == Py_None)
	_arg4 = NULL;
    else
	SWIG_GetPtrObj(_obj4, (void**) &_arg4, "_FXIcon_p");
}
    if (_obj5)
{
    _arg5 = NULL;
    if (PyObject_HasAttrString(_obj5, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj5, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg5 = NULL;
	}
	else
	    _arg5 = (void*) _obj5;
	Py_DECREF(obj);
    }
    else
	_arg5 = (void*) _obj5;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTreeItem *)FX_TreeListBox_addItemAfter(_arg0,_arg1,*_arg2,_arg3,_arg4,_arg5);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
{
    delete _arg2;
}
    return _resultobj;
}

#define FX_TreeListBox_addItemBefore(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4)  (_swigobj->addItemBefore(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4))
static PyObject *_wrap_FX_TreeListBox_addItemBefore(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _result;
    FXTreeListBox * _arg0;
    FXTreeItem * _arg1;
    FXString * _arg2;
    FXIcon * _arg3 = (FXIcon *) NULL;
    FXIcon * _arg4 = (FXIcon *) NULL;
    void * _arg5 = (void *) NULL;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    PyObject * _obj2 = 0;
    PyObject * _obj3 = 0;
    PyObject * _obj4 = 0;
    PyObject * _obj5 = 0;
    char *_kwnames[] = { "self","other","text","oi","ci","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO|OOO:FX_TreeListBox_addItemBefore",_kwnames,&_argo0,&_argo1,&_obj2,&_obj3,&_obj4,&_obj5)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_addItemBefore. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeListBox_addItemBefore. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    if (_obj2 == Py_None)
	_arg2 = new FXString;
    else if (!PyString_Check(_obj2)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg2 = new FXString(PyString_AsString(_obj2));
}
    if (_obj3)
{
    if (_obj3 == Py_None)
	_arg3 = NULL;
    else
	SWIG_GetPtrObj(_obj3, (void**) &_arg3, "_FXIcon_p");
}
    if (_obj4)
{
    if (_obj4 == Py_None)
	_arg4 = NULL;
    else
	SWIG_GetPtrObj(_obj4, (void**) &_arg4, "_FXIcon_p");
}
    if (_obj5)
{
    _arg5 = NULL;
    if (PyObject_HasAttrString(_obj5, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj5, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg5 = NULL;
	}
	else
	    _arg5 = (void*) _obj5;
	Py_DECREF(obj);
    }
    else
	_arg5 = (void*) _obj5;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTreeItem *)FX_TreeListBox_addItemBefore(_arg0,_arg1,*_arg2,_arg3,_arg4,_arg5);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
{
    delete _arg2;
}
    return _resultobj;
}

#define FX_TreeListBox_addItemAfter2(_swigobj,_swigarg0,_swigarg1)  (_swigobj->addItemAfter(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_TreeListBox_addItemAfter2(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _result;
    FXTreeListBox * _arg0;
    FXTreeItem * _arg1;
    FXTreeItem * _arg2;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    PyObject * _argo2 = 0;
    char *_kwnames[] = { "self","other","item", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO:FX_TreeListBox_addItemAfter2",_kwnames,&_argo0,&_argo1,&_argo2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_addItemAfter2. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeListBox_addItemAfter2. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
    if (_argo2) {
        if (_argo2 == Py_None) { _arg2 = NULL; }
        else if (SWIG_GetPtrObj(_argo2,(void **) &_arg2,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of FX_TreeListBox_addItemAfter2. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTreeItem *)FX_TreeListBox_addItemAfter2(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_TreeListBox_addItemBefore2(_swigobj,_swigarg0,_swigarg1)  (_swigobj->addItemBefore(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_TreeListBox_addItemBefore2(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _result;
    FXTreeListBox * _arg0;
    FXTreeItem * _arg1;
    FXTreeItem * _arg2;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    PyObject * _argo2 = 0;
    char *_kwnames[] = { "self","other","item", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO:FX_TreeListBox_addItemBefore2",_kwnames,&_argo0,&_argo1,&_argo2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_addItemBefore2. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeListBox_addItemBefore2. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
    if (_argo2) {
        if (_argo2 == Py_None) { _arg2 = NULL; }
        else if (SWIG_GetPtrObj(_argo2,(void **) &_arg2,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of FX_TreeListBox_addItemBefore2. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTreeItem *)FX_TreeListBox_addItemBefore2(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_TreeListBox_removeItem(_swigobj,_swigarg0)  (_swigobj->removeItem(_swigarg0))
static PyObject *_wrap_FX_TreeListBox_removeItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeListBox * _arg0;
    FXTreeItem * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","item", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeListBox_removeItem",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_removeItem. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeListBox_removeItem. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeListBox_removeItem(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeListBox_removeItems(_swigobj,_swigarg0,_swigarg1)  (_swigobj->removeItems(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_TreeListBox_removeItems(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeListBox * _arg0;
    FXTreeItem * _arg1;
    FXTreeItem * _arg2;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    PyObject * _argo2 = 0;
    char *_kwnames[] = { "self","fm","to", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO:FX_TreeListBox_removeItems",_kwnames,&_argo0,&_argo1,&_argo2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_removeItems. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeListBox_removeItems. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
    if (_argo2) {
        if (_argo2 == Py_None) { _arg2 = NULL; }
        else if (SWIG_GetPtrObj(_argo2,(void **) &_arg2,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of FX_TreeListBox_removeItems. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeListBox_removeItems(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeListBox_clearItems(_swigobj)  (_swigobj->clearItems())
static PyObject *_wrap_FX_TreeListBox_clearItems(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeListBox_clearItems",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_clearItems. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeListBox_clearItems(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeListBox_findItem(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->findItem(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_TreeListBox_findItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _result;
    FXTreeListBox * _arg0;
    FXString * _arg1;
    FXTreeItem * _arg2 = (FXTreeItem *) NULL;
    FXuint  _arg3 = (FXuint ) SEARCH_FORWARD|SEARCH_WRAP;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo2 = 0;
    char *_kwnames[] = { "self","text","start","flags", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|Oi:FX_TreeListBox_findItem",_kwnames,&_argo0,&_obj1,&_argo2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_findItem. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
    if (_argo2) {
        if (_argo2 == Py_None) { _arg2 = NULL; }
        else if (SWIG_GetPtrObj(_argo2,(void **) &_arg2,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of FX_TreeListBox_findItem. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTreeItem *)FX_TreeListBox_findItem(_arg0,*_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_TreeListBox_isItemCurrent(_swigobj,_swigarg0)  (_swigobj->isItemCurrent(_swigarg0))
static PyObject *_wrap_FX_TreeListBox_isItemCurrent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTreeListBox * _arg0;
    FXTreeItem * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","item", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeListBox_isItemCurrent",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_isItemCurrent. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeListBox_isItemCurrent. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_TreeListBox_isItemCurrent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_TreeListBox_isItemLeaf(_swigobj,_swigarg0)  (_swigobj->isItemLeaf(_swigarg0))
static PyObject *_wrap_FX_TreeListBox_isItemLeaf(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTreeListBox * _arg0;
    FXTreeItem * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","item", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeListBox_isItemLeaf",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_isItemLeaf. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeListBox_isItemLeaf. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_TreeListBox_isItemLeaf(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_TreeListBox_sortChildItems(_swigobj,_swigarg0)  (_swigobj->sortChildItems(_swigarg0))
static PyObject *_wrap_FX_TreeListBox_sortChildItems(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeListBox * _arg0;
    FXTreeItem * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","item", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeListBox_sortChildItems",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_sortChildItems. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeListBox_sortChildItems. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeListBox_sortChildItems(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeListBox_sortItems(_swigobj)  (_swigobj->sortItems())
static PyObject *_wrap_FX_TreeListBox_sortItems(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeListBox_sortItems",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_sortItems. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeListBox_sortItems(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeListBox_setCurrentItem(_swigobj,_swigarg0,_swigarg1)  (_swigobj->setCurrentItem(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_TreeListBox_setCurrentItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeListBox * _arg0;
    FXTreeItem * _arg1;
    FXbool  _arg2 = (FXbool ) FALSE;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","item","notify", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|b:FX_TreeListBox_setCurrentItem",_kwnames,&_argo0,&_argo1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_setCurrentItem. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeListBox_setCurrentItem. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeListBox_setCurrentItem(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeListBox_getCurrentItem(_swigobj)  (_swigobj->getCurrentItem())
static PyObject *_wrap_FX_TreeListBox_getCurrentItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeItem * _result;
    FXTreeListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeListBox_getCurrentItem",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_getCurrentItem. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTreeItem *)FX_TreeListBox_getCurrentItem(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_TreeListBox_setItemText(_swigobj,_swigarg0,_swigarg1)  (_swigobj->setItemText(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_TreeListBox_setItemText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeListBox * _arg0;
    FXTreeItem * _arg1;
    FXString * _arg2;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "self","item","text", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO:FX_TreeListBox_setItemText",_kwnames,&_argo0,&_argo1,&_obj2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_setItemText. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeListBox_setItemText. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    if (_obj2 == Py_None)
	_arg2 = new FXString;
    else if (!PyString_Check(_obj2)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg2 = new FXString(PyString_AsString(_obj2));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeListBox_setItemText(_arg0,_arg1,*_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg2;
}
    return _resultobj;
}

#define FX_TreeListBox_getItemText(_swigobj,_swigarg0)  (_swigobj->getItemText(_swigarg0))
static PyObject *_wrap_FX_TreeListBox_getItemText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXTreeListBox * _arg0;
    FXTreeItem * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","item", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeListBox_getItemText",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_getItemText. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeListBox_getItemText. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_TreeListBox_getItemText(_arg0,_arg1));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

#define FX_TreeListBox_setItemOpenIcon(_swigobj,_swigarg0,_swigarg1)  (_swigobj->setItemOpenIcon(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_TreeListBox_setItemOpenIcon(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeListBox * _arg0;
    FXTreeItem * _arg1;
    FXIcon * _arg2;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "self","item","icon", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO:FX_TreeListBox_setItemOpenIcon",_kwnames,&_argo0,&_argo1,&_obj2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_setItemOpenIcon. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeListBox_setItemOpenIcon. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    if (_obj2 == Py_None)
	_arg2 = NULL;
    else
	SWIG_GetPtrObj(_obj2, (void**) &_arg2, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeListBox_setItemOpenIcon(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeListBox_getItemOpenIcon(_swigobj,_swigarg0)  (_swigobj->getItemOpenIcon(_swigarg0))
static PyObject *_wrap_FX_TreeListBox_getItemOpenIcon(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIcon * _result;
    FXTreeListBox * _arg0;
    FXTreeItem * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","item", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeListBox_getItemOpenIcon",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_getItemOpenIcon. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeListBox_getItemOpenIcon. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXIcon *)FX_TreeListBox_getItemOpenIcon(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_TreeListBox_setItemClosedIcon(_swigobj,_swigarg0,_swigarg1)  (_swigobj->setItemClosedIcon(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_TreeListBox_setItemClosedIcon(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeListBox * _arg0;
    FXTreeItem * _arg1;
    FXIcon * _arg2;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "self","item","icon", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO:FX_TreeListBox_setItemClosedIcon",_kwnames,&_argo0,&_argo1,&_obj2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_setItemClosedIcon. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeListBox_setItemClosedIcon. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    if (_obj2 == Py_None)
	_arg2 = NULL;
    else
	SWIG_GetPtrObj(_obj2, (void**) &_arg2, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeListBox_setItemClosedIcon(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeListBox_getItemClosedIcon(_swigobj,_swigarg0)  (_swigobj->getItemClosedIcon(_swigarg0))
static PyObject *_wrap_FX_TreeListBox_getItemClosedIcon(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIcon * _result;
    FXTreeListBox * _arg0;
    FXTreeItem * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","item", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeListBox_getItemClosedIcon",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_getItemClosedIcon. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeListBox_getItemClosedIcon. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXIcon *)FX_TreeListBox_getItemClosedIcon(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_TreeListBox_setItemData(_swigobj,_swigarg0,_swigarg1)  (_swigobj->setItemData(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_TreeListBox_setItemData(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeListBox * _arg0;
    FXTreeItem * _arg1;
    void * _arg2;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "self","item","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO:FX_TreeListBox_setItemData",_kwnames,&_argo0,&_argo1,&_obj2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_setItemData. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeListBox_setItemData. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    _arg2 = NULL;
    if (PyObject_HasAttrString(_obj2, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj2, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg2 = NULL;
	}
	else
	    _arg2 = (void*) _obj2;
	Py_DECREF(obj);
    }
    else
	_arg2 = (void*) _obj2;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeListBox_setItemData(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeListBox_getItemData(_swigobj,_swigarg0)  (_swigobj->getItemData(_swigarg0))
static PyObject *_wrap_FX_TreeListBox_getItemData(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    void * _result;
    FXTreeListBox * _arg0;
    FXTreeItem * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","item", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeListBox_getItemData",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_getItemData. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeListBox_getItemData. Expected _FXTreeItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (void *)FX_TreeListBox_getItemData(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_void_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_TreeListBox_getSortFunc(_swigobj)  (_swigobj->getSortFunc())
static PyObject *_wrap_FX_TreeListBox_getSortFunc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeListSortFunc  _result;
    FXTreeListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeListBox_getSortFunc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_getSortFunc. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTreeListSortFunc )FX_TreeListBox_getSortFunc(_arg0);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXTreeListSortFunc");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_TreeListBox_setSortFunc(_swigobj,_swigarg0)  (_swigobj->setSortFunc(_swigarg0))
static PyObject *_wrap_FX_TreeListBox_setSortFunc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeListBox * _arg0;
    FXTreeListSortFunc  _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","func", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeListBox_setSortFunc",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_setSortFunc. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXTreeListSortFunc")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeListBox_setSortFunc. Expected _FXTreeListSortFunc.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeListBox_setSortFunc(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeListBox_isPaneShown(_swigobj)  (_swigobj->isPaneShown())
static PyObject *_wrap_FX_TreeListBox_isPaneShown(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXTreeListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeListBox_isPaneShown",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_isPaneShown. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_TreeListBox_isPaneShown(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_TreeListBox_setFont(_swigobj,_swigarg0)  (_swigobj->setFont(_swigarg0))
static PyObject *_wrap_FX_TreeListBox_setFont(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeListBox * _arg0;
    FXFont * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","fnt", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeListBox_setFont",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_setFont. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXFont_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_TreeListBox_setFont. Expected _FXFont_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeListBox_setFont(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeListBox_getFont(_swigobj)  (_swigobj->getFont())
static PyObject *_wrap_FX_TreeListBox_getFont(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFont * _result;
    FXTreeListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeListBox_getFont",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_getFont. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXFont *)FX_TreeListBox_getFont(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_TreeListBox_getListStyle(_swigobj)  (_swigobj->getListStyle())
static PyObject *_wrap_FX_TreeListBox_getListStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXTreeListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeListBox_getListStyle",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_getListStyle. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )FX_TreeListBox_getListStyle(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_TreeListBox_setListStyle(_swigobj,_swigarg0)  (_swigobj->setListStyle(_swigarg0))
static PyObject *_wrap_FX_TreeListBox_setListStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeListBox * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","style", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_TreeListBox_setListStyle",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_setListStyle. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeListBox_setListStyle(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_TreeListBox_setHelpText(_swigobj,_swigarg0)  (_swigobj->setHelpText(_swigarg0))
static PyObject *_wrap_FX_TreeListBox_setHelpText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeListBox * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","txt", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeListBox_setHelpText",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_setHelpText. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeListBox_setHelpText(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_TreeListBox_getHelpText(_swigobj)  (_swigobj->getHelpText())
static PyObject *_wrap_FX_TreeListBox_getHelpText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXTreeListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeListBox_getHelpText",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_getHelpText. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_TreeListBox_getHelpText(_arg0));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

#define FX_TreeListBox_setTipText(_swigobj,_swigarg0)  (_swigobj->setTipText(_swigarg0))
static PyObject *_wrap_FX_TreeListBox_setTipText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTreeListBox * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","txt", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_TreeListBox_setTipText",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_setTipText. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_TreeListBox_setTipText(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_TreeListBox_getTipText(_swigobj)  (_swigobj->getTipText())
static PyObject *_wrap_FX_TreeListBox_getTipText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXTreeListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_TreeListBox_getTipText",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_TreeListBox_getTipText. Expected _FXTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_TreeListBox_getTipText(_arg0));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

static void *SwigFXPyTreeListBoxToFXTreeListBox(void *ptr) {
    FXPyTreeListBox *src;
    FXTreeListBox *dest;
    src = (FXPyTreeListBox *) ptr;
    dest = (FXTreeListBox *) src;
    return (void *) dest;
}

static void *SwigFXPyTreeListBoxToFXPacker(void *ptr) {
    FXPyTreeListBox *src;
    FXPacker *dest;
    src = (FXPyTreeListBox *) ptr;
    dest = (FXPacker *) src;
    return (void *) dest;
}

static void *SwigFXPyTreeListBoxToFXComposite(void *ptr) {
    FXPyTreeListBox *src;
    FXComposite *dest;
    src = (FXPyTreeListBox *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXPyTreeListBoxToFXWindow(void *ptr) {
    FXPyTreeListBox *src;
    FXWindow *dest;
    src = (FXPyTreeListBox *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyTreeListBoxToFXDrawable(void *ptr) {
    FXPyTreeListBox *src;
    FXDrawable *dest;
    src = (FXPyTreeListBox *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPyTreeListBoxToFXId(void *ptr) {
    FXPyTreeListBox *src;
    FXId *dest;
    src = (FXPyTreeListBox *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPyTreeListBoxToFXObject(void *ptr) {
    FXPyTreeListBox *src;
    FXObject *dest;
    src = (FXPyTreeListBox *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXTreeListBox(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11,_swigarg12) (new FXPyTreeListBox(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11,_swigarg12))
static PyObject *_wrap_new_FXTreeListBox(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeListBox * _result;
    FXComposite * _arg0;
    FXint  _arg1;
    FXObject * _arg2 = (FXObject *) NULL;
    FXSelector  _arg3 = (FXSelector ) 0;
    FXuint  _arg4 = (FXuint ) FRAME_SUNKEN|FRAME_THICK|(TREELISTBOX_NORMAL);
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    FXint  _arg8 = (FXint ) 0;
    FXint  _arg9 = (FXint ) DEFAULT_PAD;
    FXint  _arg10 = (FXint ) DEFAULT_PAD;
    FXint  _arg11 = (FXint ) DEFAULT_PAD;
    FXint  _arg12 = (FXint ) DEFAULT_PAD;
    PyObject * _argo0 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "p","nvis","tgt","sel","opts","x","y","w","h","pl","pr","pt","pb", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi|Oiiiiiiiiii:new_FXTreeListBox",_kwnames,&_argo0,&_arg1,&_obj2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7,&_arg8,&_arg9,&_arg10,&_arg11,&_arg12)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FXTreeListBox. Expected _FXComposite_p.");
        return NULL;
        }
    }
    if (_obj2)
{
    if (_obj2 == Py_None)
	_arg2 = NULL;
    else
	SWIG_GetPtrObj(_obj2, (void**) &_arg2, "_FXObject_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyTreeListBox *)new_FXTreeListBox(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7,_arg8,_arg9,_arg10,_arg11,_arg12);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyTreeListBox_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FXTreeListBox_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXTreeListBox_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyTreeListBox * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXTreeListBox_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeListBox_onDefault. Expected _FXPyTreeListBox_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXTreeListBox_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXTreeListBox_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXTreeListBox_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeListBox_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeListBox_create. Expected _FXPyTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeListBox_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeListBox_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXTreeListBox_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeListBox_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeListBox_destroy. Expected _FXPyTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeListBox_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeListBox_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXTreeListBox_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeListBox_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeListBox_detach. Expected _FXPyTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeListBox_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeListBox_resize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_resize(_swigarg0,_swigarg1))
static PyObject *_wrap_FXTreeListBox_resize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeListBox * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXTreeListBox_resize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeListBox_resize. Expected _FXPyTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeListBox_resize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeListBox_getDefaultWidth(_swigobj)  (_swigobj->_getDefaultWidth())
static PyObject *_wrap_FXTreeListBox_getDefaultWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyTreeListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeListBox_getDefaultWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeListBox_getDefaultWidth. Expected _FXPyTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXTreeListBox_getDefaultWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXTreeListBox_getDefaultHeight(_swigobj)  (_swigobj->_getDefaultHeight())
static PyObject *_wrap_FXTreeListBox_getDefaultHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyTreeListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeListBox_getDefaultHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeListBox_getDefaultHeight. Expected _FXPyTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXTreeListBox_getDefaultHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXTreeListBox_show(_swigobj)  (_swigobj->_show())
static PyObject *_wrap_FXTreeListBox_show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeListBox_show",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeListBox_show. Expected _FXPyTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeListBox_show(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeListBox_hide(_swigobj)  (_swigobj->_hide())
static PyObject *_wrap_FXTreeListBox_hide(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeListBox_hide",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeListBox_hide. Expected _FXPyTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeListBox_hide(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeListBox_enable(_swigobj)  (_swigobj->_enable())
static PyObject *_wrap_FXTreeListBox_enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeListBox_enable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeListBox_enable. Expected _FXPyTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeListBox_enable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeListBox_disable(_swigobj)  (_swigobj->_disable())
static PyObject *_wrap_FXTreeListBox_disable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeListBox_disable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeListBox_disable. Expected _FXPyTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeListBox_disable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeListBox_canFocus(_swigobj)  (_swigobj->_canFocus())
static PyObject *_wrap_FXTreeListBox_canFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyTreeListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeListBox_canFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeListBox_canFocus. Expected _FXPyTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXTreeListBox_canFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXTreeListBox_setFocus(_swigobj)  (_swigobj->_setFocus())
static PyObject *_wrap_FXTreeListBox_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeListBox_setFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeListBox_setFocus. Expected _FXPyTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeListBox_setFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeListBox_killFocus(_swigobj)  (_swigobj->_killFocus())
static PyObject *_wrap_FXTreeListBox_killFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeListBox_killFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeListBox_killFocus. Expected _FXPyTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeListBox_killFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeListBox_setDefault(_swigobj,_swigarg0)  (_swigobj->_setDefault(_swigarg0))
static PyObject *_wrap_FXTreeListBox_setDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeListBox * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FXTreeListBox_setDefault",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeListBox_setDefault. Expected _FXPyTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeListBox_setDefault(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeListBox_recalc(_swigobj)  (_swigobj->_recalc())
static PyObject *_wrap_FXTreeListBox_recalc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeListBox_recalc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeListBox_recalc. Expected _FXPyTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeListBox_recalc(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeListBox_layout(_swigobj)  (_swigobj->_layout())
static PyObject *_wrap_FXTreeListBox_layout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeListBox_layout",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeListBox_layout. Expected _FXPyTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeListBox_layout(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeListBox_lower(_swigobj)  (_swigobj->_lowerWindow())
static PyObject *_wrap_FXTreeListBox_lower(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeListBox_lower",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeListBox_lower. Expected _FXPyTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeListBox_lower(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeListBox_move(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_move(_swigarg0,_swigarg1))
static PyObject *_wrap_FXTreeListBox_move(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeListBox * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXTreeListBox_move",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeListBox_move. Expected _FXPyTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeListBox_move(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeListBox_position(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->_position(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FXTreeListBox_position(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeListBox * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FXTreeListBox_position",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeListBox_position. Expected _FXPyTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeListBox_position(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeListBox_isComposite(_swigobj)  (_swigobj->_isComposite())
static PyObject *_wrap_FXTreeListBox_isComposite(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyTreeListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeListBox_isComposite",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeListBox_isComposite. Expected _FXPyTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXTreeListBox_isComposite(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXTreeListBox_contains(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_contains(_swigarg0,_swigarg1))
static PyObject *_wrap_FXTreeListBox_contains(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyTreeListBox * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXTreeListBox_contains",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeListBox_contains. Expected _FXPyTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXTreeListBox_contains(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXTreeListBox_getWidthForHeight(_swigobj,_swigarg0)  (_swigobj->_getWidthForHeight(_swigarg0))
static PyObject *_wrap_FXTreeListBox_getWidthForHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyTreeListBox * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXTreeListBox_getWidthForHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeListBox_getWidthForHeight. Expected _FXPyTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXTreeListBox_getWidthForHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXTreeListBox_getHeightForWidth(_swigobj,_swigarg0)  (_swigobj->_getHeightForWidth(_swigarg0))
static PyObject *_wrap_FXTreeListBox_getHeightForWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyTreeListBox * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXTreeListBox_getHeightForWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeListBox_getHeightForWidth. Expected _FXPyTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXTreeListBox_getHeightForWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXTreeListBox_doesSaveUnder(_swigobj)  (_swigobj->_doesSaveUnder())
static PyObject *_wrap_FXTreeListBox_doesSaveUnder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyTreeListBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXTreeListBox_doesSaveUnder",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeListBox_doesSaveUnder. Expected _FXPyTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXTreeListBox_doesSaveUnder(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXTreeListBox_reparent(_swigobj,_swigarg0)  (_swigobj->_reparent(_swigarg0))
static PyObject *_wrap_FXTreeListBox_reparent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeListBox * _arg0;
    FXComposite * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","newparent", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXTreeListBox_reparent",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeListBox_reparent. Expected _FXPyTreeListBox_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXTreeListBox_reparent. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeListBox_reparent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXTreeListBox_setBackColor(_swigobj,_swigarg0)  (_swigobj->_setBackColor(_swigarg0))
static PyObject *_wrap_FXTreeListBox_setBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyTreeListBox * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXTreeListBox_setBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyTreeListBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXTreeListBox_setBackColor. Expected _FXPyTreeListBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXTreeListBox_setBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static PyMethodDef treelistcMethods[] = {
	 { "FXTreeListBox_setBackColor", (PyCFunction) _wrap_FXTreeListBox_setBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeListBox_reparent", (PyCFunction) _wrap_FXTreeListBox_reparent, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeListBox_doesSaveUnder", (PyCFunction) _wrap_FXTreeListBox_doesSaveUnder, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeListBox_getHeightForWidth", (PyCFunction) _wrap_FXTreeListBox_getHeightForWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeListBox_getWidthForHeight", (PyCFunction) _wrap_FXTreeListBox_getWidthForHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeListBox_contains", (PyCFunction) _wrap_FXTreeListBox_contains, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeListBox_isComposite", (PyCFunction) _wrap_FXTreeListBox_isComposite, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeListBox_position", (PyCFunction) _wrap_FXTreeListBox_position, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeListBox_move", (PyCFunction) _wrap_FXTreeListBox_move, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeListBox_lower", (PyCFunction) _wrap_FXTreeListBox_lower, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeListBox_layout", (PyCFunction) _wrap_FXTreeListBox_layout, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeListBox_recalc", (PyCFunction) _wrap_FXTreeListBox_recalc, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeListBox_setDefault", (PyCFunction) _wrap_FXTreeListBox_setDefault, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeListBox_killFocus", (PyCFunction) _wrap_FXTreeListBox_killFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeListBox_setFocus", (PyCFunction) _wrap_FXTreeListBox_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeListBox_canFocus", (PyCFunction) _wrap_FXTreeListBox_canFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeListBox_disable", (PyCFunction) _wrap_FXTreeListBox_disable, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeListBox_enable", (PyCFunction) _wrap_FXTreeListBox_enable, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeListBox_hide", (PyCFunction) _wrap_FXTreeListBox_hide, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeListBox_show", (PyCFunction) _wrap_FXTreeListBox_show, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeListBox_getDefaultHeight", (PyCFunction) _wrap_FXTreeListBox_getDefaultHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeListBox_getDefaultWidth", (PyCFunction) _wrap_FXTreeListBox_getDefaultWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeListBox_resize", (PyCFunction) _wrap_FXTreeListBox_resize, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeListBox_detach", (PyCFunction) _wrap_FXTreeListBox_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeListBox_destroy", (PyCFunction) _wrap_FXTreeListBox_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeListBox_create", (PyCFunction) _wrap_FXTreeListBox_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeListBox_onDefault", (PyCFunction) _wrap_FXTreeListBox_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXTreeListBox", (PyCFunction) _wrap_new_FXTreeListBox, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_getTipText", (PyCFunction) _wrap_FX_TreeListBox_getTipText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_setTipText", (PyCFunction) _wrap_FX_TreeListBox_setTipText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_getHelpText", (PyCFunction) _wrap_FX_TreeListBox_getHelpText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_setHelpText", (PyCFunction) _wrap_FX_TreeListBox_setHelpText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_setListStyle", (PyCFunction) _wrap_FX_TreeListBox_setListStyle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_getListStyle", (PyCFunction) _wrap_FX_TreeListBox_getListStyle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_getFont", (PyCFunction) _wrap_FX_TreeListBox_getFont, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_setFont", (PyCFunction) _wrap_FX_TreeListBox_setFont, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_isPaneShown", (PyCFunction) _wrap_FX_TreeListBox_isPaneShown, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_setSortFunc", (PyCFunction) _wrap_FX_TreeListBox_setSortFunc, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_getSortFunc", (PyCFunction) _wrap_FX_TreeListBox_getSortFunc, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_getItemData", (PyCFunction) _wrap_FX_TreeListBox_getItemData, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_setItemData", (PyCFunction) _wrap_FX_TreeListBox_setItemData, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_getItemClosedIcon", (PyCFunction) _wrap_FX_TreeListBox_getItemClosedIcon, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_setItemClosedIcon", (PyCFunction) _wrap_FX_TreeListBox_setItemClosedIcon, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_getItemOpenIcon", (PyCFunction) _wrap_FX_TreeListBox_getItemOpenIcon, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_setItemOpenIcon", (PyCFunction) _wrap_FX_TreeListBox_setItemOpenIcon, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_getItemText", (PyCFunction) _wrap_FX_TreeListBox_getItemText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_setItemText", (PyCFunction) _wrap_FX_TreeListBox_setItemText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_getCurrentItem", (PyCFunction) _wrap_FX_TreeListBox_getCurrentItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_setCurrentItem", (PyCFunction) _wrap_FX_TreeListBox_setCurrentItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_sortItems", (PyCFunction) _wrap_FX_TreeListBox_sortItems, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_sortChildItems", (PyCFunction) _wrap_FX_TreeListBox_sortChildItems, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_isItemLeaf", (PyCFunction) _wrap_FX_TreeListBox_isItemLeaf, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_isItemCurrent", (PyCFunction) _wrap_FX_TreeListBox_isItemCurrent, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_findItem", (PyCFunction) _wrap_FX_TreeListBox_findItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_clearItems", (PyCFunction) _wrap_FX_TreeListBox_clearItems, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_removeItems", (PyCFunction) _wrap_FX_TreeListBox_removeItems, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_removeItem", (PyCFunction) _wrap_FX_TreeListBox_removeItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_addItemBefore2", (PyCFunction) _wrap_FX_TreeListBox_addItemBefore2, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_addItemAfter2", (PyCFunction) _wrap_FX_TreeListBox_addItemAfter2, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_addItemBefore", (PyCFunction) _wrap_FX_TreeListBox_addItemBefore, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_addItemAfter", (PyCFunction) _wrap_FX_TreeListBox_addItemAfter, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_addItemLast2", (PyCFunction) _wrap_FX_TreeListBox_addItemLast2, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_addItemLast", (PyCFunction) _wrap_FX_TreeListBox_addItemLast, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_addItemFirst2", (PyCFunction) _wrap_FX_TreeListBox_addItemFirst2, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_addItemFirst", (PyCFunction) _wrap_FX_TreeListBox_addItemFirst, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_getLastItem", (PyCFunction) _wrap_FX_TreeListBox_getLastItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_getFirstItem", (PyCFunction) _wrap_FX_TreeListBox_getFirstItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_setNumVisible", (PyCFunction) _wrap_FX_TreeListBox_setNumVisible, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_getNumVisible", (PyCFunction) _wrap_FX_TreeListBox_getNumVisible, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_getNumItems", (PyCFunction) _wrap_FX_TreeListBox_getNumItems, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_TreeListBox", (PyCFunction) _wrap_new_FX_TreeListBox, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_onUpdFmTree", (PyCFunction) _wrap_FX_TreeListBox_onUpdFmTree, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_onTreeClicked", (PyCFunction) _wrap_FX_TreeListBox_onTreeClicked, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_onTreeChanged", (PyCFunction) _wrap_FX_TreeListBox_onTreeChanged, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_onFieldButton", (PyCFunction) _wrap_FX_TreeListBox_onFieldButton, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_onCommand", (PyCFunction) _wrap_FX_TreeListBox_onCommand, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_onChanged", (PyCFunction) _wrap_FX_TreeListBox_onChanged, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_onFocusDown", (PyCFunction) _wrap_FX_TreeListBox_onFocusDown, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeListBox_onFocusUp", (PyCFunction) _wrap_FX_TreeListBox_onFocusUp, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeList_moveContents", (PyCFunction) _wrap_FXTreeList_moveContents, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeList_getViewportHeight", (PyCFunction) _wrap_FXTreeList_getViewportHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeList_getViewportWidth", (PyCFunction) _wrap_FXTreeList_getViewportWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeList_getContentHeight", (PyCFunction) _wrap_FXTreeList_getContentHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeList_getContentWidth", (PyCFunction) _wrap_FXTreeList_getContentWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeList_setBackColor", (PyCFunction) _wrap_FXTreeList_setBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeList_reparent", (PyCFunction) _wrap_FXTreeList_reparent, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeList_doesSaveUnder", (PyCFunction) _wrap_FXTreeList_doesSaveUnder, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeList_getHeightForWidth", (PyCFunction) _wrap_FXTreeList_getHeightForWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeList_getWidthForHeight", (PyCFunction) _wrap_FXTreeList_getWidthForHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeList_contains", (PyCFunction) _wrap_FXTreeList_contains, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeList_isComposite", (PyCFunction) _wrap_FXTreeList_isComposite, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeList_position", (PyCFunction) _wrap_FXTreeList_position, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeList_move", (PyCFunction) _wrap_FXTreeList_move, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeList_lower", (PyCFunction) _wrap_FXTreeList_lower, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeList_layout", (PyCFunction) _wrap_FXTreeList_layout, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeList_recalc", (PyCFunction) _wrap_FXTreeList_recalc, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeList_setDefault", (PyCFunction) _wrap_FXTreeList_setDefault, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeList_killFocus", (PyCFunction) _wrap_FXTreeList_killFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeList_setFocus", (PyCFunction) _wrap_FXTreeList_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeList_canFocus", (PyCFunction) _wrap_FXTreeList_canFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeList_disable", (PyCFunction) _wrap_FXTreeList_disable, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeList_enable", (PyCFunction) _wrap_FXTreeList_enable, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeList_hide", (PyCFunction) _wrap_FXTreeList_hide, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeList_show", (PyCFunction) _wrap_FXTreeList_show, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeList_getDefaultHeight", (PyCFunction) _wrap_FXTreeList_getDefaultHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeList_getDefaultWidth", (PyCFunction) _wrap_FXTreeList_getDefaultWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeList_resize", (PyCFunction) _wrap_FXTreeList_resize, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeList_detach", (PyCFunction) _wrap_FXTreeList_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeList_destroy", (PyCFunction) _wrap_FXTreeList_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeList_create", (PyCFunction) _wrap_FXTreeList_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeList_onDefault", (PyCFunction) _wrap_FXTreeList_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXTreeList", (PyCFunction) _wrap_new_FXTreeList, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_setListStyle", (PyCFunction) _wrap_FX_TreeList_setListStyle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_getListStyle", (PyCFunction) _wrap_FX_TreeList_getListStyle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_setSortFunc", (PyCFunction) _wrap_FX_TreeList_setSortFunc, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_getSortFunc", (PyCFunction) _wrap_FX_TreeList_getSortFunc, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_getHelpText", (PyCFunction) _wrap_FX_TreeList_getHelpText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_setHelpText", (PyCFunction) _wrap_FX_TreeList_setHelpText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_getIndent", (PyCFunction) _wrap_FX_TreeList_getIndent, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_setIndent", (PyCFunction) _wrap_FX_TreeList_setIndent, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_setLineColor", (PyCFunction) _wrap_FX_TreeList_setLineColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_getLineColor", (PyCFunction) _wrap_FX_TreeList_getLineColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_setSelTextColor", (PyCFunction) _wrap_FX_TreeList_setSelTextColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_getSelTextColor", (PyCFunction) _wrap_FX_TreeList_getSelTextColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_setSelBackColor", (PyCFunction) _wrap_FX_TreeList_setSelBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_getSelBackColor", (PyCFunction) _wrap_FX_TreeList_getSelBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_setTextColor", (PyCFunction) _wrap_FX_TreeList_setTextColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_getTextColor", (PyCFunction) _wrap_FX_TreeList_getTextColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_getFont", (PyCFunction) _wrap_FX_TreeList_getFont, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_setFont", (PyCFunction) _wrap_FX_TreeList_setFont, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_sortChildItems", (PyCFunction) _wrap_FX_TreeList_sortChildItems, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_sortItems", (PyCFunction) _wrap_FX_TreeList_sortItems, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_killSelection", (PyCFunction) _wrap_FX_TreeList_killSelection, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_extendSelection", (PyCFunction) _wrap_FX_TreeList_extendSelection, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_getCursorItem", (PyCFunction) _wrap_FX_TreeList_getCursorItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_getAnchorItem", (PyCFunction) _wrap_FX_TreeList_getAnchorItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_setAnchorItem", (PyCFunction) _wrap_FX_TreeList_setAnchorItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_getCurrentItem", (PyCFunction) _wrap_FX_TreeList_getCurrentItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_setCurrentItem", (PyCFunction) _wrap_FX_TreeList_setCurrentItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_reparentItem", (PyCFunction) _wrap_FX_TreeList_reparentItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_expandTree", (PyCFunction) _wrap_FX_TreeList_expandTree, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_collapseTree", (PyCFunction) _wrap_FX_TreeList_collapseTree, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_closeItem", (PyCFunction) _wrap_FX_TreeList_closeItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_openItem", (PyCFunction) _wrap_FX_TreeList_openItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_toggleItem", (PyCFunction) _wrap_FX_TreeList_toggleItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_deselectItem", (PyCFunction) _wrap_FX_TreeList_deselectItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_selectItem", (PyCFunction) _wrap_FX_TreeList_selectItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_disableItem", (PyCFunction) _wrap_FX_TreeList_disableItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_enableItem", (PyCFunction) _wrap_FX_TreeList_enableItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_updateItem", (PyCFunction) _wrap_FX_TreeList_updateItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_hitItem", (PyCFunction) _wrap_FX_TreeList_hitItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_isItemEnabled", (PyCFunction) _wrap_FX_TreeList_isItemEnabled, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_isItemLeaf", (PyCFunction) _wrap_FX_TreeList_isItemLeaf, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_isItemExpanded", (PyCFunction) _wrap_FX_TreeList_isItemExpanded, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_isItemOpened", (PyCFunction) _wrap_FX_TreeList_isItemOpened, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_isItemVisible", (PyCFunction) _wrap_FX_TreeList_isItemVisible, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_isItemCurrent", (PyCFunction) _wrap_FX_TreeList_isItemCurrent, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_isItemSelected", (PyCFunction) _wrap_FX_TreeList_isItemSelected, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_getItemData", (PyCFunction) _wrap_FX_TreeList_getItemData, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_setItemData", (PyCFunction) _wrap_FX_TreeList_setItemData, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_getItemClosedIcon", (PyCFunction) _wrap_FX_TreeList_getItemClosedIcon, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_setItemClosedIcon", (PyCFunction) _wrap_FX_TreeList_setItemClosedIcon, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_getItemOpenIcon", (PyCFunction) _wrap_FX_TreeList_getItemOpenIcon, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_setItemOpenIcon", (PyCFunction) _wrap_FX_TreeList_setItemOpenIcon, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_getItemText", (PyCFunction) _wrap_FX_TreeList_getItemText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_setItemText", (PyCFunction) _wrap_FX_TreeList_setItemText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_makeItemVisible", (PyCFunction) _wrap_FX_TreeList_makeItemVisible, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_findItem", (PyCFunction) _wrap_FX_TreeList_findItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_getItemAt", (PyCFunction) _wrap_FX_TreeList_getItemAt, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_getItemHeight", (PyCFunction) _wrap_FX_TreeList_getItemHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_getItemWidth", (PyCFunction) _wrap_FX_TreeList_getItemWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_clearItems", (PyCFunction) _wrap_FX_TreeList_clearItems, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_removeItems", (PyCFunction) _wrap_FX_TreeList_removeItems, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_removeItem", (PyCFunction) _wrap_FX_TreeList_removeItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_addItemAfter2", (PyCFunction) _wrap_FX_TreeList_addItemAfter2, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_addItemBefore2", (PyCFunction) _wrap_FX_TreeList_addItemBefore2, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_addItemAfter", (PyCFunction) _wrap_FX_TreeList_addItemAfter, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_addItemBefore", (PyCFunction) _wrap_FX_TreeList_addItemBefore, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_addItemLast2", (PyCFunction) _wrap_FX_TreeList_addItemLast2, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_addItemLast", (PyCFunction) _wrap_FX_TreeList_addItemLast, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_addItemFirst2", (PyCFunction) _wrap_FX_TreeList_addItemFirst2, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_addItemFirst", (PyCFunction) _wrap_FX_TreeList_addItemFirst, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_getLastItem", (PyCFunction) _wrap_FX_TreeList_getLastItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_getFirstItem", (PyCFunction) _wrap_FX_TreeList_getFirstItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_setNumVisible", (PyCFunction) _wrap_FX_TreeList_setNumVisible, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_getNumVisible", (PyCFunction) _wrap_FX_TreeList_getNumVisible, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_getNumItems", (PyCFunction) _wrap_FX_TreeList_getNumItems, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_TreeList", (PyCFunction) _wrap_new_FX_TreeList, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_onLookupTimer", (PyCFunction) _wrap_FX_TreeList_onLookupTimer, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_onCollapsed", (PyCFunction) _wrap_FX_TreeList_onCollapsed, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_onExpanded", (PyCFunction) _wrap_FX_TreeList_onExpanded, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_onClosed", (PyCFunction) _wrap_FX_TreeList_onClosed, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_onOpened", (PyCFunction) _wrap_FX_TreeList_onOpened, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_onDeselected", (PyCFunction) _wrap_FX_TreeList_onDeselected, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_onSelected", (PyCFunction) _wrap_FX_TreeList_onSelected, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_onCommand", (PyCFunction) _wrap_FX_TreeList_onCommand, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_onTripleClicked", (PyCFunction) _wrap_FX_TreeList_onTripleClicked, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_onDoubleClicked", (PyCFunction) _wrap_FX_TreeList_onDoubleClicked, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_onClicked", (PyCFunction) _wrap_FX_TreeList_onClicked, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_onAutoScroll", (PyCFunction) _wrap_FX_TreeList_onAutoScroll, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_onFocusOut", (PyCFunction) _wrap_FX_TreeList_onFocusOut, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_onFocusIn", (PyCFunction) _wrap_FX_TreeList_onFocusIn, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_onTipTimer", (PyCFunction) _wrap_FX_TreeList_onTipTimer, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_onQueryHelp", (PyCFunction) _wrap_FX_TreeList_onQueryHelp, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_onQueryTip", (PyCFunction) _wrap_FX_TreeList_onQueryTip, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_onRightBtnRelease", (PyCFunction) _wrap_FX_TreeList_onRightBtnRelease, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_onRightBtnPress", (PyCFunction) _wrap_FX_TreeList_onRightBtnPress, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_onLeftBtnRelease", (PyCFunction) _wrap_FX_TreeList_onLeftBtnRelease, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_onLeftBtnPress", (PyCFunction) _wrap_FX_TreeList_onLeftBtnPress, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_onKeyRelease", (PyCFunction) _wrap_FX_TreeList_onKeyRelease, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_onKeyPress", (PyCFunction) _wrap_FX_TreeList_onKeyPress, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_onMotion", (PyCFunction) _wrap_FX_TreeList_onMotion, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_onUngrabbed", (PyCFunction) _wrap_FX_TreeList_onUngrabbed, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_onLeave", (PyCFunction) _wrap_FX_TreeList_onLeave, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_onEnter", (PyCFunction) _wrap_FX_TreeList_onEnter, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeList_onPaint", (PyCFunction) _wrap_FX_TreeList_onPaint, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeItem_destroy", (PyCFunction) _wrap_FXTreeItem_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeItem_detach", (PyCFunction) _wrap_FXTreeItem_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeItem_create", (PyCFunction) _wrap_FXTreeItem_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeItem_getHeight", (PyCFunction) _wrap_FXTreeItem_getHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeItem_getWidth", (PyCFunction) _wrap_FXTreeItem_getWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeItem_setIconOwned", (PyCFunction) _wrap_FXTreeItem_setIconOwned, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeItem_setDraggable", (PyCFunction) _wrap_FXTreeItem_setDraggable, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeItem_setEnabled", (PyCFunction) _wrap_FXTreeItem_setEnabled, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeItem_setExpanded", (PyCFunction) _wrap_FXTreeItem_setExpanded, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeItem_setOpened", (PyCFunction) _wrap_FXTreeItem_setOpened, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeItem_setSelected", (PyCFunction) _wrap_FXTreeItem_setSelected, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeItem_setFocus", (PyCFunction) _wrap_FXTreeItem_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeItem_setClosedIcon", (PyCFunction) _wrap_FXTreeItem_setClosedIcon, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeItem_setOpenIcon", (PyCFunction) _wrap_FXTreeItem_setOpenIcon, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeItem_setText", (PyCFunction) _wrap_FXTreeItem_setText, METH_VARARGS | METH_KEYWORDS },
	 { "FXTreeItem_onDefault", (PyCFunction) _wrap_FXTreeItem_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXTreeItem", (PyCFunction) _wrap_new_FXTreeItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeItem_setIconOwned", (PyCFunction) _wrap_FX_TreeItem_setIconOwned, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeItem_isIconOwned", (PyCFunction) _wrap_FX_TreeItem_isIconOwned, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeItem_setDraggable", (PyCFunction) _wrap_FX_TreeItem_setDraggable, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeItem_isDraggable", (PyCFunction) _wrap_FX_TreeItem_isDraggable, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeItem_setEnabled", (PyCFunction) _wrap_FX_TreeItem_setEnabled, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeItem_isEnabled", (PyCFunction) _wrap_FX_TreeItem_isEnabled, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeItem_setExpanded", (PyCFunction) _wrap_FX_TreeItem_setExpanded, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeItem_isExpanded", (PyCFunction) _wrap_FX_TreeItem_isExpanded, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeItem_setOpened", (PyCFunction) _wrap_FX_TreeItem_setOpened, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeItem_isOpened", (PyCFunction) _wrap_FX_TreeItem_isOpened, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeItem_setSelected", (PyCFunction) _wrap_FX_TreeItem_setSelected, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeItem_isSelected", (PyCFunction) _wrap_FX_TreeItem_isSelected, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeItem_setFocus", (PyCFunction) _wrap_FX_TreeItem_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeItem_hasFocus", (PyCFunction) _wrap_FX_TreeItem_hasFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeItem_getData", (PyCFunction) _wrap_FX_TreeItem_getData, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeItem_setData", (PyCFunction) _wrap_FX_TreeItem_setData, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeItem_setClosedIcon", (PyCFunction) _wrap_FX_TreeItem_setClosedIcon, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeItem_getClosedIcon", (PyCFunction) _wrap_FX_TreeItem_getClosedIcon, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeItem_setOpenIcon", (PyCFunction) _wrap_FX_TreeItem_setOpenIcon, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeItem_getOpenIcon", (PyCFunction) _wrap_FX_TreeItem_getOpenIcon, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeItem_setText", (PyCFunction) _wrap_FX_TreeItem_setText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeItem_getText", (PyCFunction) _wrap_FX_TreeItem_getText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeItem_getNumChildren", (PyCFunction) _wrap_FX_TreeItem_getNumChildren, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeItem_destroy", (PyCFunction) _wrap_FX_TreeItem_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeItem_detach", (PyCFunction) _wrap_FX_TreeItem_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeItem_create", (PyCFunction) _wrap_FX_TreeItem_create, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeItem_getHeight", (PyCFunction) _wrap_FX_TreeItem_getHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeItem_getWidth", (PyCFunction) _wrap_FX_TreeItem_getWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeItem_getAbove", (PyCFunction) _wrap_FX_TreeItem_getAbove, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeItem_getBelow", (PyCFunction) _wrap_FX_TreeItem_getBelow, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeItem_getLast", (PyCFunction) _wrap_FX_TreeItem_getLast, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeItem_getFirst", (PyCFunction) _wrap_FX_TreeItem_getFirst, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeItem_getPrev", (PyCFunction) _wrap_FX_TreeItem_getPrev, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeItem_getNext", (PyCFunction) _wrap_FX_TreeItem_getNext, METH_VARARGS | METH_KEYWORDS },
	 { "FX_TreeItem_getParent", (PyCFunction) _wrap_FX_TreeItem_getParent, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_TreeItem", (PyCFunction) _wrap_new_FX_TreeItem, METH_VARARGS | METH_KEYWORDS },
	 { NULL, NULL }
};
#ifdef __cplusplus
}
#endif
/*
 * This table is used by the pointer type-checker
 */
static struct { char *n1; char *n2; void *(*pcnv)(void *); } _swig_mapping[] = {
    { "_class_FXPyBMPImage","_FXPyBMPImage",0},
    { "_class_FXPyICOImage","_FXPyICOImage",0},
    { "_FXPyDelegator","_class_FXPyDelegator",0},
    { "_FX4Splitter","_class_FX4Splitter",0},
    { "_signed_long","_FXTime",0},
    { "_signed_long","_long",0},
    { "_class_FXPyPCXImage","_FXPyPCXImage",0},
    { "_class_FXTIFIcon","_FXTIFIcon",0},
    { "_FXPyHorizontalFrame","_class_FXPyHorizontalFrame",0},
    { "_double","_FXdouble",0},
    { "_FXPyObject","_class_FXPyObject",0},
    { "_FXPyGIFIcon","_class_FXPyGIFIcon",0},
    { "_FXBMPIcon","_class_FXBMPIcon",0},
    { "_FXICOIcon","_class_FXICOIcon",0},
    { "_FXTreeItem","_class_FXPyTreeItem",SwigFXPyTreeItemToFXTreeItem},
    { "_FXTreeItem","_FXPyTreeItem",SwigFXPyTreeItemToFXTreeItem},
    { "_FXTreeItem","_class_FXTreeItem",0},
    { "_class_FXSettings","_FXSettings",0},
    { "_class_FXRegistry","_FXRegistry",0},
    { "_class_FXMainWindow","_FXMainWindow",0},
    { "_FXTreeList","_class_FXPyTreeList",SwigFXPyTreeListToFXTreeList},
    { "_FXTreeList","_FXPyTreeList",SwigFXPyTreeListToFXTreeList},
    { "_FXTreeList","_class_FXTreeList",0},
    { "_FXTopWindow","_class_FXTopWindow",0},
    { "_FXPySwitcher","_class_FXPySwitcher",0},
    { "_FXShutterItem","_class_FXShutterItem",0},
    { "_class_FXVisual","_FXVisual",0},
    { "_FXIcon","_class_FXIcon",0},
    { "_FXPyMatrix","_class_FXPyMatrix",0},
    { "_class_FXDCPrint","_FXDCPrint",0},
    { "_class_FXGroupBox","_FXGroupBox",0},
    { "_FXTGAImage","_class_FXTGAImage",0},
    { "_class_FXPyTGAIcon","_FXPyTGAIcon",0},
    { "_FXPyStream","_class_FXPyStream",0},
    { "_class_FXPyDict","_FXPyDict",0},
    { "_class_FXRegion","_FXRegion",0},
    { "_FXShutter","_class_FXShutter",0},
    { "_FXPyPNGImage","_class_FXPyPNGImage",0},
    { "_class_FXAccelTable","_FXAccelTable",0},
    { "_FXPyApp","_class_FXPyApp",0},
    { "_FXDCWindow","_class_FXDCWindow",0},
    { "_FXPyScrollArea","_class_FXPyScrollArea",0},
    { "_class_FXPyId","_FXPyId",0},
    { "_class_FXCanvas","_FXCanvas",0},
    { "_FXApp","_class_FXApp",0},
    { "_class_FXPyRecentFiles","_FXPyRecentFiles",0},
    { "_class_FXPyDebugTarget","_FXPyDebugTarget",0},
    { "_class_FXCommand","_FXCommand",0},
    { "_class_FXPyFrame","_FXPyFrame",0},
    { "_class_FXTreeListBox","_class_FXPyTreeListBox",SwigFXPyTreeListBoxToFXTreeListBox},
    { "_class_FXTreeListBox","_FXPyTreeListBox",SwigFXPyTreeListBoxToFXTreeListBox},
    { "_class_FXTreeListBox","_FXTreeListBox",0},
    { "_long","_FXPixel",0},
    { "_long","_FXTime",0},
    { "_long","_unsigned_long",0},
    { "_long","_signed_long",0},
    { "_FXComposite","_class_FXPyTreeListBox",SwigFXPyTreeListBoxToFXComposite},
    { "_FXComposite","_FXPyTreeListBox",SwigFXPyTreeListBoxToFXComposite},
    { "_FXComposite","_class_FXTreeListBox",SwigFXTreeListBoxToFXComposite},
    { "_FXComposite","_FXTreeListBox",SwigFXTreeListBoxToFXComposite},
    { "_FXComposite","_class_FXPyTreeList",SwigFXPyTreeListToFXComposite},
    { "_FXComposite","_FXPyTreeList",SwigFXPyTreeListToFXComposite},
    { "_FXComposite","_class_FXTreeList",SwigFXTreeListToFXComposite},
    { "_FXComposite","_FXTreeList",SwigFXTreeListToFXComposite},
    { "_FXComposite","_class_FXComposite",0},
    { "_struct_FXArc","_FXArc",0},
    { "_FXRGBIcon","_class_FXRGBIcon",0},
    { "_FXScrollArea","_class_FXPyTreeList",SwigFXPyTreeListToFXScrollArea},
    { "_FXScrollArea","_FXPyTreeList",SwigFXPyTreeListToFXScrollArea},
    { "_FXScrollArea","_class_FXTreeList",SwigFXTreeListToFXScrollArea},
    { "_FXScrollArea","_FXTreeList",SwigFXTreeListToFXScrollArea},
    { "_FXScrollArea","_class_FXScrollArea",0},
    { "_FXPrinter","_struct_FXPrinter",0},
    { "_class_FXId","_class_FXPyTreeListBox",SwigFXPyTreeListBoxToFXId},
    { "_class_FXId","_FXPyTreeListBox",SwigFXPyTreeListBoxToFXId},
    { "_class_FXId","_class_FXTreeListBox",SwigFXTreeListBoxToFXId},
    { "_class_FXId","_FXTreeListBox",SwigFXTreeListBoxToFXId},
    { "_class_FXId","_class_FXPyTreeList",SwigFXPyTreeListToFXId},
    { "_class_FXId","_FXPyTreeList",SwigFXPyTreeListToFXId},
    { "_class_FXId","_class_FXTreeList",SwigFXTreeListToFXId},
    { "_class_FXId","_FXTreeList",SwigFXTreeListToFXId},
    { "_class_FXId","_FXId",0},
    { "_FXPyHorizontalSeparator","_class_FXPyHorizontalSeparator",0},
    { "_float","_FXfloat",0},
    { "_FXPyDrawable","_class_FXPyDrawable",0},
    { "_class_FXPyXPMIcon","_FXPyXPMIcon",0},
    { "_FXPyScrollWindow","_class_FXPyScrollWindow",0},
    { "_FXshort","_short",0},
    { "_FXshort","_signed_short",0},
    { "_FXshort","_unsigned_short",0},
    { "_FXshort","_FXushort",0},
    { "_FXFontDesc","_struct_FXFontDesc",0},
    { "_FXArc","_struct_FXArc",0},
    { "_FXSize","_class_FXSize",0},
    { "_class_FXBMPIcon","_FXBMPIcon",0},
    { "_class_FXICOIcon","_FXICOIcon",0},
    { "_FXPyShell","_class_FXPyShell",0},
    { "_class_FXPyTIFIcon","_FXPyTIFIcon",0},
    { "_FXSegment","_struct_FXSegment",0},
    { "_FXJPGImage","_class_FXJPGImage",0},
    { "_class_FXPySwitcher","_FXPySwitcher",0},
    { "_class_FXTIFImage","_FXTIFImage",0},
    { "_FXPyPCXIcon","_class_FXPyPCXIcon",0},
    { "_FXDC","_class_FXDC",0},
    { "_class_FXIcon","_FXIcon",0},
    { "_FXPopup","_class_FXPopup",0},
    { "_FXPy4Splitter","_class_FXPy4Splitter",0},
    { "_FXint","_FXInputHandle",0},
    { "_FXint","_FXDragType",0},
    { "_FXint","_FXHotKey",0},
    { "_FXint","_FXColor",0},
    { "_FXint","_FXID",0},
    { "_FXint","_FXSelector",0},
    { "_FXint","_int",0},
    { "_FXint","_signed_int",0},
    { "_FXint","_unsigned_int",0},
    { "_FXint","_FXuint",0},
    { "_FXPyPNGIcon","_class_FXPyPNGIcon",0},
    { "_class_FXWindow","_class_FXPyTreeListBox",SwigFXPyTreeListBoxToFXWindow},
    { "_class_FXWindow","_FXPyTreeListBox",SwigFXPyTreeListBoxToFXWindow},
    { "_class_FXWindow","_class_FXTreeListBox",SwigFXTreeListBoxToFXWindow},
    { "_class_FXWindow","_FXTreeListBox",SwigFXTreeListBoxToFXWindow},
    { "_class_FXWindow","_class_FXPyTreeList",SwigFXPyTreeListToFXWindow},
    { "_class_FXWindow","_FXPyTreeList",SwigFXPyTreeListToFXWindow},
    { "_class_FXWindow","_class_FXTreeList",SwigFXTreeListToFXWindow},
    { "_class_FXWindow","_FXTreeList",SwigFXTreeListToFXWindow},
    { "_class_FXWindow","_FXWindow",0},
    { "_FXPyRootWindow","_class_FXPyRootWindow",0},
    { "_class_FXShutter","_FXShutter",0},
    { "_FXushort","_FXshort",0},
    { "_FXushort","_unsigned_short",0},
    { "_FXushort","_short",0},
    { "_class_FXPoint","_FXPoint",0},
    { "_class_FXPyPNGImage","_FXPyPNGImage",0},
    { "_class_FXPyDCPrint","_FXPyDCPrint",0},
    { "_FXPyVisual","_class_FXPyVisual",0},
    { "_class_FXRectangle","_FXRectangle",0},
    { "_class_FXPyFont","_FXPyFont",0},
    { "_FXPyFileStream","_class_FXPyFileStream",0},
    { "_FXRGBImage","_class_FXRGBImage",0},
    { "_FXRootWindow","_class_FXRootWindow",0},
    { "_class_FXPacker","_class_FXPyTreeListBox",SwigFXPyTreeListBoxToFXPacker},
    { "_class_FXPacker","_FXPyTreeListBox",SwigFXPyTreeListBoxToFXPacker},
    { "_class_FXPacker","_class_FXTreeListBox",SwigFXTreeListBoxToFXPacker},
    { "_class_FXPacker","_FXTreeListBox",SwigFXTreeListBoxToFXPacker},
    { "_class_FXPacker","_FXPacker",0},
    { "_FXPyXPMImage","_class_FXPyXPMImage",0},
    { "_FXPyDataTarget","_class_FXPyDataTarget",0},
    { "_FXPyTopWindow","_class_FXPyTopWindow",0},
    { "_FXObject","_class_FXPyTreeListBox",SwigFXPyTreeListBoxToFXObject},
    { "_FXObject","_FXPyTreeListBox",SwigFXPyTreeListBoxToFXObject},
    { "_FXObject","_class_FXTreeListBox",SwigFXTreeListBoxToFXObject},
    { "_FXObject","_FXTreeListBox",SwigFXTreeListBoxToFXObject},
    { "_FXObject","_class_FXPyTreeList",SwigFXPyTreeListToFXObject},
    { "_FXObject","_FXPyTreeList",SwigFXPyTreeListToFXObject},
    { "_FXObject","_class_FXTreeList",SwigFXTreeListToFXObject},
    { "_FXObject","_FXTreeList",SwigFXTreeListToFXObject},
    { "_FXObject","_class_FXPyTreeItem",SwigFXPyTreeItemToFXObject},
    { "_FXObject","_FXPyTreeItem",SwigFXPyTreeItemToFXObject},
    { "_FXObject","_class_FXTreeItem",SwigFXTreeItemToFXObject},
    { "_FXObject","_FXTreeItem",SwigFXTreeItemToFXObject},
    { "_FXObject","_class_FXObject",0},
    { "_FXPyGIFImage","_class_FXPyGIFImage",0},
    { "_FXBMPImage","_class_FXBMPImage",0},
    { "_FXICOImage","_class_FXICOImage",0},
    { "_class_FXRGBIcon","_FXRGBIcon",0},
    { "_FXRecentFiles","_class_FXRecentFiles",0},
    { "_FXDebugTarget","_class_FXDebugTarget",0},
    { "_class_FXPyCommand","_FXPyCommand",0},
    { "_class_FXScrollArea","_class_FXPyTreeList",SwigFXPyTreeListToFXScrollArea},
    { "_class_FXScrollArea","_FXPyTreeList",SwigFXPyTreeListToFXScrollArea},
    { "_class_FXScrollArea","_class_FXTreeList",SwigFXTreeListToFXScrollArea},
    { "_class_FXScrollArea","_FXTreeList",SwigFXTreeListToFXScrollArea},
    { "_class_FXScrollArea","_FXScrollArea",0},
    { "_FXPySplitter","_class_FXPySplitter",0},
    { "_FXPCXImage","_class_FXPCXImage",0},
    { "_FXFileStream","_class_FXFileStream",0},
    { "_class_FXPyDelegator","_FXPyDelegator",0},
    { "_FXPyCanvas","_class_FXPyCanvas",0},
    { "_class_FXPyDrawable","_FXPyDrawable",0},
    { "_FXPyImage","_class_FXPyImage",0},
    { "_FXGIFIcon","_class_FXGIFIcon",0},
    { "_FXColor","_FXInputHandle",0},
    { "_FXColor","_FXDragType",0},
    { "_FXColor","_FXHotKey",0},
    { "_FXColor","_FXuint",0},
    { "_FXColor","_int",0},
    { "_FXColor","_unsigned_int",0},
    { "_FXColor","_FXint",0},
    { "_FXColor","_FXSelector",0},
    { "_FXColor","_FXID",0},
    { "_FXPyJPGIcon","_class_FXPyJPGIcon",0},
    { "_FXDataTarget","_class_FXDataTarget",0},
    { "_class_FXPyHorizontalFrame","_FXPyHorizontalFrame",0},
    { "_FXTime","_FXPixel",0},
    { "_FXTime","_long",0},
    { "_FXTime","_signed_long",0},
    { "_FXTime","_unsigned_long",0},
    { "_FXHotKey","_FXInputHandle",0},
    { "_FXHotKey","_FXDragType",0},
    { "_FXHotKey","_FXuint",0},
    { "_FXHotKey","_int",0},
    { "_FXHotKey","_unsigned_int",0},
    { "_FXHotKey","_FXint",0},
    { "_FXHotKey","_FXSelector",0},
    { "_FXHotKey","_FXID",0},
    { "_FXHotKey","_FXColor",0},
    { "_class_FXSize","_FXSize",0},
    { "_class_FXPyObject","_FXPyObject",0},
    { "_class_FXPyShell","_FXPyShell",0},
    { "_FXPyDC","_class_FXPyDC",0},
    { "_class_FXTreeItem","_class_FXPyTreeItem",SwigFXPyTreeItemToFXTreeItem},
    { "_class_FXTreeItem","_FXPyTreeItem",SwigFXPyTreeItemToFXTreeItem},
    { "_class_FXTreeItem","_FXTreeItem",0},
    { "_struct_FXFontDesc","_FXFontDesc",0},
    { "_FXMatrix","_class_FXMatrix",0},
    { "_class_FXTreeList","_class_FXPyTreeList",SwigFXPyTreeListToFXTreeList},
    { "_class_FXTreeList","_FXPyTreeList",SwigFXPyTreeListToFXTreeList},
    { "_class_FXTreeList","_FXTreeList",0},
    { "_class_FXPyBMPIcon","_FXPyBMPIcon",0},
    { "_class_FXPyICOIcon","_FXPyICOIcon",0},
    { "_char","_FXchar",0},
    { "_FXdouble","_double",0},
    { "_FXStream","_class_FXStream",0},
    { "_FXPyStringDict","_class_FXPyStringDict",0},
    { "_FXFrame","_class_FXFrame",0},
    { "_FXObjectPtr","_FXObject_p",0},
    { "_FXPyComposite","_class_FXPyComposite",0},
    { "_class_FXShutterItem","_FXShutterItem",0},
    { "_class_FXDelegator","_FXDelegator",0},
    { "_FXVerticalFrame","_class_FXVerticalFrame",0},
    { "_class_FXPyMatrix","_FXPyMatrix",0},
    { "_FXbool","_FXuchar",0},
    { "_FXbool","_unsigned_char",0},
    { "_class_FXTGAImage","_FXTGAImage",0},
    { "_class_FXPyStream","_FXPyStream",0},
    { "_FXStringDict","_class_FXStringDict",0},
    { "_FXPyGroupBox","_class_FXPyGroupBox",0},
    { "_class_FXPyApp","_FXPyApp",0},
    { "_class_FXDCWindow","_FXDCWindow",0},
    { "_class_FXPyShutter","_FXPyShutter",0},
    { "_FXPyWindow","_class_FXPyWindow",0},
    { "_class_FXRootWindow","_FXRootWindow",0},
    { "_class_FXPyXPMImage","_FXPyXPMImage",0},
    { "_class_FXPyGIFImage","_FXPyGIFImage",0},
    { "_class_FXPyVerticalFrame","_FXPyVerticalFrame",0},
    { "_class_FXPySplitter","_FXPySplitter",0},
    { "_class_FXFileStream","_FXFileStream",0},
    { "_class_FXPyMainWindow","_FXPyMainWindow",0},
    { "_class_FXHorizontalFrame","_FXHorizontalFrame",0},
    { "_class_FXPyImage","_FXPyImage",0},
    { "_class_FXGIFIcon","_FXGIFIcon",0},
    { "_class_FXPyRGBIcon","_FXPyRGBIcon",0},
    { "_FXPyPacker","_class_FXPyPacker",0},
    { "_class_FXPyScrollWindow","_FXPyScrollWindow",0},
    { "_unsigned_long","_FXPixel",0},
    { "_unsigned_long","_FXTime",0},
    { "_unsigned_long","_long",0},
    { "_class_FXDataTarget","_FXDataTarget",0},
    { "_class_FXScrollWindow","_FXScrollWindow",0},
    { "_class_FXPyDC","_FXPyDC",0},
    { "_FXPyVerticalSeparator","_class_FXPyVerticalSeparator",0},
    { "_FXPCXIcon","_class_FXPCXIcon",0},
    { "_FXSwitcher","_class_FXSwitcher",0},
    { "_class_FXJPGImage","_FXJPGImage",0},
    { "_class_FXPyIcon","_FXPyIcon",0},
    { "_class_FXPyAccelTable","_FXPyAccelTable",0},
    { "_class_FXDC","_FXDC",0},
    { "_FXVisual","_class_FXVisual",0},
    { "_FXPyTIFImage","_class_FXPyTIFImage",0},
    { "_FXPNGIcon","_class_FXPNGIcon",0},
    { "_class_FXPopup","_FXPopup",0},
    { "_class_FXVerticalFrame","_FXVerticalFrame",0},
    { "_signed_int","_FXInputHandle",0},
    { "_signed_int","_FXint",0},
    { "_signed_int","_int",0},
    { "_class_FXPy4Splitter","_FXPy4Splitter",0},
    { "_FXPNGImage","_class_FXPNGImage",0},
    { "_FXPyTGAIcon","_class_FXPyTGAIcon",0},
    { "_FXPyDict","_class_FXPyDict",0},
    { "_class_FXStringDict","_FXStringDict",0},
    { "_FXRegion","_class_FXRegion",0},
    { "_class_FXPyGroupBox","_FXPyGroupBox",0},
    { "_FXVerticalSeparator","_class_FXVerticalSeparator",0},
    { "_FXRawEvent","__XEvent",0},
    { "_class_FXPyVisual","_FXPyVisual",0},
    { "_FXShell","_class_FXShell",0},
    { "_FXPyTreeListBox","_class_FXPyTreeListBox",0},
    { "_FXCanvas","_class_FXCanvas",0},
    { "_class_FXRGBImage","_FXRGBImage",0},
    { "_unsigned_short","_FXshort",0},
    { "_unsigned_short","_FXushort",0},
    { "_unsigned_short","_short",0},
    { "_class_FXPyTopWindow","_FXPyTopWindow",0},
    { "_class_FXBMPImage","_FXBMPImage",0},
    { "_class_FXICOImage","_FXICOImage",0},
    { "_class_FXRecentFiles","_FXRecentFiles",0},
    { "_class_FXDebugTarget","_FXDebugTarget",0},
    { "_FXDrawable","_class_FXPyTreeListBox",SwigFXPyTreeListBoxToFXDrawable},
    { "_FXDrawable","_FXPyTreeListBox",SwigFXPyTreeListBoxToFXDrawable},
    { "_FXDrawable","_class_FXTreeListBox",SwigFXTreeListBoxToFXDrawable},
    { "_FXDrawable","_FXTreeListBox",SwigFXTreeListBoxToFXDrawable},
    { "_FXDrawable","_class_FXPyTreeList",SwigFXPyTreeListToFXDrawable},
    { "_FXDrawable","_FXPyTreeList",SwigFXPyTreeListToFXDrawable},
    { "_FXDrawable","_class_FXTreeList",SwigFXTreeListToFXDrawable},
    { "_FXDrawable","_FXTreeList",SwigFXTreeListToFXDrawable},
    { "_FXDrawable","_class_FXDrawable",0},
    { "_class_FXPCXImage","_FXPCXImage",0},
    { "_FXJPGIcon","_class_FXJPGIcon",0},
    { "_class_FXPyCanvas","_FXPyCanvas",0},
    { "_class_FX4Splitter","_FX4Splitter",0},
    { "_FXPyXPMIcon","_class_FXPyXPMIcon",0},
    { "_FXObject_p","_FXObjectPtr",0},
    { "_FXID","_FXInputHandle",0},
    { "_FXID","_FXDragType",0},
    { "_FXID","_FXHotKey",0},
    { "_FXID","_FXColor",0},
    { "_FXID","_unsigned_int",0},
    { "_FXID","_int",0},
    { "_FXID","_FXuint",0},
    { "_FXID","_FXint",0},
    { "_FXID","_FXSelector",0},
    { "_FXHorizontalSeparator","_class_FXHorizontalSeparator",0},
    { "_class_FXPyGIFIcon","_FXPyGIFIcon",0},
    { "_class_FXPyVerticalSeparator","_FXPyVerticalSeparator",0},
    { "_struct_FXPrinter","_FXPrinter",0},
    { "_FXPyTIFIcon","_class_FXPyTIFIcon",0},
    { "_FXPyTreeItem","_class_FXPyTreeItem",0},
    { "_class_FXPCXIcon","_FXPCXIcon",0},
    { "_FXPyTreeList","_class_FXPyTreeList",0},
    { "_signed_short","_FXshort",0},
    { "_signed_short","_short",0},
    { "_class_FXFrame","_FXFrame",0},
    { "_class_FXTopWindow","_FXTopWindow",0},
    { "_FXfloat","_float",0},
    { "_FXEvent","_struct_FXEvent",0},
    { "_class_FXPyComposite","_FXPyComposite",0},
    { "_class_FXPyTIFImage","_FXPyTIFImage",0},
    { "_class_FXPNGIcon","_FXPNGIcon",0},
    { "_struct_FXSegment","_FXSegment",0},
    { "_unsigned_char","_FXbool",0},
    { "_unsigned_char","_FXuchar",0},
    { "_FXPixel","_unsigned_long",0},
    { "_FXPixel","_long",0},
    { "_FXPixel","_FXTime",0},
    { "_FXImage","_class_FXImage",0},
    { "_FXWindow","_class_FXPyTreeListBox",SwigFXPyTreeListBoxToFXWindow},
    { "_FXWindow","_FXPyTreeListBox",SwigFXPyTreeListBoxToFXWindow},
    { "_FXWindow","_class_FXTreeListBox",SwigFXTreeListBoxToFXWindow},
    { "_FXWindow","_FXTreeListBox",SwigFXTreeListBoxToFXWindow},
    { "_FXWindow","_class_FXPyTreeList",SwigFXPyTreeListToFXWindow},
    { "_FXWindow","_FXPyTreeList",SwigFXPyTreeListToFXWindow},
    { "_FXWindow","_class_FXTreeList",SwigFXTreeListToFXWindow},
    { "_FXWindow","_FXTreeList",SwigFXTreeListToFXWindow},
    { "_FXWindow","_class_FXWindow",0},
    { "_unsigned_int","_FXInputHandle",0},
    { "_unsigned_int","_FXDragType",0},
    { "_unsigned_int","_FXHotKey",0},
    { "_unsigned_int","_FXColor",0},
    { "_unsigned_int","_FXID",0},
    { "_unsigned_int","_FXSelector",0},
    { "_unsigned_int","_FXint",0},
    { "_unsigned_int","_FXuint",0},
    { "_unsigned_int","_int",0},
    { "_FXPyTGAImage","_class_FXPyTGAImage",0},
    { "_FXDict","_class_FXDict",0},
    { "_FXPyDCPrint","_class_FXPyDCPrint",0},
    { "_FXuint","_FXInputHandle",0},
    { "_FXuint","_FXDragType",0},
    { "_FXuint","_FXHotKey",0},
    { "_FXuint","_FXColor",0},
    { "_FXuint","_FXID",0},
    { "_FXuint","_FXSelector",0},
    { "_FXuint","_FXint",0},
    { "_FXuint","_unsigned_int",0},
    { "_FXuint","_int",0},
    { "_class_FXPyScrollArea","_FXPyScrollArea",0},
    { "_class_FXPyTreeListBox","_FXPyTreeListBox",0},
    { "_short","_FXshort",0},
    { "_short","_FXushort",0},
    { "_short","_unsigned_short",0},
    { "_short","_signed_short",0},
    { "_FXRectangle","_class_FXRectangle",0},
    { "_FXPyFont","_class_FXPyFont",0},
    { "_FXPyDCWindow","_class_FXPyDCWindow",0},
    { "_class_FXApp","_FXApp",0},
    { "_FXXPMImage","_class_FXXPMImage",0},
    { "_class_FXPyWindow","_FXPyWindow",0},
    { "_FXPacker","_class_FXPyTreeListBox",SwigFXPyTreeListBoxToFXPacker},
    { "_FXPacker","_FXPyTreeListBox",SwigFXPyTreeListBoxToFXPacker},
    { "_FXPacker","_class_FXTreeListBox",SwigFXTreeListBoxToFXPacker},
    { "_FXPacker","_FXTreeListBox",SwigFXTreeListBoxToFXPacker},
    { "_FXPacker","_class_FXPacker",0},
    { "_FXGIFImage","_class_FXGIFImage",0},
    { "_class_FXComposite","_class_FXPyTreeListBox",SwigFXPyTreeListBoxToFXComposite},
    { "_class_FXComposite","_FXPyTreeListBox",SwigFXPyTreeListBoxToFXComposite},
    { "_class_FXComposite","_class_FXTreeListBox",SwigFXTreeListBoxToFXComposite},
    { "_class_FXComposite","_FXTreeListBox",SwigFXTreeListBoxToFXComposite},
    { "_class_FXComposite","_class_FXPyTreeList",SwigFXPyTreeListToFXComposite},
    { "_class_FXComposite","_FXPyTreeList",SwigFXPyTreeListToFXComposite},
    { "_class_FXComposite","_class_FXTreeList",SwigFXTreeListToFXComposite},
    { "_class_FXComposite","_FXTreeList",SwigFXTreeListToFXComposite},
    { "_class_FXComposite","_FXComposite",0},
    { "_FXSplitter","_class_FXSplitter",0},
    { "_FXPyCommand","_class_FXPyCommand",0},
    { "_class_FXJPGIcon","_FXJPGIcon",0},
    { "_class_FXPyHorizontalSeparator","_FXPyHorizontalSeparator",0},
    { "_FXchar","_char",0},
    { "_class_FXPyPacker","_FXPyPacker",0},
    { "_FXuchar","_FXbool",0},
    { "_FXuchar","_unsigned_char",0},
    { "_class_FXHorizontalSeparator","_FXHorizontalSeparator",0},
    { "_int","_FXInputHandle",0},
    { "_int","_FXDragType",0},
    { "_int","_FXHotKey",0},
    { "_int","_FXColor",0},
    { "_int","_FXID",0},
    { "_int","_FXSelector",0},
    { "_int","_FXint",0},
    { "_int","_FXuint",0},
    { "_int","_unsigned_int",0},
    { "_int","_signed_int",0},
    { "_FXDragType","_FXInputHandle",0},
    { "_FXDragType","_FXID",0},
    { "_FXDragType","_FXSelector",0},
    { "_FXDragType","_FXint",0},
    { "_FXDragType","_FXuint",0},
    { "_FXDragType","_int",0},
    { "_FXDragType","_unsigned_int",0},
    { "_FXDragType","_FXColor",0},
    { "_FXDragType","_FXHotKey",0},
    { "_FXSettings","_class_FXSettings",0},
    { "_FXRegistry","_class_FXRegistry",0},
    { "_class_FXPyTreeItem","_FXPyTreeItem",0},
    { "_FXPyBMPIcon","_class_FXPyBMPIcon",0},
    { "_FXPyICOIcon","_class_FXPyICOIcon",0},
    { "_class_FXSwitcher","_FXSwitcher",0},
    { "_FXPyShutterItem","_class_FXPyShutterItem",0},
    { "_class_FXPyTreeList","_FXPyTreeList",0},
    { "_FXPSBounds","_struct_FXPSBounds",0},
    { "_FXPyJPGImage","_class_FXPyJPGImage",0},
    { "_class_FXPyPCXIcon","_FXPyPCXIcon",0},
    { "_FXTGAIcon","_class_FXTGAIcon",0},
    { "_FXDelegator","_class_FXDelegator",0},
    { "_FXGroupBox","_class_FXGroupBox",0},
    { "_class_FXPNGImage","_FXPNGImage",0},
    { "_class_FXPyPNGIcon","_FXPyPNGIcon",0},
    { "_class_FXPyRootWindow","_FXPyRootWindow",0},
    { "_class_FXPyTGAImage","_FXPyTGAImage",0},
    { "_class_FXDict","_FXDict",0},
    { "_class_FXVerticalSeparator","_FXVerticalSeparator",0},
    { "_class_FXShell","_FXShell",0},
    { "_FXPyShutter","_class_FXPyShutter",0},
    { "_FXInputHandle","_FXint",0},
    { "_FXInputHandle","_FXuint",0},
    { "_FXInputHandle","_unsigned_int",0},
    { "_FXInputHandle","_signed_int",0},
    { "_FXInputHandle","_int",0},
    { "_FXInputHandle","_FXSelector",0},
    { "_FXInputHandle","_FXID",0},
    { "_FXInputHandle","_FXColor",0},
    { "_FXInputHandle","_FXHotKey",0},
    { "_FXInputHandle","_FXDragType",0},
    { "_class_FXPyFileStream","_FXPyFileStream",0},
    { "_class_FXPyDCWindow","_FXPyDCWindow",0},
    { "_FXFont","_class_FXFont",0},
    { "_FXTreeListBox","_class_FXPyTreeListBox",SwigFXPyTreeListBoxToFXTreeListBox},
    { "_FXTreeListBox","_FXPyTreeListBox",SwigFXPyTreeListBoxToFXTreeListBox},
    { "_FXTreeListBox","_class_FXTreeListBox",0},
    { "_FXPyRGBImage","_class_FXPyRGBImage",0},
    { "_class_FXPyDataTarget","_FXPyDataTarget",0},
    { "_class_FXObject","_class_FXPyTreeListBox",SwigFXPyTreeListBoxToFXObject},
    { "_class_FXObject","_FXPyTreeListBox",SwigFXPyTreeListBoxToFXObject},
    { "_class_FXObject","_class_FXTreeListBox",SwigFXTreeListBoxToFXObject},
    { "_class_FXObject","_FXTreeListBox",SwigFXTreeListBoxToFXObject},
    { "_class_FXObject","_class_FXPyTreeList",SwigFXPyTreeListToFXObject},
    { "_class_FXObject","_FXPyTreeList",SwigFXPyTreeListToFXObject},
    { "_class_FXObject","_class_FXTreeList",SwigFXTreeListToFXObject},
    { "_class_FXObject","_FXTreeList",SwigFXTreeListToFXObject},
    { "_class_FXObject","_class_FXPyTreeItem",SwigFXPyTreeItemToFXObject},
    { "_class_FXObject","_FXPyTreeItem",SwigFXPyTreeItemToFXObject},
    { "_class_FXObject","_class_FXTreeItem",SwigFXTreeItemToFXObject},
    { "_class_FXObject","_FXTreeItem",SwigFXTreeItemToFXObject},
    { "_class_FXObject","_FXObject",0},
    { "_FXXPMIcon","_class_FXXPMIcon",0},
    { "_FXPyPopup","_class_FXPyPopup",0},
    { "_FXPyVerticalFrame","_class_FXPyVerticalFrame",0},
    { "_FXId","_class_FXPyTreeListBox",SwigFXPyTreeListBoxToFXId},
    { "_FXId","_FXPyTreeListBox",SwigFXPyTreeListBoxToFXId},
    { "_FXId","_class_FXTreeListBox",SwigFXTreeListBoxToFXId},
    { "_FXId","_FXTreeListBox",SwigFXTreeListBoxToFXId},
    { "_FXId","_class_FXPyTreeList",SwigFXPyTreeListToFXId},
    { "_FXId","_FXPyTreeList",SwigFXPyTreeListToFXId},
    { "_FXId","_class_FXTreeList",SwigFXTreeListToFXId},
    { "_FXId","_FXTreeList",SwigFXTreeListToFXId},
    { "_FXId","_class_FXId",0},
    { "_class_FXDrawable","_class_FXPyTreeListBox",SwigFXPyTreeListBoxToFXDrawable},
    { "_class_FXDrawable","_FXPyTreeListBox",SwigFXPyTreeListBoxToFXDrawable},
    { "_class_FXDrawable","_class_FXTreeListBox",SwigFXTreeListBoxToFXDrawable},
    { "_class_FXDrawable","_FXTreeListBox",SwigFXTreeListBoxToFXDrawable},
    { "_class_FXDrawable","_class_FXPyTreeList",SwigFXPyTreeListToFXDrawable},
    { "_class_FXDrawable","_FXPyTreeList",SwigFXPyTreeListToFXDrawable},
    { "_class_FXDrawable","_class_FXTreeList",SwigFXTreeListToFXDrawable},
    { "_class_FXDrawable","_FXTreeList",SwigFXTreeListToFXDrawable},
    { "_class_FXDrawable","_FXDrawable",0},
    { "_FXPyBMPImage","_class_FXPyBMPImage",0},
    { "_FXPyICOImage","_class_FXPyICOImage",0},
    { "_FXPyMainWindow","_class_FXPyMainWindow",0},
    { "_FXHorizontalFrame","_class_FXHorizontalFrame",0},
    { "_FXPyPCXImage","_class_FXPyPCXImage",0},
    { "_FXPyRGBIcon","_class_FXPyRGBIcon",0},
    { "_class_FXPyJPGIcon","_FXPyJPGIcon",0},
    { "_FXTIFIcon","_class_FXTIFIcon",0},
    { "_FXScrollWindow","_class_FXScrollWindow",0},
    { "_FXMainWindow","_class_FXMainWindow",0},
    { "_class_FXMatrix","_FXMatrix",0},
    { "__XEvent","_FXRawEvent",0},
    { "_class_FXPyShutterItem","_FXPyShutterItem",0},
    { "_struct_FXEvent","_FXEvent",0},
    { "_class_FXStream","_FXStream",0},
    { "_class_FXPyStringDict","_FXPyStringDict",0},
    { "_class_FXPyJPGImage","_FXPyJPGImage",0},
    { "_FXTIFImage","_class_FXTIFImage",0},
    { "_FXPyIcon","_class_FXPyIcon",0},
    { "_FXPyAccelTable","_class_FXPyAccelTable",0},
    { "_class_FXTGAIcon","_FXTGAIcon",0},
    { "_struct_FXPSBounds","_FXPSBounds",0},
    { "_FXDCPrint","_class_FXDCPrint",0},
    { "_class_FXImage","_FXImage",0},
    { "_FXPoint","_class_FXPoint",0},
    { "_FXAccelTable","_class_FXAccelTable",0},
    { "_FXPyId","_class_FXPyId",0},
    { "_FXSelector","_FXInputHandle",0},
    { "_FXSelector","_FXDragType",0},
    { "_FXSelector","_FXHotKey",0},
    { "_FXSelector","_FXColor",0},
    { "_FXSelector","_FXID",0},
    { "_FXSelector","_FXuint",0},
    { "_FXSelector","_int",0},
    { "_FXSelector","_unsigned_int",0},
    { "_FXSelector","_FXint",0},
    { "_class_FXFont","_FXFont",0},
    { "_class_FXXPMImage","_FXXPMImage",0},
    { "_FXPyRecentFiles","_class_FXPyRecentFiles",0},
    { "_FXPyDebugTarget","_class_FXPyDebugTarget",0},
    { "_FXCommand","_class_FXCommand",0},
    { "_FXPyFrame","_class_FXPyFrame",0},
    { "_class_FXGIFImage","_FXGIFImage",0},
    { "_class_FXPyRGBImage","_FXPyRGBImage",0},
    { "_class_FXSplitter","_FXSplitter",0},
    { "_class_FXXPMIcon","_FXXPMIcon",0},
    { "_class_FXPyPopup","_FXPyPopup",0},
{0,0,0}};

static PyObject *SWIG_globals;
#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT(void) inittreelistc() {
	 PyObject *m, *d;
	 SWIG_globals = SWIG_newvarlink();
	 m = Py_InitModule("treelistc", treelistcMethods);
	 d = PyModule_GetDict(m);
	 PyDict_SetItemString(d,"TREELIST_EXTENDEDSELECT", PyInt_FromLong((long) TREELIST_EXTENDEDSELECT));
	 PyDict_SetItemString(d,"TREELIST_SINGLESELECT", PyInt_FromLong((long) TREELIST_SINGLESELECT));
	 PyDict_SetItemString(d,"TREELIST_BROWSESELECT", PyInt_FromLong((long) TREELIST_BROWSESELECT));
	 PyDict_SetItemString(d,"TREELIST_MULTIPLESELECT", PyInt_FromLong((long) TREELIST_MULTIPLESELECT));
	 PyDict_SetItemString(d,"TREELIST_AUTOSELECT", PyInt_FromLong((long) TREELIST_AUTOSELECT));
	 PyDict_SetItemString(d,"TREELIST_SHOWS_LINES", PyInt_FromLong((long) TREELIST_SHOWS_LINES));
	 PyDict_SetItemString(d,"TREELIST_SHOWS_BOXES", PyInt_FromLong((long) TREELIST_SHOWS_BOXES));
	 PyDict_SetItemString(d,"TREELIST_ROOT_BOXES", PyInt_FromLong((long) TREELIST_ROOT_BOXES));
	 PyDict_SetItemString(d,"TREELIST_NORMAL", PyInt_FromLong((long) TREELIST_NORMAL));
	 PyDict_SetItemString(d,"TREELISTBOX_NORMAL", PyInt_FromLong((long) TREELISTBOX_NORMAL));
	 PyDict_SetItemString(d,"FX_TreeList_ID_TIPTIMER", PyInt_FromLong((long) FXTreeList::ID_TIPTIMER));
	 PyDict_SetItemString(d,"FX_TreeList_ID_LOOKUPTIMER", PyInt_FromLong((long) FXTreeList::ID_LOOKUPTIMER));
	 PyDict_SetItemString(d,"FX_TreeList_ID_LAST", PyInt_FromLong((long) FXTreeList::ID_LAST));
	 PyDict_SetItemString(d,"FX_TreeListBox_ID_TREE", PyInt_FromLong((long) FXTreeListBox::ID_TREE));
	 PyDict_SetItemString(d,"FX_TreeListBox_ID_FIELD", PyInt_FromLong((long) FXTreeListBox::ID_FIELD));
	 PyDict_SetItemString(d,"FX_TreeListBox_ID_LAST", PyInt_FromLong((long) FXTreeListBox::ID_LAST));
{
   int i;
   for (i = 0; _swig_mapping[i].n1; i++)
        SWIG_RegisterMapping(_swig_mapping[i].n1,_swig_mapping[i].n2,_swig_mapping[i].pcnv);
}
}
