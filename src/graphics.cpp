/*
 * FILE : ../src/graphics.cpp
 * 
 * This file was automatically generated by :
 * Simplified Wrapper and Interface Generator (SWIG)
 * Version 1.1 (Build 883)
 * 
 * Portions Copyright (c) 1995-1998
 * The University of Utah and The Regents of the University of California.
 * Permission is granted to distribute this file in any manner provided
 * this notice remains intact.
 * 
 * Do not make changes to this file--changes will be lost!
 *
 */


#define SWIGCODE
/* Implementation : PYTHON */

#define SWIGPYTHON
#include <string.h>
#include <stdlib.h>
/* Definitions for Windows/Unix exporting */
#if defined(__WIN32__)
#   if defined(_MSC_VER)
#	define SWIGEXPORT(a) __declspec(dllexport) a
#   else
#	if defined(__BORLANDC__)
#	    define SWIGEXPORT(a) a _export 
#	else
#	    define SWIGEXPORT(a) a 
#	endif
#   endif
#else
#   define SWIGEXPORT(a) a 
#endif

#include "Python.h"

#ifdef __cplusplus
extern "C" {
#endif
extern void SWIG_MakePtr(char *, void *, char *);
extern void SWIG_RegisterMapping(char *, char *, void *(*)(void *));
extern char *SWIG_GetPtr(char *, void **, char *);
extern char *SWIG_GetPtrObj(PyObject *, void **, char *);
extern void SWIG_addvarlink(PyObject *, char *, PyObject *(*)(void), int (*)(PyObject *));
extern PyObject *SWIG_newvarlink(void);
#ifdef __cplusplus
}
#endif
#define SWIG_init    initgraphicsc

#define SWIG_name    "graphicsc"

#include "fx.h"
#include "fx3d.h"
#include "FXCURCursor.h"
#include "FXJPGImage.h"
#include "FXJPGIcon.h"
#include "FXPNGIcon.h"
#include "FXPNGImage.h"
#include "FXTIFIcon.h"
#include "FXTIFImage.h"
#include "FXRGBIcon.h"
#include "FXRGBImage.h"
#include "FXICOIcon.h"
#include "FXICOImage.h"
#include "FXPyApp.h"
#include "FXPy.h"

static PyObject* l_output_helper(PyObject* target, PyObject* o) {
    PyObject*   o2;
    if (!target) {                   
        target = o;
    } else if (target == Py_None) {  
        Py_DECREF(Py_None);
        target = o;
    } else {                         
        if (!PyList_Check(target)) {
            o2 = target;
            target = PyList_New(0);
            PyList_Append(target, o2);
	    Py_XDECREF(o2);
        }
        PyList_Append(target,o);
	Py_XDECREF(o);
    }
    return target;
}

static PyObject* t_output_helper(PyObject* target, PyObject* o) {
    PyObject*   o2;
    PyObject*   o3;

    if (!target) {                   
        target = o;
    } else if (target == Py_None) {  
        Py_DECREF(Py_None);
        target = o;
    } else {                         
        if (!PyTuple_Check(target)) {
            o2 = target;
            target = PyTuple_New(1);
            PyTuple_SetItem(target, 0, o2);
        }
        o3 = PyTuple_New(1);            
        PyTuple_SetItem(o3, 0, o);      

        o2 = target;
        target = PySequence_Concat(o2, o3); 
        Py_DECREF(o2);                      
        Py_DECREF(o3);
    }
    return target;
}

  FXPyCursor* CreateStockCursor(FXApp* a,FXStockCursor curid=CURSOR_ARROW) {
    return new FXPyCursor(a,curid);
    }

  FXPyCursor* CreateCursorFromMask(FXApp* a, const void* src, const void* msk,
                                   FXint w=32, FXint h=32,
                                   FXint hx=-1, FXint hy=-1) {
    return new FXPyCursor(a,src,msk,w,h,hx,hy);
    }
#ifdef __cplusplus
extern "C" {
#endif
static PyObject *_wrap_CreateStockCursor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyCursor * _result;
    FXApp * _arg0;
    FXStockCursor  _arg1 = (FXStockCursor ) (CURSOR_ARROW);
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "a","curid", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|i:CreateStockCursor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXApp_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of CreateStockCursor. Expected _FXApp_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyCursor *)CreateStockCursor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyCursor_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

static PyObject *_wrap_CreateCursorFromMask(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyCursor * _result;
    FXApp * _arg0;
    void * _arg1;
    void * _arg2;
    FXint  _arg3 = (FXint ) 32;
    FXint  _arg4 = (FXint ) 32;
    FXint  _arg5 = (FXint ) -1;
    FXint  _arg6 = (FXint ) -1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    PyObject * _argo2 = 0;
    char *_kwnames[] = { "a","src","msk","w","h","hx","hy", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO|iiii:CreateCursorFromMask",_kwnames,&_argo0,&_argo1,&_argo2,&_arg3,&_arg4,&_arg5,&_arg6)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXApp_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of CreateCursorFromMask. Expected _FXApp_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of CreateCursorFromMask. Expected _void_p.");
        return NULL;
        }
    }
    if (_argo2) {
        if (_argo2 == Py_None) { _arg2 = NULL; }
        else if (SWIG_GetPtrObj(_argo2,(void **) &_arg2,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of CreateCursorFromMask. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyCursor *)CreateCursorFromMask(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyCursor_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

static void *SwigFXBitmapToFXDrawable(void *ptr) {
    FXBitmap *src;
    FXDrawable *dest;
    src = (FXBitmap *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXBitmapToFXId(void *ptr) {
    FXBitmap *src;
    FXId *dest;
    src = (FXBitmap *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXBitmapToFXObject(void *ptr) {
    FXBitmap *src;
    FXObject *dest;
    src = (FXBitmap *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FX_Bitmap(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4) (new FXBitmap(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4))
static PyObject *_wrap_new_FX_Bitmap(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXBitmap * _result;
    FXApp * _arg0;
    void * _arg1 = (void *) NULL;
    FXuint  _arg2 = (FXuint ) 0;
    FXint  _arg3 = (FXint ) 1;
    FXint  _arg4 = (FXint ) 1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "a","pix","opts","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|Oiii:new_FX_Bitmap",_kwnames,&_argo0,&_obj1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXApp_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FX_Bitmap. Expected _FXApp_p.");
        return NULL;
        }
    }
    if (_obj1)
{
  if(_obj1==Py_None){
    _arg1=NULL;
    }
  else if (PyString_Check(_obj1)){
    int size = PyString_Size(_obj1);
    if(!FXMALLOC(&_arg1,FXuchar,size)){
      PyErr_SetString(PyExc_MemoryError,"out of memory");
      return NULL;
      }
    FXuchar *bytes=(FXuchar*)_arg1;
    char *str=PyString_AsString(_obj1);
    for (int i=0; i<size; i++)
      bytes[i]=(FXuchar)str[i];
    }
  else{
    PyErr_SetString(PyExc_TypeError,"expected a string");
    return NULL;
    }
  }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXBitmap *)new_FX_Bitmap(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
{
  if(_arg1)
    FXFREE(&_arg1);
  }
    return _resultobj;
}

#define FX_Bitmap_create(_swigobj)  (_swigobj->create())
static PyObject *_wrap_FX_Bitmap_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXBitmap * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Bitmap_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXBitmap_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Bitmap_create. Expected _FXBitmap_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Bitmap_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Bitmap_detach(_swigobj)  (_swigobj->detach())
static PyObject *_wrap_FX_Bitmap_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXBitmap * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Bitmap_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXBitmap_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Bitmap_detach. Expected _FXBitmap_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Bitmap_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Bitmap_destroy(_swigobj)  (_swigobj->destroy())
static PyObject *_wrap_FX_Bitmap_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXBitmap * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Bitmap_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXBitmap_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Bitmap_destroy. Expected _FXBitmap_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Bitmap_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Bitmap_render(_swigobj)  (_swigobj->render())
static PyObject *_wrap_FX_Bitmap_render(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXBitmap * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Bitmap_render",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXBitmap_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Bitmap_render. Expected _FXBitmap_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Bitmap_render(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Bitmap_getPixel(_swigobj,_swigarg0,_swigarg1)  (_swigobj->getPixel(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_Bitmap_getPixel(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXBitmap * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FX_Bitmap_getPixel",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXBitmap_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Bitmap_getPixel. Expected _FXBitmap_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_Bitmap_getPixel(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_Bitmap_setPixel(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->setPixel(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_Bitmap_setPixel(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXBitmap * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXbool  _arg3;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","color", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiib:FX_Bitmap_setPixel",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXBitmap_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Bitmap_setPixel. Expected _FXBitmap_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Bitmap_setPixel(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Bitmap_resize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->resize(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_Bitmap_resize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXBitmap * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FX_Bitmap_resize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXBitmap_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Bitmap_resize. Expected _FXBitmap_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Bitmap_resize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Bitmap_savePixels(_swigobj,_swigarg0)  (_swigobj->savePixels(_swigarg0))
static PyObject *_wrap_FX_Bitmap_savePixels(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXBitmap * _arg0;
    FXStream * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","store", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_Bitmap_savePixels",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXBitmap_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Bitmap_savePixels. Expected _FXBitmap_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXStream_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_Bitmap_savePixels. Expected _FXStream_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Bitmap_savePixels(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Bitmap_loadPixels(_swigobj,_swigarg0)  (_swigobj->loadPixels(_swigarg0))
static PyObject *_wrap_FX_Bitmap_loadPixels(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXBitmap * _arg0;
    FXStream * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","store", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_Bitmap_loadPixels",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXBitmap_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Bitmap_loadPixels. Expected _FXBitmap_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXStream_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_Bitmap_loadPixels. Expected _FXStream_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Bitmap_loadPixels(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXPyBitmapToFXBitmap(void *ptr) {
    FXPyBitmap *src;
    FXBitmap *dest;
    src = (FXPyBitmap *) ptr;
    dest = (FXBitmap *) src;
    return (void *) dest;
}

static void *SwigFXPyBitmapToFXDrawable(void *ptr) {
    FXPyBitmap *src;
    FXDrawable *dest;
    src = (FXPyBitmap *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPyBitmapToFXId(void *ptr) {
    FXPyBitmap *src;
    FXId *dest;
    src = (FXPyBitmap *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPyBitmapToFXObject(void *ptr) {
    FXPyBitmap *src;
    FXObject *dest;
    src = (FXPyBitmap *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXBitmap(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4) (new FXPyBitmap(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4))
static PyObject *_wrap_new_FXBitmap(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyBitmap * _result;
    FXApp * _arg0;
    void * _arg1 = (void *) NULL;
    FXuint  _arg2 = (FXuint ) 0;
    FXint  _arg3 = (FXint ) 1;
    FXint  _arg4 = (FXint ) 1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "a","pix","opts","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|Oiii:new_FXBitmap",_kwnames,&_argo0,&_obj1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXApp_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FXBitmap. Expected _FXApp_p.");
        return NULL;
        }
    }
    if (_obj1)
{
  if(_obj1==Py_None){
    _arg1=NULL;
    }
  else if (PyString_Check(_obj1)){
    int size = PyString_Size(_obj1);
    if(!FXMALLOC(&_arg1,FXuchar,size)){
      PyErr_SetString(PyExc_MemoryError,"out of memory");
      return NULL;
      }
    FXuchar *bytes=(FXuchar*)_arg1;
    char *str=PyString_AsString(_obj1);
    for (int i=0; i<size; i++)
      bytes[i]=(FXuchar)str[i];
    }
  else{
    PyErr_SetString(PyExc_TypeError,"expected a string");
    return NULL;
    }
  }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyBitmap *)new_FXBitmap(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyBitmap_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
  if(_arg1)
    FXFREE(&_arg1);
  }
    return _resultobj;
}

#define FXBitmap_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXBitmap_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyBitmap * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXBitmap_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyBitmap_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXBitmap_onDefault. Expected _FXPyBitmap_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXBitmap_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXBitmap_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXBitmap_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyBitmap * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXBitmap_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyBitmap_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXBitmap_create. Expected _FXPyBitmap_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXBitmap_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXBitmap_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXBitmap_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyBitmap * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXBitmap_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyBitmap_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXBitmap_destroy. Expected _FXPyBitmap_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXBitmap_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXBitmap_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXBitmap_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyBitmap * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXBitmap_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyBitmap_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXBitmap_detach. Expected _FXPyBitmap_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXBitmap_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXBitmap_resize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_resize(_swigarg0,_swigarg1))
static PyObject *_wrap_FXBitmap_resize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyBitmap * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXBitmap_resize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyBitmap_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXBitmap_resize. Expected _FXPyBitmap_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXBitmap_resize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXCursorToFXId(void *ptr) {
    FXCursor *src;
    FXId *dest;
    src = (FXCursor *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXCursorToFXObject(void *ptr) {
    FXCursor *src;
    FXObject *dest;
    src = (FXCursor *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define FX_Cursor_getHotX(_swigobj)  (_swigobj->getHotX())
static PyObject *_wrap_FX_Cursor_getHotX(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXCursor * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Cursor_getHotX",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXCursor_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Cursor_getHotX. Expected _FXCursor_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Cursor_getHotX(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Cursor_getHotY(_swigobj)  (_swigobj->getHotY())
static PyObject *_wrap_FX_Cursor_getHotY(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXCursor * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Cursor_getHotY",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXCursor_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Cursor_getHotY. Expected _FXCursor_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Cursor_getHotY(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Cursor_getWidth(_swigobj)  (_swigobj->getWidth())
static PyObject *_wrap_FX_Cursor_getWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXCursor * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Cursor_getWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXCursor_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Cursor_getWidth. Expected _FXCursor_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Cursor_getWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Cursor_getHeight(_swigobj)  (_swigobj->getHeight())
static PyObject *_wrap_FX_Cursor_getHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXCursor * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Cursor_getHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXCursor_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Cursor_getHeight. Expected _FXCursor_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_Cursor_getHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_Cursor_create(_swigobj)  (_swigobj->create())
static PyObject *_wrap_FX_Cursor_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXCursor * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Cursor_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXCursor_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Cursor_create. Expected _FXCursor_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Cursor_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Cursor_detach(_swigobj)  (_swigobj->detach())
static PyObject *_wrap_FX_Cursor_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXCursor * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Cursor_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXCursor_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Cursor_detach. Expected _FXCursor_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Cursor_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Cursor_destroy(_swigobj)  (_swigobj->destroy())
static PyObject *_wrap_FX_Cursor_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXCursor * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_Cursor_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXCursor_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Cursor_destroy. Expected _FXCursor_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Cursor_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Cursor_savePixels(_swigobj,_swigarg0)  (_swigobj->savePixels(_swigarg0))
static PyObject *_wrap_FX_Cursor_savePixels(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXCursor * _arg0;
    FXStream * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","store", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_Cursor_savePixels",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXCursor_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Cursor_savePixels. Expected _FXCursor_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXStream_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_Cursor_savePixels. Expected _FXStream_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Cursor_savePixels(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_Cursor_loadPixels(_swigobj,_swigarg0)  (_swigobj->loadPixels(_swigarg0))
static PyObject *_wrap_FX_Cursor_loadPixels(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXCursor * _arg0;
    FXStream * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","store", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_Cursor_loadPixels",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXCursor_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_Cursor_loadPixels. Expected _FXCursor_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXStream_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_Cursor_loadPixels. Expected _FXStream_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_Cursor_loadPixels(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXPyCursorToFXCursor(void *ptr) {
    FXPyCursor *src;
    FXCursor *dest;
    src = (FXPyCursor *) ptr;
    dest = (FXCursor *) src;
    return (void *) dest;
}

static void *SwigFXPyCursorToFXId(void *ptr) {
    FXPyCursor *src;
    FXId *dest;
    src = (FXPyCursor *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPyCursorToFXObject(void *ptr) {
    FXPyCursor *src;
    FXObject *dest;
    src = (FXPyCursor *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define FXCursor_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXCursor_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyCursor * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXCursor_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyCursor_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXCursor_onDefault. Expected _FXPyCursor_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXCursor_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXCursor_savePixels(_swigobj,_swigarg0)  (_swigobj->_savePixels(_swigarg0))
static PyObject *_wrap_FXCursor_savePixels(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyCursor * _arg0;
    FXStream * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","store", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXCursor_savePixels",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyCursor_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXCursor_savePixels. Expected _FXPyCursor_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXStream_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXCursor_savePixels. Expected _FXStream_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXCursor_savePixels(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXCursor_loadPixels(_swigobj,_swigarg0)  (_swigobj->_loadPixels(_swigarg0))
static PyObject *_wrap_FXCursor_loadPixels(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyCursor * _arg0;
    FXStream * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","store", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXCursor_loadPixels",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyCursor_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXCursor_loadPixels. Expected _FXPyCursor_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXStream_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXCursor_loadPixels. Expected _FXStream_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXCursor_loadPixels(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXGIFCursorToFXCursor(void *ptr) {
    FXGIFCursor *src;
    FXCursor *dest;
    src = (FXGIFCursor *) ptr;
    dest = (FXCursor *) src;
    return (void *) dest;
}

static void *SwigFXGIFCursorToFXId(void *ptr) {
    FXGIFCursor *src;
    FXId *dest;
    src = (FXGIFCursor *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXGIFCursorToFXObject(void *ptr) {
    FXGIFCursor *src;
    FXObject *dest;
    src = (FXGIFCursor *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FX_GIFCursor(_swigarg0,_swigarg1,_swigarg2,_swigarg3) (new FXGIFCursor(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_new_FX_GIFCursor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXGIFCursor * _result;
    FXApp * _arg0;
    void * _arg1;
    FXint  _arg2 = (FXint ) -1;
    FXint  _arg3 = (FXint ) -1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "app","pix","hx","hy", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|ii:new_FX_GIFCursor",_kwnames,&_argo0,&_obj1,&_arg2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXApp_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FX_GIFCursor. Expected _FXApp_p.");
        return NULL;
        }
    }
{
  if(_obj1==Py_None){
    _arg1=NULL;
    }
  else if (PyString_Check(_obj1)){
    int size = PyString_Size(_obj1);
    if(!FXMALLOC(&_arg1,FXuchar,size)){
      PyErr_SetString(PyExc_MemoryError,"out of memory");
      return NULL;
      }
    FXuchar *bytes=(FXuchar*)_arg1;
    char *str=PyString_AsString(_obj1);
    for (int i=0; i<size; i++)
      bytes[i]=(FXuchar)str[i];
    }
  else{
    PyErr_SetString(PyExc_TypeError,"expected a string");
    return NULL;
    }
  }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXGIFCursor *)new_FX_GIFCursor(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXGIFCursor_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
  if(_arg1)
    FXFREE(&_arg1);
  }
    return _resultobj;
}

static void *SwigFXPyGIFCursorToFXGIFCursor(void *ptr) {
    FXPyGIFCursor *src;
    FXGIFCursor *dest;
    src = (FXPyGIFCursor *) ptr;
    dest = (FXGIFCursor *) src;
    return (void *) dest;
}

static void *SwigFXPyGIFCursorToFXCursor(void *ptr) {
    FXPyGIFCursor *src;
    FXCursor *dest;
    src = (FXPyGIFCursor *) ptr;
    dest = (FXCursor *) src;
    return (void *) dest;
}

static void *SwigFXPyGIFCursorToFXId(void *ptr) {
    FXPyGIFCursor *src;
    FXId *dest;
    src = (FXPyGIFCursor *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPyGIFCursorToFXObject(void *ptr) {
    FXPyGIFCursor *src;
    FXObject *dest;
    src = (FXPyGIFCursor *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXGIFCursor(_swigarg0,_swigarg1,_swigarg2,_swigarg3) (new FXPyGIFCursor(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_new_FXGIFCursor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyGIFCursor * _result;
    FXApp * _arg0;
    void * _arg1;
    FXint  _arg2 = (FXint ) -1;
    FXint  _arg3 = (FXint ) -1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "app","pix","hx","hy", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|ii:new_FXGIFCursor",_kwnames,&_argo0,&_obj1,&_arg2,&_arg3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXApp_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FXGIFCursor. Expected _FXApp_p.");
        return NULL;
        }
    }
{
  if(_obj1==Py_None){
    _arg1=NULL;
    }
  else if (PyString_Check(_obj1)){
    int size = PyString_Size(_obj1);
    if(!FXMALLOC(&_arg1,FXuchar,size)){
      PyErr_SetString(PyExc_MemoryError,"out of memory");
      return NULL;
      }
    FXuchar *bytes=(FXuchar*)_arg1;
    char *str=PyString_AsString(_obj1);
    for (int i=0; i<size; i++)
      bytes[i]=(FXuchar)str[i];
    }
  else{
    PyErr_SetString(PyExc_TypeError,"expected a string");
    return NULL;
    }
  }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyGIFCursor *)new_FXGIFCursor(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyGIFCursor_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
  if(_arg1)
    FXFREE(&_arg1);
  }
    return _resultobj;
}

#define FXGIFCursor_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXGIFCursor_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyGIFCursor * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXGIFCursor_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyGIFCursor_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXGIFCursor_onDefault. Expected _FXPyGIFCursor_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXGIFCursor_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXGIFCursor_savePixels(_swigobj,_swigarg0)  (_swigobj->_savePixels(_swigarg0))
static PyObject *_wrap_FXGIFCursor_savePixels(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyGIFCursor * _arg0;
    FXStream * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","store", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXGIFCursor_savePixels",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyGIFCursor_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXGIFCursor_savePixels. Expected _FXPyGIFCursor_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXStream_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXGIFCursor_savePixels. Expected _FXStream_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXGIFCursor_savePixels(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXGIFCursor_loadPixels(_swigobj,_swigarg0)  (_swigobj->_loadPixels(_swigarg0))
static PyObject *_wrap_FXGIFCursor_loadPixels(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyGIFCursor * _arg0;
    FXStream * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","store", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXGIFCursor_loadPixels",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyGIFCursor_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXGIFCursor_loadPixels. Expected _FXPyGIFCursor_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXStream_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXGIFCursor_loadPixels. Expected _FXStream_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXGIFCursor_loadPixels(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXCURCursorToFXCursor(void *ptr) {
    FXCURCursor *src;
    FXCursor *dest;
    src = (FXCURCursor *) ptr;
    dest = (FXCursor *) src;
    return (void *) dest;
}

static void *SwigFXCURCursorToFXId(void *ptr) {
    FXCURCursor *src;
    FXId *dest;
    src = (FXCURCursor *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXCURCursorToFXObject(void *ptr) {
    FXCURCursor *src;
    FXObject *dest;
    src = (FXCURCursor *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FX_CURCursor(_swigarg0,_swigarg1) (new FXCURCursor(_swigarg0,_swigarg1))
static PyObject *_wrap_new_FX_CURCursor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXCURCursor * _result;
    FXApp * _arg0;
    void * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "a","pix", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:new_FX_CURCursor",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXApp_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FX_CURCursor. Expected _FXApp_p.");
        return NULL;
        }
    }
{
  if(_obj1==Py_None){
    _arg1=NULL;
    }
  else if (PyString_Check(_obj1)){
    int size = PyString_Size(_obj1);
    if(!FXMALLOC(&_arg1,FXuchar,size)){
      PyErr_SetString(PyExc_MemoryError,"out of memory");
      return NULL;
      }
    FXuchar *bytes=(FXuchar*)_arg1;
    char *str=PyString_AsString(_obj1);
    for (int i=0; i<size; i++)
      bytes[i]=(FXuchar)str[i];
    }
  else{
    PyErr_SetString(PyExc_TypeError,"expected a string");
    return NULL;
    }
  }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXCURCursor *)new_FX_CURCursor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXCURCursor_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
  if(_arg1)
    FXFREE(&_arg1);
  }
    return _resultobj;
}

static void *SwigFXPyCURCursorToFXCURCursor(void *ptr) {
    FXPyCURCursor *src;
    FXCURCursor *dest;
    src = (FXPyCURCursor *) ptr;
    dest = (FXCURCursor *) src;
    return (void *) dest;
}

static void *SwigFXPyCURCursorToFXCursor(void *ptr) {
    FXPyCURCursor *src;
    FXCursor *dest;
    src = (FXPyCURCursor *) ptr;
    dest = (FXCursor *) src;
    return (void *) dest;
}

static void *SwigFXPyCURCursorToFXId(void *ptr) {
    FXPyCURCursor *src;
    FXId *dest;
    src = (FXPyCURCursor *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPyCURCursorToFXObject(void *ptr) {
    FXPyCURCursor *src;
    FXObject *dest;
    src = (FXPyCURCursor *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXCURCursor(_swigarg0,_swigarg1) (new FXPyCURCursor(_swigarg0,_swigarg1))
static PyObject *_wrap_new_FXCURCursor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyCURCursor * _result;
    FXApp * _arg0;
    void * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "a","pix", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:new_FXCURCursor",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXApp_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FXCURCursor. Expected _FXApp_p.");
        return NULL;
        }
    }
{
  if(_obj1==Py_None){
    _arg1=NULL;
    }
  else if (PyString_Check(_obj1)){
    int size = PyString_Size(_obj1);
    if(!FXMALLOC(&_arg1,FXuchar,size)){
      PyErr_SetString(PyExc_MemoryError,"out of memory");
      return NULL;
      }
    FXuchar *bytes=(FXuchar*)_arg1;
    char *str=PyString_AsString(_obj1);
    for (int i=0; i<size; i++)
      bytes[i]=(FXuchar)str[i];
    }
  else{
    PyErr_SetString(PyExc_TypeError,"expected a string");
    return NULL;
    }
  }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyCURCursor *)new_FXCURCursor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyCURCursor_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
  if(_arg1)
    FXFREE(&_arg1);
  }
    return _resultobj;
}

#define FXCURCursor_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXCURCursor_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyCURCursor * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXCURCursor_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyCURCursor_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXCURCursor_onDefault. Expected _FXPyCURCursor_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXCURCursor_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXCURCursor_savePixels(_swigobj,_swigarg0)  (_swigobj->_savePixels(_swigarg0))
static PyObject *_wrap_FXCURCursor_savePixels(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyCURCursor * _arg0;
    FXStream * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","store", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXCURCursor_savePixels",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyCURCursor_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXCURCursor_savePixels. Expected _FXPyCURCursor_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXStream_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXCURCursor_savePixels. Expected _FXStream_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXCURCursor_savePixels(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXCURCursor_loadPixels(_swigobj,_swigarg0)  (_swigobj->_loadPixels(_swigarg0))
static PyObject *_wrap_FXCURCursor_loadPixels(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyCURCursor * _arg0;
    FXStream * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","store", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXCURCursor_loadPixels",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyCURCursor_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXCURCursor_loadPixels. Expected _FXPyCURCursor_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXStream_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXCURCursor_loadPixels. Expected _FXStream_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXCURCursor_loadPixels(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXImageViewToFXScrollArea(void *ptr) {
    FXImageView *src;
    FXScrollArea *dest;
    src = (FXImageView *) ptr;
    dest = (FXScrollArea *) src;
    return (void *) dest;
}

static void *SwigFXImageViewToFXComposite(void *ptr) {
    FXImageView *src;
    FXComposite *dest;
    src = (FXImageView *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXImageViewToFXWindow(void *ptr) {
    FXImageView *src;
    FXWindow *dest;
    src = (FXImageView *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXImageViewToFXDrawable(void *ptr) {
    FXImageView *src;
    FXDrawable *dest;
    src = (FXImageView *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXImageViewToFXId(void *ptr) {
    FXImageView *src;
    FXId *dest;
    src = (FXImageView *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXImageViewToFXObject(void *ptr) {
    FXImageView *src;
    FXObject *dest;
    src = (FXImageView *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define FX_ImageView_onPaint(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onPaint(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ImageView_onPaint(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXImageView * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ImageView_onPaint",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXImageView_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ImageView_onPaint. Expected _FXImageView_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ImageView_onPaint. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ImageView_onPaint(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ImageView_onMotion(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onMotion(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ImageView_onMotion(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXImageView * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ImageView_onMotion",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXImageView_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ImageView_onMotion. Expected _FXImageView_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ImageView_onMotion. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ImageView_onMotion(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ImageView_onRightBtnPress(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onRightBtnPress(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ImageView_onRightBtnPress(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXImageView * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ImageView_onRightBtnPress",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXImageView_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ImageView_onRightBtnPress. Expected _FXImageView_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ImageView_onRightBtnPress. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ImageView_onRightBtnPress(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ImageView_onRightBtnRelease(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onRightBtnRelease(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ImageView_onRightBtnRelease(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXImageView * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ImageView_onRightBtnRelease",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXImageView_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ImageView_onRightBtnRelease. Expected _FXImageView_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ImageView_onRightBtnRelease. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ImageView_onRightBtnRelease(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define new_FX_ImageView(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8) (new FXImageView(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8))
static PyObject *_wrap_new_FX_ImageView(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXImageView * _result;
    FXComposite * _arg0;
    FXImage * _arg1 = (FXImage *) NULL;
    FXObject * _arg2 = (FXObject *) NULL;
    FXSelector  _arg3 = (FXSelector ) 0;
    FXuint  _arg4 = (FXuint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    FXint  _arg8 = (FXint ) 0;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "p","img","tgt","sel","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|OOiiiiii:new_FX_ImageView",_kwnames,&_argo0,&_argo1,&_obj2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7,&_arg8)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FX_ImageView. Expected _FXComposite_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXImage_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of new_FX_ImageView. Expected _FXImage_p.");
        return NULL;
        }
    }
    if (_obj2)
{
    if (_obj2 == Py_None)
	_arg2 = NULL;
    else
	SWIG_GetPtrObj(_obj2, (void**) &_arg2, "_FXObject_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXImageView *)new_FX_ImageView(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7,_arg8);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXImageView_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_ImageView_setImage(_swigobj,_swigarg0)  (_swigobj->setImage(_swigarg0))
static PyObject *_wrap_FX_ImageView_setImage(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXImageView * _arg0;
    FXImage * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","img", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_ImageView_setImage",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXImageView_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ImageView_setImage. Expected _FXImageView_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXImage_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_ImageView_setImage. Expected _FXImage_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_ImageView_setImage(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_ImageView_getImage(_swigobj)  (_swigobj->getImage())
static PyObject *_wrap_FX_ImageView_getImage(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXImage * _result;
    FXImageView * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_ImageView_getImage",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXImageView_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ImageView_getImage. Expected _FXImageView_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXImage *)FX_ImageView_getImage(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

static void *SwigFXPyImageViewToFXImageView(void *ptr) {
    FXPyImageView *src;
    FXImageView *dest;
    src = (FXPyImageView *) ptr;
    dest = (FXImageView *) src;
    return (void *) dest;
}

static void *SwigFXPyImageViewToFXScrollArea(void *ptr) {
    FXPyImageView *src;
    FXScrollArea *dest;
    src = (FXPyImageView *) ptr;
    dest = (FXScrollArea *) src;
    return (void *) dest;
}

static void *SwigFXPyImageViewToFXComposite(void *ptr) {
    FXPyImageView *src;
    FXComposite *dest;
    src = (FXPyImageView *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXPyImageViewToFXWindow(void *ptr) {
    FXPyImageView *src;
    FXWindow *dest;
    src = (FXPyImageView *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyImageViewToFXDrawable(void *ptr) {
    FXPyImageView *src;
    FXDrawable *dest;
    src = (FXPyImageView *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPyImageViewToFXId(void *ptr) {
    FXPyImageView *src;
    FXId *dest;
    src = (FXPyImageView *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPyImageViewToFXObject(void *ptr) {
    FXPyImageView *src;
    FXObject *dest;
    src = (FXPyImageView *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXImageView(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8) (new FXPyImageView(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8))
static PyObject *_wrap_new_FXImageView(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyImageView * _result;
    FXComposite * _arg0;
    FXImage * _arg1 = (FXImage *) NULL;
    FXObject * _arg2 = (FXObject *) NULL;
    FXSelector  _arg3 = (FXSelector ) 0;
    FXuint  _arg4 = (FXuint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    FXint  _arg8 = (FXint ) 0;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "p","img","tgt","sel","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|OOiiiiii:new_FXImageView",_kwnames,&_argo0,&_argo1,&_obj2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7,&_arg8)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FXImageView. Expected _FXComposite_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXImage_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of new_FXImageView. Expected _FXImage_p.");
        return NULL;
        }
    }
    if (_obj2)
{
    if (_obj2 == Py_None)
	_arg2 = NULL;
    else
	SWIG_GetPtrObj(_obj2, (void**) &_arg2, "_FXObject_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyImageView *)new_FXImageView(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7,_arg8);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyImageView_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FXImageView_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXImageView_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyImageView * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXImageView_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyImageView_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXImageView_onDefault. Expected _FXPyImageView_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXImageView_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXImageView_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXImageView_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyImageView * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXImageView_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyImageView_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXImageView_create. Expected _FXPyImageView_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXImageView_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXImageView_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXImageView_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyImageView * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXImageView_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyImageView_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXImageView_destroy. Expected _FXPyImageView_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXImageView_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXImageView_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXImageView_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyImageView * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXImageView_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyImageView_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXImageView_detach. Expected _FXPyImageView_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXImageView_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXImageView_resize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_resize(_swigarg0,_swigarg1))
static PyObject *_wrap_FXImageView_resize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyImageView * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXImageView_resize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyImageView_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXImageView_resize. Expected _FXPyImageView_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXImageView_resize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXImageView_getDefaultWidth(_swigobj)  (_swigobj->_getDefaultWidth())
static PyObject *_wrap_FXImageView_getDefaultWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyImageView * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXImageView_getDefaultWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyImageView_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXImageView_getDefaultWidth. Expected _FXPyImageView_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXImageView_getDefaultWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXImageView_getDefaultHeight(_swigobj)  (_swigobj->_getDefaultHeight())
static PyObject *_wrap_FXImageView_getDefaultHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyImageView * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXImageView_getDefaultHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyImageView_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXImageView_getDefaultHeight. Expected _FXPyImageView_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXImageView_getDefaultHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXImageView_show(_swigobj)  (_swigobj->_show())
static PyObject *_wrap_FXImageView_show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyImageView * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXImageView_show",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyImageView_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXImageView_show. Expected _FXPyImageView_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXImageView_show(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXImageView_hide(_swigobj)  (_swigobj->_hide())
static PyObject *_wrap_FXImageView_hide(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyImageView * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXImageView_hide",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyImageView_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXImageView_hide. Expected _FXPyImageView_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXImageView_hide(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXImageView_enable(_swigobj)  (_swigobj->_enable())
static PyObject *_wrap_FXImageView_enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyImageView * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXImageView_enable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyImageView_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXImageView_enable. Expected _FXPyImageView_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXImageView_enable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXImageView_disable(_swigobj)  (_swigobj->_disable())
static PyObject *_wrap_FXImageView_disable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyImageView * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXImageView_disable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyImageView_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXImageView_disable. Expected _FXPyImageView_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXImageView_disable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXImageView_canFocus(_swigobj)  (_swigobj->_canFocus())
static PyObject *_wrap_FXImageView_canFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyImageView * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXImageView_canFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyImageView_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXImageView_canFocus. Expected _FXPyImageView_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXImageView_canFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXImageView_setFocus(_swigobj)  (_swigobj->_setFocus())
static PyObject *_wrap_FXImageView_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyImageView * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXImageView_setFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyImageView_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXImageView_setFocus. Expected _FXPyImageView_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXImageView_setFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXImageView_killFocus(_swigobj)  (_swigobj->_killFocus())
static PyObject *_wrap_FXImageView_killFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyImageView * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXImageView_killFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyImageView_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXImageView_killFocus. Expected _FXPyImageView_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXImageView_killFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXImageView_setDefault(_swigobj,_swigarg0)  (_swigobj->_setDefault(_swigarg0))
static PyObject *_wrap_FXImageView_setDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyImageView * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FXImageView_setDefault",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyImageView_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXImageView_setDefault. Expected _FXPyImageView_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXImageView_setDefault(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXImageView_recalc(_swigobj)  (_swigobj->_recalc())
static PyObject *_wrap_FXImageView_recalc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyImageView * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXImageView_recalc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyImageView_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXImageView_recalc. Expected _FXPyImageView_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXImageView_recalc(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXImageView_layout(_swigobj)  (_swigobj->_layout())
static PyObject *_wrap_FXImageView_layout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyImageView * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXImageView_layout",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyImageView_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXImageView_layout. Expected _FXPyImageView_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXImageView_layout(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXImageView_lower(_swigobj)  (_swigobj->_lowerWindow())
static PyObject *_wrap_FXImageView_lower(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyImageView * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXImageView_lower",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyImageView_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXImageView_lower. Expected _FXPyImageView_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXImageView_lower(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXImageView_move(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_move(_swigarg0,_swigarg1))
static PyObject *_wrap_FXImageView_move(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyImageView * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXImageView_move",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyImageView_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXImageView_move. Expected _FXPyImageView_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXImageView_move(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXImageView_position(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->_position(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FXImageView_position(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyImageView * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FXImageView_position",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyImageView_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXImageView_position. Expected _FXPyImageView_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXImageView_position(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXImageView_isComposite(_swigobj)  (_swigobj->_isComposite())
static PyObject *_wrap_FXImageView_isComposite(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyImageView * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXImageView_isComposite",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyImageView_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXImageView_isComposite. Expected _FXPyImageView_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXImageView_isComposite(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXImageView_contains(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_contains(_swigarg0,_swigarg1))
static PyObject *_wrap_FXImageView_contains(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyImageView * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXImageView_contains",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyImageView_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXImageView_contains. Expected _FXPyImageView_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXImageView_contains(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXImageView_getWidthForHeight(_swigobj,_swigarg0)  (_swigobj->_getWidthForHeight(_swigarg0))
static PyObject *_wrap_FXImageView_getWidthForHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyImageView * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXImageView_getWidthForHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyImageView_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXImageView_getWidthForHeight. Expected _FXPyImageView_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXImageView_getWidthForHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXImageView_getHeightForWidth(_swigobj,_swigarg0)  (_swigobj->_getHeightForWidth(_swigarg0))
static PyObject *_wrap_FXImageView_getHeightForWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyImageView * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXImageView_getHeightForWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyImageView_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXImageView_getHeightForWidth. Expected _FXPyImageView_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXImageView_getHeightForWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXImageView_doesSaveUnder(_swigobj)  (_swigobj->_doesSaveUnder())
static PyObject *_wrap_FXImageView_doesSaveUnder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyImageView * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXImageView_doesSaveUnder",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyImageView_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXImageView_doesSaveUnder. Expected _FXPyImageView_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXImageView_doesSaveUnder(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXImageView_reparent(_swigobj,_swigarg0)  (_swigobj->_reparent(_swigarg0))
static PyObject *_wrap_FXImageView_reparent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyImageView * _arg0;
    FXComposite * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","newparent", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXImageView_reparent",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyImageView_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXImageView_reparent. Expected _FXPyImageView_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXImageView_reparent. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXImageView_reparent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXImageView_setBackColor(_swigobj,_swigarg0)  (_swigobj->_setBackColor(_swigarg0))
static PyObject *_wrap_FXImageView_setBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyImageView * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXImageView_setBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyImageView_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXImageView_setBackColor. Expected _FXPyImageView_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXImageView_setBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXImageView_getContentWidth(_swigobj)  (_swigobj->_getContentWidth())
static PyObject *_wrap_FXImageView_getContentWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyImageView * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXImageView_getContentWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyImageView_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXImageView_getContentWidth. Expected _FXPyImageView_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXImageView_getContentWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXImageView_getContentHeight(_swigobj)  (_swigobj->_getContentHeight())
static PyObject *_wrap_FXImageView_getContentHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyImageView * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXImageView_getContentHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyImageView_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXImageView_getContentHeight. Expected _FXPyImageView_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXImageView_getContentHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXImageView_getViewportWidth(_swigobj)  (_swigobj->_getViewportWidth())
static PyObject *_wrap_FXImageView_getViewportWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyImageView * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXImageView_getViewportWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyImageView_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXImageView_getViewportWidth. Expected _FXPyImageView_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXImageView_getViewportWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXImageView_getViewportHeight(_swigobj)  (_swigobj->_getViewportHeight())
static PyObject *_wrap_FXImageView_getViewportHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyImageView * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXImageView_getViewportHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyImageView_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXImageView_getViewportHeight. Expected _FXPyImageView_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXImageView_getViewportHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXImageView_moveContents(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_moveContents(_swigarg0,_swigarg1))
static PyObject *_wrap_FXImageView_moveContents(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyImageView * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXImageView_moveContents",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyImageView_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXImageView_moveContents. Expected _FXPyImageView_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXImageView_moveContents(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static PyMethodDef graphicscMethods[] = {
	 { "FXImageView_moveContents", (PyCFunction) _wrap_FXImageView_moveContents, METH_VARARGS | METH_KEYWORDS },
	 { "FXImageView_getViewportHeight", (PyCFunction) _wrap_FXImageView_getViewportHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXImageView_getViewportWidth", (PyCFunction) _wrap_FXImageView_getViewportWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXImageView_getContentHeight", (PyCFunction) _wrap_FXImageView_getContentHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXImageView_getContentWidth", (PyCFunction) _wrap_FXImageView_getContentWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXImageView_setBackColor", (PyCFunction) _wrap_FXImageView_setBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FXImageView_reparent", (PyCFunction) _wrap_FXImageView_reparent, METH_VARARGS | METH_KEYWORDS },
	 { "FXImageView_doesSaveUnder", (PyCFunction) _wrap_FXImageView_doesSaveUnder, METH_VARARGS | METH_KEYWORDS },
	 { "FXImageView_getHeightForWidth", (PyCFunction) _wrap_FXImageView_getHeightForWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXImageView_getWidthForHeight", (PyCFunction) _wrap_FXImageView_getWidthForHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXImageView_contains", (PyCFunction) _wrap_FXImageView_contains, METH_VARARGS | METH_KEYWORDS },
	 { "FXImageView_isComposite", (PyCFunction) _wrap_FXImageView_isComposite, METH_VARARGS | METH_KEYWORDS },
	 { "FXImageView_position", (PyCFunction) _wrap_FXImageView_position, METH_VARARGS | METH_KEYWORDS },
	 { "FXImageView_move", (PyCFunction) _wrap_FXImageView_move, METH_VARARGS | METH_KEYWORDS },
	 { "FXImageView_lower", (PyCFunction) _wrap_FXImageView_lower, METH_VARARGS | METH_KEYWORDS },
	 { "FXImageView_layout", (PyCFunction) _wrap_FXImageView_layout, METH_VARARGS | METH_KEYWORDS },
	 { "FXImageView_recalc", (PyCFunction) _wrap_FXImageView_recalc, METH_VARARGS | METH_KEYWORDS },
	 { "FXImageView_setDefault", (PyCFunction) _wrap_FXImageView_setDefault, METH_VARARGS | METH_KEYWORDS },
	 { "FXImageView_killFocus", (PyCFunction) _wrap_FXImageView_killFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXImageView_setFocus", (PyCFunction) _wrap_FXImageView_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXImageView_canFocus", (PyCFunction) _wrap_FXImageView_canFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXImageView_disable", (PyCFunction) _wrap_FXImageView_disable, METH_VARARGS | METH_KEYWORDS },
	 { "FXImageView_enable", (PyCFunction) _wrap_FXImageView_enable, METH_VARARGS | METH_KEYWORDS },
	 { "FXImageView_hide", (PyCFunction) _wrap_FXImageView_hide, METH_VARARGS | METH_KEYWORDS },
	 { "FXImageView_show", (PyCFunction) _wrap_FXImageView_show, METH_VARARGS | METH_KEYWORDS },
	 { "FXImageView_getDefaultHeight", (PyCFunction) _wrap_FXImageView_getDefaultHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXImageView_getDefaultWidth", (PyCFunction) _wrap_FXImageView_getDefaultWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXImageView_resize", (PyCFunction) _wrap_FXImageView_resize, METH_VARARGS | METH_KEYWORDS },
	 { "FXImageView_detach", (PyCFunction) _wrap_FXImageView_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXImageView_destroy", (PyCFunction) _wrap_FXImageView_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXImageView_create", (PyCFunction) _wrap_FXImageView_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXImageView_onDefault", (PyCFunction) _wrap_FXImageView_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXImageView", (PyCFunction) _wrap_new_FXImageView, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ImageView_getImage", (PyCFunction) _wrap_FX_ImageView_getImage, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ImageView_setImage", (PyCFunction) _wrap_FX_ImageView_setImage, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_ImageView", (PyCFunction) _wrap_new_FX_ImageView, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ImageView_onRightBtnRelease", (PyCFunction) _wrap_FX_ImageView_onRightBtnRelease, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ImageView_onRightBtnPress", (PyCFunction) _wrap_FX_ImageView_onRightBtnPress, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ImageView_onMotion", (PyCFunction) _wrap_FX_ImageView_onMotion, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ImageView_onPaint", (PyCFunction) _wrap_FX_ImageView_onPaint, METH_VARARGS | METH_KEYWORDS },
	 { "FXCURCursor_loadPixels", (PyCFunction) _wrap_FXCURCursor_loadPixels, METH_VARARGS | METH_KEYWORDS },
	 { "FXCURCursor_savePixels", (PyCFunction) _wrap_FXCURCursor_savePixels, METH_VARARGS | METH_KEYWORDS },
	 { "FXCURCursor_onDefault", (PyCFunction) _wrap_FXCURCursor_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXCURCursor", (PyCFunction) _wrap_new_FXCURCursor, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_CURCursor", (PyCFunction) _wrap_new_FX_CURCursor, METH_VARARGS | METH_KEYWORDS },
	 { "FXGIFCursor_loadPixels", (PyCFunction) _wrap_FXGIFCursor_loadPixels, METH_VARARGS | METH_KEYWORDS },
	 { "FXGIFCursor_savePixels", (PyCFunction) _wrap_FXGIFCursor_savePixels, METH_VARARGS | METH_KEYWORDS },
	 { "FXGIFCursor_onDefault", (PyCFunction) _wrap_FXGIFCursor_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXGIFCursor", (PyCFunction) _wrap_new_FXGIFCursor, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_GIFCursor", (PyCFunction) _wrap_new_FX_GIFCursor, METH_VARARGS | METH_KEYWORDS },
	 { "FXCursor_loadPixels", (PyCFunction) _wrap_FXCursor_loadPixels, METH_VARARGS | METH_KEYWORDS },
	 { "FXCursor_savePixels", (PyCFunction) _wrap_FXCursor_savePixels, METH_VARARGS | METH_KEYWORDS },
	 { "FXCursor_onDefault", (PyCFunction) _wrap_FXCursor_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Cursor_loadPixels", (PyCFunction) _wrap_FX_Cursor_loadPixels, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Cursor_savePixels", (PyCFunction) _wrap_FX_Cursor_savePixels, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Cursor_destroy", (PyCFunction) _wrap_FX_Cursor_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Cursor_detach", (PyCFunction) _wrap_FX_Cursor_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Cursor_create", (PyCFunction) _wrap_FX_Cursor_create, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Cursor_getHeight", (PyCFunction) _wrap_FX_Cursor_getHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Cursor_getWidth", (PyCFunction) _wrap_FX_Cursor_getWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Cursor_getHotY", (PyCFunction) _wrap_FX_Cursor_getHotY, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Cursor_getHotX", (PyCFunction) _wrap_FX_Cursor_getHotX, METH_VARARGS | METH_KEYWORDS },
	 { "FXBitmap_resize", (PyCFunction) _wrap_FXBitmap_resize, METH_VARARGS | METH_KEYWORDS },
	 { "FXBitmap_detach", (PyCFunction) _wrap_FXBitmap_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXBitmap_destroy", (PyCFunction) _wrap_FXBitmap_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXBitmap_create", (PyCFunction) _wrap_FXBitmap_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXBitmap_onDefault", (PyCFunction) _wrap_FXBitmap_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXBitmap", (PyCFunction) _wrap_new_FXBitmap, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Bitmap_loadPixels", (PyCFunction) _wrap_FX_Bitmap_loadPixels, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Bitmap_savePixels", (PyCFunction) _wrap_FX_Bitmap_savePixels, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Bitmap_resize", (PyCFunction) _wrap_FX_Bitmap_resize, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Bitmap_setPixel", (PyCFunction) _wrap_FX_Bitmap_setPixel, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Bitmap_getPixel", (PyCFunction) _wrap_FX_Bitmap_getPixel, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Bitmap_render", (PyCFunction) _wrap_FX_Bitmap_render, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Bitmap_destroy", (PyCFunction) _wrap_FX_Bitmap_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Bitmap_detach", (PyCFunction) _wrap_FX_Bitmap_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FX_Bitmap_create", (PyCFunction) _wrap_FX_Bitmap_create, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_Bitmap", (PyCFunction) _wrap_new_FX_Bitmap, METH_VARARGS | METH_KEYWORDS },
	 { "CreateCursorFromMask", (PyCFunction) _wrap_CreateCursorFromMask, METH_VARARGS | METH_KEYWORDS },
	 { "CreateStockCursor", (PyCFunction) _wrap_CreateStockCursor, METH_VARARGS | METH_KEYWORDS },
	 { NULL, NULL }
};
#ifdef __cplusplus
}
#endif
/*
 * This table is used by the pointer type-checker
 */
static struct { char *n1; char *n2; void *(*pcnv)(void *); } _swig_mapping[] = {
    { "_class_FXPyBMPImage","_FXPyBMPImage",0},
    { "_class_FXPyICOImage","_FXPyICOImage",0},
    { "_FXPyDelegator","_class_FXPyDelegator",0},
    { "_FX4Splitter","_class_FX4Splitter",0},
    { "_signed_long","_FXTime",0},
    { "_signed_long","_long",0},
    { "_class_FXPyPCXImage","_FXPyPCXImage",0},
    { "_FXBitmap","_class_FXPyBitmap",SwigFXPyBitmapToFXBitmap},
    { "_FXBitmap","_FXPyBitmap",SwigFXPyBitmapToFXBitmap},
    { "_FXBitmap","_class_FXBitmap",0},
    { "_class_FXImageView","_class_FXPyImageView",SwigFXPyImageViewToFXImageView},
    { "_class_FXImageView","_FXPyImageView",SwigFXPyImageViewToFXImageView},
    { "_class_FXImageView","_FXImageView",0},
    { "_class_FXTIFIcon","_FXTIFIcon",0},
    { "_FXPyHorizontalFrame","_class_FXPyHorizontalFrame",0},
    { "_double","_FXdouble",0},
    { "_FXPyObject","_class_FXPyObject",0},
    { "_FXPyGIFIcon","_class_FXPyGIFIcon",0},
    { "_FXBMPIcon","_class_FXBMPIcon",0},
    { "_FXICOIcon","_class_FXICOIcon",0},
    { "_class_FXSettings","_FXSettings",0},
    { "_class_FXRegistry","_FXRegistry",0},
    { "_class_FXMainWindow","_FXMainWindow",0},
    { "_class_FXPyBitmap","_FXPyBitmap",0},
    { "_FXTopWindow","_class_FXTopWindow",0},
    { "_FXPySwitcher","_class_FXPySwitcher",0},
    { "_FXShutterItem","_class_FXShutterItem",0},
    { "_class_FXVisual","_FXVisual",0},
    { "_FXIcon","_class_FXIcon",0},
    { "_FXPyMatrix","_class_FXPyMatrix",0},
    { "_class_FXDCPrint","_FXDCPrint",0},
    { "_class_FXGroupBox","_FXGroupBox",0},
    { "_FXTGAImage","_class_FXTGAImage",0},
    { "_class_FXPyTGAIcon","_FXPyTGAIcon",0},
    { "_FXPyStream","_class_FXPyStream",0},
    { "_class_FXPyDict","_FXPyDict",0},
    { "_class_FXRegion","_FXRegion",0},
    { "_FXShutter","_class_FXShutter",0},
    { "_FXPyPNGImage","_class_FXPyPNGImage",0},
    { "_class_FXAccelTable","_FXAccelTable",0},
    { "_FXPyApp","_class_FXPyApp",0},
    { "_FXDCWindow","_class_FXDCWindow",0},
    { "_FXPyScrollArea","_class_FXPyScrollArea",0},
    { "_class_FXPyId","_FXPyId",0},
    { "_class_FXCanvas","_FXCanvas",0},
    { "_FXApp","_class_FXApp",0},
    { "_class_FXPyRecentFiles","_FXPyRecentFiles",0},
    { "_class_FXPyDebugTarget","_FXPyDebugTarget",0},
    { "_class_FXCommand","_FXCommand",0},
    { "_class_FXPyFrame","_FXPyFrame",0},
    { "_FXGIFCursor","_class_FXPyGIFCursor",SwigFXPyGIFCursorToFXGIFCursor},
    { "_FXGIFCursor","_FXPyGIFCursor",SwigFXPyGIFCursorToFXGIFCursor},
    { "_FXGIFCursor","_class_FXGIFCursor",0},
    { "_long","_FXPixel",0},
    { "_long","_FXTime",0},
    { "_long","_unsigned_long",0},
    { "_long","_signed_long",0},
    { "_FXComposite","_class_FXPyImageView",SwigFXPyImageViewToFXComposite},
    { "_FXComposite","_FXPyImageView",SwigFXPyImageViewToFXComposite},
    { "_FXComposite","_class_FXImageView",SwigFXImageViewToFXComposite},
    { "_FXComposite","_FXImageView",SwigFXImageViewToFXComposite},
    { "_FXComposite","_class_FXComposite",0},
    { "_struct_FXArc","_FXArc",0},
    { "_FXRGBIcon","_class_FXRGBIcon",0},
    { "_FXScrollArea","_class_FXPyImageView",SwigFXPyImageViewToFXScrollArea},
    { "_FXScrollArea","_FXPyImageView",SwigFXPyImageViewToFXScrollArea},
    { "_FXScrollArea","_class_FXImageView",SwigFXImageViewToFXScrollArea},
    { "_FXScrollArea","_FXImageView",SwigFXImageViewToFXScrollArea},
    { "_FXScrollArea","_class_FXScrollArea",0},
    { "_FXPrinter","_struct_FXPrinter",0},
    { "_class_FXId","_class_FXPyImageView",SwigFXPyImageViewToFXId},
    { "_class_FXId","_FXPyImageView",SwigFXPyImageViewToFXId},
    { "_class_FXId","_class_FXImageView",SwigFXImageViewToFXId},
    { "_class_FXId","_FXImageView",SwigFXImageViewToFXId},
    { "_class_FXId","_class_FXPyCURCursor",SwigFXPyCURCursorToFXId},
    { "_class_FXId","_FXPyCURCursor",SwigFXPyCURCursorToFXId},
    { "_class_FXId","_class_FXCURCursor",SwigFXCURCursorToFXId},
    { "_class_FXId","_FXCURCursor",SwigFXCURCursorToFXId},
    { "_class_FXId","_class_FXPyGIFCursor",SwigFXPyGIFCursorToFXId},
    { "_class_FXId","_FXPyGIFCursor",SwigFXPyGIFCursorToFXId},
    { "_class_FXId","_class_FXGIFCursor",SwigFXGIFCursorToFXId},
    { "_class_FXId","_FXGIFCursor",SwigFXGIFCursorToFXId},
    { "_class_FXId","_class_FXPyCursor",SwigFXPyCursorToFXId},
    { "_class_FXId","_FXPyCursor",SwigFXPyCursorToFXId},
    { "_class_FXId","_class_FXCursor",SwigFXCursorToFXId},
    { "_class_FXId","_FXCursor",SwigFXCursorToFXId},
    { "_class_FXId","_class_FXPyBitmap",SwigFXPyBitmapToFXId},
    { "_class_FXId","_FXPyBitmap",SwigFXPyBitmapToFXId},
    { "_class_FXId","_class_FXBitmap",SwigFXBitmapToFXId},
    { "_class_FXId","_FXBitmap",SwigFXBitmapToFXId},
    { "_class_FXId","_FXId",0},
    { "_FXPyHorizontalSeparator","_class_FXPyHorizontalSeparator",0},
    { "_float","_FXfloat",0},
    { "_FXPyDrawable","_class_FXPyDrawable",0},
    { "_class_FXPyXPMIcon","_FXPyXPMIcon",0},
    { "_FXPyScrollWindow","_class_FXPyScrollWindow",0},
    { "_FXshort","_short",0},
    { "_FXshort","_signed_short",0},
    { "_FXshort","_unsigned_short",0},
    { "_FXshort","_FXushort",0},
    { "_FXFontDesc","_struct_FXFontDesc",0},
    { "_FXArc","_struct_FXArc",0},
    { "_FXSize","_class_FXSize",0},
    { "_class_FXBMPIcon","_FXBMPIcon",0},
    { "_class_FXICOIcon","_FXICOIcon",0},
    { "_FXPyShell","_class_FXPyShell",0},
    { "_class_FXPyTIFIcon","_FXPyTIFIcon",0},
    { "_FXSegment","_struct_FXSegment",0},
    { "_FXJPGImage","_class_FXJPGImage",0},
    { "_class_FXPySwitcher","_FXPySwitcher",0},
    { "_class_FXTIFImage","_FXTIFImage",0},
    { "_FXPyPCXIcon","_class_FXPyPCXIcon",0},
    { "_FXDC","_class_FXDC",0},
    { "_class_FXIcon","_FXIcon",0},
    { "_FXPopup","_class_FXPopup",0},
    { "_FXPy4Splitter","_class_FXPy4Splitter",0},
    { "_FXint","_FXInputHandle",0},
    { "_FXint","_FXDragType",0},
    { "_FXint","_FXHotKey",0},
    { "_FXint","_FXColor",0},
    { "_FXint","_FXID",0},
    { "_FXint","_FXSelector",0},
    { "_FXint","_int",0},
    { "_FXint","_signed_int",0},
    { "_FXint","_unsigned_int",0},
    { "_FXint","_FXuint",0},
    { "_FXPyPNGIcon","_class_FXPyPNGIcon",0},
    { "_class_FXWindow","_class_FXPyImageView",SwigFXPyImageViewToFXWindow},
    { "_class_FXWindow","_FXPyImageView",SwigFXPyImageViewToFXWindow},
    { "_class_FXWindow","_class_FXImageView",SwigFXImageViewToFXWindow},
    { "_class_FXWindow","_FXImageView",SwigFXImageViewToFXWindow},
    { "_class_FXWindow","_FXWindow",0},
    { "_FXPyRootWindow","_class_FXPyRootWindow",0},
    { "_class_FXShutter","_FXShutter",0},
    { "_FXushort","_FXshort",0},
    { "_FXushort","_unsigned_short",0},
    { "_FXushort","_short",0},
    { "_class_FXPoint","_FXPoint",0},
    { "_class_FXPyPNGImage","_FXPyPNGImage",0},
    { "_class_FXPyDCPrint","_FXPyDCPrint",0},
    { "_FXPyVisual","_class_FXPyVisual",0},
    { "_class_FXRectangle","_FXRectangle",0},
    { "_class_FXPyFont","_FXPyFont",0},
    { "_FXPyFileStream","_class_FXPyFileStream",0},
    { "_FXRGBImage","_class_FXRGBImage",0},
    { "_FXRootWindow","_class_FXRootWindow",0},
    { "_class_FXPacker","_FXPacker",0},
    { "_FXPyXPMImage","_class_FXPyXPMImage",0},
    { "_FXPyDataTarget","_class_FXPyDataTarget",0},
    { "_FXPyTopWindow","_class_FXPyTopWindow",0},
    { "_FXObject","_class_FXPyImageView",SwigFXPyImageViewToFXObject},
    { "_FXObject","_FXPyImageView",SwigFXPyImageViewToFXObject},
    { "_FXObject","_class_FXImageView",SwigFXImageViewToFXObject},
    { "_FXObject","_FXImageView",SwigFXImageViewToFXObject},
    { "_FXObject","_class_FXPyCURCursor",SwigFXPyCURCursorToFXObject},
    { "_FXObject","_FXPyCURCursor",SwigFXPyCURCursorToFXObject},
    { "_FXObject","_class_FXCURCursor",SwigFXCURCursorToFXObject},
    { "_FXObject","_FXCURCursor",SwigFXCURCursorToFXObject},
    { "_FXObject","_class_FXPyGIFCursor",SwigFXPyGIFCursorToFXObject},
    { "_FXObject","_FXPyGIFCursor",SwigFXPyGIFCursorToFXObject},
    { "_FXObject","_class_FXGIFCursor",SwigFXGIFCursorToFXObject},
    { "_FXObject","_FXGIFCursor",SwigFXGIFCursorToFXObject},
    { "_FXObject","_class_FXPyCursor",SwigFXPyCursorToFXObject},
    { "_FXObject","_FXPyCursor",SwigFXPyCursorToFXObject},
    { "_FXObject","_class_FXCursor",SwigFXCursorToFXObject},
    { "_FXObject","_FXCursor",SwigFXCursorToFXObject},
    { "_FXObject","_class_FXPyBitmap",SwigFXPyBitmapToFXObject},
    { "_FXObject","_FXPyBitmap",SwigFXPyBitmapToFXObject},
    { "_FXObject","_class_FXBitmap",SwigFXBitmapToFXObject},
    { "_FXObject","_FXBitmap",SwigFXBitmapToFXObject},
    { "_FXObject","_class_FXObject",0},
    { "_FXPyGIFImage","_class_FXPyGIFImage",0},
    { "_FXBMPImage","_class_FXBMPImage",0},
    { "_FXICOImage","_class_FXICOImage",0},
    { "_class_FXRGBIcon","_FXRGBIcon",0},
    { "_FXRecentFiles","_class_FXRecentFiles",0},
    { "_FXDebugTarget","_class_FXDebugTarget",0},
    { "_class_FXPyCommand","_FXPyCommand",0},
    { "_class_FXScrollArea","_class_FXPyImageView",SwigFXPyImageViewToFXScrollArea},
    { "_class_FXScrollArea","_FXPyImageView",SwigFXPyImageViewToFXScrollArea},
    { "_class_FXScrollArea","_class_FXImageView",SwigFXImageViewToFXScrollArea},
    { "_class_FXScrollArea","_FXImageView",SwigFXImageViewToFXScrollArea},
    { "_class_FXScrollArea","_FXScrollArea",0},
    { "_FXPySplitter","_class_FXPySplitter",0},
    { "_FXPCXImage","_class_FXPCXImage",0},
    { "_FXFileStream","_class_FXFileStream",0},
    { "_class_FXPyDelegator","_FXPyDelegator",0},
    { "_FXPyCanvas","_class_FXPyCanvas",0},
    { "_class_FXPyDrawable","_FXPyDrawable",0},
    { "_FXPyImage","_class_FXPyImage",0},
    { "_FXGIFIcon","_class_FXGIFIcon",0},
    { "_FXColor","_FXInputHandle",0},
    { "_FXColor","_FXDragType",0},
    { "_FXColor","_FXHotKey",0},
    { "_FXColor","_FXuint",0},
    { "_FXColor","_int",0},
    { "_FXColor","_unsigned_int",0},
    { "_FXColor","_FXint",0},
    { "_FXColor","_FXSelector",0},
    { "_FXColor","_FXID",0},
    { "_FXPyJPGIcon","_class_FXPyJPGIcon",0},
    { "_FXDataTarget","_class_FXDataTarget",0},
    { "_class_FXPyHorizontalFrame","_FXPyHorizontalFrame",0},
    { "_FXTime","_FXPixel",0},
    { "_FXTime","_long",0},
    { "_FXTime","_signed_long",0},
    { "_FXTime","_unsigned_long",0},
    { "_FXHotKey","_FXInputHandle",0},
    { "_FXHotKey","_FXDragType",0},
    { "_FXHotKey","_FXuint",0},
    { "_FXHotKey","_int",0},
    { "_FXHotKey","_unsigned_int",0},
    { "_FXHotKey","_FXint",0},
    { "_FXHotKey","_FXSelector",0},
    { "_FXHotKey","_FXID",0},
    { "_FXHotKey","_FXColor",0},
    { "_class_FXSize","_FXSize",0},
    { "_class_FXPyObject","_FXPyObject",0},
    { "_class_FXPyShell","_FXPyShell",0},
    { "_FXPyDC","_class_FXPyDC",0},
    { "_class_FXCursor","_class_FXPyCURCursor",SwigFXPyCURCursorToFXCursor},
    { "_class_FXCursor","_FXPyCURCursor",SwigFXPyCURCursorToFXCursor},
    { "_class_FXCursor","_class_FXCURCursor",SwigFXCURCursorToFXCursor},
    { "_class_FXCursor","_FXCURCursor",SwigFXCURCursorToFXCursor},
    { "_class_FXCursor","_class_FXPyGIFCursor",SwigFXPyGIFCursorToFXCursor},
    { "_class_FXCursor","_FXPyGIFCursor",SwigFXPyGIFCursorToFXCursor},
    { "_class_FXCursor","_class_FXGIFCursor",SwigFXGIFCursorToFXCursor},
    { "_class_FXCursor","_FXGIFCursor",SwigFXGIFCursorToFXCursor},
    { "_class_FXCursor","_class_FXPyCursor",SwigFXPyCursorToFXCursor},
    { "_class_FXCursor","_FXPyCursor",SwigFXPyCursorToFXCursor},
    { "_class_FXCursor","_FXCursor",0},
    { "_struct_FXFontDesc","_FXFontDesc",0},
    { "_FXMatrix","_class_FXMatrix",0},
    { "_class_FXPyBMPIcon","_FXPyBMPIcon",0},
    { "_class_FXPyICOIcon","_FXPyICOIcon",0},
    { "_char","_FXchar",0},
    { "_FXdouble","_double",0},
    { "_FXStream","_class_FXStream",0},
    { "_FXPyStringDict","_class_FXPyStringDict",0},
    { "_FXFrame","_class_FXFrame",0},
    { "_FXPyGIFCursor","_class_FXPyGIFCursor",0},
    { "_FXObjectPtr","_FXObject_p",0},
    { "_FXPyComposite","_class_FXPyComposite",0},
    { "_class_FXShutterItem","_FXShutterItem",0},
    { "_class_FXDelegator","_FXDelegator",0},
    { "_FXVerticalFrame","_class_FXVerticalFrame",0},
    { "_class_FXPyMatrix","_FXPyMatrix",0},
    { "_FXbool","_FXuchar",0},
    { "_FXbool","_unsigned_char",0},
    { "_class_FXTGAImage","_FXTGAImage",0},
    { "_class_FXPyStream","_FXPyStream",0},
    { "_FXStringDict","_class_FXStringDict",0},
    { "_FXPyGroupBox","_class_FXPyGroupBox",0},
    { "_class_FXPyApp","_FXPyApp",0},
    { "_class_FXDCWindow","_FXDCWindow",0},
    { "_class_FXPyShutter","_FXPyShutter",0},
    { "_FXPyWindow","_class_FXPyWindow",0},
    { "_class_FXRootWindow","_FXRootWindow",0},
    { "_FXCURCursor","_class_FXPyCURCursor",SwigFXPyCURCursorToFXCURCursor},
    { "_FXCURCursor","_FXPyCURCursor",SwigFXPyCURCursorToFXCURCursor},
    { "_FXCURCursor","_class_FXCURCursor",0},
    { "_class_FXPyXPMImage","_FXPyXPMImage",0},
    { "_class_FXPyGIFImage","_FXPyGIFImage",0},
    { "_class_FXPyVerticalFrame","_FXPyVerticalFrame",0},
    { "_class_FXPySplitter","_FXPySplitter",0},
    { "_class_FXFileStream","_FXFileStream",0},
    { "_class_FXPyMainWindow","_FXPyMainWindow",0},
    { "_class_FXHorizontalFrame","_FXHorizontalFrame",0},
    { "_class_FXPyImage","_FXPyImage",0},
    { "_class_FXGIFIcon","_FXGIFIcon",0},
    { "_class_FXPyRGBIcon","_FXPyRGBIcon",0},
    { "_FXPyPacker","_class_FXPyPacker",0},
    { "_class_FXPyScrollWindow","_FXPyScrollWindow",0},
    { "_FXImageView","_class_FXPyImageView",SwigFXPyImageViewToFXImageView},
    { "_FXImageView","_FXPyImageView",SwigFXPyImageViewToFXImageView},
    { "_FXImageView","_class_FXImageView",0},
    { "_unsigned_long","_FXPixel",0},
    { "_unsigned_long","_FXTime",0},
    { "_unsigned_long","_long",0},
    { "_class_FXDataTarget","_FXDataTarget",0},
    { "_class_FXScrollWindow","_FXScrollWindow",0},
    { "_class_FXPyDC","_FXPyDC",0},
    { "_FXPyVerticalSeparator","_class_FXPyVerticalSeparator",0},
    { "_FXPCXIcon","_class_FXPCXIcon",0},
    { "_FXSwitcher","_class_FXSwitcher",0},
    { "_class_FXJPGImage","_FXJPGImage",0},
    { "_class_FXPyIcon","_FXPyIcon",0},
    { "_class_FXPyAccelTable","_FXPyAccelTable",0},
    { "_class_FXDC","_FXDC",0},
    { "_FXPyCursor","_class_FXPyCursor",0},
    { "_FXVisual","_class_FXVisual",0},
    { "_FXPyTIFImage","_class_FXPyTIFImage",0},
    { "_FXPNGIcon","_class_FXPNGIcon",0},
    { "_class_FXPopup","_FXPopup",0},
    { "_class_FXVerticalFrame","_FXVerticalFrame",0},
    { "_signed_int","_FXInputHandle",0},
    { "_signed_int","_FXint",0},
    { "_signed_int","_int",0},
    { "_class_FXPy4Splitter","_FXPy4Splitter",0},
    { "_FXPNGImage","_class_FXPNGImage",0},
    { "_FXPyTGAIcon","_class_FXPyTGAIcon",0},
    { "_FXPyDict","_class_FXPyDict",0},
    { "_class_FXStringDict","_FXStringDict",0},
    { "_FXRegion","_class_FXRegion",0},
    { "_class_FXPyGroupBox","_FXPyGroupBox",0},
    { "_FXVerticalSeparator","_class_FXVerticalSeparator",0},
    { "_FXRawEvent","__XEvent",0},
    { "_class_FXPyVisual","_FXPyVisual",0},
    { "_FXShell","_class_FXShell",0},
    { "_FXCanvas","_class_FXCanvas",0},
    { "_class_FXRGBImage","_FXRGBImage",0},
    { "_unsigned_short","_FXshort",0},
    { "_unsigned_short","_FXushort",0},
    { "_unsigned_short","_short",0},
    { "_class_FXPyTopWindow","_FXPyTopWindow",0},
    { "_class_FXBMPImage","_FXBMPImage",0},
    { "_class_FXICOImage","_FXICOImage",0},
    { "_class_FXRecentFiles","_FXRecentFiles",0},
    { "_class_FXDebugTarget","_FXDebugTarget",0},
    { "_FXDrawable","_class_FXPyImageView",SwigFXPyImageViewToFXDrawable},
    { "_FXDrawable","_FXPyImageView",SwigFXPyImageViewToFXDrawable},
    { "_FXDrawable","_class_FXImageView",SwigFXImageViewToFXDrawable},
    { "_FXDrawable","_FXImageView",SwigFXImageViewToFXDrawable},
    { "_FXDrawable","_class_FXPyBitmap",SwigFXPyBitmapToFXDrawable},
    { "_FXDrawable","_FXPyBitmap",SwigFXPyBitmapToFXDrawable},
    { "_FXDrawable","_class_FXBitmap",SwigFXBitmapToFXDrawable},
    { "_FXDrawable","_FXBitmap",SwigFXBitmapToFXDrawable},
    { "_FXDrawable","_class_FXDrawable",0},
    { "_class_FXPCXImage","_FXPCXImage",0},
    { "_FXJPGIcon","_class_FXJPGIcon",0},
    { "_class_FXPyCanvas","_FXPyCanvas",0},
    { "_class_FX4Splitter","_FX4Splitter",0},
    { "_FXPyXPMIcon","_class_FXPyXPMIcon",0},
    { "_class_FXBitmap","_class_FXPyBitmap",SwigFXPyBitmapToFXBitmap},
    { "_class_FXBitmap","_FXPyBitmap",SwigFXPyBitmapToFXBitmap},
    { "_class_FXBitmap","_FXBitmap",0},
    { "_FXObject_p","_FXObjectPtr",0},
    { "_FXID","_FXInputHandle",0},
    { "_FXID","_FXDragType",0},
    { "_FXID","_FXHotKey",0},
    { "_FXID","_FXColor",0},
    { "_FXID","_unsigned_int",0},
    { "_FXID","_int",0},
    { "_FXID","_FXuint",0},
    { "_FXID","_FXint",0},
    { "_FXID","_FXSelector",0},
    { "_FXHorizontalSeparator","_class_FXHorizontalSeparator",0},
    { "_class_FXPyGIFIcon","_FXPyGIFIcon",0},
    { "_class_FXPyVerticalSeparator","_FXPyVerticalSeparator",0},
    { "_struct_FXPrinter","_FXPrinter",0},
    { "_FXPyTIFIcon","_class_FXPyTIFIcon",0},
    { "_class_FXPCXIcon","_FXPCXIcon",0},
    { "_signed_short","_FXshort",0},
    { "_signed_short","_short",0},
    { "_class_FXFrame","_FXFrame",0},
    { "_class_FXTopWindow","_FXTopWindow",0},
    { "_class_FXPyGIFCursor","_FXPyGIFCursor",0},
    { "_FXPyCURCursor","_class_FXPyCURCursor",0},
    { "_FXfloat","_float",0},
    { "_FXEvent","_struct_FXEvent",0},
    { "_class_FXPyComposite","_FXPyComposite",0},
    { "_class_FXPyTIFImage","_FXPyTIFImage",0},
    { "_class_FXPNGIcon","_FXPNGIcon",0},
    { "_struct_FXSegment","_FXSegment",0},
    { "_unsigned_char","_FXbool",0},
    { "_unsigned_char","_FXuchar",0},
    { "_FXPixel","_unsigned_long",0},
    { "_FXPixel","_long",0},
    { "_FXPixel","_FXTime",0},
    { "_FXImage","_class_FXImage",0},
    { "_FXWindow","_class_FXPyImageView",SwigFXPyImageViewToFXWindow},
    { "_FXWindow","_FXPyImageView",SwigFXPyImageViewToFXWindow},
    { "_FXWindow","_class_FXImageView",SwigFXImageViewToFXWindow},
    { "_FXWindow","_FXImageView",SwigFXImageViewToFXWindow},
    { "_FXWindow","_class_FXWindow",0},
    { "_FXPyImageView","_class_FXPyImageView",0},
    { "_unsigned_int","_FXInputHandle",0},
    { "_unsigned_int","_FXDragType",0},
    { "_unsigned_int","_FXHotKey",0},
    { "_unsigned_int","_FXColor",0},
    { "_unsigned_int","_FXID",0},
    { "_unsigned_int","_FXSelector",0},
    { "_unsigned_int","_FXint",0},
    { "_unsigned_int","_FXuint",0},
    { "_unsigned_int","_int",0},
    { "_FXPyTGAImage","_class_FXPyTGAImage",0},
    { "_FXDict","_class_FXDict",0},
    { "_FXPyDCPrint","_class_FXPyDCPrint",0},
    { "_FXuint","_FXInputHandle",0},
    { "_FXuint","_FXDragType",0},
    { "_FXuint","_FXHotKey",0},
    { "_FXuint","_FXColor",0},
    { "_FXuint","_FXID",0},
    { "_FXuint","_FXSelector",0},
    { "_FXuint","_FXint",0},
    { "_FXuint","_unsigned_int",0},
    { "_FXuint","_int",0},
    { "_class_FXPyScrollArea","_FXPyScrollArea",0},
    { "_short","_FXshort",0},
    { "_short","_FXushort",0},
    { "_short","_unsigned_short",0},
    { "_short","_signed_short",0},
    { "_FXRectangle","_class_FXRectangle",0},
    { "_FXPyFont","_class_FXPyFont",0},
    { "_FXPyDCWindow","_class_FXPyDCWindow",0},
    { "_class_FXApp","_FXApp",0},
    { "_FXXPMImage","_class_FXXPMImage",0},
    { "_class_FXPyWindow","_FXPyWindow",0},
    { "_FXPacker","_class_FXPacker",0},
    { "_class_FXGIFCursor","_class_FXPyGIFCursor",SwigFXPyGIFCursorToFXGIFCursor},
    { "_class_FXGIFCursor","_FXPyGIFCursor",SwigFXPyGIFCursorToFXGIFCursor},
    { "_class_FXGIFCursor","_FXGIFCursor",0},
    { "_FXGIFImage","_class_FXGIFImage",0},
    { "_class_FXComposite","_class_FXPyImageView",SwigFXPyImageViewToFXComposite},
    { "_class_FXComposite","_FXPyImageView",SwigFXPyImageViewToFXComposite},
    { "_class_FXComposite","_class_FXImageView",SwigFXImageViewToFXComposite},
    { "_class_FXComposite","_FXImageView",SwigFXImageViewToFXComposite},
    { "_class_FXComposite","_FXComposite",0},
    { "_FXSplitter","_class_FXSplitter",0},
    { "_FXPyCommand","_class_FXPyCommand",0},
    { "_class_FXJPGIcon","_FXJPGIcon",0},
    { "_class_FXPyHorizontalSeparator","_FXPyHorizontalSeparator",0},
    { "_FXchar","_char",0},
    { "_class_FXPyPacker","_FXPyPacker",0},
    { "_FXuchar","_FXbool",0},
    { "_FXuchar","_unsigned_char",0},
    { "_class_FXHorizontalSeparator","_FXHorizontalSeparator",0},
    { "_int","_FXInputHandle",0},
    { "_int","_FXDragType",0},
    { "_int","_FXHotKey",0},
    { "_int","_FXColor",0},
    { "_int","_FXID",0},
    { "_int","_FXSelector",0},
    { "_int","_FXint",0},
    { "_int","_FXuint",0},
    { "_int","_unsigned_int",0},
    { "_int","_signed_int",0},
    { "_FXDragType","_FXInputHandle",0},
    { "_FXDragType","_FXID",0},
    { "_FXDragType","_FXSelector",0},
    { "_FXDragType","_FXint",0},
    { "_FXDragType","_FXuint",0},
    { "_FXDragType","_int",0},
    { "_FXDragType","_unsigned_int",0},
    { "_FXDragType","_FXColor",0},
    { "_FXDragType","_FXHotKey",0},
    { "_FXCursor","_class_FXPyCURCursor",SwigFXPyCURCursorToFXCursor},
    { "_FXCursor","_FXPyCURCursor",SwigFXPyCURCursorToFXCursor},
    { "_FXCursor","_class_FXCURCursor",SwigFXCURCursorToFXCursor},
    { "_FXCursor","_FXCURCursor",SwigFXCURCursorToFXCursor},
    { "_FXCursor","_class_FXPyGIFCursor",SwigFXPyGIFCursorToFXCursor},
    { "_FXCursor","_FXPyGIFCursor",SwigFXPyGIFCursorToFXCursor},
    { "_FXCursor","_class_FXGIFCursor",SwigFXGIFCursorToFXCursor},
    { "_FXCursor","_FXGIFCursor",SwigFXGIFCursorToFXCursor},
    { "_FXCursor","_class_FXPyCursor",SwigFXPyCursorToFXCursor},
    { "_FXCursor","_FXPyCursor",SwigFXPyCursorToFXCursor},
    { "_FXCursor","_class_FXCursor",0},
    { "_FXSettings","_class_FXSettings",0},
    { "_FXRegistry","_class_FXRegistry",0},
    { "_FXPyBMPIcon","_class_FXPyBMPIcon",0},
    { "_FXPyICOIcon","_class_FXPyICOIcon",0},
    { "_class_FXSwitcher","_FXSwitcher",0},
    { "_FXPyShutterItem","_class_FXPyShutterItem",0},
    { "_FXPyBitmap","_class_FXPyBitmap",0},
    { "_FXPSBounds","_struct_FXPSBounds",0},
    { "_FXPyJPGImage","_class_FXPyJPGImage",0},
    { "_class_FXPyPCXIcon","_FXPyPCXIcon",0},
    { "_class_FXPyCursor","_FXPyCursor",0},
    { "_FXTGAIcon","_class_FXTGAIcon",0},
    { "_FXDelegator","_class_FXDelegator",0},
    { "_FXGroupBox","_class_FXGroupBox",0},
    { "_class_FXPNGImage","_FXPNGImage",0},
    { "_class_FXPyPNGIcon","_FXPyPNGIcon",0},
    { "_class_FXPyRootWindow","_FXPyRootWindow",0},
    { "_class_FXPyTGAImage","_FXPyTGAImage",0},
    { "_class_FXDict","_FXDict",0},
    { "_class_FXVerticalSeparator","_FXVerticalSeparator",0},
    { "_class_FXShell","_FXShell",0},
    { "_FXPyShutter","_class_FXPyShutter",0},
    { "_FXInputHandle","_FXint",0},
    { "_FXInputHandle","_FXuint",0},
    { "_FXInputHandle","_unsigned_int",0},
    { "_FXInputHandle","_signed_int",0},
    { "_FXInputHandle","_int",0},
    { "_FXInputHandle","_FXSelector",0},
    { "_FXInputHandle","_FXID",0},
    { "_FXInputHandle","_FXColor",0},
    { "_FXInputHandle","_FXHotKey",0},
    { "_FXInputHandle","_FXDragType",0},
    { "_class_FXPyFileStream","_FXPyFileStream",0},
    { "_class_FXPyDCWindow","_FXPyDCWindow",0},
    { "_FXFont","_class_FXFont",0},
    { "_FXPyRGBImage","_class_FXPyRGBImage",0},
    { "_class_FXPyDataTarget","_FXPyDataTarget",0},
    { "_class_FXObject","_class_FXPyImageView",SwigFXPyImageViewToFXObject},
    { "_class_FXObject","_FXPyImageView",SwigFXPyImageViewToFXObject},
    { "_class_FXObject","_class_FXImageView",SwigFXImageViewToFXObject},
    { "_class_FXObject","_FXImageView",SwigFXImageViewToFXObject},
    { "_class_FXObject","_class_FXPyCURCursor",SwigFXPyCURCursorToFXObject},
    { "_class_FXObject","_FXPyCURCursor",SwigFXPyCURCursorToFXObject},
    { "_class_FXObject","_class_FXCURCursor",SwigFXCURCursorToFXObject},
    { "_class_FXObject","_FXCURCursor",SwigFXCURCursorToFXObject},
    { "_class_FXObject","_class_FXPyGIFCursor",SwigFXPyGIFCursorToFXObject},
    { "_class_FXObject","_FXPyGIFCursor",SwigFXPyGIFCursorToFXObject},
    { "_class_FXObject","_class_FXGIFCursor",SwigFXGIFCursorToFXObject},
    { "_class_FXObject","_FXGIFCursor",SwigFXGIFCursorToFXObject},
    { "_class_FXObject","_class_FXPyCursor",SwigFXPyCursorToFXObject},
    { "_class_FXObject","_FXPyCursor",SwigFXPyCursorToFXObject},
    { "_class_FXObject","_class_FXCursor",SwigFXCursorToFXObject},
    { "_class_FXObject","_FXCursor",SwigFXCursorToFXObject},
    { "_class_FXObject","_class_FXPyBitmap",SwigFXPyBitmapToFXObject},
    { "_class_FXObject","_FXPyBitmap",SwigFXPyBitmapToFXObject},
    { "_class_FXObject","_class_FXBitmap",SwigFXBitmapToFXObject},
    { "_class_FXObject","_FXBitmap",SwigFXBitmapToFXObject},
    { "_class_FXObject","_FXObject",0},
    { "_FXXPMIcon","_class_FXXPMIcon",0},
    { "_FXPyPopup","_class_FXPyPopup",0},
    { "_FXPyVerticalFrame","_class_FXPyVerticalFrame",0},
    { "_FXId","_class_FXPyImageView",SwigFXPyImageViewToFXId},
    { "_FXId","_FXPyImageView",SwigFXPyImageViewToFXId},
    { "_FXId","_class_FXImageView",SwigFXImageViewToFXId},
    { "_FXId","_FXImageView",SwigFXImageViewToFXId},
    { "_FXId","_class_FXPyCURCursor",SwigFXPyCURCursorToFXId},
    { "_FXId","_FXPyCURCursor",SwigFXPyCURCursorToFXId},
    { "_FXId","_class_FXCURCursor",SwigFXCURCursorToFXId},
    { "_FXId","_FXCURCursor",SwigFXCURCursorToFXId},
    { "_FXId","_class_FXPyGIFCursor",SwigFXPyGIFCursorToFXId},
    { "_FXId","_FXPyGIFCursor",SwigFXPyGIFCursorToFXId},
    { "_FXId","_class_FXGIFCursor",SwigFXGIFCursorToFXId},
    { "_FXId","_FXGIFCursor",SwigFXGIFCursorToFXId},
    { "_FXId","_class_FXPyCursor",SwigFXPyCursorToFXId},
    { "_FXId","_FXPyCursor",SwigFXPyCursorToFXId},
    { "_FXId","_class_FXCursor",SwigFXCursorToFXId},
    { "_FXId","_FXCursor",SwigFXCursorToFXId},
    { "_FXId","_class_FXPyBitmap",SwigFXPyBitmapToFXId},
    { "_FXId","_FXPyBitmap",SwigFXPyBitmapToFXId},
    { "_FXId","_class_FXBitmap",SwigFXBitmapToFXId},
    { "_FXId","_FXBitmap",SwigFXBitmapToFXId},
    { "_FXId","_class_FXId",0},
    { "_class_FXDrawable","_class_FXPyImageView",SwigFXPyImageViewToFXDrawable},
    { "_class_FXDrawable","_FXPyImageView",SwigFXPyImageViewToFXDrawable},
    { "_class_FXDrawable","_class_FXImageView",SwigFXImageViewToFXDrawable},
    { "_class_FXDrawable","_FXImageView",SwigFXImageViewToFXDrawable},
    { "_class_FXDrawable","_class_FXPyBitmap",SwigFXPyBitmapToFXDrawable},
    { "_class_FXDrawable","_FXPyBitmap",SwigFXPyBitmapToFXDrawable},
    { "_class_FXDrawable","_class_FXBitmap",SwigFXBitmapToFXDrawable},
    { "_class_FXDrawable","_FXBitmap",SwigFXBitmapToFXDrawable},
    { "_class_FXDrawable","_FXDrawable",0},
    { "_FXPyBMPImage","_class_FXPyBMPImage",0},
    { "_FXPyICOImage","_class_FXPyICOImage",0},
    { "_FXPyMainWindow","_class_FXPyMainWindow",0},
    { "_FXHorizontalFrame","_class_FXHorizontalFrame",0},
    { "_FXPyPCXImage","_class_FXPyPCXImage",0},
    { "_FXPyRGBIcon","_class_FXPyRGBIcon",0},
    { "_class_FXPyJPGIcon","_FXPyJPGIcon",0},
    { "_FXTIFIcon","_class_FXTIFIcon",0},
    { "_FXScrollWindow","_class_FXScrollWindow",0},
    { "_FXMainWindow","_class_FXMainWindow",0},
    { "_class_FXMatrix","_FXMatrix",0},
    { "__XEvent","_FXRawEvent",0},
    { "_class_FXPyShutterItem","_FXPyShutterItem",0},
    { "_struct_FXEvent","_FXEvent",0},
    { "_class_FXStream","_FXStream",0},
    { "_class_FXPyStringDict","_FXPyStringDict",0},
    { "_class_FXPyCURCursor","_FXPyCURCursor",0},
    { "_class_FXPyJPGImage","_FXPyJPGImage",0},
    { "_FXTIFImage","_class_FXTIFImage",0},
    { "_FXPyIcon","_class_FXPyIcon",0},
    { "_FXPyAccelTable","_class_FXPyAccelTable",0},
    { "_class_FXTGAIcon","_FXTGAIcon",0},
    { "_struct_FXPSBounds","_FXPSBounds",0},
    { "_FXDCPrint","_class_FXDCPrint",0},
    { "_class_FXImage","_FXImage",0},
    { "_class_FXPyImageView","_FXPyImageView",0},
    { "_FXPoint","_class_FXPoint",0},
    { "_FXAccelTable","_class_FXAccelTable",0},
    { "_FXPyId","_class_FXPyId",0},
    { "_FXSelector","_FXInputHandle",0},
    { "_FXSelector","_FXDragType",0},
    { "_FXSelector","_FXHotKey",0},
    { "_FXSelector","_FXColor",0},
    { "_FXSelector","_FXID",0},
    { "_FXSelector","_FXuint",0},
    { "_FXSelector","_int",0},
    { "_FXSelector","_unsigned_int",0},
    { "_FXSelector","_FXint",0},
    { "_class_FXFont","_FXFont",0},
    { "_class_FXXPMImage","_FXXPMImage",0},
    { "_FXPyRecentFiles","_class_FXPyRecentFiles",0},
    { "_FXPyDebugTarget","_class_FXPyDebugTarget",0},
    { "_FXCommand","_class_FXCommand",0},
    { "_FXPyFrame","_class_FXPyFrame",0},
    { "_class_FXCURCursor","_class_FXPyCURCursor",SwigFXPyCURCursorToFXCURCursor},
    { "_class_FXCURCursor","_FXPyCURCursor",SwigFXPyCURCursorToFXCURCursor},
    { "_class_FXCURCursor","_FXCURCursor",0},
    { "_class_FXGIFImage","_FXGIFImage",0},
    { "_class_FXPyRGBImage","_FXPyRGBImage",0},
    { "_class_FXSplitter","_FXSplitter",0},
    { "_class_FXXPMIcon","_FXXPMIcon",0},
    { "_class_FXPyPopup","_FXPyPopup",0},
{0,0,0}};

static PyObject *SWIG_globals;
#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT(void) initgraphicsc() {
	 PyObject *m, *d;
	 SWIG_globals = SWIG_newvarlink();
	 m = Py_InitModule("graphicsc", graphicscMethods);
	 d = PyModule_GetDict(m);
	 PyDict_SetItemString(d,"BITMAP_KEEP", PyInt_FromLong((long) BITMAP_KEEP));
	 PyDict_SetItemString(d,"BITMAP_OWNED", PyInt_FromLong((long) BITMAP_OWNED));
	 PyDict_SetItemString(d,"BITMAP_SHMI", PyInt_FromLong((long) BITMAP_SHMI));
	 PyDict_SetItemString(d,"BITMAP_SHMP", PyInt_FromLong((long) BITMAP_SHMP));
	 PyDict_SetItemString(d,"CURSOR_ARROW", PyInt_FromLong((long) CURSOR_ARROW));
	 PyDict_SetItemString(d,"CURSOR_RARROW", PyInt_FromLong((long) CURSOR_RARROW));
	 PyDict_SetItemString(d,"CURSOR_IBEAM", PyInt_FromLong((long) CURSOR_IBEAM));
	 PyDict_SetItemString(d,"CURSOR_WATCH", PyInt_FromLong((long) CURSOR_WATCH));
	 PyDict_SetItemString(d,"CURSOR_CROSS", PyInt_FromLong((long) CURSOR_CROSS));
	 PyDict_SetItemString(d,"CURSOR_UPDOWN", PyInt_FromLong((long) CURSOR_UPDOWN));
	 PyDict_SetItemString(d,"CURSOR_LEFTRIGHT", PyInt_FromLong((long) CURSOR_LEFTRIGHT));
	 PyDict_SetItemString(d,"CURSOR_MOVE", PyInt_FromLong((long) CURSOR_MOVE));
	 PyDict_SetItemString(d,"FX_ImageView_ID_XYZ", PyInt_FromLong((long) FXImageView::ID_XYZ));
	 PyDict_SetItemString(d,"FX_ImageView_ID_LAST", PyInt_FromLong((long) FXImageView::ID_LAST));
{
   int i;
   for (i = 0; _swig_mapping[i].n1; i++)
        SWIG_RegisterMapping(_swig_mapping[i].n1,_swig_mapping[i].n2,_swig_mapping[i].pcnv);
}
}
