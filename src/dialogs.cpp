/*
 * FILE : ../src/dialogs.cpp
 * 
 * This file was automatically generated by :
 * Simplified Wrapper and Interface Generator (SWIG)
 * Version 1.1 (Build 883)
 * 
 * Portions Copyright (c) 1995-1998
 * The University of Utah and The Regents of the University of California.
 * Permission is granted to distribute this file in any manner provided
 * this notice remains intact.
 * 
 * Do not make changes to this file--changes will be lost!
 *
 */


#define SWIGCODE
/* Implementation : PYTHON */

#define SWIGPYTHON
#include <string.h>
#include <stdlib.h>
/* Definitions for Windows/Unix exporting */
#if defined(__WIN32__)
#   if defined(_MSC_VER)
#	define SWIGEXPORT(a) __declspec(dllexport) a
#   else
#	if defined(__BORLANDC__)
#	    define SWIGEXPORT(a) a _export 
#	else
#	    define SWIGEXPORT(a) a 
#	endif
#   endif
#else
#   define SWIGEXPORT(a) a 
#endif

#include "Python.h"

#ifdef __cplusplus
extern "C" {
#endif
extern void SWIG_MakePtr(char *, void *, char *);
extern void SWIG_RegisterMapping(char *, char *, void *(*)(void *));
extern char *SWIG_GetPtr(char *, void **, char *);
extern char *SWIG_GetPtrObj(PyObject *, void **, char *);
extern void SWIG_addvarlink(PyObject *, char *, PyObject *(*)(void), int (*)(PyObject *));
extern PyObject *SWIG_newvarlink(void);
#ifdef __cplusplus
}
#endif
#define SWIG_init    initdialogsc

#define SWIG_name    "dialogsc"

#include "fx.h"
#include "fx3d.h"
#include "FXCURCursor.h"
#include "FXJPGImage.h"
#include "FXJPGIcon.h"
#include "FXPNGIcon.h"
#include "FXPNGImage.h"
#include "FXTIFIcon.h"
#include "FXTIFImage.h"
#include "FXRGBIcon.h"
#include "FXRGBImage.h"
#include "FXICOIcon.h"
#include "FXICOImage.h"
#include "FXPyApp.h"
#include "FXPy.h"

static PyObject* l_output_helper(PyObject* target, PyObject* o) {
    PyObject*   o2;
    if (!target) {                   
        target = o;
    } else if (target == Py_None) {  
        Py_DECREF(Py_None);
        target = o;
    } else {                         
        if (!PyList_Check(target)) {
            o2 = target;
            target = PyList_New(0);
            PyList_Append(target, o2);
	    Py_XDECREF(o2);
        }
        PyList_Append(target,o);
	Py_XDECREF(o);
    }
    return target;
}

static PyObject* t_output_helper(PyObject* target, PyObject* o) {
    PyObject*   o2;
    PyObject*   o3;

    if (!target) {                   
        target = o;
    } else if (target == Py_None) {  
        Py_DECREF(Py_None);
        target = o;
    } else {                         
        if (!PyTuple_Check(target)) {
            o2 = target;
            target = PyTuple_New(1);
            PyTuple_SetItem(target, 0, o2);
        }
        o3 = PyTuple_New(1);            
        PyTuple_SetItem(o3, 0, o);      

        o2 = target;
        target = PySequence_Concat(o2, o3); 
        Py_DECREF(o2);                      
        Py_DECREF(o3);
    }
    return target;
}

  FXPyDialogBox* CreateOwnedDialogBox(FXWindow* owner,const FXString& name,FXuint opts=DECOR_TITLE|DECOR_BORDER,FXint x=0,FXint y=0,FXint w=0,FXint h=0,FXint pl=10,FXint pr=10,FXint pt=10,FXint pb=10,FXint hs=4,FXint vs=4) {
    return new FXPyDialogBox(owner,name,opts,x,y,w,h,pl,pr,pt,pb,hs,vs);
  }

  FXPyDialogBox* CreateFreeDialogBox(FXApp* app,const FXString& name,FXuint opts=DECOR_TITLE|DECOR_BORDER,FXint x=0,FXint y=0,FXint w=0,FXint h=0,FXint pl=10,FXint pr=10,FXint pt=10,FXint pb=10,FXint hs=4,FXint vs=4) {
    return new FXPyDialogBox(app,name,opts,x,y,w,h,pl,pr,pt,pb,hs,vs);
  }

  // Show a modal error message
  FXuint showModalErrorBox(FXWindow* owner,FXuint opts,const char* caption,const char* message){
    return FXMessageBox::error(owner,opts,caption,message);
    }

  // Show a modal warning message
  FXuint showModalWarningBox(FXWindow* owner,FXuint opts,const char* caption,const char* message){
    return FXMessageBox::warning(owner,opts,caption,message);
    }

  // Show a modal question dialog
  FXuint showModalQuestionBox(FXWindow* owner,FXuint opts,const char* caption,const char* message){
    return FXMessageBox::question(owner,opts,caption,message);
    }

  // Show a modal information dialog
  FXuint showModalInformationBox(FXWindow* owner,FXuint opts,const char* caption,const char* message){
    return FXMessageBox::information(owner,opts,caption,message);
    }
#ifdef __cplusplus
extern "C" {
#endif
static PyObject *_wrap_CreateOwnedDialogBox(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDialogBox * _result;
    FXWindow * _arg0;
    FXString * _arg1;
    FXuint  _arg2 = (FXuint ) DECOR_TITLE|DECOR_BORDER;
    FXint  _arg3 = (FXint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 10;
    FXint  _arg8 = (FXint ) 10;
    FXint  _arg9 = (FXint ) 10;
    FXint  _arg10 = (FXint ) 10;
    FXint  _arg11 = (FXint ) 4;
    FXint  _arg12 = (FXint ) 4;
    PyObject * _obj0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "owner","name","opts","x","y","w","h","pl","pr","pt","pb","hs","vs", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|iiiiiiiiiii:CreateOwnedDialogBox",_kwnames,&_obj0,&_obj1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7,&_arg8,&_arg9,&_arg10,&_arg11,&_arg12)) 
        return NULL;
{
    if (_obj0 == Py_None)
	_arg0 = NULL;
    else
	SWIG_GetPtrObj(_obj0, (void**) &_arg0, "_FXWindow_p");
}
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyDialogBox *)CreateOwnedDialogBox(_arg0,*_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7,_arg8,_arg9,_arg10,_arg11,_arg12);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyDialogBox_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    delete _arg1;
}
    return _resultobj;
}

static PyObject *_wrap_CreateFreeDialogBox(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDialogBox * _result;
    FXApp * _arg0;
    FXString * _arg1;
    FXuint  _arg2 = (FXuint ) DECOR_TITLE|DECOR_BORDER;
    FXint  _arg3 = (FXint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 10;
    FXint  _arg8 = (FXint ) 10;
    FXint  _arg9 = (FXint ) 10;
    FXint  _arg10 = (FXint ) 10;
    FXint  _arg11 = (FXint ) 4;
    FXint  _arg12 = (FXint ) 4;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "app","name","opts","x","y","w","h","pl","pr","pt","pb","hs","vs", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|iiiiiiiiiii:CreateFreeDialogBox",_kwnames,&_argo0,&_obj1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7,&_arg8,&_arg9,&_arg10,&_arg11,&_arg12)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXApp_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of CreateFreeDialogBox. Expected _FXApp_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyDialogBox *)CreateFreeDialogBox(_arg0,*_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7,_arg8,_arg9,_arg10,_arg11,_arg12);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyDialogBox_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    delete _arg1;
}
    return _resultobj;
}

static PyObject *_wrap_showModalErrorBox(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXWindow * _arg0;
    FXuint  _arg1;
    char * _arg2;
    char * _arg3;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "owner","opts","caption","message", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiss:showModalErrorBox",_kwnames,&_obj0,&_arg1,&_arg2,&_arg3)) 
        return NULL;
{
    if (_obj0 == Py_None)
	_arg0 = NULL;
    else
	SWIG_GetPtrObj(_obj0, (void**) &_arg0, "_FXWindow_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )showModalErrorBox(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static PyObject *_wrap_showModalWarningBox(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXWindow * _arg0;
    FXuint  _arg1;
    char * _arg2;
    char * _arg3;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "owner","opts","caption","message", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiss:showModalWarningBox",_kwnames,&_obj0,&_arg1,&_arg2,&_arg3)) 
        return NULL;
{
    if (_obj0 == Py_None)
	_arg0 = NULL;
    else
	SWIG_GetPtrObj(_obj0, (void**) &_arg0, "_FXWindow_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )showModalWarningBox(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static PyObject *_wrap_showModalQuestionBox(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXWindow * _arg0;
    FXuint  _arg1;
    char * _arg2;
    char * _arg3;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "owner","opts","caption","message", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiss:showModalQuestionBox",_kwnames,&_obj0,&_arg1,&_arg2,&_arg3)) 
        return NULL;
{
    if (_obj0 == Py_None)
	_arg0 = NULL;
    else
	SWIG_GetPtrObj(_obj0, (void**) &_arg0, "_FXWindow_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )showModalQuestionBox(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static PyObject *_wrap_showModalInformationBox(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXWindow * _arg0;
    FXuint  _arg1;
    char * _arg2;
    char * _arg3;
    PyObject * _obj0 = 0;
    char *_kwnames[] = { "owner","opts","caption","message", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiss:showModalInformationBox",_kwnames,&_obj0,&_arg1,&_arg2,&_arg3)) 
        return NULL;
{
    if (_obj0 == Py_None)
	_arg0 = NULL;
    else
	SWIG_GetPtrObj(_obj0, (void**) &_arg0, "_FXWindow_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )showModalInformationBox(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static void *SwigFXDialogBoxToFXTopWindow(void *ptr) {
    FXDialogBox *src;
    FXTopWindow *dest;
    src = (FXDialogBox *) ptr;
    dest = (FXTopWindow *) src;
    return (void *) dest;
}

static void *SwigFXDialogBoxToFXShell(void *ptr) {
    FXDialogBox *src;
    FXShell *dest;
    src = (FXDialogBox *) ptr;
    dest = (FXShell *) src;
    return (void *) dest;
}

static void *SwigFXDialogBoxToFXComposite(void *ptr) {
    FXDialogBox *src;
    FXComposite *dest;
    src = (FXDialogBox *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXDialogBoxToFXWindow(void *ptr) {
    FXDialogBox *src;
    FXWindow *dest;
    src = (FXDialogBox *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXDialogBoxToFXDrawable(void *ptr) {
    FXDialogBox *src;
    FXDrawable *dest;
    src = (FXDialogBox *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXDialogBoxToFXId(void *ptr) {
    FXDialogBox *src;
    FXId *dest;
    src = (FXDialogBox *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXDialogBoxToFXObject(void *ptr) {
    FXDialogBox *src;
    FXObject *dest;
    src = (FXDialogBox *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define FX_DialogBox_onKeyPress(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onKeyPress(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_DialogBox_onKeyPress(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXDialogBox * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_DialogBox_onKeyPress",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDialogBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DialogBox_onKeyPress. Expected _FXDialogBox_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_DialogBox_onKeyPress. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_DialogBox_onKeyPress(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_DialogBox_onKeyRelease(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onKeyRelease(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_DialogBox_onKeyRelease(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXDialogBox * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_DialogBox_onKeyRelease",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDialogBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DialogBox_onKeyRelease. Expected _FXDialogBox_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_DialogBox_onKeyRelease. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_DialogBox_onKeyRelease(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_DialogBox_onClose(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onClose(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_DialogBox_onClose(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXDialogBox * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_DialogBox_onClose",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDialogBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DialogBox_onClose. Expected _FXDialogBox_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_DialogBox_onClose. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_DialogBox_onClose(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_DialogBox_onCmdAccept(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdAccept(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_DialogBox_onCmdAccept(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXDialogBox * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_DialogBox_onCmdAccept",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDialogBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DialogBox_onCmdAccept. Expected _FXDialogBox_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_DialogBox_onCmdAccept. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_DialogBox_onCmdAccept(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_DialogBox_onCmdCancel(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdCancel(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_DialogBox_onCmdCancel(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXDialogBox * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_DialogBox_onCmdCancel",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDialogBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DialogBox_onCmdCancel. Expected _FXDialogBox_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_DialogBox_onCmdCancel. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_DialogBox_onCmdCancel(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_DialogBox_execute(_swigobj,_swigarg0)  (_swigobj->execute(_swigarg0))
static PyObject *_wrap_FX_DialogBox_execute(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXDialogBox * _arg0;
    FXuint  _arg1 = (FXuint ) PLACEMENT_CURSOR;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","placement", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|i:FX_DialogBox_execute",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDialogBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DialogBox_execute. Expected _FXDialogBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )FX_DialogBox_execute(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static void *SwigFXPyDialogBoxToFXDialogBox(void *ptr) {
    FXPyDialogBox *src;
    FXDialogBox *dest;
    src = (FXPyDialogBox *) ptr;
    dest = (FXDialogBox *) src;
    return (void *) dest;
}

static void *SwigFXPyDialogBoxToFXTopWindow(void *ptr) {
    FXPyDialogBox *src;
    FXTopWindow *dest;
    src = (FXPyDialogBox *) ptr;
    dest = (FXTopWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyDialogBoxToFXShell(void *ptr) {
    FXPyDialogBox *src;
    FXShell *dest;
    src = (FXPyDialogBox *) ptr;
    dest = (FXShell *) src;
    return (void *) dest;
}

static void *SwigFXPyDialogBoxToFXComposite(void *ptr) {
    FXPyDialogBox *src;
    FXComposite *dest;
    src = (FXPyDialogBox *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXPyDialogBoxToFXWindow(void *ptr) {
    FXPyDialogBox *src;
    FXWindow *dest;
    src = (FXPyDialogBox *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyDialogBoxToFXDrawable(void *ptr) {
    FXPyDialogBox *src;
    FXDrawable *dest;
    src = (FXPyDialogBox *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPyDialogBoxToFXId(void *ptr) {
    FXPyDialogBox *src;
    FXId *dest;
    src = (FXPyDialogBox *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPyDialogBoxToFXObject(void *ptr) {
    FXPyDialogBox *src;
    FXObject *dest;
    src = (FXPyDialogBox *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define FXDialogBox_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXDialogBox_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyDialogBox * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXDialogBox_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDialogBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDialogBox_onDefault. Expected _FXPyDialogBox_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXDialogBox_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXDialogBox_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXDialogBox_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDialogBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDialogBox_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDialogBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDialogBox_create. Expected _FXPyDialogBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDialogBox_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDialogBox_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXDialogBox_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDialogBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDialogBox_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDialogBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDialogBox_destroy. Expected _FXPyDialogBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDialogBox_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDialogBox_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXDialogBox_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDialogBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDialogBox_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDialogBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDialogBox_detach. Expected _FXPyDialogBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDialogBox_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDialogBox_resize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_resize(_swigarg0,_swigarg1))
static PyObject *_wrap_FXDialogBox_resize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDialogBox * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXDialogBox_resize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDialogBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDialogBox_resize. Expected _FXPyDialogBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDialogBox_resize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDialogBox_getDefaultWidth(_swigobj)  (_swigobj->_getDefaultWidth())
static PyObject *_wrap_FXDialogBox_getDefaultWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyDialogBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDialogBox_getDefaultWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDialogBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDialogBox_getDefaultWidth. Expected _FXPyDialogBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXDialogBox_getDefaultWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXDialogBox_getDefaultHeight(_swigobj)  (_swigobj->_getDefaultHeight())
static PyObject *_wrap_FXDialogBox_getDefaultHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyDialogBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDialogBox_getDefaultHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDialogBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDialogBox_getDefaultHeight. Expected _FXPyDialogBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXDialogBox_getDefaultHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXDialogBox_show(_swigobj)  (_swigobj->_show())
static PyObject *_wrap_FXDialogBox_show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDialogBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDialogBox_show",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDialogBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDialogBox_show. Expected _FXPyDialogBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDialogBox_show(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDialogBox_hide(_swigobj)  (_swigobj->_hide())
static PyObject *_wrap_FXDialogBox_hide(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDialogBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDialogBox_hide",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDialogBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDialogBox_hide. Expected _FXPyDialogBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDialogBox_hide(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDialogBox_enable(_swigobj)  (_swigobj->_enable())
static PyObject *_wrap_FXDialogBox_enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDialogBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDialogBox_enable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDialogBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDialogBox_enable. Expected _FXPyDialogBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDialogBox_enable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDialogBox_disable(_swigobj)  (_swigobj->_disable())
static PyObject *_wrap_FXDialogBox_disable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDialogBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDialogBox_disable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDialogBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDialogBox_disable. Expected _FXPyDialogBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDialogBox_disable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDialogBox_canFocus(_swigobj)  (_swigobj->_canFocus())
static PyObject *_wrap_FXDialogBox_canFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyDialogBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDialogBox_canFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDialogBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDialogBox_canFocus. Expected _FXPyDialogBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXDialogBox_canFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXDialogBox_setFocus(_swigobj)  (_swigobj->_setFocus())
static PyObject *_wrap_FXDialogBox_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDialogBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDialogBox_setFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDialogBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDialogBox_setFocus. Expected _FXPyDialogBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDialogBox_setFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDialogBox_killFocus(_swigobj)  (_swigobj->_killFocus())
static PyObject *_wrap_FXDialogBox_killFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDialogBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDialogBox_killFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDialogBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDialogBox_killFocus. Expected _FXPyDialogBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDialogBox_killFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDialogBox_setDefault(_swigobj,_swigarg0)  (_swigobj->_setDefault(_swigarg0))
static PyObject *_wrap_FXDialogBox_setDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDialogBox * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FXDialogBox_setDefault",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDialogBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDialogBox_setDefault. Expected _FXPyDialogBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDialogBox_setDefault(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDialogBox_recalc(_swigobj)  (_swigobj->_recalc())
static PyObject *_wrap_FXDialogBox_recalc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDialogBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDialogBox_recalc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDialogBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDialogBox_recalc. Expected _FXPyDialogBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDialogBox_recalc(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDialogBox_layout(_swigobj)  (_swigobj->_layout())
static PyObject *_wrap_FXDialogBox_layout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDialogBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDialogBox_layout",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDialogBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDialogBox_layout. Expected _FXPyDialogBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDialogBox_layout(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDialogBox_lower(_swigobj)  (_swigobj->_lowerWindow())
static PyObject *_wrap_FXDialogBox_lower(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDialogBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDialogBox_lower",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDialogBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDialogBox_lower. Expected _FXPyDialogBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDialogBox_lower(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDialogBox_move(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_move(_swigarg0,_swigarg1))
static PyObject *_wrap_FXDialogBox_move(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDialogBox * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXDialogBox_move",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDialogBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDialogBox_move. Expected _FXPyDialogBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDialogBox_move(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDialogBox_position(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->_position(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FXDialogBox_position(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDialogBox * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FXDialogBox_position",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDialogBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDialogBox_position. Expected _FXPyDialogBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDialogBox_position(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDialogBox_isComposite(_swigobj)  (_swigobj->_isComposite())
static PyObject *_wrap_FXDialogBox_isComposite(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyDialogBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDialogBox_isComposite",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDialogBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDialogBox_isComposite. Expected _FXPyDialogBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXDialogBox_isComposite(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXDialogBox_contains(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_contains(_swigarg0,_swigarg1))
static PyObject *_wrap_FXDialogBox_contains(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyDialogBox * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXDialogBox_contains",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDialogBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDialogBox_contains. Expected _FXPyDialogBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXDialogBox_contains(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXDialogBox_getWidthForHeight(_swigobj,_swigarg0)  (_swigobj->_getWidthForHeight(_swigarg0))
static PyObject *_wrap_FXDialogBox_getWidthForHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyDialogBox * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXDialogBox_getWidthForHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDialogBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDialogBox_getWidthForHeight. Expected _FXPyDialogBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXDialogBox_getWidthForHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXDialogBox_getHeightForWidth(_swigobj,_swigarg0)  (_swigobj->_getHeightForWidth(_swigarg0))
static PyObject *_wrap_FXDialogBox_getHeightForWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyDialogBox * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXDialogBox_getHeightForWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDialogBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDialogBox_getHeightForWidth. Expected _FXPyDialogBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXDialogBox_getHeightForWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXDialogBox_doesSaveUnder(_swigobj)  (_swigobj->_doesSaveUnder())
static PyObject *_wrap_FXDialogBox_doesSaveUnder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyDialogBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDialogBox_doesSaveUnder",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDialogBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDialogBox_doesSaveUnder. Expected _FXPyDialogBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXDialogBox_doesSaveUnder(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXDialogBox_reparent(_swigobj,_swigarg0)  (_swigobj->_reparent(_swigarg0))
static PyObject *_wrap_FXDialogBox_reparent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDialogBox * _arg0;
    FXComposite * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","newparent", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXDialogBox_reparent",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDialogBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDialogBox_reparent. Expected _FXPyDialogBox_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXDialogBox_reparent. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDialogBox_reparent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDialogBox_setBackColor(_swigobj,_swigarg0)  (_swigobj->_setBackColor(_swigarg0))
static PyObject *_wrap_FXDialogBox_setBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDialogBox * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXDialogBox_setBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDialogBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDialogBox_setBackColor. Expected _FXPyDialogBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDialogBox_setBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDialogBox_show2(_swigobj,_swigarg0)  (_swigobj->_show(_swigarg0))
static PyObject *_wrap_FXDialogBox_show2(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDialogBox * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","placement", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXDialogBox_show2",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDialogBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDialogBox_show2. Expected _FXPyDialogBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDialogBox_show2(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDialogBox_iconify(_swigobj)  (_swigobj->_iconify())
static PyObject *_wrap_FXDialogBox_iconify(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDialogBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDialogBox_iconify",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDialogBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDialogBox_iconify. Expected _FXPyDialogBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDialogBox_iconify(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDialogBox_deiconify(_swigobj)  (_swigobj->_deiconify())
static PyObject *_wrap_FXDialogBox_deiconify(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDialogBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDialogBox_deiconify",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDialogBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDialogBox_deiconify. Expected _FXPyDialogBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDialogBox_deiconify(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXDirBoxToFXTreeListBox(void *ptr) {
    FXDirBox *src;
    FXTreeListBox *dest;
    src = (FXDirBox *) ptr;
    dest = (FXTreeListBox *) src;
    return (void *) dest;
}

static void *SwigFXDirBoxToFXPacker(void *ptr) {
    FXDirBox *src;
    FXPacker *dest;
    src = (FXDirBox *) ptr;
    dest = (FXPacker *) src;
    return (void *) dest;
}

static void *SwigFXDirBoxToFXComposite(void *ptr) {
    FXDirBox *src;
    FXComposite *dest;
    src = (FXDirBox *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXDirBoxToFXWindow(void *ptr) {
    FXDirBox *src;
    FXWindow *dest;
    src = (FXDirBox *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXDirBoxToFXDrawable(void *ptr) {
    FXDirBox *src;
    FXDrawable *dest;
    src = (FXDirBox *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXDirBoxToFXId(void *ptr) {
    FXDirBox *src;
    FXId *dest;
    src = (FXDirBox *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXDirBoxToFXObject(void *ptr) {
    FXDirBox *src;
    FXObject *dest;
    src = (FXDirBox *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define FX_DirBox_onChanged(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onChanged(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_DirBox_onChanged(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXDirBox * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_DirBox_onChanged",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDirBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DirBox_onChanged. Expected _FXDirBox_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_DirBox_onChanged. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_DirBox_onChanged(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_DirBox_onCommand(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCommand(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_DirBox_onCommand(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXDirBox * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_DirBox_onCommand",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDirBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DirBox_onCommand. Expected _FXDirBox_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_DirBox_onCommand. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_DirBox_onCommand(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_DirBox_onCmdSetValue(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSetValue(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_DirBox_onCmdSetValue(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXDirBox * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_DirBox_onCmdSetValue",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDirBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DirBox_onCmdSetValue. Expected _FXDirBox_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_DirBox_onCmdSetValue. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_DirBox_onCmdSetValue(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_DirBox_onCmdSetStringValue(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSetStringValue(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_DirBox_onCmdSetStringValue(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXDirBox * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_DirBox_onCmdSetStringValue",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDirBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DirBox_onCmdSetStringValue. Expected _FXDirBox_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_DirBox_onCmdSetStringValue. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_DirBox_onCmdSetStringValue(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_DirBox_onCmdGetStringValue(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdGetStringValue(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_DirBox_onCmdGetStringValue(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXDirBox * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_DirBox_onCmdGetStringValue",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDirBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DirBox_onCmdGetStringValue. Expected _FXDirBox_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_DirBox_onCmdGetStringValue. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_DirBox_onCmdGetStringValue(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define new_FX_DirBox(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11,_swigarg12) (new FXDirBox(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11,_swigarg12))
static PyObject *_wrap_new_FX_DirBox(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDirBox * _result;
    FXComposite * _arg0;
    FXint  _arg1;
    FXObject * _arg2 = (FXObject *) NULL;
    FXSelector  _arg3 = (FXSelector ) 0;
    FXuint  _arg4 = (FXuint ) FRAME_SUNKEN|FRAME_THICK|TREELISTBOX_NORMAL;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    FXint  _arg8 = (FXint ) 0;
    FXint  _arg9 = (FXint ) DEFAULT_PAD;
    FXint  _arg10 = (FXint ) DEFAULT_PAD;
    FXint  _arg11 = (FXint ) DEFAULT_PAD;
    FXint  _arg12 = (FXint ) DEFAULT_PAD;
    PyObject * _argo0 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "p","nvis","tgt","sel","opts","x","y","w","h","pl","pr","pt","pb", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi|Oiiiiiiiiii:new_FX_DirBox",_kwnames,&_argo0,&_arg1,&_obj2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7,&_arg8,&_arg9,&_arg10,&_arg11,&_arg12)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FX_DirBox. Expected _FXComposite_p.");
        return NULL;
        }
    }
    if (_obj2)
{
    if (_obj2 == Py_None)
	_arg2 = NULL;
    else
	SWIG_GetPtrObj(_obj2, (void**) &_arg2, "_FXObject_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXDirBox *)new_FX_DirBox(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7,_arg8,_arg9,_arg10,_arg11,_arg12);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXDirBox_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_DirBox_setDirectory(_swigobj,_swigarg0)  (_swigobj->setDirectory(_swigarg0))
static PyObject *_wrap_FX_DirBox_setDirectory(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDirBox * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","pathname", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_DirBox_setDirectory",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDirBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DirBox_setDirectory. Expected _FXDirBox_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DirBox_setDirectory(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_DirBox_getDirectory(_swigobj)  (_swigobj->getDirectory())
static PyObject *_wrap_FX_DirBox_getDirectory(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXDirBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_DirBox_getDirectory",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDirBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DirBox_getDirectory. Expected _FXDirBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_DirBox_getDirectory(_arg0));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

static void *SwigFXPyDirBoxToFXDirBox(void *ptr) {
    FXPyDirBox *src;
    FXDirBox *dest;
    src = (FXPyDirBox *) ptr;
    dest = (FXDirBox *) src;
    return (void *) dest;
}

static void *SwigFXPyDirBoxToFXTreeListBox(void *ptr) {
    FXPyDirBox *src;
    FXTreeListBox *dest;
    src = (FXPyDirBox *) ptr;
    dest = (FXTreeListBox *) src;
    return (void *) dest;
}

static void *SwigFXPyDirBoxToFXPacker(void *ptr) {
    FXPyDirBox *src;
    FXPacker *dest;
    src = (FXPyDirBox *) ptr;
    dest = (FXPacker *) src;
    return (void *) dest;
}

static void *SwigFXPyDirBoxToFXComposite(void *ptr) {
    FXPyDirBox *src;
    FXComposite *dest;
    src = (FXPyDirBox *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXPyDirBoxToFXWindow(void *ptr) {
    FXPyDirBox *src;
    FXWindow *dest;
    src = (FXPyDirBox *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyDirBoxToFXDrawable(void *ptr) {
    FXPyDirBox *src;
    FXDrawable *dest;
    src = (FXPyDirBox *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPyDirBoxToFXId(void *ptr) {
    FXPyDirBox *src;
    FXId *dest;
    src = (FXPyDirBox *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPyDirBoxToFXObject(void *ptr) {
    FXPyDirBox *src;
    FXObject *dest;
    src = (FXPyDirBox *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXDirBox(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11,_swigarg12) (new FXPyDirBox(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8,_swigarg9,_swigarg10,_swigarg11,_swigarg12))
static PyObject *_wrap_new_FXDirBox(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirBox * _result;
    FXComposite * _arg0;
    FXint  _arg1;
    FXObject * _arg2 = (FXObject *) NULL;
    FXSelector  _arg3 = (FXSelector ) 0;
    FXuint  _arg4 = (FXuint ) FRAME_SUNKEN|FRAME_THICK|TREELISTBOX_NORMAL;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    FXint  _arg8 = (FXint ) 0;
    FXint  _arg9 = (FXint ) DEFAULT_PAD;
    FXint  _arg10 = (FXint ) DEFAULT_PAD;
    FXint  _arg11 = (FXint ) DEFAULT_PAD;
    FXint  _arg12 = (FXint ) DEFAULT_PAD;
    PyObject * _argo0 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "p","nvis","tgt","sel","opts","x","y","w","h","pl","pr","pt","pb", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi|Oiiiiiiiiii:new_FXDirBox",_kwnames,&_argo0,&_arg1,&_obj2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7,&_arg8,&_arg9,&_arg10,&_arg11,&_arg12)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FXDirBox. Expected _FXComposite_p.");
        return NULL;
        }
    }
    if (_obj2)
{
    if (_obj2 == Py_None)
	_arg2 = NULL;
    else
	SWIG_GetPtrObj(_obj2, (void**) &_arg2, "_FXObject_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyDirBox *)new_FXDirBox(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7,_arg8,_arg9,_arg10,_arg11,_arg12);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyDirBox_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FXDirBox_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXDirBox_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyDirBox * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXDirBox_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirBox_onDefault. Expected _FXPyDirBox_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXDirBox_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXDirBox_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXDirBox_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirBox_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirBox_create. Expected _FXPyDirBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirBox_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirBox_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXDirBox_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirBox_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirBox_destroy. Expected _FXPyDirBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirBox_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirBox_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXDirBox_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirBox_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirBox_detach. Expected _FXPyDirBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirBox_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirBox_resize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_resize(_swigarg0,_swigarg1))
static PyObject *_wrap_FXDirBox_resize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirBox * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXDirBox_resize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirBox_resize. Expected _FXPyDirBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirBox_resize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirBox_getDefaultWidth(_swigobj)  (_swigobj->_getDefaultWidth())
static PyObject *_wrap_FXDirBox_getDefaultWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyDirBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirBox_getDefaultWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirBox_getDefaultWidth. Expected _FXPyDirBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXDirBox_getDefaultWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXDirBox_getDefaultHeight(_swigobj)  (_swigobj->_getDefaultHeight())
static PyObject *_wrap_FXDirBox_getDefaultHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyDirBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirBox_getDefaultHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirBox_getDefaultHeight. Expected _FXPyDirBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXDirBox_getDefaultHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXDirBox_show(_swigobj)  (_swigobj->_show())
static PyObject *_wrap_FXDirBox_show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirBox_show",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirBox_show. Expected _FXPyDirBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirBox_show(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirBox_hide(_swigobj)  (_swigobj->_hide())
static PyObject *_wrap_FXDirBox_hide(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirBox_hide",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirBox_hide. Expected _FXPyDirBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirBox_hide(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirBox_enable(_swigobj)  (_swigobj->_enable())
static PyObject *_wrap_FXDirBox_enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirBox_enable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirBox_enable. Expected _FXPyDirBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirBox_enable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirBox_disable(_swigobj)  (_swigobj->_disable())
static PyObject *_wrap_FXDirBox_disable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirBox_disable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirBox_disable. Expected _FXPyDirBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirBox_disable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirBox_canFocus(_swigobj)  (_swigobj->_canFocus())
static PyObject *_wrap_FXDirBox_canFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyDirBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirBox_canFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirBox_canFocus. Expected _FXPyDirBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXDirBox_canFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXDirBox_setFocus(_swigobj)  (_swigobj->_setFocus())
static PyObject *_wrap_FXDirBox_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirBox_setFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirBox_setFocus. Expected _FXPyDirBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirBox_setFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirBox_killFocus(_swigobj)  (_swigobj->_killFocus())
static PyObject *_wrap_FXDirBox_killFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirBox_killFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirBox_killFocus. Expected _FXPyDirBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirBox_killFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirBox_setDefault(_swigobj,_swigarg0)  (_swigobj->_setDefault(_swigarg0))
static PyObject *_wrap_FXDirBox_setDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirBox * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FXDirBox_setDefault",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirBox_setDefault. Expected _FXPyDirBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirBox_setDefault(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirBox_recalc(_swigobj)  (_swigobj->_recalc())
static PyObject *_wrap_FXDirBox_recalc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirBox_recalc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirBox_recalc. Expected _FXPyDirBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirBox_recalc(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirBox_layout(_swigobj)  (_swigobj->_layout())
static PyObject *_wrap_FXDirBox_layout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirBox_layout",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirBox_layout. Expected _FXPyDirBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirBox_layout(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirBox_lower(_swigobj)  (_swigobj->_lowerWindow())
static PyObject *_wrap_FXDirBox_lower(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirBox_lower",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirBox_lower. Expected _FXPyDirBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirBox_lower(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirBox_move(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_move(_swigarg0,_swigarg1))
static PyObject *_wrap_FXDirBox_move(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirBox * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXDirBox_move",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirBox_move. Expected _FXPyDirBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirBox_move(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirBox_position(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->_position(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FXDirBox_position(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirBox * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FXDirBox_position",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirBox_position. Expected _FXPyDirBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirBox_position(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirBox_isComposite(_swigobj)  (_swigobj->_isComposite())
static PyObject *_wrap_FXDirBox_isComposite(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyDirBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirBox_isComposite",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirBox_isComposite. Expected _FXPyDirBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXDirBox_isComposite(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXDirBox_contains(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_contains(_swigarg0,_swigarg1))
static PyObject *_wrap_FXDirBox_contains(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyDirBox * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXDirBox_contains",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirBox_contains. Expected _FXPyDirBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXDirBox_contains(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXDirBox_getWidthForHeight(_swigobj,_swigarg0)  (_swigobj->_getWidthForHeight(_swigarg0))
static PyObject *_wrap_FXDirBox_getWidthForHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyDirBox * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXDirBox_getWidthForHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirBox_getWidthForHeight. Expected _FXPyDirBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXDirBox_getWidthForHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXDirBox_getHeightForWidth(_swigobj,_swigarg0)  (_swigobj->_getHeightForWidth(_swigarg0))
static PyObject *_wrap_FXDirBox_getHeightForWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyDirBox * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXDirBox_getHeightForWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirBox_getHeightForWidth. Expected _FXPyDirBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXDirBox_getHeightForWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXDirBox_doesSaveUnder(_swigobj)  (_swigobj->_doesSaveUnder())
static PyObject *_wrap_FXDirBox_doesSaveUnder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyDirBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirBox_doesSaveUnder",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirBox_doesSaveUnder. Expected _FXPyDirBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXDirBox_doesSaveUnder(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXDirBox_reparent(_swigobj,_swigarg0)  (_swigobj->_reparent(_swigarg0))
static PyObject *_wrap_FXDirBox_reparent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirBox * _arg0;
    FXComposite * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","newparent", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXDirBox_reparent",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirBox_reparent. Expected _FXPyDirBox_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXDirBox_reparent. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirBox_reparent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirBox_setBackColor(_swigobj,_swigarg0)  (_swigobj->_setBackColor(_swigarg0))
static PyObject *_wrap_FXDirBox_setBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirBox * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXDirBox_setBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirBox_setBackColor. Expected _FXPyDirBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirBox_setBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXFileItemToFXIconItem(void *ptr) {
    FXFileItem *src;
    FXIconItem *dest;
    src = (FXFileItem *) ptr;
    dest = (FXIconItem *) src;
    return (void *) dest;
}

static void *SwigFXFileItemToFXObject(void *ptr) {
    FXFileItem *src;
    FXObject *dest;
    src = (FXFileItem *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FX_FileItem(_swigarg0,_swigarg1,_swigarg2,_swigarg3) (new FXFileItem(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_new_FX_FileItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileItem * _result;
    FXString * _arg0;
    FXIcon * _arg1 = (FXIcon *) NULL;
    FXIcon * _arg2 = (FXIcon *) NULL;
    void * _arg3 = (void *) NULL;
    PyObject * _obj0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "text","bi","mi","ptr", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|OOO:new_FX_FileItem",_kwnames,&_obj0,&_obj1,&_obj2,&_obj3)) 
        return NULL;
{
    if (_obj0 == Py_None)
	_arg0 = new FXString;
    else if (!PyString_Check(_obj0)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg0 = new FXString(PyString_AsString(_obj0));
}
    if (_obj1)
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXIcon_p");
}
    if (_obj2)
{
    if (_obj2 == Py_None)
	_arg2 = NULL;
    else
	SWIG_GetPtrObj(_obj2, (void**) &_arg2, "_FXIcon_p");
}
    if (_obj3)
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXFileItem *)new_FX_FileItem(*_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXFileItem_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    delete _arg0;
}
    return _resultobj;
}

#define FX_FileItem_isFile(_swigobj)  (_swigobj->isFile())
static PyObject *_wrap_FX_FileItem_isFile(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXFileItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileItem_isFile",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileItem_isFile. Expected _FXFileItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_FileItem_isFile(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_FileItem_isDirectory(_swigobj)  (_swigobj->isDirectory())
static PyObject *_wrap_FX_FileItem_isDirectory(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXFileItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileItem_isDirectory",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileItem_isDirectory. Expected _FXFileItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_FileItem_isDirectory(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_FileItem_isExecutable(_swigobj)  (_swigobj->isExecutable())
static PyObject *_wrap_FX_FileItem_isExecutable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXFileItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileItem_isExecutable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileItem_isExecutable. Expected _FXFileItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_FileItem_isExecutable(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_FileItem_isSymlink(_swigobj)  (_swigobj->isSymlink())
static PyObject *_wrap_FX_FileItem_isSymlink(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXFileItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileItem_isSymlink",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileItem_isSymlink. Expected _FXFileItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_FileItem_isSymlink(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_FileItem_isChardev(_swigobj)  (_swigobj->isChardev())
static PyObject *_wrap_FX_FileItem_isChardev(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXFileItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileItem_isChardev",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileItem_isChardev. Expected _FXFileItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_FileItem_isChardev(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_FileItem_isBlockdev(_swigobj)  (_swigobj->isBlockdev())
static PyObject *_wrap_FX_FileItem_isBlockdev(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXFileItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileItem_isBlockdev",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileItem_isBlockdev. Expected _FXFileItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_FileItem_isBlockdev(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_FileItem_isFifo(_swigobj)  (_swigobj->isFifo())
static PyObject *_wrap_FX_FileItem_isFifo(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXFileItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileItem_isFifo",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileItem_isFifo. Expected _FXFileItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_FileItem_isFifo(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_FileItem_isSocket(_swigobj)  (_swigobj->isSocket())
static PyObject *_wrap_FX_FileItem_isSocket(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXFileItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileItem_isSocket",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileItem_isSocket. Expected _FXFileItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_FileItem_isSocket(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_FileItem_getAssoc(_swigobj)  (_swigobj->getAssoc())
static PyObject *_wrap_FX_FileItem_getAssoc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileAssoc * _result;
    FXFileItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileItem_getAssoc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileItem_getAssoc. Expected _FXFileItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXFileAssoc *)FX_FileItem_getAssoc(_arg0);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXFileAssoc_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_FileItem_getSize(_swigobj)  (_swigobj->getSize())
static PyObject *_wrap_FX_FileItem_getSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    unsigned long  _result;
    FXFileItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileItem_getSize",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileItem_getSize. Expected _FXFileItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (unsigned long )FX_FileItem_getSize(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileItem_getDate(_swigobj)  (_swigobj->getDate())
static PyObject *_wrap_FX_FileItem_getDate(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXTime  _result;
    FXFileItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileItem_getDate",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileItem_getDate. Expected _FXFileItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXTime )FX_FileItem_getDate(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

static void *SwigFXPyFileItemToFXFileItem(void *ptr) {
    FXPyFileItem *src;
    FXFileItem *dest;
    src = (FXPyFileItem *) ptr;
    dest = (FXFileItem *) src;
    return (void *) dest;
}

static void *SwigFXPyFileItemToFXIconItem(void *ptr) {
    FXPyFileItem *src;
    FXIconItem *dest;
    src = (FXPyFileItem *) ptr;
    dest = (FXIconItem *) src;
    return (void *) dest;
}

static void *SwigFXPyFileItemToFXObject(void *ptr) {
    FXPyFileItem *src;
    FXObject *dest;
    src = (FXPyFileItem *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXFileItem(_swigarg0,_swigarg1,_swigarg2,_swigarg3) (new FXPyFileItem(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_new_FXFileItem(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileItem * _result;
    FXString * _arg0;
    FXIcon * _arg1 = (FXIcon *) NULL;
    FXIcon * _arg2 = (FXIcon *) NULL;
    void * _arg3 = (void *) NULL;
    PyObject * _obj0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "text","bi","mi","ptr", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|OOO:new_FXFileItem",_kwnames,&_obj0,&_obj1,&_obj2,&_obj3)) 
        return NULL;
{
    if (_obj0 == Py_None)
	_arg0 = new FXString;
    else if (!PyString_Check(_obj0)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg0 = new FXString(PyString_AsString(_obj0));
}
    if (_obj1)
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXIcon_p");
}
    if (_obj2)
{
    if (_obj2 == Py_None)
	_arg2 = NULL;
    else
	SWIG_GetPtrObj(_obj2, (void**) &_arg2, "_FXIcon_p");
}
    if (_obj3)
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyFileItem *)new_FXFileItem(*_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyFileItem_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    delete _arg0;
}
    return _resultobj;
}

#define FXFileItem_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXFileItem_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyFileItem * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXFileItem_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileItem_onDefault. Expected _FXPyFileItem_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXFileItem_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXFileItem_setText(_swigobj,_swigarg0)  (_swigobj->_setText(_swigarg0))
static PyObject *_wrap_FXFileItem_setText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileItem * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","text", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXFileItem_setText",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileItem_setText. Expected _FXPyFileItem_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileItem_setText(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FXFileItem_setBigIcon(_swigobj,_swigarg0)  (_swigobj->_setBigIcon(_swigarg0))
static PyObject *_wrap_FXFileItem_setBigIcon(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileItem * _arg0;
    FXIcon * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","ic", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXFileItem_setBigIcon",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileItem_setBigIcon. Expected _FXPyFileItem_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileItem_setBigIcon(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileItem_setMiniIcon(_swigobj,_swigarg0)  (_swigobj->_setMiniIcon(_swigarg0))
static PyObject *_wrap_FXFileItem_setMiniIcon(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileItem * _arg0;
    FXIcon * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","ic", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXFileItem_setMiniIcon",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileItem_setMiniIcon. Expected _FXPyFileItem_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileItem_setMiniIcon(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileItem_setFocus(_swigobj,_swigarg0)  (_swigobj->_setFocus(_swigarg0))
static PyObject *_wrap_FXFileItem_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileItem * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","focus", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FXFileItem_setFocus",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileItem_setFocus. Expected _FXPyFileItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileItem_setFocus(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileItem_setSelected(_swigobj,_swigarg0)  (_swigobj->_setSelected(_swigarg0))
static PyObject *_wrap_FXFileItem_setSelected(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileItem * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","selected", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FXFileItem_setSelected",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileItem_setSelected. Expected _FXPyFileItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileItem_setSelected(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileItem_setEnabled(_swigobj,_swigarg0)  (_swigobj->_setEnabled(_swigarg0))
static PyObject *_wrap_FXFileItem_setEnabled(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileItem * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enabled", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FXFileItem_setEnabled",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileItem_setEnabled. Expected _FXPyFileItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileItem_setEnabled(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileItem_setDraggable(_swigobj,_swigarg0)  (_swigobj->_setDraggable(_swigarg0))
static PyObject *_wrap_FXFileItem_setDraggable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileItem * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","draggable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FXFileItem_setDraggable",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileItem_setDraggable. Expected _FXPyFileItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileItem_setDraggable(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileItem_setIconOwned(_swigobj,_swigarg0)  (_swigobj->_setIconOwned(_swigarg0))
static PyObject *_wrap_FXFileItem_setIconOwned(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileItem * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","owned", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXFileItem_setIconOwned",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileItem_setIconOwned. Expected _FXPyFileItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileItem_setIconOwned(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileItem_getWidth(_swigobj,_swigarg0)  (_swigobj->_getWidth(_swigarg0))
static PyObject *_wrap_FXFileItem_getWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyFileItem * _arg0;
    FXIconList * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","list", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXFileItem_getWidth",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileItem_getWidth. Expected _FXPyFileItem_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXFileItem_getWidth. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXFileItem_getWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXFileItem_getHeight(_swigobj,_swigarg0)  (_swigobj->_getHeight(_swigarg0))
static PyObject *_wrap_FXFileItem_getHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyFileItem * _arg0;
    FXIconList * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","list", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXFileItem_getHeight",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileItem_getHeight. Expected _FXPyFileItem_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXIconList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXFileItem_getHeight. Expected _FXIconList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXFileItem_getHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXFileItem_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXFileItem_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileItem_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileItem_create. Expected _FXPyFileItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileItem_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileItem_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXFileItem_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileItem_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileItem_detach. Expected _FXPyFileItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileItem_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileItem_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXFileItem_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileItem * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileItem_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileItem_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileItem_destroy. Expected _FXPyFileItem_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileItem_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXFileListToFXIconList(void *ptr) {
    FXFileList *src;
    FXIconList *dest;
    src = (FXFileList *) ptr;
    dest = (FXIconList *) src;
    return (void *) dest;
}

static void *SwigFXFileListToFXScrollArea(void *ptr) {
    FXFileList *src;
    FXScrollArea *dest;
    src = (FXFileList *) ptr;
    dest = (FXScrollArea *) src;
    return (void *) dest;
}

static void *SwigFXFileListToFXComposite(void *ptr) {
    FXFileList *src;
    FXComposite *dest;
    src = (FXFileList *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXFileListToFXWindow(void *ptr) {
    FXFileList *src;
    FXWindow *dest;
    src = (FXFileList *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXFileListToFXDrawable(void *ptr) {
    FXFileList *src;
    FXDrawable *dest;
    src = (FXFileList *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXFileListToFXId(void *ptr) {
    FXFileList *src;
    FXId *dest;
    src = (FXFileList *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXFileListToFXObject(void *ptr) {
    FXFileList *src;
    FXObject *dest;
    src = (FXFileList *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define FX_FileList_onRefreshTimer(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onRefreshTimer(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onRefreshTimer(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onRefreshTimer",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onRefreshTimer. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onRefreshTimer. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onRefreshTimer(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onOpenTimer(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onOpenTimer(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onOpenTimer(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onOpenTimer",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onOpenTimer. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onOpenTimer. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onOpenTimer(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onDNDEnter(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onDNDEnter(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onDNDEnter(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onDNDEnter",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onDNDEnter. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onDNDEnter. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onDNDEnter(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onDNDLeave(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onDNDLeave(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onDNDLeave(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onDNDLeave",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onDNDLeave. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onDNDLeave. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onDNDLeave(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onDNDMotion(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onDNDMotion(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onDNDMotion(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onDNDMotion",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onDNDMotion. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onDNDMotion. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onDNDMotion(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onDNDDrop(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onDNDDrop(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onDNDDrop(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onDNDDrop",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onDNDDrop. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onDNDDrop. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onDNDDrop(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onDNDRequest(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onDNDRequest(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onDNDRequest(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onDNDRequest",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onDNDRequest. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onDNDRequest. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onDNDRequest(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onBeginDrag(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onBeginDrag(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onBeginDrag(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onBeginDrag",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onBeginDrag. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onBeginDrag. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onBeginDrag(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onEndDrag(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onEndDrag(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onEndDrag(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onEndDrag",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onEndDrag. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onEndDrag. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onEndDrag(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onDragged(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onDragged(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onDragged(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onDragged",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onDragged. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onDragged. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onDragged(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onCmdSetValue(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSetValue(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onCmdSetValue(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onCmdSetValue",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onCmdSetValue. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onCmdSetValue. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onCmdSetValue(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onCmdGetStringValue(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdGetStringValue(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onCmdGetStringValue(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onCmdGetStringValue",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onCmdGetStringValue. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onCmdGetStringValue. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onCmdGetStringValue(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onCmdSetStringValue(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSetStringValue(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onCmdSetStringValue(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onCmdSetStringValue",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onCmdSetStringValue. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onCmdSetStringValue. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onCmdSetStringValue(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onCmdDirectoryUp(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdDirectoryUp(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onCmdDirectoryUp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onCmdDirectoryUp",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onCmdDirectoryUp. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onCmdDirectoryUp. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onCmdDirectoryUp(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onUpdDirectoryUp(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdDirectoryUp(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onUpdDirectoryUp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onUpdDirectoryUp",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onUpdDirectoryUp. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onUpdDirectoryUp. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onUpdDirectoryUp(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onCmdSortByName(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSortByName(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onCmdSortByName(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onCmdSortByName",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onCmdSortByName. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onCmdSortByName. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onCmdSortByName(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onUpdSortByName(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdSortByName(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onUpdSortByName(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onUpdSortByName",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onUpdSortByName. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onUpdSortByName. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onUpdSortByName(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onCmdSortByType(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSortByType(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onCmdSortByType(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onCmdSortByType",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onCmdSortByType. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onCmdSortByType. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onCmdSortByType(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onUpdSortByType(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdSortByType(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onUpdSortByType(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onUpdSortByType",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onUpdSortByType. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onUpdSortByType. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onUpdSortByType(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onCmdSortBySize(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSortBySize(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onCmdSortBySize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onCmdSortBySize",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onCmdSortBySize. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onCmdSortBySize. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onCmdSortBySize(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onUpdSortBySize(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdSortBySize(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onUpdSortBySize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onUpdSortBySize",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onUpdSortBySize. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onUpdSortBySize. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onUpdSortBySize(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onCmdSortByTime(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSortByTime(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onCmdSortByTime(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onCmdSortByTime",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onCmdSortByTime. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onCmdSortByTime. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onCmdSortByTime(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onUpdSortByTime(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdSortByTime(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onUpdSortByTime(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onUpdSortByTime",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onUpdSortByTime. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onUpdSortByTime. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onUpdSortByTime(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onCmdSortByUser(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSortByUser(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onCmdSortByUser(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onCmdSortByUser",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onCmdSortByUser. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onCmdSortByUser. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onCmdSortByUser(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onUpdSortByUser(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdSortByUser(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onUpdSortByUser(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onUpdSortByUser",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onUpdSortByUser. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onUpdSortByUser. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onUpdSortByUser(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onCmdSortByGroup(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSortByGroup(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onCmdSortByGroup(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onCmdSortByGroup",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onCmdSortByGroup. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onCmdSortByGroup. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onCmdSortByGroup(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onUpdSortByGroup(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdSortByGroup(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onUpdSortByGroup(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onUpdSortByGroup",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onUpdSortByGroup. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onUpdSortByGroup. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onUpdSortByGroup(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onCmdSortReverse(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSortReverse(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onCmdSortReverse(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onCmdSortReverse",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onCmdSortReverse. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onCmdSortReverse. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onCmdSortReverse(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onUpdSortReverse(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdSortReverse(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onUpdSortReverse(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onUpdSortReverse",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onUpdSortReverse. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onUpdSortReverse. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onUpdSortReverse(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onCmdSetPattern(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSetPattern(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onCmdSetPattern(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onCmdSetPattern",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onCmdSetPattern. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onCmdSetPattern. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onCmdSetPattern(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onUpdSetPattern(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdSetPattern(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onUpdSetPattern(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onUpdSetPattern",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onUpdSetPattern. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onUpdSetPattern. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onUpdSetPattern(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onCmdSetDirectory(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSetDirectory(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onCmdSetDirectory(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onCmdSetDirectory",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onCmdSetDirectory. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onCmdSetDirectory. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onCmdSetDirectory(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onUpdSetDirectory(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdSetDirectory(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onUpdSetDirectory(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onUpdSetDirectory",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onUpdSetDirectory. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onUpdSetDirectory. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onUpdSetDirectory(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onCmdToggleHidden(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdToggleHidden(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onCmdToggleHidden(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onCmdToggleHidden",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onCmdToggleHidden. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onCmdToggleHidden. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onCmdToggleHidden(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onUpdToggleHidden(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdToggleHidden(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onUpdToggleHidden(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onUpdToggleHidden",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onUpdToggleHidden. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onUpdToggleHidden. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onUpdToggleHidden(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onCmdShowHidden(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdShowHidden(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onCmdShowHidden(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onCmdShowHidden",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onCmdShowHidden. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onCmdShowHidden. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onCmdShowHidden(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onUpdShowHidden(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdShowHidden(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onUpdShowHidden(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onUpdShowHidden",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onUpdShowHidden. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onUpdShowHidden. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onUpdShowHidden(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onCmdHideHidden(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdHideHidden(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onCmdHideHidden(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onCmdHideHidden",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onCmdHideHidden. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onCmdHideHidden. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onCmdHideHidden(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onUpdHideHidden(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdHideHidden(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onUpdHideHidden(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onUpdHideHidden",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onUpdHideHidden. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onUpdHideHidden. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onUpdHideHidden(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onCmdHeader(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdHeader(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onCmdHeader(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onCmdHeader",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onCmdHeader. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onCmdHeader. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onCmdHeader(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileList_onUpdHeader(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdHeader(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileList_onUpdHeader(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileList_onUpdHeader",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_onUpdHeader. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileList_onUpdHeader. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileList_onUpdHeader(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define new_FX_FileList(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7) (new FXFileList(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7))
static PyObject *_wrap_new_FX_FileList(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileList * _result;
    FXComposite * _arg0;
    FXObject * _arg1 = (FXObject *) NULL;
    FXSelector  _arg2 = (FXSelector ) 0;
    FXuint  _arg3 = (FXuint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "p","tgt","sel","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|Oiiiiii:new_FX_FileList",_kwnames,&_argo0,&_obj1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FX_FileList. Expected _FXComposite_p.");
        return NULL;
        }
    }
    if (_obj1)
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXFileList *)new_FX_FileList(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXFileList_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_FileList_setCurrentFile(_swigobj,_swigarg0)  (_swigobj->setCurrentFile(_swigarg0))
static PyObject *_wrap_FX_FileList_setCurrentFile(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileList * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","file", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_FileList_setCurrentFile",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_setCurrentFile. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_FileList_setCurrentFile(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_FileList_getCurrentFile(_swigobj)  (_swigobj->getCurrentFile())
static PyObject *_wrap_FX_FileList_getCurrentFile(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXFileList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileList_getCurrentFile",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_getCurrentFile. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_FileList_getCurrentFile(_arg0));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

#define FX_FileList_setDirectory(_swigobj,_swigarg0)  (_swigobj->setDirectory(_swigarg0))
static PyObject *_wrap_FX_FileList_setDirectory(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileList * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","path", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_FileList_setDirectory",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_setDirectory. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_FileList_setDirectory(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_FileList_getDirectory(_swigobj)  (_swigobj->getDirectory())
static PyObject *_wrap_FX_FileList_getDirectory(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXFileList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileList_getDirectory",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_getDirectory. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_FileList_getDirectory(_arg0));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

#define FX_FileList_setPattern(_swigobj,_swigarg0)  (_swigobj->setPattern(_swigarg0))
static PyObject *_wrap_FX_FileList_setPattern(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileList * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","ptrn", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_FileList_setPattern",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_setPattern. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_FileList_setPattern(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_FileList_getPattern(_swigobj)  (_swigobj->getPattern())
static PyObject *_wrap_FX_FileList_getPattern(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXFileList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileList_getPattern",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_getPattern. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_FileList_getPattern(_arg0));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

#define FX_FileList_isItemDirectory(_swigobj,_swigarg0)  (_swigobj->isItemDirectory(_swigarg0))
static PyObject *_wrap_FX_FileList_isItemDirectory(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXFileList * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","index", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_FileList_isItemDirectory",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_isItemDirectory. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_FileList_isItemDirectory(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_FileList_isItemFile(_swigobj,_swigarg0)  (_swigobj->isItemFile(_swigarg0))
static PyObject *_wrap_FX_FileList_isItemFile(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXFileList * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","index", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_FileList_isItemFile",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_isItemFile. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_FileList_isItemFile(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_FileList_isItemExecutable(_swigobj,_swigarg0)  (_swigobj->isItemExecutable(_swigarg0))
static PyObject *_wrap_FX_FileList_isItemExecutable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXFileList * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","index", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_FileList_isItemExecutable",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_isItemExecutable. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_FileList_isItemExecutable(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_FileList_getItemFilename(_swigobj,_swigarg0)  (_swigobj->getItemFilename(_swigarg0))
static PyObject *_wrap_FX_FileList_getItemFilename(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXFileList * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","index", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_FileList_getItemFilename",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_getItemFilename. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_FileList_getItemFilename(_arg0,_arg1));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

#define FX_FileList_getItemPathname(_swigobj,_swigarg0)  (_swigobj->getItemPathname(_swigarg0))
static PyObject *_wrap_FX_FileList_getItemPathname(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXFileList * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","index", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_FileList_getItemPathname",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_getItemPathname. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_FileList_getItemPathname(_arg0,_arg1));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

#define FX_FileList_getItemAssoc(_swigobj,_swigarg0)  (_swigobj->getItemAssoc(_swigarg0))
static PyObject *_wrap_FX_FileList_getItemAssoc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileAssoc * _result;
    FXFileList * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","index", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_FileList_getItemAssoc",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_getItemAssoc. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXFileAssoc *)FX_FileList_getItemAssoc(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXFileAssoc_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_FileList_getMatchMode(_swigobj)  (_swigobj->getMatchMode())
static PyObject *_wrap_FX_FileList_getMatchMode(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXFileList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileList_getMatchMode",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_getMatchMode. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )FX_FileList_getMatchMode(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_FileList_setMatchMode(_swigobj,_swigarg0)  (_swigobj->setMatchMode(_swigarg0))
static PyObject *_wrap_FX_FileList_setMatchMode(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileList * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","mode", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_FileList_setMatchMode",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_setMatchMode. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_FileList_setMatchMode(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_FileList_showHiddenFiles(_swigobj)  (_swigobj->showHiddenFiles())
static PyObject *_wrap_FX_FileList_showHiddenFiles(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXFileList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileList_showHiddenFiles",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_showHiddenFiles. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_FileList_showHiddenFiles(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_FileList_showHiddenFiles2(_swigobj,_swigarg0)  (_swigobj->showHiddenFiles(_swigarg0))
static PyObject *_wrap_FX_FileList_showHiddenFiles2(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileList * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","shown", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FX_FileList_showHiddenFiles2",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_showHiddenFiles2. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_FileList_showHiddenFiles2(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_FileList_setAssociations(_swigobj,_swigarg0)  (_swigobj->setAssociations(_swigarg0))
static PyObject *_wrap_FX_FileList_setAssociations(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileList * _arg0;
    FXFileDict * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","assoc", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_FileList_setAssociations",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_setAssociations. Expected _FXFileList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXFileDict_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_FileList_setAssociations. Expected _FXFileDict_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_FileList_setAssociations(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_FileList_getAssociations(_swigobj)  (_swigobj->getAssociations())
static PyObject *_wrap_FX_FileList_getAssociations(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileDict * _result;
    FXFileList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileList_getAssociations",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_getAssociations. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXFileDict *)FX_FileList_getAssociations(_arg0);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXFileDict_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_FileList_showOnlyDirectories(_swigobj)  (_swigobj->showOnlyDirectories())
static PyObject *_wrap_FX_FileList_showOnlyDirectories(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXFileList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileList_showOnlyDirectories",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_showOnlyDirectories. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_FileList_showOnlyDirectories(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_FileList_showOnlyDirectories2(_swigobj,_swigarg0)  (_swigobj->showOnlyDirectories(_swigarg0))
static PyObject *_wrap_FX_FileList_showOnlyDirectories2(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileList * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","shown", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FX_FileList_showOnlyDirectories2",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileList_showOnlyDirectories2. Expected _FXFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_FileList_showOnlyDirectories2(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXPyFileListToFXFileList(void *ptr) {
    FXPyFileList *src;
    FXFileList *dest;
    src = (FXPyFileList *) ptr;
    dest = (FXFileList *) src;
    return (void *) dest;
}

static void *SwigFXPyFileListToFXIconList(void *ptr) {
    FXPyFileList *src;
    FXIconList *dest;
    src = (FXPyFileList *) ptr;
    dest = (FXIconList *) src;
    return (void *) dest;
}

static void *SwigFXPyFileListToFXScrollArea(void *ptr) {
    FXPyFileList *src;
    FXScrollArea *dest;
    src = (FXPyFileList *) ptr;
    dest = (FXScrollArea *) src;
    return (void *) dest;
}

static void *SwigFXPyFileListToFXComposite(void *ptr) {
    FXPyFileList *src;
    FXComposite *dest;
    src = (FXPyFileList *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXPyFileListToFXWindow(void *ptr) {
    FXPyFileList *src;
    FXWindow *dest;
    src = (FXPyFileList *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyFileListToFXDrawable(void *ptr) {
    FXPyFileList *src;
    FXDrawable *dest;
    src = (FXPyFileList *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPyFileListToFXId(void *ptr) {
    FXPyFileList *src;
    FXId *dest;
    src = (FXPyFileList *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPyFileListToFXObject(void *ptr) {
    FXPyFileList *src;
    FXObject *dest;
    src = (FXPyFileList *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXFileList(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7) (new FXPyFileList(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7))
static PyObject *_wrap_new_FXFileList(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileList * _result;
    FXComposite * _arg0;
    FXObject * _arg1 = (FXObject *) NULL;
    FXSelector  _arg2 = (FXSelector ) 0;
    FXuint  _arg3 = (FXuint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "p","tgt","sel","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|Oiiiiii:new_FXFileList",_kwnames,&_argo0,&_obj1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FXFileList. Expected _FXComposite_p.");
        return NULL;
        }
    }
    if (_obj1)
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyFileList *)new_FXFileList(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyFileList_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FXFileList_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXFileList_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyFileList * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXFileList_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileList_onDefault. Expected _FXPyFileList_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXFileList_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXFileList_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXFileList_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileList_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileList_create. Expected _FXPyFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileList_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileList_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXFileList_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileList_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileList_destroy. Expected _FXPyFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileList_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileList_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXFileList_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileList_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileList_detach. Expected _FXPyFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileList_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileList_resize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_resize(_swigarg0,_swigarg1))
static PyObject *_wrap_FXFileList_resize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileList * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXFileList_resize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileList_resize. Expected _FXPyFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileList_resize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileList_getDefaultWidth(_swigobj)  (_swigobj->_getDefaultWidth())
static PyObject *_wrap_FXFileList_getDefaultWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyFileList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileList_getDefaultWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileList_getDefaultWidth. Expected _FXPyFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXFileList_getDefaultWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXFileList_getDefaultHeight(_swigobj)  (_swigobj->_getDefaultHeight())
static PyObject *_wrap_FXFileList_getDefaultHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyFileList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileList_getDefaultHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileList_getDefaultHeight. Expected _FXPyFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXFileList_getDefaultHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXFileList_show(_swigobj)  (_swigobj->_show())
static PyObject *_wrap_FXFileList_show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileList_show",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileList_show. Expected _FXPyFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileList_show(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileList_hide(_swigobj)  (_swigobj->_hide())
static PyObject *_wrap_FXFileList_hide(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileList_hide",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileList_hide. Expected _FXPyFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileList_hide(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileList_enable(_swigobj)  (_swigobj->_enable())
static PyObject *_wrap_FXFileList_enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileList_enable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileList_enable. Expected _FXPyFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileList_enable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileList_disable(_swigobj)  (_swigobj->_disable())
static PyObject *_wrap_FXFileList_disable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileList_disable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileList_disable. Expected _FXPyFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileList_disable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileList_canFocus(_swigobj)  (_swigobj->_canFocus())
static PyObject *_wrap_FXFileList_canFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyFileList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileList_canFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileList_canFocus. Expected _FXPyFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXFileList_canFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXFileList_setFocus(_swigobj)  (_swigobj->_setFocus())
static PyObject *_wrap_FXFileList_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileList_setFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileList_setFocus. Expected _FXPyFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileList_setFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileList_killFocus(_swigobj)  (_swigobj->_killFocus())
static PyObject *_wrap_FXFileList_killFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileList_killFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileList_killFocus. Expected _FXPyFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileList_killFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileList_setDefault(_swigobj,_swigarg0)  (_swigobj->_setDefault(_swigarg0))
static PyObject *_wrap_FXFileList_setDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileList * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FXFileList_setDefault",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileList_setDefault. Expected _FXPyFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileList_setDefault(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileList_recalc(_swigobj)  (_swigobj->_recalc())
static PyObject *_wrap_FXFileList_recalc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileList_recalc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileList_recalc. Expected _FXPyFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileList_recalc(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileList_layout(_swigobj)  (_swigobj->_layout())
static PyObject *_wrap_FXFileList_layout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileList_layout",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileList_layout. Expected _FXPyFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileList_layout(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileList_lower(_swigobj)  (_swigobj->_lowerWindow())
static PyObject *_wrap_FXFileList_lower(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileList_lower",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileList_lower. Expected _FXPyFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileList_lower(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileList_move(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_move(_swigarg0,_swigarg1))
static PyObject *_wrap_FXFileList_move(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileList * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXFileList_move",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileList_move. Expected _FXPyFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileList_move(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileList_position(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->_position(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FXFileList_position(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileList * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FXFileList_position",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileList_position. Expected _FXPyFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileList_position(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileList_isComposite(_swigobj)  (_swigobj->_isComposite())
static PyObject *_wrap_FXFileList_isComposite(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyFileList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileList_isComposite",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileList_isComposite. Expected _FXPyFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXFileList_isComposite(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXFileList_contains(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_contains(_swigarg0,_swigarg1))
static PyObject *_wrap_FXFileList_contains(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyFileList * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXFileList_contains",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileList_contains. Expected _FXPyFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXFileList_contains(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXFileList_getWidthForHeight(_swigobj,_swigarg0)  (_swigobj->_getWidthForHeight(_swigarg0))
static PyObject *_wrap_FXFileList_getWidthForHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyFileList * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXFileList_getWidthForHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileList_getWidthForHeight. Expected _FXPyFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXFileList_getWidthForHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXFileList_getHeightForWidth(_swigobj,_swigarg0)  (_swigobj->_getHeightForWidth(_swigarg0))
static PyObject *_wrap_FXFileList_getHeightForWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyFileList * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXFileList_getHeightForWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileList_getHeightForWidth. Expected _FXPyFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXFileList_getHeightForWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXFileList_doesSaveUnder(_swigobj)  (_swigobj->_doesSaveUnder())
static PyObject *_wrap_FXFileList_doesSaveUnder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyFileList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileList_doesSaveUnder",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileList_doesSaveUnder. Expected _FXPyFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXFileList_doesSaveUnder(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXFileList_reparent(_swigobj,_swigarg0)  (_swigobj->_reparent(_swigarg0))
static PyObject *_wrap_FXFileList_reparent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileList * _arg0;
    FXComposite * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","newparent", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXFileList_reparent",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileList_reparent. Expected _FXPyFileList_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXFileList_reparent. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileList_reparent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileList_setBackColor(_swigobj,_swigarg0)  (_swigobj->_setBackColor(_swigarg0))
static PyObject *_wrap_FXFileList_setBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileList * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXFileList_setBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileList_setBackColor. Expected _FXPyFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileList_setBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileList_getContentWidth(_swigobj)  (_swigobj->_getContentWidth())
static PyObject *_wrap_FXFileList_getContentWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyFileList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileList_getContentWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileList_getContentWidth. Expected _FXPyFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXFileList_getContentWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXFileList_getContentHeight(_swigobj)  (_swigobj->_getContentHeight())
static PyObject *_wrap_FXFileList_getContentHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyFileList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileList_getContentHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileList_getContentHeight. Expected _FXPyFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXFileList_getContentHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXFileList_getViewportWidth(_swigobj)  (_swigobj->_getViewportWidth())
static PyObject *_wrap_FXFileList_getViewportWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyFileList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileList_getViewportWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileList_getViewportWidth. Expected _FXPyFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXFileList_getViewportWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXFileList_getViewportHeight(_swigobj)  (_swigobj->_getViewportHeight())
static PyObject *_wrap_FXFileList_getViewportHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyFileList * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileList_getViewportHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileList_getViewportHeight. Expected _FXPyFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXFileList_getViewportHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXFileList_moveContents(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_moveContents(_swigarg0,_swigarg1))
static PyObject *_wrap_FXFileList_moveContents(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileList * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXFileList_moveContents",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileList_moveContents. Expected _FXPyFileList_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileList_moveContents(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXFileSelectorToFXPacker(void *ptr) {
    FXFileSelector *src;
    FXPacker *dest;
    src = (FXFileSelector *) ptr;
    dest = (FXPacker *) src;
    return (void *) dest;
}

static void *SwigFXFileSelectorToFXComposite(void *ptr) {
    FXFileSelector *src;
    FXComposite *dest;
    src = (FXFileSelector *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXFileSelectorToFXWindow(void *ptr) {
    FXFileSelector *src;
    FXWindow *dest;
    src = (FXFileSelector *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXFileSelectorToFXDrawable(void *ptr) {
    FXFileSelector *src;
    FXDrawable *dest;
    src = (FXFileSelector *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXFileSelectorToFXId(void *ptr) {
    FXFileSelector *src;
    FXId *dest;
    src = (FXFileSelector *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXFileSelectorToFXObject(void *ptr) {
    FXFileSelector *src;
    FXObject *dest;
    src = (FXFileSelector *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define FX_FileSelector_onCmdAccept(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdAccept(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileSelector_onCmdAccept(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileSelector_onCmdAccept",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_onCmdAccept. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileSelector_onCmdAccept. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileSelector_onCmdAccept(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileSelector_onCmdFilter(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdFilter(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileSelector_onCmdFilter(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileSelector_onCmdFilter",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_onCmdFilter. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileSelector_onCmdFilter. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileSelector_onCmdFilter(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileSelector_onCmdItemDblClicked(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdItemDblClicked(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileSelector_onCmdItemDblClicked(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileSelector_onCmdItemDblClicked",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_onCmdItemDblClicked. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileSelector_onCmdItemDblClicked. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileSelector_onCmdItemDblClicked(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileSelector_onCmdItemSelected(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdItemSelected(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileSelector_onCmdItemSelected(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileSelector_onCmdItemSelected",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_onCmdItemSelected. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileSelector_onCmdItemSelected. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileSelector_onCmdItemSelected(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileSelector_onCmdItemDeselected(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdItemDeselected(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileSelector_onCmdItemDeselected(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileSelector_onCmdItemDeselected",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_onCmdItemDeselected. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileSelector_onCmdItemDeselected. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileSelector_onCmdItemDeselected(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileSelector_onCmdDirectoryUp(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdDirectoryUp(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileSelector_onCmdDirectoryUp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileSelector_onCmdDirectoryUp",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_onCmdDirectoryUp. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileSelector_onCmdDirectoryUp. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileSelector_onCmdDirectoryUp(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileSelector_onUpdDirectoryUp(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdDirectoryUp(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileSelector_onUpdDirectoryUp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileSelector_onUpdDirectoryUp",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_onUpdDirectoryUp. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileSelector_onUpdDirectoryUp. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileSelector_onUpdDirectoryUp(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileSelector_onCmdDirTree(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdDirTree(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileSelector_onCmdDirTree(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileSelector_onCmdDirTree",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_onCmdDirTree. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileSelector_onCmdDirTree. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileSelector_onCmdDirTree(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileSelector_onCmdHome(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdHome(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileSelector_onCmdHome(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileSelector_onCmdHome",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_onCmdHome. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileSelector_onCmdHome. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileSelector_onCmdHome(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileSelector_onCmdWork(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdWork(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileSelector_onCmdWork(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileSelector_onCmdWork",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_onCmdWork. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileSelector_onCmdWork. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileSelector_onCmdWork(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileSelector_onCmdBookmark(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdBookmark(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileSelector_onCmdBookmark(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileSelector_onCmdBookmark",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_onCmdBookmark. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileSelector_onCmdBookmark. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileSelector_onCmdBookmark(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileSelector_onCmdVisit(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdVisit(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileSelector_onCmdVisit(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileSelector_onCmdVisit",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_onCmdVisit. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileSelector_onCmdVisit. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileSelector_onCmdVisit(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileSelector_onCmdNew(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdNew(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileSelector_onCmdNew(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileSelector_onCmdNew",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_onCmdNew. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileSelector_onCmdNew. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileSelector_onCmdNew(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileSelector_onUpdNew(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdNew(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileSelector_onUpdNew(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileSelector_onUpdNew",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_onUpdNew. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileSelector_onUpdNew. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileSelector_onUpdNew(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileSelector_onCmdMove(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdMove(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileSelector_onCmdMove(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileSelector_onCmdMove",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_onCmdMove. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileSelector_onCmdMove. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileSelector_onCmdMove(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileSelector_onCmdCopy(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdCopy(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileSelector_onCmdCopy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileSelector_onCmdCopy",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_onCmdCopy. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileSelector_onCmdCopy. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileSelector_onCmdCopy(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileSelector_onCmdLink(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdLink(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileSelector_onCmdLink(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileSelector_onCmdLink",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_onCmdLink. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileSelector_onCmdLink. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileSelector_onCmdLink(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileSelector_onCmdDelete(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdDelete(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileSelector_onCmdDelete(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileSelector_onCmdDelete",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_onCmdDelete. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileSelector_onCmdDelete. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileSelector_onCmdDelete(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileSelector_onUpdSelected(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdSelected(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileSelector_onUpdSelected(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileSelector_onUpdSelected",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_onUpdSelected. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileSelector_onUpdSelected. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileSelector_onUpdSelected(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FileSelector_onPopupMenu(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onPopupMenu(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FileSelector_onPopupMenu(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFileSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FileSelector_onPopupMenu",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_onPopupMenu. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FileSelector_onPopupMenu. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FileSelector_onPopupMenu(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define new_FX_FileSelector(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7) (new FXFileSelector(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7))
static PyObject *_wrap_new_FX_FileSelector(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileSelector * _result;
    FXComposite * _arg0;
    FXObject * _arg1 = (FXObject *) NULL;
    FXSelector  _arg2 = (FXSelector ) 0;
    FXuint  _arg3 = (FXuint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "p","tgt","sel","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|Oiiiiii:new_FX_FileSelector",_kwnames,&_argo0,&_obj1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FX_FileSelector. Expected _FXComposite_p.");
        return NULL;
        }
    }
    if (_obj1)
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXFileSelector *)new_FX_FileSelector(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXFileSelector_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_FileSelector_acceptButton(_swigobj)  (_swigobj->acceptButton())
static PyObject *_wrap_FX_FileSelector_acceptButton(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXButton * _result;
    FXFileSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileSelector_acceptButton",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_acceptButton. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXButton *)FX_FileSelector_acceptButton(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_FileSelector_cancelButton(_swigobj)  (_swigobj->cancelButton())
static PyObject *_wrap_FX_FileSelector_cancelButton(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXButton * _result;
    FXFileSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileSelector_cancelButton",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_cancelButton. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXButton *)FX_FileSelector_cancelButton(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_FileSelector_setFilename(_swigobj,_swigarg0)  (_swigobj->setFilename(_swigarg0))
static PyObject *_wrap_FX_FileSelector_setFilename(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileSelector * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","path", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_FileSelector_setFilename",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_setFilename. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_FileSelector_setFilename(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_FileSelector_getFilename(_swigobj)  (_swigobj->getFilename())
static PyObject *_wrap_FX_FileSelector_getFilename(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXFileSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileSelector_getFilename",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_getFilename. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_FileSelector_getFilename(_arg0));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

static PyObject * FXFileSelector_getFilenames(FXFileSelector *self) {
      FXString* filenames=self->getFilenames();
      if(filenames){
        FXuint nfiles=0;
        register FXString* p=filenames;
        while(*p!=FXString::null){
          nfiles++; p++;
          }
        PyObject* obj=PyList_New(nfiles);
        for(FXuint i=0;i<nfiles;i++){
          PyList_SetItem(obj,i,PyString_FromString(filenames[i].text()));
          }
        delete[] filenames;
        return obj;
        }
      else{
        return PyList_New(0);
        }
    }
static PyObject *_wrap_FX_FileSelector_getFilenames(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    PyObject * _result;
    FXFileSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileSelector_getFilenames",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_getFilenames. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (PyObject *)FXFileSelector_getFilenames(_arg0);

    FXPy_END_ALLOW_THREADS
}{
  _resultobj = _result;
}
    return _resultobj;
}

#define FX_FileSelector_setPattern(_swigobj,_swigarg0)  (_swigobj->setPattern(_swigarg0))
static PyObject *_wrap_FX_FileSelector_setPattern(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileSelector * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","ptrn", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_FileSelector_setPattern",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_setPattern. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_FileSelector_setPattern(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_FileSelector_getPattern(_swigobj)  (_swigobj->getPattern())
static PyObject *_wrap_FX_FileSelector_getPattern(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXFileSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileSelector_getPattern",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_getPattern. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_FileSelector_getPattern(_arg0));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

#define FX_FileSelector_setPatternList(_swigobj,_swigarg0)  (_swigobj->setPatternList(_swigarg0))
static PyObject *_wrap_FX_FileSelector_setPatternList(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileSelector * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","patterns", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_FileSelector_setPatternList",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_setPatternList. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_FileSelector_setPatternList(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_FileSelector_setDirectory(_swigobj,_swigarg0)  (_swigobj->setDirectory(_swigarg0))
static PyObject *_wrap_FX_FileSelector_setDirectory(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileSelector * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","path", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_FileSelector_setDirectory",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_setDirectory. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_FileSelector_setDirectory(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_FileSelector_getDirectory(_swigobj)  (_swigobj->getDirectory())
static PyObject *_wrap_FX_FileSelector_getDirectory(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXFileSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileSelector_getDirectory",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_getDirectory. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_FileSelector_getDirectory(_arg0));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

#define FX_FileSelector_setCurrentPattern(_swigobj,_swigarg0)  (_swigobj->setCurrentPattern(_swigarg0))
static PyObject *_wrap_FX_FileSelector_setCurrentPattern(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileSelector * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","n", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_FileSelector_setCurrentPattern",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_setCurrentPattern. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_FileSelector_setCurrentPattern(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_FileSelector_getCurrentPattern(_swigobj)  (_swigobj->getCurrentPattern())
static PyObject *_wrap_FX_FileSelector_getCurrentPattern(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXFileSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileSelector_getCurrentPattern",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_getCurrentPattern. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_FileSelector_getCurrentPattern(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_FileSelector_getPatternText(_swigobj,_swigarg0)  (_swigobj->getPatternText(_swigarg0))
static PyObject *_wrap_FX_FileSelector_getPatternText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXFileSelector * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","patno", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_FileSelector_getPatternText",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_getPatternText. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_FileSelector_getPatternText(_arg0,_arg1));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

#define FX_FileSelector_setPatternText(_swigobj,_swigarg0,_swigarg1)  (_swigobj->setPatternText(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_FileSelector_setPatternText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileSelector * _arg0;
    FXint  _arg1;
    FXString * _arg2;
    PyObject * _argo0 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "self","patno","text", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OiO:FX_FileSelector_setPatternText",_kwnames,&_argo0,&_arg1,&_obj2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_setPatternText. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    if (_obj2 == Py_None)
	_arg2 = new FXString;
    else if (!PyString_Check(_obj2)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg2 = new FXString(PyString_AsString(_obj2));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_FileSelector_setPatternText(_arg0,_arg1,*_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg2;
}
    return _resultobj;
}

#define FX_FileSelector_setItemSpace(_swigobj,_swigarg0)  (_swigobj->setItemSpace(_swigarg0))
static PyObject *_wrap_FX_FileSelector_setItemSpace(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileSelector * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","s", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_FileSelector_setItemSpace",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_setItemSpace. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_FileSelector_setItemSpace(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_FileSelector_getItemSpace(_swigobj)  (_swigobj->getItemSpace())
static PyObject *_wrap_FX_FileSelector_getItemSpace(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXFileSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileSelector_getItemSpace",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_getItemSpace. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_FileSelector_getItemSpace(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_FileSelector_setFileBoxStyle(_swigobj,_swigarg0)  (_swigobj->setFileBoxStyle(_swigarg0))
static PyObject *_wrap_FX_FileSelector_setFileBoxStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileSelector * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","style", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_FileSelector_setFileBoxStyle",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_setFileBoxStyle. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_FileSelector_setFileBoxStyle(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_FileSelector_getFileBoxStyle(_swigobj)  (_swigobj->getFileBoxStyle())
static PyObject *_wrap_FX_FileSelector_getFileBoxStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXFileSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileSelector_getFileBoxStyle",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_getFileBoxStyle. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )FX_FileSelector_getFileBoxStyle(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_FileSelector_setSelectMode(_swigobj,_swigarg0)  (_swigobj->setSelectMode(_swigarg0))
static PyObject *_wrap_FX_FileSelector_setSelectMode(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileSelector * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","mode", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_FileSelector_setSelectMode",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_setSelectMode. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_FileSelector_setSelectMode(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_FileSelector_getSelectMode(_swigobj)  (_swigobj->getSelectMode())
static PyObject *_wrap_FX_FileSelector_getSelectMode(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXFileSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileSelector_getSelectMode",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_getSelectMode. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )FX_FileSelector_getSelectMode(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_FileSelector_showReadOnly(_swigobj,_swigarg0)  (_swigobj->showReadOnly(_swigarg0))
static PyObject *_wrap_FX_FileSelector_showReadOnly(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileSelector * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","show", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FX_FileSelector_showReadOnly",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_showReadOnly. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_FileSelector_showReadOnly(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_FileSelector_shownReadOnly(_swigobj)  (_swigobj->shownReadOnly())
static PyObject *_wrap_FX_FileSelector_shownReadOnly(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXFileSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileSelector_shownReadOnly",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_shownReadOnly. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_FileSelector_shownReadOnly(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_FileSelector_setReadOnly(_swigobj,_swigarg0)  (_swigobj->setReadOnly(_swigarg0))
static PyObject *_wrap_FX_FileSelector_setReadOnly(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileSelector * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","state", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FX_FileSelector_setReadOnly",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_setReadOnly. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_FileSelector_setReadOnly(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_FileSelector_getReadOnly(_swigobj)  (_swigobj->getReadOnly())
static PyObject *_wrap_FX_FileSelector_getReadOnly(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXFileSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileSelector_getReadOnly",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileSelector_getReadOnly. Expected _FXFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_FileSelector_getReadOnly(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

static void *SwigFXPyFileSelectorToFXFileSelector(void *ptr) {
    FXPyFileSelector *src;
    FXFileSelector *dest;
    src = (FXPyFileSelector *) ptr;
    dest = (FXFileSelector *) src;
    return (void *) dest;
}

static void *SwigFXPyFileSelectorToFXPacker(void *ptr) {
    FXPyFileSelector *src;
    FXPacker *dest;
    src = (FXPyFileSelector *) ptr;
    dest = (FXPacker *) src;
    return (void *) dest;
}

static void *SwigFXPyFileSelectorToFXComposite(void *ptr) {
    FXPyFileSelector *src;
    FXComposite *dest;
    src = (FXPyFileSelector *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXPyFileSelectorToFXWindow(void *ptr) {
    FXPyFileSelector *src;
    FXWindow *dest;
    src = (FXPyFileSelector *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyFileSelectorToFXDrawable(void *ptr) {
    FXPyFileSelector *src;
    FXDrawable *dest;
    src = (FXPyFileSelector *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPyFileSelectorToFXId(void *ptr) {
    FXPyFileSelector *src;
    FXId *dest;
    src = (FXPyFileSelector *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPyFileSelectorToFXObject(void *ptr) {
    FXPyFileSelector *src;
    FXObject *dest;
    src = (FXPyFileSelector *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXFileSelector(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7) (new FXPyFileSelector(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7))
static PyObject *_wrap_new_FXFileSelector(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileSelector * _result;
    FXComposite * _arg0;
    FXObject * _arg1 = (FXObject *) NULL;
    FXSelector  _arg2 = (FXSelector ) 0;
    FXuint  _arg3 = (FXuint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "p","tgt","sel","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|Oiiiiii:new_FXFileSelector",_kwnames,&_argo0,&_obj1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FXFileSelector. Expected _FXComposite_p.");
        return NULL;
        }
    }
    if (_obj1)
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyFileSelector *)new_FXFileSelector(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyFileSelector_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FXFileSelector_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXFileSelector_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyFileSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXFileSelector_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileSelector_onDefault. Expected _FXPyFileSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXFileSelector_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXFileSelector_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXFileSelector_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileSelector_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileSelector_create. Expected _FXPyFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileSelector_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileSelector_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXFileSelector_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileSelector_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileSelector_destroy. Expected _FXPyFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileSelector_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileSelector_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXFileSelector_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileSelector_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileSelector_detach. Expected _FXPyFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileSelector_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileSelector_resize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_resize(_swigarg0,_swigarg1))
static PyObject *_wrap_FXFileSelector_resize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileSelector * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXFileSelector_resize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileSelector_resize. Expected _FXPyFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileSelector_resize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileSelector_getDefaultWidth(_swigobj)  (_swigobj->_getDefaultWidth())
static PyObject *_wrap_FXFileSelector_getDefaultWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyFileSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileSelector_getDefaultWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileSelector_getDefaultWidth. Expected _FXPyFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXFileSelector_getDefaultWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXFileSelector_getDefaultHeight(_swigobj)  (_swigobj->_getDefaultHeight())
static PyObject *_wrap_FXFileSelector_getDefaultHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyFileSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileSelector_getDefaultHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileSelector_getDefaultHeight. Expected _FXPyFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXFileSelector_getDefaultHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXFileSelector_show(_swigobj)  (_swigobj->_show())
static PyObject *_wrap_FXFileSelector_show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileSelector_show",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileSelector_show. Expected _FXPyFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileSelector_show(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileSelector_hide(_swigobj)  (_swigobj->_hide())
static PyObject *_wrap_FXFileSelector_hide(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileSelector_hide",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileSelector_hide. Expected _FXPyFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileSelector_hide(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileSelector_enable(_swigobj)  (_swigobj->_enable())
static PyObject *_wrap_FXFileSelector_enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileSelector_enable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileSelector_enable. Expected _FXPyFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileSelector_enable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileSelector_disable(_swigobj)  (_swigobj->_disable())
static PyObject *_wrap_FXFileSelector_disable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileSelector_disable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileSelector_disable. Expected _FXPyFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileSelector_disable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileSelector_canFocus(_swigobj)  (_swigobj->_canFocus())
static PyObject *_wrap_FXFileSelector_canFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyFileSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileSelector_canFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileSelector_canFocus. Expected _FXPyFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXFileSelector_canFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXFileSelector_setFocus(_swigobj)  (_swigobj->_setFocus())
static PyObject *_wrap_FXFileSelector_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileSelector_setFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileSelector_setFocus. Expected _FXPyFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileSelector_setFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileSelector_killFocus(_swigobj)  (_swigobj->_killFocus())
static PyObject *_wrap_FXFileSelector_killFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileSelector_killFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileSelector_killFocus. Expected _FXPyFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileSelector_killFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileSelector_setDefault(_swigobj,_swigarg0)  (_swigobj->_setDefault(_swigarg0))
static PyObject *_wrap_FXFileSelector_setDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileSelector * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FXFileSelector_setDefault",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileSelector_setDefault. Expected _FXPyFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileSelector_setDefault(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileSelector_recalc(_swigobj)  (_swigobj->_recalc())
static PyObject *_wrap_FXFileSelector_recalc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileSelector_recalc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileSelector_recalc. Expected _FXPyFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileSelector_recalc(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileSelector_layout(_swigobj)  (_swigobj->_layout())
static PyObject *_wrap_FXFileSelector_layout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileSelector_layout",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileSelector_layout. Expected _FXPyFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileSelector_layout(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileSelector_lower(_swigobj)  (_swigobj->_lowerWindow())
static PyObject *_wrap_FXFileSelector_lower(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileSelector_lower",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileSelector_lower. Expected _FXPyFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileSelector_lower(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileSelector_move(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_move(_swigarg0,_swigarg1))
static PyObject *_wrap_FXFileSelector_move(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileSelector * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXFileSelector_move",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileSelector_move. Expected _FXPyFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileSelector_move(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileSelector_position(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->_position(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FXFileSelector_position(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileSelector * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FXFileSelector_position",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileSelector_position. Expected _FXPyFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileSelector_position(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileSelector_isComposite(_swigobj)  (_swigobj->_isComposite())
static PyObject *_wrap_FXFileSelector_isComposite(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyFileSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileSelector_isComposite",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileSelector_isComposite. Expected _FXPyFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXFileSelector_isComposite(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXFileSelector_contains(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_contains(_swigarg0,_swigarg1))
static PyObject *_wrap_FXFileSelector_contains(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyFileSelector * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXFileSelector_contains",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileSelector_contains. Expected _FXPyFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXFileSelector_contains(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXFileSelector_getWidthForHeight(_swigobj,_swigarg0)  (_swigobj->_getWidthForHeight(_swigarg0))
static PyObject *_wrap_FXFileSelector_getWidthForHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyFileSelector * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXFileSelector_getWidthForHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileSelector_getWidthForHeight. Expected _FXPyFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXFileSelector_getWidthForHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXFileSelector_getHeightForWidth(_swigobj,_swigarg0)  (_swigobj->_getHeightForWidth(_swigarg0))
static PyObject *_wrap_FXFileSelector_getHeightForWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyFileSelector * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXFileSelector_getHeightForWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileSelector_getHeightForWidth. Expected _FXPyFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXFileSelector_getHeightForWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXFileSelector_doesSaveUnder(_swigobj)  (_swigobj->_doesSaveUnder())
static PyObject *_wrap_FXFileSelector_doesSaveUnder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyFileSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileSelector_doesSaveUnder",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileSelector_doesSaveUnder. Expected _FXPyFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXFileSelector_doesSaveUnder(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXFileSelector_reparent(_swigobj,_swigarg0)  (_swigobj->_reparent(_swigarg0))
static PyObject *_wrap_FXFileSelector_reparent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileSelector * _arg0;
    FXComposite * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","newparent", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXFileSelector_reparent",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileSelector_reparent. Expected _FXPyFileSelector_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXFileSelector_reparent. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileSelector_reparent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileSelector_setBackColor(_swigobj,_swigarg0)  (_swigobj->_setBackColor(_swigarg0))
static PyObject *_wrap_FXFileSelector_setBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileSelector * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXFileSelector_setBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileSelector_setBackColor. Expected _FXPyFileSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileSelector_setBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXFileDialogToFXDialogBox(void *ptr) {
    FXFileDialog *src;
    FXDialogBox *dest;
    src = (FXFileDialog *) ptr;
    dest = (FXDialogBox *) src;
    return (void *) dest;
}

static void *SwigFXFileDialogToFXTopWindow(void *ptr) {
    FXFileDialog *src;
    FXTopWindow *dest;
    src = (FXFileDialog *) ptr;
    dest = (FXTopWindow *) src;
    return (void *) dest;
}

static void *SwigFXFileDialogToFXShell(void *ptr) {
    FXFileDialog *src;
    FXShell *dest;
    src = (FXFileDialog *) ptr;
    dest = (FXShell *) src;
    return (void *) dest;
}

static void *SwigFXFileDialogToFXComposite(void *ptr) {
    FXFileDialog *src;
    FXComposite *dest;
    src = (FXFileDialog *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXFileDialogToFXWindow(void *ptr) {
    FXFileDialog *src;
    FXWindow *dest;
    src = (FXFileDialog *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXFileDialogToFXDrawable(void *ptr) {
    FXFileDialog *src;
    FXDrawable *dest;
    src = (FXFileDialog *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXFileDialogToFXId(void *ptr) {
    FXFileDialog *src;
    FXId *dest;
    src = (FXFileDialog *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXFileDialogToFXObject(void *ptr) {
    FXFileDialog *src;
    FXObject *dest;
    src = (FXFileDialog *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FX_FileDialog(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6) (new FXFileDialog(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6))
static PyObject *_wrap_new_FX_FileDialog(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileDialog * _result;
    FXWindow * _arg0;
    FXString * _arg1;
    FXuint  _arg2 = (FXuint ) 0;
    FXint  _arg3 = (FXint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 500;
    FXint  _arg6 = (FXint ) 300;
    PyObject * _obj0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "owner","name","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|iiiii:new_FX_FileDialog",_kwnames,&_obj0,&_obj1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6)) 
        return NULL;
{
    if (_obj0 == Py_None)
	_arg0 = NULL;
    else
	SWIG_GetPtrObj(_obj0, (void**) &_arg0, "_FXWindow_p");
}
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXFileDialog *)new_FX_FileDialog(_arg0,*_arg1,_arg2,_arg3,_arg4,_arg5,_arg6);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXFileDialog_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_FileDialog_setFilename(_swigobj,_swigarg0)  (_swigobj->setFilename(_swigarg0))
static PyObject *_wrap_FX_FileDialog_setFilename(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileDialog * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","path", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_FileDialog_setFilename",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileDialog_setFilename. Expected _FXFileDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_FileDialog_setFilename(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_FileDialog_getFilename(_swigobj)  (_swigobj->getFilename())
static PyObject *_wrap_FX_FileDialog_getFilename(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXFileDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileDialog_getFilename",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileDialog_getFilename. Expected _FXFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_FileDialog_getFilename(_arg0));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

static PyObject * FXFileDialog_getFilenames(FXFileDialog *self) {
      FXString* filenames=self->getFilenames();
      if(filenames){
        FXuint nfiles=0;
        register FXString* p=filenames;
        while(*p!=FXString::null){
          nfiles++; p++;
          }
        PyObject* obj=PyList_New(nfiles);
        for(FXuint i=0;i<nfiles;i++){
          PyList_SetItem(obj,i,PyString_FromString(filenames[i].text()));
          }
        delete[] filenames;
        return obj;
        }
      else{
        return PyList_New(0);
        }
    }
static PyObject *_wrap_FX_FileDialog_getFilenames(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    PyObject * _result;
    FXFileDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileDialog_getFilenames",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileDialog_getFilenames. Expected _FXFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (PyObject *)FXFileDialog_getFilenames(_arg0);

    FXPy_END_ALLOW_THREADS
}{
  _resultobj = _result;
}
    return _resultobj;
}

#define FX_FileDialog_setPattern(_swigobj,_swigarg0)  (_swigobj->setPattern(_swigarg0))
static PyObject *_wrap_FX_FileDialog_setPattern(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileDialog * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","ptrn", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_FileDialog_setPattern",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileDialog_setPattern. Expected _FXFileDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_FileDialog_setPattern(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_FileDialog_getPattern(_swigobj)  (_swigobj->getPattern())
static PyObject *_wrap_FX_FileDialog_getPattern(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXFileDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileDialog_getPattern",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileDialog_getPattern. Expected _FXFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_FileDialog_getPattern(_arg0));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

#define FX_FileDialog_setDirectory(_swigobj,_swigarg0)  (_swigobj->setDirectory(_swigarg0))
static PyObject *_wrap_FX_FileDialog_setDirectory(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileDialog * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","path", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_FileDialog_setDirectory",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileDialog_setDirectory. Expected _FXFileDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_FileDialog_setDirectory(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_FileDialog_getDirectory(_swigobj)  (_swigobj->getDirectory())
static PyObject *_wrap_FX_FileDialog_getDirectory(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXFileDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileDialog_getDirectory",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileDialog_getDirectory. Expected _FXFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_FileDialog_getDirectory(_arg0));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

#define FX_FileDialog_setPatternList(_swigobj,_swigarg0)  (_swigobj->setPatternList(_swigarg0))
static PyObject *_wrap_FX_FileDialog_setPatternList(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileDialog * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","patterns", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_FileDialog_setPatternList",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileDialog_setPatternList. Expected _FXFileDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_FileDialog_setPatternList(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_FileDialog_setCurrentPattern(_swigobj,_swigarg0)  (_swigobj->setCurrentPattern(_swigarg0))
static PyObject *_wrap_FX_FileDialog_setCurrentPattern(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileDialog * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","n", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_FileDialog_setCurrentPattern",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileDialog_setCurrentPattern. Expected _FXFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_FileDialog_setCurrentPattern(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_FileDialog_getCurrentPattern(_swigobj)  (_swigobj->getCurrentPattern())
static PyObject *_wrap_FX_FileDialog_getCurrentPattern(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXFileDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileDialog_getCurrentPattern",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileDialog_getCurrentPattern. Expected _FXFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_FileDialog_getCurrentPattern(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_FileDialog_getPatternText(_swigobj,_swigarg0)  (_swigobj->getPatternText(_swigarg0))
static PyObject *_wrap_FX_FileDialog_getPatternText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXFileDialog * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","patno", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_FileDialog_getPatternText",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileDialog_getPatternText. Expected _FXFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_FileDialog_getPatternText(_arg0,_arg1));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

#define FX_FileDialog_setPatternText(_swigobj,_swigarg0,_swigarg1)  (_swigobj->setPatternText(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_FileDialog_setPatternText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileDialog * _arg0;
    FXint  _arg1;
    FXString * _arg2;
    PyObject * _argo0 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "self","patno","text", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OiO:FX_FileDialog_setPatternText",_kwnames,&_argo0,&_arg1,&_obj2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileDialog_setPatternText. Expected _FXFileDialog_p.");
        return NULL;
        }
    }
{
    if (_obj2 == Py_None)
	_arg2 = new FXString;
    else if (!PyString_Check(_obj2)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg2 = new FXString(PyString_AsString(_obj2));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_FileDialog_setPatternText(_arg0,_arg1,*_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg2;
}
    return _resultobj;
}

#define FX_FileDialog_setItemSpace(_swigobj,_swigarg0)  (_swigobj->setItemSpace(_swigarg0))
static PyObject *_wrap_FX_FileDialog_setItemSpace(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileDialog * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","s", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_FileDialog_setItemSpace",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileDialog_setItemSpace. Expected _FXFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_FileDialog_setItemSpace(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_FileDialog_getItemSpace(_swigobj)  (_swigobj->getItemSpace())
static PyObject *_wrap_FX_FileDialog_getItemSpace(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXFileDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileDialog_getItemSpace",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileDialog_getItemSpace. Expected _FXFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_FileDialog_getItemSpace(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_FileDialog_setFileBoxStyle(_swigobj,_swigarg0)  (_swigobj->setFileBoxStyle(_swigarg0))
static PyObject *_wrap_FX_FileDialog_setFileBoxStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileDialog * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","style", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_FileDialog_setFileBoxStyle",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileDialog_setFileBoxStyle. Expected _FXFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_FileDialog_setFileBoxStyle(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_FileDialog_getFileBoxStyle(_swigobj)  (_swigobj->getFileBoxStyle())
static PyObject *_wrap_FX_FileDialog_getFileBoxStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXFileDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileDialog_getFileBoxStyle",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileDialog_getFileBoxStyle. Expected _FXFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )FX_FileDialog_getFileBoxStyle(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_FileDialog_setSelectMode(_swigobj,_swigarg0)  (_swigobj->setSelectMode(_swigarg0))
static PyObject *_wrap_FX_FileDialog_setSelectMode(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileDialog * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","mode", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_FileDialog_setSelectMode",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileDialog_setSelectMode. Expected _FXFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_FileDialog_setSelectMode(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_FileDialog_getSelectMode(_swigobj)  (_swigobj->getSelectMode())
static PyObject *_wrap_FX_FileDialog_getSelectMode(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXFileDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileDialog_getSelectMode",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileDialog_getSelectMode. Expected _FXFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )FX_FileDialog_getSelectMode(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_FileDialog_showReadOnly(_swigobj,_swigarg0)  (_swigobj->showReadOnly(_swigarg0))
static PyObject *_wrap_FX_FileDialog_showReadOnly(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileDialog * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","show", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FX_FileDialog_showReadOnly",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileDialog_showReadOnly. Expected _FXFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_FileDialog_showReadOnly(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_FileDialog_shownReadOnly(_swigobj)  (_swigobj->shownReadOnly())
static PyObject *_wrap_FX_FileDialog_shownReadOnly(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXFileDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileDialog_shownReadOnly",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileDialog_shownReadOnly. Expected _FXFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_FileDialog_shownReadOnly(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_FileDialog_setReadOnly(_swigobj,_swigarg0)  (_swigobj->setReadOnly(_swigarg0))
static PyObject *_wrap_FX_FileDialog_setReadOnly(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileDialog * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","state", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FX_FileDialog_setReadOnly",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileDialog_setReadOnly. Expected _FXFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_FileDialog_setReadOnly(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_FileDialog_getReadOnly(_swigobj)  (_swigobj->getReadOnly())
static PyObject *_wrap_FX_FileDialog_getReadOnly(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXFileDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileDialog_getReadOnly",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileDialog_getReadOnly. Expected _FXFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_FileDialog_getReadOnly(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

static PyObject *_wrap_FX_FileDialog_getOpenFilename(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXWindow * _arg0;
    FXString * _arg1;
    FXString * _arg2;
    FXString * _arg3 = (FXString *) &"*";
    FXint  _arg4 = (FXint ) 0;
    PyObject * _obj0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "owner","caption","path","patterns","initial", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO|Oi:FX_FileDialog_getOpenFilename",_kwnames,&_obj0,&_obj1,&_obj2,&_obj3,&_arg4)) 
        return NULL;
{
    if (_obj0 == Py_None)
	_arg0 = NULL;
    else
	SWIG_GetPtrObj(_obj0, (void**) &_arg0, "_FXWindow_p");
}
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    if (_obj2 == Py_None)
	_arg2 = new FXString;
    else if (!PyString_Check(_obj2)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg2 = new FXString(PyString_AsString(_obj2));
}
    if (_obj3)
{
    if (_obj3 == Py_None)
	_arg3 = new FXString;
    else if (!PyString_Check(_obj3)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg3 = new FXString(PyString_AsString(_obj3));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FXFileDialog::getOpenFilename(_arg0,*_arg1,*_arg2,*_arg3,_arg4));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _arg1;
}
{
    delete _arg2;
}
{
    delete _arg3;
}
{
    delete _result;
}
    return _resultobj;
}

static PyObject *_wrap_FX_FileDialog_getOpenFilenames(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXWindow * _arg0;
    FXString * _arg1;
    FXString * _arg2;
    FXString * _arg3 = (FXString *) &"*";
    FXint  _arg4 = (FXint ) 0;
    PyObject * _obj0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "owner","caption","path","patterns","initial", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO|Oi:FX_FileDialog_getOpenFilenames",_kwnames,&_obj0,&_obj1,&_obj2,&_obj3,&_arg4)) 
        return NULL;
{
    if (_obj0 == Py_None)
	_arg0 = NULL;
    else
	SWIG_GetPtrObj(_obj0, (void**) &_arg0, "_FXWindow_p");
}
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    if (_obj2 == Py_None)
	_arg2 = new FXString;
    else if (!PyString_Check(_obj2)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg2 = new FXString(PyString_AsString(_obj2));
}
    if (_obj3)
{
    if (_obj3 == Py_None)
	_arg3 = new FXString;
    else if (!PyString_Check(_obj3)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg3 = new FXString(PyString_AsString(_obj3));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXString *)FXFileDialog::getOpenFilenames(_arg0,*_arg1,*_arg2,*_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _arg1;
}
{
    delete _arg2;
}
{
    delete _arg3;
}
    return _resultobj;
}

static PyObject *_wrap_FX_FileDialog_getSaveFilename(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXWindow * _arg0;
    FXString * _arg1;
    FXString * _arg2;
    FXString * _arg3 = (FXString *) &"*";
    FXint  _arg4 = (FXint ) 0;
    PyObject * _obj0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "owner","caption","path","patterns","initial", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO|Oi:FX_FileDialog_getSaveFilename",_kwnames,&_obj0,&_obj1,&_obj2,&_obj3,&_arg4)) 
        return NULL;
{
    if (_obj0 == Py_None)
	_arg0 = NULL;
    else
	SWIG_GetPtrObj(_obj0, (void**) &_arg0, "_FXWindow_p");
}
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    if (_obj2 == Py_None)
	_arg2 = new FXString;
    else if (!PyString_Check(_obj2)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg2 = new FXString(PyString_AsString(_obj2));
}
    if (_obj3)
{
    if (_obj3 == Py_None)
	_arg3 = new FXString;
    else if (!PyString_Check(_obj3)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg3 = new FXString(PyString_AsString(_obj3));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FXFileDialog::getSaveFilename(_arg0,*_arg1,*_arg2,*_arg3,_arg4));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _arg1;
}
{
    delete _arg2;
}
{
    delete _arg3;
}
{
    delete _result;
}
    return _resultobj;
}

static PyObject *_wrap_FX_FileDialog_getOpenDirectory(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXWindow * _arg0;
    FXString * _arg1;
    FXString * _arg2;
    PyObject * _obj0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "owner","caption","path", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO:FX_FileDialog_getOpenDirectory",_kwnames,&_obj0,&_obj1,&_obj2)) 
        return NULL;
{
    if (_obj0 == Py_None)
	_arg0 = NULL;
    else
	SWIG_GetPtrObj(_obj0, (void**) &_arg0, "_FXWindow_p");
}
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    if (_obj2 == Py_None)
	_arg2 = new FXString;
    else if (!PyString_Check(_obj2)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg2 = new FXString(PyString_AsString(_obj2));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FXFileDialog::getOpenDirectory(_arg0,*_arg1,*_arg2));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _arg1;
}
{
    delete _arg2;
}
{
    delete _result;
}
    return _resultobj;
}

static void *SwigFXPyFileDialogToFXFileDialog(void *ptr) {
    FXPyFileDialog *src;
    FXFileDialog *dest;
    src = (FXPyFileDialog *) ptr;
    dest = (FXFileDialog *) src;
    return (void *) dest;
}

static void *SwigFXPyFileDialogToFXDialogBox(void *ptr) {
    FXPyFileDialog *src;
    FXDialogBox *dest;
    src = (FXPyFileDialog *) ptr;
    dest = (FXDialogBox *) src;
    return (void *) dest;
}

static void *SwigFXPyFileDialogToFXTopWindow(void *ptr) {
    FXPyFileDialog *src;
    FXTopWindow *dest;
    src = (FXPyFileDialog *) ptr;
    dest = (FXTopWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyFileDialogToFXShell(void *ptr) {
    FXPyFileDialog *src;
    FXShell *dest;
    src = (FXPyFileDialog *) ptr;
    dest = (FXShell *) src;
    return (void *) dest;
}

static void *SwigFXPyFileDialogToFXComposite(void *ptr) {
    FXPyFileDialog *src;
    FXComposite *dest;
    src = (FXPyFileDialog *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXPyFileDialogToFXWindow(void *ptr) {
    FXPyFileDialog *src;
    FXWindow *dest;
    src = (FXPyFileDialog *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyFileDialogToFXDrawable(void *ptr) {
    FXPyFileDialog *src;
    FXDrawable *dest;
    src = (FXPyFileDialog *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPyFileDialogToFXId(void *ptr) {
    FXPyFileDialog *src;
    FXId *dest;
    src = (FXPyFileDialog *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPyFileDialogToFXObject(void *ptr) {
    FXPyFileDialog *src;
    FXObject *dest;
    src = (FXPyFileDialog *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXFileDialog(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6) (new FXPyFileDialog(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6))
static PyObject *_wrap_new_FXFileDialog(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileDialog * _result;
    FXWindow * _arg0;
    FXString * _arg1;
    FXuint  _arg2 = (FXuint ) 0;
    FXint  _arg3 = (FXint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 500;
    FXint  _arg6 = (FXint ) 300;
    PyObject * _obj0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "owner","name","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|iiiii:new_FXFileDialog",_kwnames,&_obj0,&_obj1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6)) 
        return NULL;
{
    if (_obj0 == Py_None)
	_arg0 = NULL;
    else
	SWIG_GetPtrObj(_obj0, (void**) &_arg0, "_FXWindow_p");
}
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyFileDialog *)new_FXFileDialog(_arg0,*_arg1,_arg2,_arg3,_arg4,_arg5,_arg6);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyFileDialog_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    delete _arg1;
}
    return _resultobj;
}

#define FXFileDialog_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXFileDialog_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyFileDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXFileDialog_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileDialog_onDefault. Expected _FXPyFileDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXFileDialog_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXFileDialog_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXFileDialog_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileDialog_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileDialog_create. Expected _FXPyFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileDialog_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileDialog_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXFileDialog_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileDialog_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileDialog_destroy. Expected _FXPyFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileDialog_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileDialog_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXFileDialog_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileDialog_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileDialog_detach. Expected _FXPyFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileDialog_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileDialog_resize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_resize(_swigarg0,_swigarg1))
static PyObject *_wrap_FXFileDialog_resize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileDialog * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXFileDialog_resize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileDialog_resize. Expected _FXPyFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileDialog_resize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileDialog_getDefaultWidth(_swigobj)  (_swigobj->_getDefaultWidth())
static PyObject *_wrap_FXFileDialog_getDefaultWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyFileDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileDialog_getDefaultWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileDialog_getDefaultWidth. Expected _FXPyFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXFileDialog_getDefaultWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXFileDialog_getDefaultHeight(_swigobj)  (_swigobj->_getDefaultHeight())
static PyObject *_wrap_FXFileDialog_getDefaultHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyFileDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileDialog_getDefaultHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileDialog_getDefaultHeight. Expected _FXPyFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXFileDialog_getDefaultHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXFileDialog_show(_swigobj)  (_swigobj->_show())
static PyObject *_wrap_FXFileDialog_show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileDialog_show",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileDialog_show. Expected _FXPyFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileDialog_show(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileDialog_hide(_swigobj)  (_swigobj->_hide())
static PyObject *_wrap_FXFileDialog_hide(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileDialog_hide",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileDialog_hide. Expected _FXPyFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileDialog_hide(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileDialog_enable(_swigobj)  (_swigobj->_enable())
static PyObject *_wrap_FXFileDialog_enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileDialog_enable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileDialog_enable. Expected _FXPyFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileDialog_enable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileDialog_disable(_swigobj)  (_swigobj->_disable())
static PyObject *_wrap_FXFileDialog_disable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileDialog_disable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileDialog_disable. Expected _FXPyFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileDialog_disable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileDialog_canFocus(_swigobj)  (_swigobj->_canFocus())
static PyObject *_wrap_FXFileDialog_canFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyFileDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileDialog_canFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileDialog_canFocus. Expected _FXPyFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXFileDialog_canFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXFileDialog_setFocus(_swigobj)  (_swigobj->_setFocus())
static PyObject *_wrap_FXFileDialog_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileDialog_setFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileDialog_setFocus. Expected _FXPyFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileDialog_setFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileDialog_killFocus(_swigobj)  (_swigobj->_killFocus())
static PyObject *_wrap_FXFileDialog_killFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileDialog_killFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileDialog_killFocus. Expected _FXPyFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileDialog_killFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileDialog_setDefault(_swigobj,_swigarg0)  (_swigobj->_setDefault(_swigarg0))
static PyObject *_wrap_FXFileDialog_setDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileDialog * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FXFileDialog_setDefault",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileDialog_setDefault. Expected _FXPyFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileDialog_setDefault(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileDialog_recalc(_swigobj)  (_swigobj->_recalc())
static PyObject *_wrap_FXFileDialog_recalc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileDialog_recalc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileDialog_recalc. Expected _FXPyFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileDialog_recalc(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileDialog_layout(_swigobj)  (_swigobj->_layout())
static PyObject *_wrap_FXFileDialog_layout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileDialog_layout",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileDialog_layout. Expected _FXPyFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileDialog_layout(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileDialog_lower(_swigobj)  (_swigobj->_lowerWindow())
static PyObject *_wrap_FXFileDialog_lower(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileDialog_lower",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileDialog_lower. Expected _FXPyFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileDialog_lower(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileDialog_move(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_move(_swigarg0,_swigarg1))
static PyObject *_wrap_FXFileDialog_move(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileDialog * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXFileDialog_move",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileDialog_move. Expected _FXPyFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileDialog_move(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileDialog_position(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->_position(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FXFileDialog_position(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileDialog * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FXFileDialog_position",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileDialog_position. Expected _FXPyFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileDialog_position(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileDialog_isComposite(_swigobj)  (_swigobj->_isComposite())
static PyObject *_wrap_FXFileDialog_isComposite(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyFileDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileDialog_isComposite",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileDialog_isComposite. Expected _FXPyFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXFileDialog_isComposite(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXFileDialog_contains(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_contains(_swigarg0,_swigarg1))
static PyObject *_wrap_FXFileDialog_contains(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyFileDialog * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXFileDialog_contains",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileDialog_contains. Expected _FXPyFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXFileDialog_contains(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXFileDialog_getWidthForHeight(_swigobj,_swigarg0)  (_swigobj->_getWidthForHeight(_swigarg0))
static PyObject *_wrap_FXFileDialog_getWidthForHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyFileDialog * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXFileDialog_getWidthForHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileDialog_getWidthForHeight. Expected _FXPyFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXFileDialog_getWidthForHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXFileDialog_getHeightForWidth(_swigobj,_swigarg0)  (_swigobj->_getHeightForWidth(_swigarg0))
static PyObject *_wrap_FXFileDialog_getHeightForWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyFileDialog * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXFileDialog_getHeightForWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileDialog_getHeightForWidth. Expected _FXPyFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXFileDialog_getHeightForWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXFileDialog_doesSaveUnder(_swigobj)  (_swigobj->_doesSaveUnder())
static PyObject *_wrap_FXFileDialog_doesSaveUnder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyFileDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileDialog_doesSaveUnder",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileDialog_doesSaveUnder. Expected _FXPyFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXFileDialog_doesSaveUnder(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXFileDialog_reparent(_swigobj,_swigarg0)  (_swigobj->_reparent(_swigarg0))
static PyObject *_wrap_FXFileDialog_reparent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileDialog * _arg0;
    FXComposite * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","newparent", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXFileDialog_reparent",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileDialog_reparent. Expected _FXPyFileDialog_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXFileDialog_reparent. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileDialog_reparent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileDialog_setBackColor(_swigobj,_swigarg0)  (_swigobj->_setBackColor(_swigarg0))
static PyObject *_wrap_FXFileDialog_setBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileDialog * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXFileDialog_setBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileDialog_setBackColor. Expected _FXPyFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileDialog_setBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileDialog_show2(_swigobj,_swigarg0)  (_swigobj->_show(_swigarg0))
static PyObject *_wrap_FXFileDialog_show2(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileDialog * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","placement", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXFileDialog_show2",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileDialog_show2. Expected _FXPyFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileDialog_show2(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileDialog_iconify(_swigobj)  (_swigobj->_iconify())
static PyObject *_wrap_FXFileDialog_iconify(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileDialog_iconify",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileDialog_iconify. Expected _FXPyFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileDialog_iconify(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileDialog_deiconify(_swigobj)  (_swigobj->_deiconify())
static PyObject *_wrap_FXFileDialog_deiconify(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileDialog_deiconify",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileDialog_deiconify. Expected _FXPyFileDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFileDialog_deiconify(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXColorSelectorToFXPacker(void *ptr) {
    FXColorSelector *src;
    FXPacker *dest;
    src = (FXColorSelector *) ptr;
    dest = (FXPacker *) src;
    return (void *) dest;
}

static void *SwigFXColorSelectorToFXComposite(void *ptr) {
    FXColorSelector *src;
    FXComposite *dest;
    src = (FXColorSelector *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXColorSelectorToFXWindow(void *ptr) {
    FXColorSelector *src;
    FXWindow *dest;
    src = (FXColorSelector *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXColorSelectorToFXDrawable(void *ptr) {
    FXColorSelector *src;
    FXDrawable *dest;
    src = (FXColorSelector *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXColorSelectorToFXId(void *ptr) {
    FXColorSelector *src;
    FXId *dest;
    src = (FXColorSelector *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXColorSelectorToFXObject(void *ptr) {
    FXColorSelector *src;
    FXObject *dest;
    src = (FXColorSelector *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define FX_ColorSelector_onCmdColor(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdColor(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ColorSelector_onCmdColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXColorSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ColorSelector_onCmdColor",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorSelector_onCmdColor. Expected _FXColorSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ColorSelector_onCmdColor. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ColorSelector_onCmdColor(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ColorSelector_onChgColor(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onChgColor(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ColorSelector_onChgColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXColorSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ColorSelector_onChgColor",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorSelector_onChgColor. Expected _FXColorSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ColorSelector_onChgColor. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ColorSelector_onChgColor(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ColorSelector_onCmdWell(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdWell(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ColorSelector_onCmdWell(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXColorSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ColorSelector_onCmdWell",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorSelector_onCmdWell. Expected _FXColorSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ColorSelector_onCmdWell. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ColorSelector_onCmdWell(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ColorSelector_onChgWell(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onChgWell(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ColorSelector_onChgWell(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXColorSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ColorSelector_onChgWell",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorSelector_onChgWell. Expected _FXColorSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ColorSelector_onChgWell. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ColorSelector_onChgWell(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ColorSelector_onCmdRGBSlider(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdRGBSlider(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ColorSelector_onCmdRGBSlider(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXColorSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ColorSelector_onCmdRGBSlider",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorSelector_onCmdRGBSlider. Expected _FXColorSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ColorSelector_onCmdRGBSlider. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ColorSelector_onCmdRGBSlider(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ColorSelector_onUpdRGBSlider(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdRGBSlider(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ColorSelector_onUpdRGBSlider(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXColorSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ColorSelector_onUpdRGBSlider",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorSelector_onUpdRGBSlider. Expected _FXColorSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ColorSelector_onUpdRGBSlider. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ColorSelector_onUpdRGBSlider(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ColorSelector_onCmdRGBText(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdRGBText(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ColorSelector_onCmdRGBText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXColorSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ColorSelector_onCmdRGBText",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorSelector_onCmdRGBText. Expected _FXColorSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ColorSelector_onCmdRGBText. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ColorSelector_onCmdRGBText(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ColorSelector_onUpdRGBText(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdRGBText(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ColorSelector_onUpdRGBText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXColorSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ColorSelector_onUpdRGBText",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorSelector_onUpdRGBText. Expected _FXColorSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ColorSelector_onUpdRGBText. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ColorSelector_onUpdRGBText(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ColorSelector_onCmdHSVSlider(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdHSVSlider(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ColorSelector_onCmdHSVSlider(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXColorSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ColorSelector_onCmdHSVSlider",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorSelector_onCmdHSVSlider. Expected _FXColorSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ColorSelector_onCmdHSVSlider. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ColorSelector_onCmdHSVSlider(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ColorSelector_onUpdHSVSlider(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdHSVSlider(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ColorSelector_onUpdHSVSlider(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXColorSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ColorSelector_onUpdHSVSlider",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorSelector_onUpdHSVSlider. Expected _FXColorSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ColorSelector_onUpdHSVSlider. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ColorSelector_onUpdHSVSlider(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ColorSelector_onCmdHSVText(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdHSVText(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ColorSelector_onCmdHSVText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXColorSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ColorSelector_onCmdHSVText",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorSelector_onCmdHSVText. Expected _FXColorSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ColorSelector_onCmdHSVText. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ColorSelector_onCmdHSVText(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ColorSelector_onUpdHSVText(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdHSVText(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ColorSelector_onUpdHSVText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXColorSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ColorSelector_onUpdHSVText",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorSelector_onUpdHSVText. Expected _FXColorSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ColorSelector_onUpdHSVText. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ColorSelector_onUpdHSVText(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ColorSelector_onCmdCMYSlider(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdCMYSlider(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ColorSelector_onCmdCMYSlider(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXColorSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ColorSelector_onCmdCMYSlider",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorSelector_onCmdCMYSlider. Expected _FXColorSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ColorSelector_onCmdCMYSlider. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ColorSelector_onCmdCMYSlider(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ColorSelector_onUpdCMYSlider(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdCMYSlider(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ColorSelector_onUpdCMYSlider(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXColorSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ColorSelector_onUpdCMYSlider",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorSelector_onUpdCMYSlider. Expected _FXColorSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ColorSelector_onUpdCMYSlider. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ColorSelector_onUpdCMYSlider(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ColorSelector_onCmdCMYText(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdCMYText(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ColorSelector_onCmdCMYText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXColorSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ColorSelector_onCmdCMYText",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorSelector_onCmdCMYText. Expected _FXColorSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ColorSelector_onCmdCMYText. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ColorSelector_onCmdCMYText(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ColorSelector_onUpdCMYText(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdCMYText(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ColorSelector_onUpdCMYText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXColorSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ColorSelector_onUpdCMYText",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorSelector_onUpdCMYText. Expected _FXColorSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ColorSelector_onUpdCMYText. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ColorSelector_onUpdCMYText(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ColorSelector_onCmdList(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdList(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ColorSelector_onCmdList(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXColorSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ColorSelector_onCmdList",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorSelector_onCmdList. Expected _FXColorSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ColorSelector_onCmdList. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ColorSelector_onCmdList(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ColorSelector_onCmdCustomWell(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdCustomWell(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ColorSelector_onCmdCustomWell(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXColorSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ColorSelector_onCmdCustomWell",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorSelector_onCmdCustomWell. Expected _FXColorSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ColorSelector_onCmdCustomWell. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ColorSelector_onCmdCustomWell(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ColorSelector_onChgCustomWell(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onChgCustomWell(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ColorSelector_onChgCustomWell(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXColorSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ColorSelector_onChgCustomWell",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorSelector_onChgCustomWell. Expected _FXColorSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ColorSelector_onChgCustomWell. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ColorSelector_onChgCustomWell(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ColorSelector_onCmdSetValue(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSetValue(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ColorSelector_onCmdSetValue(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXColorSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ColorSelector_onCmdSetValue",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorSelector_onCmdSetValue. Expected _FXColorSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ColorSelector_onCmdSetValue. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ColorSelector_onCmdSetValue(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ColorSelector_onCmdActivePane(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdActivePane(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ColorSelector_onCmdActivePane(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXColorSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ColorSelector_onCmdActivePane",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorSelector_onCmdActivePane. Expected _FXColorSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ColorSelector_onCmdActivePane. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ColorSelector_onCmdActivePane(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ColorSelector_onCmdAlphaSlider(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdAlphaSlider(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ColorSelector_onCmdAlphaSlider(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXColorSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ColorSelector_onCmdAlphaSlider",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorSelector_onCmdAlphaSlider. Expected _FXColorSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ColorSelector_onCmdAlphaSlider. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ColorSelector_onCmdAlphaSlider(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ColorSelector_onUpdAlphaSlider(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdAlphaSlider(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ColorSelector_onUpdAlphaSlider(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXColorSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ColorSelector_onUpdAlphaSlider",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorSelector_onUpdAlphaSlider. Expected _FXColorSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ColorSelector_onUpdAlphaSlider. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ColorSelector_onUpdAlphaSlider(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ColorSelector_onCmdAlphaText(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdAlphaText(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ColorSelector_onCmdAlphaText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXColorSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ColorSelector_onCmdAlphaText",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorSelector_onCmdAlphaText. Expected _FXColorSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ColorSelector_onCmdAlphaText. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ColorSelector_onCmdAlphaText(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ColorSelector_onUpdAlphaText(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdAlphaText(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ColorSelector_onUpdAlphaText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXColorSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ColorSelector_onUpdAlphaText",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorSelector_onUpdAlphaText. Expected _FXColorSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ColorSelector_onUpdAlphaText. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ColorSelector_onUpdAlphaText(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ColorSelector_onUpdAlphaLabel(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdAlphaLabel(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ColorSelector_onUpdAlphaLabel(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXColorSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ColorSelector_onUpdAlphaLabel",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorSelector_onUpdAlphaLabel. Expected _FXColorSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ColorSelector_onUpdAlphaLabel. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ColorSelector_onUpdAlphaLabel(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ColorSelector_onCmdWheel(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdWheel(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ColorSelector_onCmdWheel(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXColorSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ColorSelector_onCmdWheel",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorSelector_onCmdWheel. Expected _FXColorSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ColorSelector_onCmdWheel. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ColorSelector_onCmdWheel(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ColorSelector_onUpdWheel(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdWheel(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ColorSelector_onUpdWheel(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXColorSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ColorSelector_onUpdWheel",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorSelector_onUpdWheel. Expected _FXColorSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ColorSelector_onUpdWheel. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ColorSelector_onUpdWheel(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ColorSelector_onCmdBar(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdBar(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ColorSelector_onCmdBar(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXColorSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ColorSelector_onCmdBar",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorSelector_onCmdBar. Expected _FXColorSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ColorSelector_onCmdBar. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ColorSelector_onCmdBar(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ColorSelector_onUpdBar(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdBar(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ColorSelector_onUpdBar(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXColorSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ColorSelector_onUpdBar",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorSelector_onUpdBar. Expected _FXColorSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ColorSelector_onUpdBar. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ColorSelector_onUpdBar(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ColorSelector_onCmdColorPick(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdColorPick(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ColorSelector_onCmdColorPick(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXColorSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ColorSelector_onCmdColorPick",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorSelector_onCmdColorPick. Expected _FXColorSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ColorSelector_onCmdColorPick. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ColorSelector_onCmdColorPick(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define new_FX_ColorSelector(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7) (new FXColorSelector(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7))
static PyObject *_wrap_new_FX_ColorSelector(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColorSelector * _result;
    FXComposite * _arg0;
    FXObject * _arg1 = (FXObject *) NULL;
    FXSelector  _arg2 = (FXSelector ) 0;
    FXuint  _arg3 = (FXuint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "p","tgt","sel","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|Oiiiiii:new_FX_ColorSelector",_kwnames,&_argo0,&_obj1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FX_ColorSelector. Expected _FXComposite_p.");
        return NULL;
        }
    }
    if (_obj1)
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColorSelector *)new_FX_ColorSelector(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXColorSelector_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_ColorSelector_acceptButton(_swigobj)  (_swigobj->acceptButton())
static PyObject *_wrap_FX_ColorSelector_acceptButton(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXButton * _result;
    FXColorSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_ColorSelector_acceptButton",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorSelector_acceptButton. Expected _FXColorSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXButton *)FX_ColorSelector_acceptButton(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_ColorSelector_cancelButton(_swigobj)  (_swigobj->cancelButton())
static PyObject *_wrap_FX_ColorSelector_cancelButton(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXButton * _result;
    FXColorSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_ColorSelector_cancelButton",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorSelector_cancelButton. Expected _FXColorSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXButton *)FX_ColorSelector_cancelButton(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_ColorSelector_setRGBA(_swigobj,_swigarg0)  (_swigobj->setRGBA(_swigarg0))
static PyObject *_wrap_FX_ColorSelector_setRGBA(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColorSelector * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_ColorSelector_setRGBA",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorSelector_setRGBA. Expected _FXColorSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_ColorSelector_setRGBA(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_ColorSelector_getRGBA(_swigobj)  (_swigobj->getRGBA())
static PyObject *_wrap_FX_ColorSelector_getRGBA(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXColorSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_ColorSelector_getRGBA",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorSelector_getRGBA. Expected _FXColorSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FX_ColorSelector_getRGBA(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_ColorSelector_isOpaqueOnly(_swigobj)  (_swigobj->isOpaqueOnly())
static PyObject *_wrap_FX_ColorSelector_isOpaqueOnly(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXColorSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_ColorSelector_isOpaqueOnly",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorSelector_isOpaqueOnly. Expected _FXColorSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_ColorSelector_isOpaqueOnly(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_ColorSelector_setOpaqueOnly(_swigobj,_swigarg0)  (_swigobj->setOpaqueOnly(_swigarg0))
static PyObject *_wrap_FX_ColorSelector_setOpaqueOnly(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColorSelector * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","opaque", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FX_ColorSelector_setOpaqueOnly",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorSelector_setOpaqueOnly. Expected _FXColorSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_ColorSelector_setOpaqueOnly(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXPyColorSelectorToFXColorSelector(void *ptr) {
    FXPyColorSelector *src;
    FXColorSelector *dest;
    src = (FXPyColorSelector *) ptr;
    dest = (FXColorSelector *) src;
    return (void *) dest;
}

static void *SwigFXPyColorSelectorToFXPacker(void *ptr) {
    FXPyColorSelector *src;
    FXPacker *dest;
    src = (FXPyColorSelector *) ptr;
    dest = (FXPacker *) src;
    return (void *) dest;
}

static void *SwigFXPyColorSelectorToFXComposite(void *ptr) {
    FXPyColorSelector *src;
    FXComposite *dest;
    src = (FXPyColorSelector *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXPyColorSelectorToFXWindow(void *ptr) {
    FXPyColorSelector *src;
    FXWindow *dest;
    src = (FXPyColorSelector *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyColorSelectorToFXDrawable(void *ptr) {
    FXPyColorSelector *src;
    FXDrawable *dest;
    src = (FXPyColorSelector *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPyColorSelectorToFXId(void *ptr) {
    FXPyColorSelector *src;
    FXId *dest;
    src = (FXPyColorSelector *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPyColorSelectorToFXObject(void *ptr) {
    FXPyColorSelector *src;
    FXObject *dest;
    src = (FXPyColorSelector *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXColorSelector(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7) (new FXPyColorSelector(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7))
static PyObject *_wrap_new_FXColorSelector(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorSelector * _result;
    FXComposite * _arg0;
    FXObject * _arg1 = (FXObject *) NULL;
    FXSelector  _arg2 = (FXSelector ) 0;
    FXuint  _arg3 = (FXuint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "p","tgt","sel","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|Oiiiiii:new_FXColorSelector",_kwnames,&_argo0,&_obj1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FXColorSelector. Expected _FXComposite_p.");
        return NULL;
        }
    }
    if (_obj1)
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyColorSelector *)new_FXColorSelector(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyColorSelector_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FXColorSelector_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXColorSelector_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyColorSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXColorSelector_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorSelector_onDefault. Expected _FXPyColorSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXColorSelector_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXColorSelector_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXColorSelector_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXColorSelector_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorSelector_create. Expected _FXPyColorSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXColorSelector_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXColorSelector_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXColorSelector_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXColorSelector_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorSelector_destroy. Expected _FXPyColorSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXColorSelector_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXColorSelector_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXColorSelector_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXColorSelector_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorSelector_detach. Expected _FXPyColorSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXColorSelector_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXColorSelector_resize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_resize(_swigarg0,_swigarg1))
static PyObject *_wrap_FXColorSelector_resize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorSelector * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXColorSelector_resize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorSelector_resize. Expected _FXPyColorSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXColorSelector_resize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXColorSelector_getDefaultWidth(_swigobj)  (_swigobj->_getDefaultWidth())
static PyObject *_wrap_FXColorSelector_getDefaultWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyColorSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXColorSelector_getDefaultWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorSelector_getDefaultWidth. Expected _FXPyColorSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXColorSelector_getDefaultWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXColorSelector_getDefaultHeight(_swigobj)  (_swigobj->_getDefaultHeight())
static PyObject *_wrap_FXColorSelector_getDefaultHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyColorSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXColorSelector_getDefaultHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorSelector_getDefaultHeight. Expected _FXPyColorSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXColorSelector_getDefaultHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXColorSelector_show(_swigobj)  (_swigobj->_show())
static PyObject *_wrap_FXColorSelector_show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXColorSelector_show",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorSelector_show. Expected _FXPyColorSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXColorSelector_show(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXColorSelector_hide(_swigobj)  (_swigobj->_hide())
static PyObject *_wrap_FXColorSelector_hide(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXColorSelector_hide",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorSelector_hide. Expected _FXPyColorSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXColorSelector_hide(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXColorSelector_enable(_swigobj)  (_swigobj->_enable())
static PyObject *_wrap_FXColorSelector_enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXColorSelector_enable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorSelector_enable. Expected _FXPyColorSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXColorSelector_enable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXColorSelector_disable(_swigobj)  (_swigobj->_disable())
static PyObject *_wrap_FXColorSelector_disable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXColorSelector_disable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorSelector_disable. Expected _FXPyColorSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXColorSelector_disable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXColorSelector_canFocus(_swigobj)  (_swigobj->_canFocus())
static PyObject *_wrap_FXColorSelector_canFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyColorSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXColorSelector_canFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorSelector_canFocus. Expected _FXPyColorSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXColorSelector_canFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXColorSelector_setFocus(_swigobj)  (_swigobj->_setFocus())
static PyObject *_wrap_FXColorSelector_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXColorSelector_setFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorSelector_setFocus. Expected _FXPyColorSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXColorSelector_setFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXColorSelector_killFocus(_swigobj)  (_swigobj->_killFocus())
static PyObject *_wrap_FXColorSelector_killFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXColorSelector_killFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorSelector_killFocus. Expected _FXPyColorSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXColorSelector_killFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXColorSelector_setDefault(_swigobj,_swigarg0)  (_swigobj->_setDefault(_swigarg0))
static PyObject *_wrap_FXColorSelector_setDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorSelector * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FXColorSelector_setDefault",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorSelector_setDefault. Expected _FXPyColorSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXColorSelector_setDefault(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXColorSelector_recalc(_swigobj)  (_swigobj->_recalc())
static PyObject *_wrap_FXColorSelector_recalc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXColorSelector_recalc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorSelector_recalc. Expected _FXPyColorSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXColorSelector_recalc(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXColorSelector_layout(_swigobj)  (_swigobj->_layout())
static PyObject *_wrap_FXColorSelector_layout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXColorSelector_layout",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorSelector_layout. Expected _FXPyColorSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXColorSelector_layout(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXColorSelector_lower(_swigobj)  (_swigobj->_lowerWindow())
static PyObject *_wrap_FXColorSelector_lower(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXColorSelector_lower",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorSelector_lower. Expected _FXPyColorSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXColorSelector_lower(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXColorSelector_move(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_move(_swigarg0,_swigarg1))
static PyObject *_wrap_FXColorSelector_move(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorSelector * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXColorSelector_move",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorSelector_move. Expected _FXPyColorSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXColorSelector_move(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXColorSelector_position(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->_position(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FXColorSelector_position(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorSelector * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FXColorSelector_position",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorSelector_position. Expected _FXPyColorSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXColorSelector_position(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXColorSelector_isComposite(_swigobj)  (_swigobj->_isComposite())
static PyObject *_wrap_FXColorSelector_isComposite(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyColorSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXColorSelector_isComposite",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorSelector_isComposite. Expected _FXPyColorSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXColorSelector_isComposite(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXColorSelector_contains(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_contains(_swigarg0,_swigarg1))
static PyObject *_wrap_FXColorSelector_contains(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyColorSelector * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXColorSelector_contains",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorSelector_contains. Expected _FXPyColorSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXColorSelector_contains(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXColorSelector_getWidthForHeight(_swigobj,_swigarg0)  (_swigobj->_getWidthForHeight(_swigarg0))
static PyObject *_wrap_FXColorSelector_getWidthForHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyColorSelector * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXColorSelector_getWidthForHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorSelector_getWidthForHeight. Expected _FXPyColorSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXColorSelector_getWidthForHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXColorSelector_getHeightForWidth(_swigobj,_swigarg0)  (_swigobj->_getHeightForWidth(_swigarg0))
static PyObject *_wrap_FXColorSelector_getHeightForWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyColorSelector * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXColorSelector_getHeightForWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorSelector_getHeightForWidth. Expected _FXPyColorSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXColorSelector_getHeightForWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXColorSelector_doesSaveUnder(_swigobj)  (_swigobj->_doesSaveUnder())
static PyObject *_wrap_FXColorSelector_doesSaveUnder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyColorSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXColorSelector_doesSaveUnder",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorSelector_doesSaveUnder. Expected _FXPyColorSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXColorSelector_doesSaveUnder(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXColorSelector_reparent(_swigobj,_swigarg0)  (_swigobj->_reparent(_swigarg0))
static PyObject *_wrap_FXColorSelector_reparent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorSelector * _arg0;
    FXComposite * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","newparent", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXColorSelector_reparent",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorSelector_reparent. Expected _FXPyColorSelector_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXColorSelector_reparent. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXColorSelector_reparent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXColorSelector_setBackColor(_swigobj,_swigarg0)  (_swigobj->_setBackColor(_swigarg0))
static PyObject *_wrap_FXColorSelector_setBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorSelector * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXColorSelector_setBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorSelector_setBackColor. Expected _FXPyColorSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXColorSelector_setBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXColorDialogToFXDialogBox(void *ptr) {
    FXColorDialog *src;
    FXDialogBox *dest;
    src = (FXColorDialog *) ptr;
    dest = (FXDialogBox *) src;
    return (void *) dest;
}

static void *SwigFXColorDialogToFXTopWindow(void *ptr) {
    FXColorDialog *src;
    FXTopWindow *dest;
    src = (FXColorDialog *) ptr;
    dest = (FXTopWindow *) src;
    return (void *) dest;
}

static void *SwigFXColorDialogToFXShell(void *ptr) {
    FXColorDialog *src;
    FXShell *dest;
    src = (FXColorDialog *) ptr;
    dest = (FXShell *) src;
    return (void *) dest;
}

static void *SwigFXColorDialogToFXComposite(void *ptr) {
    FXColorDialog *src;
    FXComposite *dest;
    src = (FXColorDialog *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXColorDialogToFXWindow(void *ptr) {
    FXColorDialog *src;
    FXWindow *dest;
    src = (FXColorDialog *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXColorDialogToFXDrawable(void *ptr) {
    FXColorDialog *src;
    FXDrawable *dest;
    src = (FXColorDialog *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXColorDialogToFXId(void *ptr) {
    FXColorDialog *src;
    FXId *dest;
    src = (FXColorDialog *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXColorDialogToFXObject(void *ptr) {
    FXColorDialog *src;
    FXObject *dest;
    src = (FXColorDialog *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define FX_ColorDialog_onChgColor(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onChgColor(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ColorDialog_onChgColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXColorDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ColorDialog_onChgColor",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorDialog_onChgColor. Expected _FXColorDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ColorDialog_onChgColor. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ColorDialog_onChgColor(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ColorDialog_onCmdColor(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdColor(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ColorDialog_onCmdColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXColorDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ColorDialog_onCmdColor",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorDialog_onCmdColor. Expected _FXColorDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ColorDialog_onCmdColor. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ColorDialog_onCmdColor(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define new_FX_ColorDialog(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6) (new FXColorDialog(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6))
static PyObject *_wrap_new_FX_ColorDialog(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColorDialog * _result;
    FXWindow * _arg0;
    FXString * _arg1;
    FXuint  _arg2 = (FXuint ) 0;
    FXint  _arg3 = (FXint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    PyObject * _obj0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "owner","name","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|iiiii:new_FX_ColorDialog",_kwnames,&_obj0,&_obj1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6)) 
        return NULL;
{
    if (_obj0 == Py_None)
	_arg0 = NULL;
    else
	SWIG_GetPtrObj(_obj0, (void**) &_arg0, "_FXWindow_p");
}
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColorDialog *)new_FX_ColorDialog(_arg0,*_arg1,_arg2,_arg3,_arg4,_arg5,_arg6);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXColorDialog_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_ColorDialog_setRGBA(_swigobj,_swigarg0)  (_swigobj->setRGBA(_swigarg0))
static PyObject *_wrap_FX_ColorDialog_setRGBA(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColorDialog * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_ColorDialog_setRGBA",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorDialog_setRGBA. Expected _FXColorDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_ColorDialog_setRGBA(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_ColorDialog_getRGBA(_swigobj)  (_swigobj->getRGBA())
static PyObject *_wrap_FX_ColorDialog_getRGBA(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColor  _result;
    FXColorDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_ColorDialog_getRGBA",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorDialog_getRGBA. Expected _FXColorDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXColor )FX_ColorDialog_getRGBA(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_ColorDialog_isOpaqueOnly(_swigobj)  (_swigobj->isOpaqueOnly())
static PyObject *_wrap_FX_ColorDialog_isOpaqueOnly(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXColorDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_ColorDialog_isOpaqueOnly",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorDialog_isOpaqueOnly. Expected _FXColorDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_ColorDialog_isOpaqueOnly(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FX_ColorDialog_setOpaqueOnly(_swigobj,_swigarg0)  (_swigobj->setOpaqueOnly(_swigarg0))
static PyObject *_wrap_FX_ColorDialog_setOpaqueOnly(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXColorDialog * _arg0;
    FXbool  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","forceopaque", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Ob:FX_ColorDialog_setOpaqueOnly",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXColorDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ColorDialog_setOpaqueOnly. Expected _FXColorDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_ColorDialog_setOpaqueOnly(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXPyColorDialogToFXColorDialog(void *ptr) {
    FXPyColorDialog *src;
    FXColorDialog *dest;
    src = (FXPyColorDialog *) ptr;
    dest = (FXColorDialog *) src;
    return (void *) dest;
}

static void *SwigFXPyColorDialogToFXDialogBox(void *ptr) {
    FXPyColorDialog *src;
    FXDialogBox *dest;
    src = (FXPyColorDialog *) ptr;
    dest = (FXDialogBox *) src;
    return (void *) dest;
}

static void *SwigFXPyColorDialogToFXTopWindow(void *ptr) {
    FXPyColorDialog *src;
    FXTopWindow *dest;
    src = (FXPyColorDialog *) ptr;
    dest = (FXTopWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyColorDialogToFXShell(void *ptr) {
    FXPyColorDialog *src;
    FXShell *dest;
    src = (FXPyColorDialog *) ptr;
    dest = (FXShell *) src;
    return (void *) dest;
}

static void *SwigFXPyColorDialogToFXComposite(void *ptr) {
    FXPyColorDialog *src;
    FXComposite *dest;
    src = (FXPyColorDialog *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXPyColorDialogToFXWindow(void *ptr) {
    FXPyColorDialog *src;
    FXWindow *dest;
    src = (FXPyColorDialog *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyColorDialogToFXDrawable(void *ptr) {
    FXPyColorDialog *src;
    FXDrawable *dest;
    src = (FXPyColorDialog *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPyColorDialogToFXId(void *ptr) {
    FXPyColorDialog *src;
    FXId *dest;
    src = (FXPyColorDialog *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPyColorDialogToFXObject(void *ptr) {
    FXPyColorDialog *src;
    FXObject *dest;
    src = (FXPyColorDialog *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXColorDialog(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6) (new FXPyColorDialog(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6))
static PyObject *_wrap_new_FXColorDialog(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorDialog * _result;
    FXWindow * _arg0;
    FXString * _arg1;
    FXuint  _arg2 = (FXuint ) 0;
    FXint  _arg3 = (FXint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    PyObject * _obj0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "owner","name","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|iiiii:new_FXColorDialog",_kwnames,&_obj0,&_obj1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6)) 
        return NULL;
{
    if (_obj0 == Py_None)
	_arg0 = NULL;
    else
	SWIG_GetPtrObj(_obj0, (void**) &_arg0, "_FXWindow_p");
}
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyColorDialog *)new_FXColorDialog(_arg0,*_arg1,_arg2,_arg3,_arg4,_arg5,_arg6);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyColorDialog_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    delete _arg1;
}
    return _resultobj;
}

#define FXColorDialog_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXColorDialog_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyColorDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXColorDialog_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorDialog_onDefault. Expected _FXPyColorDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXColorDialog_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXColorDialog_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXColorDialog_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXColorDialog_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorDialog_create. Expected _FXPyColorDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXColorDialog_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXColorDialog_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXColorDialog_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXColorDialog_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorDialog_destroy. Expected _FXPyColorDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXColorDialog_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXColorDialog_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXColorDialog_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXColorDialog_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorDialog_detach. Expected _FXPyColorDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXColorDialog_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXColorDialog_resize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_resize(_swigarg0,_swigarg1))
static PyObject *_wrap_FXColorDialog_resize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorDialog * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXColorDialog_resize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorDialog_resize. Expected _FXPyColorDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXColorDialog_resize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXColorDialog_getDefaultWidth(_swigobj)  (_swigobj->_getDefaultWidth())
static PyObject *_wrap_FXColorDialog_getDefaultWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyColorDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXColorDialog_getDefaultWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorDialog_getDefaultWidth. Expected _FXPyColorDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXColorDialog_getDefaultWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXColorDialog_getDefaultHeight(_swigobj)  (_swigobj->_getDefaultHeight())
static PyObject *_wrap_FXColorDialog_getDefaultHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyColorDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXColorDialog_getDefaultHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorDialog_getDefaultHeight. Expected _FXPyColorDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXColorDialog_getDefaultHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXColorDialog_show(_swigobj)  (_swigobj->_show())
static PyObject *_wrap_FXColorDialog_show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXColorDialog_show",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorDialog_show. Expected _FXPyColorDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXColorDialog_show(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXColorDialog_hide(_swigobj)  (_swigobj->_hide())
static PyObject *_wrap_FXColorDialog_hide(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXColorDialog_hide",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorDialog_hide. Expected _FXPyColorDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXColorDialog_hide(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXColorDialog_enable(_swigobj)  (_swigobj->_enable())
static PyObject *_wrap_FXColorDialog_enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXColorDialog_enable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorDialog_enable. Expected _FXPyColorDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXColorDialog_enable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXColorDialog_disable(_swigobj)  (_swigobj->_disable())
static PyObject *_wrap_FXColorDialog_disable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXColorDialog_disable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorDialog_disable. Expected _FXPyColorDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXColorDialog_disable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXColorDialog_canFocus(_swigobj)  (_swigobj->_canFocus())
static PyObject *_wrap_FXColorDialog_canFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyColorDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXColorDialog_canFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorDialog_canFocus. Expected _FXPyColorDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXColorDialog_canFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXColorDialog_setFocus(_swigobj)  (_swigobj->_setFocus())
static PyObject *_wrap_FXColorDialog_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXColorDialog_setFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorDialog_setFocus. Expected _FXPyColorDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXColorDialog_setFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXColorDialog_killFocus(_swigobj)  (_swigobj->_killFocus())
static PyObject *_wrap_FXColorDialog_killFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXColorDialog_killFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorDialog_killFocus. Expected _FXPyColorDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXColorDialog_killFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXColorDialog_setDefault(_swigobj,_swigarg0)  (_swigobj->_setDefault(_swigarg0))
static PyObject *_wrap_FXColorDialog_setDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorDialog * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FXColorDialog_setDefault",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorDialog_setDefault. Expected _FXPyColorDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXColorDialog_setDefault(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXColorDialog_recalc(_swigobj)  (_swigobj->_recalc())
static PyObject *_wrap_FXColorDialog_recalc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXColorDialog_recalc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorDialog_recalc. Expected _FXPyColorDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXColorDialog_recalc(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXColorDialog_layout(_swigobj)  (_swigobj->_layout())
static PyObject *_wrap_FXColorDialog_layout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXColorDialog_layout",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorDialog_layout. Expected _FXPyColorDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXColorDialog_layout(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXColorDialog_lower(_swigobj)  (_swigobj->_lowerWindow())
static PyObject *_wrap_FXColorDialog_lower(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXColorDialog_lower",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorDialog_lower. Expected _FXPyColorDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXColorDialog_lower(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXColorDialog_move(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_move(_swigarg0,_swigarg1))
static PyObject *_wrap_FXColorDialog_move(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorDialog * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXColorDialog_move",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorDialog_move. Expected _FXPyColorDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXColorDialog_move(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXColorDialog_position(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->_position(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FXColorDialog_position(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorDialog * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FXColorDialog_position",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorDialog_position. Expected _FXPyColorDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXColorDialog_position(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXColorDialog_isComposite(_swigobj)  (_swigobj->_isComposite())
static PyObject *_wrap_FXColorDialog_isComposite(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyColorDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXColorDialog_isComposite",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorDialog_isComposite. Expected _FXPyColorDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXColorDialog_isComposite(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXColorDialog_contains(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_contains(_swigarg0,_swigarg1))
static PyObject *_wrap_FXColorDialog_contains(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyColorDialog * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXColorDialog_contains",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorDialog_contains. Expected _FXPyColorDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXColorDialog_contains(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXColorDialog_getWidthForHeight(_swigobj,_swigarg0)  (_swigobj->_getWidthForHeight(_swigarg0))
static PyObject *_wrap_FXColorDialog_getWidthForHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyColorDialog * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXColorDialog_getWidthForHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorDialog_getWidthForHeight. Expected _FXPyColorDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXColorDialog_getWidthForHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXColorDialog_getHeightForWidth(_swigobj,_swigarg0)  (_swigobj->_getHeightForWidth(_swigarg0))
static PyObject *_wrap_FXColorDialog_getHeightForWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyColorDialog * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXColorDialog_getHeightForWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorDialog_getHeightForWidth. Expected _FXPyColorDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXColorDialog_getHeightForWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXColorDialog_doesSaveUnder(_swigobj)  (_swigobj->_doesSaveUnder())
static PyObject *_wrap_FXColorDialog_doesSaveUnder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyColorDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXColorDialog_doesSaveUnder",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorDialog_doesSaveUnder. Expected _FXPyColorDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXColorDialog_doesSaveUnder(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXColorDialog_reparent(_swigobj,_swigarg0)  (_swigobj->_reparent(_swigarg0))
static PyObject *_wrap_FXColorDialog_reparent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorDialog * _arg0;
    FXComposite * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","newparent", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXColorDialog_reparent",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorDialog_reparent. Expected _FXPyColorDialog_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXColorDialog_reparent. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXColorDialog_reparent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXColorDialog_setBackColor(_swigobj,_swigarg0)  (_swigobj->_setBackColor(_swigarg0))
static PyObject *_wrap_FXColorDialog_setBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorDialog * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXColorDialog_setBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorDialog_setBackColor. Expected _FXPyColorDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXColorDialog_setBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXColorDialog_show2(_swigobj,_swigarg0)  (_swigobj->_show(_swigarg0))
static PyObject *_wrap_FXColorDialog_show2(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorDialog * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","placement", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXColorDialog_show2",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorDialog_show2. Expected _FXPyColorDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXColorDialog_show2(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXColorDialog_iconify(_swigobj)  (_swigobj->_iconify())
static PyObject *_wrap_FXColorDialog_iconify(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXColorDialog_iconify",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorDialog_iconify. Expected _FXPyColorDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXColorDialog_iconify(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXColorDialog_deiconify(_swigobj)  (_swigobj->_deiconify())
static PyObject *_wrap_FXColorDialog_deiconify(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyColorDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXColorDialog_deiconify",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyColorDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXColorDialog_deiconify. Expected _FXPyColorDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXColorDialog_deiconify(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXFontSelectorToFXPacker(void *ptr) {
    FXFontSelector *src;
    FXPacker *dest;
    src = (FXFontSelector *) ptr;
    dest = (FXPacker *) src;
    return (void *) dest;
}

static void *SwigFXFontSelectorToFXComposite(void *ptr) {
    FXFontSelector *src;
    FXComposite *dest;
    src = (FXFontSelector *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXFontSelectorToFXWindow(void *ptr) {
    FXFontSelector *src;
    FXWindow *dest;
    src = (FXFontSelector *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXFontSelectorToFXDrawable(void *ptr) {
    FXFontSelector *src;
    FXDrawable *dest;
    src = (FXFontSelector *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXFontSelectorToFXId(void *ptr) {
    FXFontSelector *src;
    FXId *dest;
    src = (FXFontSelector *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXFontSelectorToFXObject(void *ptr) {
    FXFontSelector *src;
    FXObject *dest;
    src = (FXFontSelector *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define FX_FontSelector_onCmdFamily(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdFamily(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FontSelector_onCmdFamily(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFontSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FontSelector_onCmdFamily",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FontSelector_onCmdFamily. Expected _FXFontSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FontSelector_onCmdFamily. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FontSelector_onCmdFamily(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FontSelector_onCmdWeight(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdWeight(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FontSelector_onCmdWeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFontSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FontSelector_onCmdWeight",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FontSelector_onCmdWeight. Expected _FXFontSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FontSelector_onCmdWeight. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FontSelector_onCmdWeight(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FontSelector_onCmdStyle(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdStyle(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FontSelector_onCmdStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFontSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FontSelector_onCmdStyle",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FontSelector_onCmdStyle. Expected _FXFontSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FontSelector_onCmdStyle. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FontSelector_onCmdStyle(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FontSelector_onCmdStyleText(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdStyleText(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FontSelector_onCmdStyleText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFontSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FontSelector_onCmdStyleText",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FontSelector_onCmdStyleText. Expected _FXFontSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FontSelector_onCmdStyleText. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FontSelector_onCmdStyleText(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FontSelector_onCmdSize(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSize(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FontSelector_onCmdSize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFontSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FontSelector_onCmdSize",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FontSelector_onCmdSize. Expected _FXFontSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FontSelector_onCmdSize. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FontSelector_onCmdSize(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FontSelector_onCmdSizeText(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSizeText(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FontSelector_onCmdSizeText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFontSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FontSelector_onCmdSizeText",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FontSelector_onCmdSizeText. Expected _FXFontSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FontSelector_onCmdSizeText. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FontSelector_onCmdSizeText(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FontSelector_onCmdCharset(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdCharset(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FontSelector_onCmdCharset(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFontSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FontSelector_onCmdCharset",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FontSelector_onCmdCharset. Expected _FXFontSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FontSelector_onCmdCharset. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FontSelector_onCmdCharset(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FontSelector_onUpdCharset(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdCharset(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FontSelector_onUpdCharset(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFontSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FontSelector_onUpdCharset",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FontSelector_onUpdCharset. Expected _FXFontSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FontSelector_onUpdCharset. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FontSelector_onUpdCharset(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FontSelector_onCmdSetWidth(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSetWidth(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FontSelector_onCmdSetWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFontSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FontSelector_onCmdSetWidth",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FontSelector_onCmdSetWidth. Expected _FXFontSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FontSelector_onCmdSetWidth. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FontSelector_onCmdSetWidth(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FontSelector_onUpdSetWidth(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdSetWidth(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FontSelector_onUpdSetWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFontSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FontSelector_onUpdSetWidth",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FontSelector_onUpdSetWidth. Expected _FXFontSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FontSelector_onUpdSetWidth. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FontSelector_onUpdSetWidth(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FontSelector_onCmdPitch(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdPitch(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FontSelector_onCmdPitch(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFontSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FontSelector_onCmdPitch",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FontSelector_onCmdPitch. Expected _FXFontSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FontSelector_onCmdPitch. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FontSelector_onCmdPitch(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FontSelector_onUpdPitch(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdPitch(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FontSelector_onUpdPitch(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFontSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FontSelector_onUpdPitch",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FontSelector_onUpdPitch. Expected _FXFontSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FontSelector_onUpdPitch. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FontSelector_onUpdPitch(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FontSelector_onCmdScalable(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdScalable(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FontSelector_onCmdScalable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFontSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FontSelector_onCmdScalable",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FontSelector_onCmdScalable. Expected _FXFontSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FontSelector_onCmdScalable. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FontSelector_onCmdScalable(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FontSelector_onUpdScalable(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdScalable(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FontSelector_onUpdScalable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFontSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FontSelector_onUpdScalable",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FontSelector_onUpdScalable. Expected _FXFontSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FontSelector_onUpdScalable. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FontSelector_onUpdScalable(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FontSelector_onCmdAllFonts(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdAllFonts(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FontSelector_onCmdAllFonts(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFontSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FontSelector_onCmdAllFonts",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FontSelector_onCmdAllFonts. Expected _FXFontSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FontSelector_onCmdAllFonts. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FontSelector_onCmdAllFonts(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_FontSelector_onUpdAllFonts(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdAllFonts(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_FontSelector_onUpdAllFonts(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXFontSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_FontSelector_onUpdAllFonts",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FontSelector_onUpdAllFonts. Expected _FXFontSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_FontSelector_onUpdAllFonts. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_FontSelector_onUpdAllFonts(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define new_FX_FontSelector(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7) (new FXFontSelector(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7))
static PyObject *_wrap_new_FX_FontSelector(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFontSelector * _result;
    FXComposite * _arg0;
    FXObject * _arg1 = (FXObject *) NULL;
    FXSelector  _arg2 = (FXSelector ) 0;
    FXuint  _arg3 = (FXuint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "p","tgt","sel","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|Oiiiiii:new_FX_FontSelector",_kwnames,&_argo0,&_obj1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FX_FontSelector. Expected _FXComposite_p.");
        return NULL;
        }
    }
    if (_obj1)
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXFontSelector *)new_FX_FontSelector(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXFontSelector_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_FontSelector_acceptButton(_swigobj)  (_swigobj->acceptButton())
static PyObject *_wrap_FX_FontSelector_acceptButton(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXButton * _result;
    FXFontSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FontSelector_acceptButton",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FontSelector_acceptButton. Expected _FXFontSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXButton *)FX_FontSelector_acceptButton(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_FontSelector_cancelButton(_swigobj)  (_swigobj->cancelButton())
static PyObject *_wrap_FX_FontSelector_cancelButton(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXButton * _result;
    FXFontSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FontSelector_cancelButton",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FontSelector_cancelButton. Expected _FXFontSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXButton *)FX_FontSelector_cancelButton(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_FontSelector_setFontSelection(_swigobj,_swigarg0)  (_swigobj->setFontSelection(_swigarg0))
static PyObject *_wrap_FX_FontSelector_setFontSelection(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFontSelector * _arg0;
    FXFontDesc * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","fontdesc", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_FontSelector_setFontSelection",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FontSelector_setFontSelection. Expected _FXFontSelector_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXFontDesc_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_FontSelector_setFontSelection. Expected _FXFontDesc_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_FontSelector_setFontSelection(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static FXFontDesc * FXFontSelector_getFontSelection(FXFontSelector *self) {
      FXFontDesc* fontdesc = new FXFontDesc;
      self->getFontSelection(*fontdesc);
      return fontdesc;
    }
static PyObject *_wrap_FX_FontSelector_getFontSelection(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFontDesc * _result;
    FXFontSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FontSelector_getFontSelection",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FontSelector_getFontSelection. Expected _FXFontSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXFontDesc *)FXFontSelector_getFontSelection(_arg0);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXFontDesc_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

static void *SwigFXPyFontSelectorToFXFontSelector(void *ptr) {
    FXPyFontSelector *src;
    FXFontSelector *dest;
    src = (FXPyFontSelector *) ptr;
    dest = (FXFontSelector *) src;
    return (void *) dest;
}

static void *SwigFXPyFontSelectorToFXPacker(void *ptr) {
    FXPyFontSelector *src;
    FXPacker *dest;
    src = (FXPyFontSelector *) ptr;
    dest = (FXPacker *) src;
    return (void *) dest;
}

static void *SwigFXPyFontSelectorToFXComposite(void *ptr) {
    FXPyFontSelector *src;
    FXComposite *dest;
    src = (FXPyFontSelector *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXPyFontSelectorToFXWindow(void *ptr) {
    FXPyFontSelector *src;
    FXWindow *dest;
    src = (FXPyFontSelector *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyFontSelectorToFXDrawable(void *ptr) {
    FXPyFontSelector *src;
    FXDrawable *dest;
    src = (FXPyFontSelector *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPyFontSelectorToFXId(void *ptr) {
    FXPyFontSelector *src;
    FXId *dest;
    src = (FXPyFontSelector *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPyFontSelectorToFXObject(void *ptr) {
    FXPyFontSelector *src;
    FXObject *dest;
    src = (FXPyFontSelector *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXFontSelector(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7) (new FXPyFontSelector(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7))
static PyObject *_wrap_new_FXFontSelector(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontSelector * _result;
    FXComposite * _arg0;
    FXObject * _arg1 = (FXObject *) NULL;
    FXSelector  _arg2 = (FXSelector ) 0;
    FXuint  _arg3 = (FXuint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "p","tgt","sel","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|Oiiiiii:new_FXFontSelector",_kwnames,&_argo0,&_obj1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FXFontSelector. Expected _FXComposite_p.");
        return NULL;
        }
    }
    if (_obj1)
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyFontSelector *)new_FXFontSelector(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyFontSelector_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FXFontSelector_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXFontSelector_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyFontSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXFontSelector_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontSelector_onDefault. Expected _FXPyFontSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXFontSelector_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXFontSelector_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXFontSelector_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFontSelector_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontSelector_create. Expected _FXPyFontSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFontSelector_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFontSelector_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXFontSelector_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFontSelector_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontSelector_destroy. Expected _FXPyFontSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFontSelector_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFontSelector_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXFontSelector_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFontSelector_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontSelector_detach. Expected _FXPyFontSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFontSelector_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFontSelector_resize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_resize(_swigarg0,_swigarg1))
static PyObject *_wrap_FXFontSelector_resize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontSelector * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXFontSelector_resize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontSelector_resize. Expected _FXPyFontSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFontSelector_resize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFontSelector_getDefaultWidth(_swigobj)  (_swigobj->_getDefaultWidth())
static PyObject *_wrap_FXFontSelector_getDefaultWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyFontSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFontSelector_getDefaultWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontSelector_getDefaultWidth. Expected _FXPyFontSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXFontSelector_getDefaultWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXFontSelector_getDefaultHeight(_swigobj)  (_swigobj->_getDefaultHeight())
static PyObject *_wrap_FXFontSelector_getDefaultHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyFontSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFontSelector_getDefaultHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontSelector_getDefaultHeight. Expected _FXPyFontSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXFontSelector_getDefaultHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXFontSelector_show(_swigobj)  (_swigobj->_show())
static PyObject *_wrap_FXFontSelector_show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFontSelector_show",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontSelector_show. Expected _FXPyFontSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFontSelector_show(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFontSelector_hide(_swigobj)  (_swigobj->_hide())
static PyObject *_wrap_FXFontSelector_hide(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFontSelector_hide",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontSelector_hide. Expected _FXPyFontSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFontSelector_hide(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFontSelector_enable(_swigobj)  (_swigobj->_enable())
static PyObject *_wrap_FXFontSelector_enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFontSelector_enable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontSelector_enable. Expected _FXPyFontSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFontSelector_enable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFontSelector_disable(_swigobj)  (_swigobj->_disable())
static PyObject *_wrap_FXFontSelector_disable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFontSelector_disable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontSelector_disable. Expected _FXPyFontSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFontSelector_disable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFontSelector_canFocus(_swigobj)  (_swigobj->_canFocus())
static PyObject *_wrap_FXFontSelector_canFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyFontSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFontSelector_canFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontSelector_canFocus. Expected _FXPyFontSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXFontSelector_canFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXFontSelector_setFocus(_swigobj)  (_swigobj->_setFocus())
static PyObject *_wrap_FXFontSelector_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFontSelector_setFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontSelector_setFocus. Expected _FXPyFontSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFontSelector_setFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFontSelector_killFocus(_swigobj)  (_swigobj->_killFocus())
static PyObject *_wrap_FXFontSelector_killFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFontSelector_killFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontSelector_killFocus. Expected _FXPyFontSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFontSelector_killFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFontSelector_setDefault(_swigobj,_swigarg0)  (_swigobj->_setDefault(_swigarg0))
static PyObject *_wrap_FXFontSelector_setDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontSelector * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FXFontSelector_setDefault",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontSelector_setDefault. Expected _FXPyFontSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFontSelector_setDefault(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFontSelector_recalc(_swigobj)  (_swigobj->_recalc())
static PyObject *_wrap_FXFontSelector_recalc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFontSelector_recalc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontSelector_recalc. Expected _FXPyFontSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFontSelector_recalc(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFontSelector_layout(_swigobj)  (_swigobj->_layout())
static PyObject *_wrap_FXFontSelector_layout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFontSelector_layout",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontSelector_layout. Expected _FXPyFontSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFontSelector_layout(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFontSelector_lower(_swigobj)  (_swigobj->_lowerWindow())
static PyObject *_wrap_FXFontSelector_lower(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFontSelector_lower",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontSelector_lower. Expected _FXPyFontSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFontSelector_lower(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFontSelector_move(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_move(_swigarg0,_swigarg1))
static PyObject *_wrap_FXFontSelector_move(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontSelector * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXFontSelector_move",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontSelector_move. Expected _FXPyFontSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFontSelector_move(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFontSelector_position(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->_position(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FXFontSelector_position(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontSelector * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FXFontSelector_position",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontSelector_position. Expected _FXPyFontSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFontSelector_position(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFontSelector_isComposite(_swigobj)  (_swigobj->_isComposite())
static PyObject *_wrap_FXFontSelector_isComposite(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyFontSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFontSelector_isComposite",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontSelector_isComposite. Expected _FXPyFontSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXFontSelector_isComposite(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXFontSelector_contains(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_contains(_swigarg0,_swigarg1))
static PyObject *_wrap_FXFontSelector_contains(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyFontSelector * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXFontSelector_contains",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontSelector_contains. Expected _FXPyFontSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXFontSelector_contains(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXFontSelector_getWidthForHeight(_swigobj,_swigarg0)  (_swigobj->_getWidthForHeight(_swigarg0))
static PyObject *_wrap_FXFontSelector_getWidthForHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyFontSelector * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXFontSelector_getWidthForHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontSelector_getWidthForHeight. Expected _FXPyFontSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXFontSelector_getWidthForHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXFontSelector_getHeightForWidth(_swigobj,_swigarg0)  (_swigobj->_getHeightForWidth(_swigarg0))
static PyObject *_wrap_FXFontSelector_getHeightForWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyFontSelector * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXFontSelector_getHeightForWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontSelector_getHeightForWidth. Expected _FXPyFontSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXFontSelector_getHeightForWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXFontSelector_doesSaveUnder(_swigobj)  (_swigobj->_doesSaveUnder())
static PyObject *_wrap_FXFontSelector_doesSaveUnder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyFontSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFontSelector_doesSaveUnder",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontSelector_doesSaveUnder. Expected _FXPyFontSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXFontSelector_doesSaveUnder(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXFontSelector_reparent(_swigobj,_swigarg0)  (_swigobj->_reparent(_swigarg0))
static PyObject *_wrap_FXFontSelector_reparent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontSelector * _arg0;
    FXComposite * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","newparent", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXFontSelector_reparent",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontSelector_reparent. Expected _FXPyFontSelector_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXFontSelector_reparent. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFontSelector_reparent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFontSelector_setBackColor(_swigobj,_swigarg0)  (_swigobj->_setBackColor(_swigarg0))
static PyObject *_wrap_FXFontSelector_setBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontSelector * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXFontSelector_setBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontSelector_setBackColor. Expected _FXPyFontSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFontSelector_setBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXFontDialogToFXDialogBox(void *ptr) {
    FXFontDialog *src;
    FXDialogBox *dest;
    src = (FXFontDialog *) ptr;
    dest = (FXDialogBox *) src;
    return (void *) dest;
}

static void *SwigFXFontDialogToFXTopWindow(void *ptr) {
    FXFontDialog *src;
    FXTopWindow *dest;
    src = (FXFontDialog *) ptr;
    dest = (FXTopWindow *) src;
    return (void *) dest;
}

static void *SwigFXFontDialogToFXShell(void *ptr) {
    FXFontDialog *src;
    FXShell *dest;
    src = (FXFontDialog *) ptr;
    dest = (FXShell *) src;
    return (void *) dest;
}

static void *SwigFXFontDialogToFXComposite(void *ptr) {
    FXFontDialog *src;
    FXComposite *dest;
    src = (FXFontDialog *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXFontDialogToFXWindow(void *ptr) {
    FXFontDialog *src;
    FXWindow *dest;
    src = (FXFontDialog *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXFontDialogToFXDrawable(void *ptr) {
    FXFontDialog *src;
    FXDrawable *dest;
    src = (FXFontDialog *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXFontDialogToFXId(void *ptr) {
    FXFontDialog *src;
    FXId *dest;
    src = (FXFontDialog *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXFontDialogToFXObject(void *ptr) {
    FXFontDialog *src;
    FXObject *dest;
    src = (FXFontDialog *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FX_FontDialog(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6) (new FXFontDialog(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6))
static PyObject *_wrap_new_FX_FontDialog(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFontDialog * _result;
    FXWindow * _arg0;
    FXString * _arg1;
    FXuint  _arg2 = (FXuint ) 0;
    FXint  _arg3 = (FXint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 600;
    FXint  _arg6 = (FXint ) 380;
    PyObject * _obj0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "owner","name","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|iiiii:new_FX_FontDialog",_kwnames,&_obj0,&_obj1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6)) 
        return NULL;
{
    if (_obj0 == Py_None)
	_arg0 = NULL;
    else
	SWIG_GetPtrObj(_obj0, (void**) &_arg0, "_FXWindow_p");
}
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXFontDialog *)new_FX_FontDialog(_arg0,*_arg1,_arg2,_arg3,_arg4,_arg5,_arg6);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXFontDialog_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_FontDialog_setFontSelection(_swigobj,_swigarg0)  (_swigobj->setFontSelection(_swigarg0))
static PyObject *_wrap_FX_FontDialog_setFontSelection(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFontDialog * _arg0;
    FXFontDesc * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","fontdesc", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_FontDialog_setFontSelection",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFontDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FontDialog_setFontSelection. Expected _FXFontDialog_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXFontDesc_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_FontDialog_setFontSelection. Expected _FXFontDesc_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_FontDialog_setFontSelection(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static FXFontDesc * FXFontDialog_getFontSelection(FXFontDialog *self) {
      FXFontDesc* fontdesc = new FXFontDesc;
      self->getFontSelection(*fontdesc);
      return fontdesc;
    }
static PyObject *_wrap_FX_FontDialog_getFontSelection(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFontDesc * _result;
    FXFontDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FontDialog_getFontSelection",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFontDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FontDialog_getFontSelection. Expected _FXFontDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXFontDesc *)FXFontDialog_getFontSelection(_arg0);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXFontDesc_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

static void *SwigFXPyFontDialogToFXFontDialog(void *ptr) {
    FXPyFontDialog *src;
    FXFontDialog *dest;
    src = (FXPyFontDialog *) ptr;
    dest = (FXFontDialog *) src;
    return (void *) dest;
}

static void *SwigFXPyFontDialogToFXDialogBox(void *ptr) {
    FXPyFontDialog *src;
    FXDialogBox *dest;
    src = (FXPyFontDialog *) ptr;
    dest = (FXDialogBox *) src;
    return (void *) dest;
}

static void *SwigFXPyFontDialogToFXTopWindow(void *ptr) {
    FXPyFontDialog *src;
    FXTopWindow *dest;
    src = (FXPyFontDialog *) ptr;
    dest = (FXTopWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyFontDialogToFXShell(void *ptr) {
    FXPyFontDialog *src;
    FXShell *dest;
    src = (FXPyFontDialog *) ptr;
    dest = (FXShell *) src;
    return (void *) dest;
}

static void *SwigFXPyFontDialogToFXComposite(void *ptr) {
    FXPyFontDialog *src;
    FXComposite *dest;
    src = (FXPyFontDialog *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXPyFontDialogToFXWindow(void *ptr) {
    FXPyFontDialog *src;
    FXWindow *dest;
    src = (FXPyFontDialog *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyFontDialogToFXDrawable(void *ptr) {
    FXPyFontDialog *src;
    FXDrawable *dest;
    src = (FXPyFontDialog *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPyFontDialogToFXId(void *ptr) {
    FXPyFontDialog *src;
    FXId *dest;
    src = (FXPyFontDialog *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPyFontDialogToFXObject(void *ptr) {
    FXPyFontDialog *src;
    FXObject *dest;
    src = (FXPyFontDialog *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXFontDialog(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6) (new FXPyFontDialog(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6))
static PyObject *_wrap_new_FXFontDialog(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontDialog * _result;
    FXWindow * _arg0;
    FXString * _arg1;
    FXuint  _arg2 = (FXuint ) 0;
    FXint  _arg3 = (FXint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 600;
    FXint  _arg6 = (FXint ) 380;
    PyObject * _obj0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "owner","name","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|iiiii:new_FXFontDialog",_kwnames,&_obj0,&_obj1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6)) 
        return NULL;
{
    if (_obj0 == Py_None)
	_arg0 = NULL;
    else
	SWIG_GetPtrObj(_obj0, (void**) &_arg0, "_FXWindow_p");
}
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyFontDialog *)new_FXFontDialog(_arg0,*_arg1,_arg2,_arg3,_arg4,_arg5,_arg6);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyFontDialog_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    delete _arg1;
}
    return _resultobj;
}

#define FXFontDialog_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXFontDialog_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyFontDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXFontDialog_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontDialog_onDefault. Expected _FXPyFontDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXFontDialog_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXFontDialog_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXFontDialog_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFontDialog_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontDialog_create. Expected _FXPyFontDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFontDialog_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFontDialog_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXFontDialog_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFontDialog_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontDialog_destroy. Expected _FXPyFontDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFontDialog_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFontDialog_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXFontDialog_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFontDialog_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontDialog_detach. Expected _FXPyFontDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFontDialog_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFontDialog_resize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_resize(_swigarg0,_swigarg1))
static PyObject *_wrap_FXFontDialog_resize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontDialog * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXFontDialog_resize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontDialog_resize. Expected _FXPyFontDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFontDialog_resize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFontDialog_getDefaultWidth(_swigobj)  (_swigobj->_getDefaultWidth())
static PyObject *_wrap_FXFontDialog_getDefaultWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyFontDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFontDialog_getDefaultWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontDialog_getDefaultWidth. Expected _FXPyFontDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXFontDialog_getDefaultWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXFontDialog_getDefaultHeight(_swigobj)  (_swigobj->_getDefaultHeight())
static PyObject *_wrap_FXFontDialog_getDefaultHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyFontDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFontDialog_getDefaultHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontDialog_getDefaultHeight. Expected _FXPyFontDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXFontDialog_getDefaultHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXFontDialog_show(_swigobj)  (_swigobj->_show())
static PyObject *_wrap_FXFontDialog_show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFontDialog_show",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontDialog_show. Expected _FXPyFontDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFontDialog_show(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFontDialog_hide(_swigobj)  (_swigobj->_hide())
static PyObject *_wrap_FXFontDialog_hide(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFontDialog_hide",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontDialog_hide. Expected _FXPyFontDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFontDialog_hide(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFontDialog_enable(_swigobj)  (_swigobj->_enable())
static PyObject *_wrap_FXFontDialog_enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFontDialog_enable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontDialog_enable. Expected _FXPyFontDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFontDialog_enable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFontDialog_disable(_swigobj)  (_swigobj->_disable())
static PyObject *_wrap_FXFontDialog_disable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFontDialog_disable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontDialog_disable. Expected _FXPyFontDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFontDialog_disable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFontDialog_canFocus(_swigobj)  (_swigobj->_canFocus())
static PyObject *_wrap_FXFontDialog_canFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyFontDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFontDialog_canFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontDialog_canFocus. Expected _FXPyFontDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXFontDialog_canFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXFontDialog_setFocus(_swigobj)  (_swigobj->_setFocus())
static PyObject *_wrap_FXFontDialog_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFontDialog_setFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontDialog_setFocus. Expected _FXPyFontDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFontDialog_setFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFontDialog_killFocus(_swigobj)  (_swigobj->_killFocus())
static PyObject *_wrap_FXFontDialog_killFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFontDialog_killFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontDialog_killFocus. Expected _FXPyFontDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFontDialog_killFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFontDialog_setDefault(_swigobj,_swigarg0)  (_swigobj->_setDefault(_swigarg0))
static PyObject *_wrap_FXFontDialog_setDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontDialog * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FXFontDialog_setDefault",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontDialog_setDefault. Expected _FXPyFontDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFontDialog_setDefault(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFontDialog_recalc(_swigobj)  (_swigobj->_recalc())
static PyObject *_wrap_FXFontDialog_recalc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFontDialog_recalc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontDialog_recalc. Expected _FXPyFontDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFontDialog_recalc(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFontDialog_layout(_swigobj)  (_swigobj->_layout())
static PyObject *_wrap_FXFontDialog_layout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFontDialog_layout",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontDialog_layout. Expected _FXPyFontDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFontDialog_layout(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFontDialog_lower(_swigobj)  (_swigobj->_lowerWindow())
static PyObject *_wrap_FXFontDialog_lower(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFontDialog_lower",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontDialog_lower. Expected _FXPyFontDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFontDialog_lower(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFontDialog_move(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_move(_swigarg0,_swigarg1))
static PyObject *_wrap_FXFontDialog_move(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontDialog * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXFontDialog_move",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontDialog_move. Expected _FXPyFontDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFontDialog_move(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFontDialog_position(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->_position(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FXFontDialog_position(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontDialog * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FXFontDialog_position",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontDialog_position. Expected _FXPyFontDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFontDialog_position(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFontDialog_isComposite(_swigobj)  (_swigobj->_isComposite())
static PyObject *_wrap_FXFontDialog_isComposite(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyFontDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFontDialog_isComposite",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontDialog_isComposite. Expected _FXPyFontDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXFontDialog_isComposite(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXFontDialog_contains(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_contains(_swigarg0,_swigarg1))
static PyObject *_wrap_FXFontDialog_contains(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyFontDialog * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXFontDialog_contains",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontDialog_contains. Expected _FXPyFontDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXFontDialog_contains(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXFontDialog_getWidthForHeight(_swigobj,_swigarg0)  (_swigobj->_getWidthForHeight(_swigarg0))
static PyObject *_wrap_FXFontDialog_getWidthForHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyFontDialog * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXFontDialog_getWidthForHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontDialog_getWidthForHeight. Expected _FXPyFontDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXFontDialog_getWidthForHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXFontDialog_getHeightForWidth(_swigobj,_swigarg0)  (_swigobj->_getHeightForWidth(_swigarg0))
static PyObject *_wrap_FXFontDialog_getHeightForWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyFontDialog * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXFontDialog_getHeightForWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontDialog_getHeightForWidth. Expected _FXPyFontDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXFontDialog_getHeightForWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXFontDialog_doesSaveUnder(_swigobj)  (_swigobj->_doesSaveUnder())
static PyObject *_wrap_FXFontDialog_doesSaveUnder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyFontDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFontDialog_doesSaveUnder",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontDialog_doesSaveUnder. Expected _FXPyFontDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXFontDialog_doesSaveUnder(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXFontDialog_reparent(_swigobj,_swigarg0)  (_swigobj->_reparent(_swigarg0))
static PyObject *_wrap_FXFontDialog_reparent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontDialog * _arg0;
    FXComposite * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","newparent", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXFontDialog_reparent",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontDialog_reparent. Expected _FXPyFontDialog_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXFontDialog_reparent. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFontDialog_reparent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFontDialog_setBackColor(_swigobj,_swigarg0)  (_swigobj->_setBackColor(_swigarg0))
static PyObject *_wrap_FXFontDialog_setBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontDialog * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXFontDialog_setBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontDialog_setBackColor. Expected _FXPyFontDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFontDialog_setBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFontDialog_show2(_swigobj,_swigarg0)  (_swigobj->_show(_swigarg0))
static PyObject *_wrap_FXFontDialog_show2(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontDialog * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","placement", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXFontDialog_show2",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontDialog_show2. Expected _FXPyFontDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFontDialog_show2(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFontDialog_iconify(_swigobj)  (_swigobj->_iconify())
static PyObject *_wrap_FXFontDialog_iconify(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFontDialog_iconify",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontDialog_iconify. Expected _FXPyFontDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFontDialog_iconify(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFontDialog_deiconify(_swigobj)  (_swigobj->_deiconify())
static PyObject *_wrap_FXFontDialog_deiconify(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFontDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFontDialog_deiconify",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFontDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFontDialog_deiconify. Expected _FXPyFontDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXFontDialog_deiconify(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXDirSelectorToFXPacker(void *ptr) {
    FXDirSelector *src;
    FXPacker *dest;
    src = (FXDirSelector *) ptr;
    dest = (FXPacker *) src;
    return (void *) dest;
}

static void *SwigFXDirSelectorToFXComposite(void *ptr) {
    FXDirSelector *src;
    FXComposite *dest;
    src = (FXDirSelector *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXDirSelectorToFXWindow(void *ptr) {
    FXDirSelector *src;
    FXWindow *dest;
    src = (FXDirSelector *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXDirSelectorToFXDrawable(void *ptr) {
    FXDirSelector *src;
    FXDrawable *dest;
    src = (FXDirSelector *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXDirSelectorToFXId(void *ptr) {
    FXDirSelector *src;
    FXId *dest;
    src = (FXDirSelector *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXDirSelectorToFXObject(void *ptr) {
    FXDirSelector *src;
    FXObject *dest;
    src = (FXDirSelector *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define FX_DirSelector_onCmdName(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdName(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_DirSelector_onCmdName(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXDirSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_DirSelector_onCmdName",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDirSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DirSelector_onCmdName. Expected _FXDirSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_DirSelector_onCmdName. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_DirSelector_onCmdName(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_DirSelector_onCmdOpened(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdOpened(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_DirSelector_onCmdOpened(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXDirSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_DirSelector_onCmdOpened",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDirSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DirSelector_onCmdOpened. Expected _FXDirSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_DirSelector_onCmdOpened. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_DirSelector_onCmdOpened(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_DirSelector_onCmdDriveChanged(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdDriveChanged(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_DirSelector_onCmdDriveChanged(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXDirSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_DirSelector_onCmdDriveChanged",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDirSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DirSelector_onCmdDriveChanged. Expected _FXDirSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_DirSelector_onCmdDriveChanged. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_DirSelector_onCmdDriveChanged(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define new_FX_DirSelector(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7) (new FXDirSelector(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7))
static PyObject *_wrap_new_FX_DirSelector(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDirSelector * _result;
    FXComposite * _arg0;
    FXObject * _arg1 = (FXObject *) NULL;
    FXSelector  _arg2 = (FXSelector ) 0;
    FXuint  _arg3 = (FXuint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "p","tgt","sel","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|Oiiiiii:new_FX_DirSelector",_kwnames,&_argo0,&_obj1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FX_DirSelector. Expected _FXComposite_p.");
        return NULL;
        }
    }
    if (_obj1)
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXDirSelector *)new_FX_DirSelector(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXDirSelector_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_DirSelector_acceptButton(_swigobj)  (_swigobj->acceptButton())
static PyObject *_wrap_FX_DirSelector_acceptButton(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXButton * _result;
    FXDirSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_DirSelector_acceptButton",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDirSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DirSelector_acceptButton. Expected _FXDirSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXButton *)FX_DirSelector_acceptButton(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_DirSelector_cancelButton(_swigobj)  (_swigobj->cancelButton())
static PyObject *_wrap_FX_DirSelector_cancelButton(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXButton * _result;
    FXDirSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_DirSelector_cancelButton",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDirSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DirSelector_cancelButton. Expected _FXDirSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXButton *)FX_DirSelector_cancelButton(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_DirSelector_setDirectory(_swigobj,_swigarg0)  (_swigobj->setDirectory(_swigarg0))
static PyObject *_wrap_FX_DirSelector_setDirectory(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDirSelector * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","path", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_DirSelector_setDirectory",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDirSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DirSelector_setDirectory. Expected _FXDirSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DirSelector_setDirectory(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_DirSelector_getDirectory(_swigobj)  (_swigobj->getDirectory())
static PyObject *_wrap_FX_DirSelector_getDirectory(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXDirSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_DirSelector_getDirectory",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDirSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DirSelector_getDirectory. Expected _FXDirSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_DirSelector_getDirectory(_arg0));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

#define FX_DirSelector_setDirBoxStyle(_swigobj,_swigarg0)  (_swigobj->setDirBoxStyle(_swigarg0))
static PyObject *_wrap_FX_DirSelector_setDirBoxStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDirSelector * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","style", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_DirSelector_setDirBoxStyle",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDirSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DirSelector_setDirBoxStyle. Expected _FXDirSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DirSelector_setDirBoxStyle(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DirSelector_getDirBoxStyle(_swigobj)  (_swigobj->getDirBoxStyle())
static PyObject *_wrap_FX_DirSelector_getDirBoxStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXDirSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_DirSelector_getDirBoxStyle",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDirSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DirSelector_getDirBoxStyle. Expected _FXDirSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )FX_DirSelector_getDirBoxStyle(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static void *SwigFXPyDirSelectorToFXDirSelector(void *ptr) {
    FXPyDirSelector *src;
    FXDirSelector *dest;
    src = (FXPyDirSelector *) ptr;
    dest = (FXDirSelector *) src;
    return (void *) dest;
}

static void *SwigFXPyDirSelectorToFXPacker(void *ptr) {
    FXPyDirSelector *src;
    FXPacker *dest;
    src = (FXPyDirSelector *) ptr;
    dest = (FXPacker *) src;
    return (void *) dest;
}

static void *SwigFXPyDirSelectorToFXComposite(void *ptr) {
    FXPyDirSelector *src;
    FXComposite *dest;
    src = (FXPyDirSelector *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXPyDirSelectorToFXWindow(void *ptr) {
    FXPyDirSelector *src;
    FXWindow *dest;
    src = (FXPyDirSelector *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyDirSelectorToFXDrawable(void *ptr) {
    FXPyDirSelector *src;
    FXDrawable *dest;
    src = (FXPyDirSelector *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPyDirSelectorToFXId(void *ptr) {
    FXPyDirSelector *src;
    FXId *dest;
    src = (FXPyDirSelector *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPyDirSelectorToFXObject(void *ptr) {
    FXPyDirSelector *src;
    FXObject *dest;
    src = (FXPyDirSelector *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXDirSelector(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7) (new FXPyDirSelector(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7))
static PyObject *_wrap_new_FXDirSelector(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirSelector * _result;
    FXComposite * _arg0;
    FXObject * _arg1 = (FXObject *) NULL;
    FXSelector  _arg2 = (FXSelector ) 0;
    FXuint  _arg3 = (FXuint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "p","tgt","sel","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|Oiiiiii:new_FXDirSelector",_kwnames,&_argo0,&_obj1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FXDirSelector. Expected _FXComposite_p.");
        return NULL;
        }
    }
    if (_obj1)
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyDirSelector *)new_FXDirSelector(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyDirSelector_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FXDirSelector_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXDirSelector_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyDirSelector * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXDirSelector_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirSelector_onDefault. Expected _FXPyDirSelector_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXDirSelector_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXDirSelector_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXDirSelector_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirSelector_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirSelector_create. Expected _FXPyDirSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirSelector_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirSelector_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXDirSelector_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirSelector_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirSelector_destroy. Expected _FXPyDirSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirSelector_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirSelector_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXDirSelector_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirSelector_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirSelector_detach. Expected _FXPyDirSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirSelector_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirSelector_resize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_resize(_swigarg0,_swigarg1))
static PyObject *_wrap_FXDirSelector_resize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirSelector * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXDirSelector_resize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirSelector_resize. Expected _FXPyDirSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirSelector_resize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirSelector_getDefaultWidth(_swigobj)  (_swigobj->_getDefaultWidth())
static PyObject *_wrap_FXDirSelector_getDefaultWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyDirSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirSelector_getDefaultWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirSelector_getDefaultWidth. Expected _FXPyDirSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXDirSelector_getDefaultWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXDirSelector_getDefaultHeight(_swigobj)  (_swigobj->_getDefaultHeight())
static PyObject *_wrap_FXDirSelector_getDefaultHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyDirSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirSelector_getDefaultHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirSelector_getDefaultHeight. Expected _FXPyDirSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXDirSelector_getDefaultHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXDirSelector_show(_swigobj)  (_swigobj->_show())
static PyObject *_wrap_FXDirSelector_show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirSelector_show",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirSelector_show. Expected _FXPyDirSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirSelector_show(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirSelector_hide(_swigobj)  (_swigobj->_hide())
static PyObject *_wrap_FXDirSelector_hide(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirSelector_hide",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirSelector_hide. Expected _FXPyDirSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirSelector_hide(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirSelector_enable(_swigobj)  (_swigobj->_enable())
static PyObject *_wrap_FXDirSelector_enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirSelector_enable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirSelector_enable. Expected _FXPyDirSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirSelector_enable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirSelector_disable(_swigobj)  (_swigobj->_disable())
static PyObject *_wrap_FXDirSelector_disable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirSelector_disable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirSelector_disable. Expected _FXPyDirSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirSelector_disable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirSelector_canFocus(_swigobj)  (_swigobj->_canFocus())
static PyObject *_wrap_FXDirSelector_canFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyDirSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirSelector_canFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirSelector_canFocus. Expected _FXPyDirSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXDirSelector_canFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXDirSelector_setFocus(_swigobj)  (_swigobj->_setFocus())
static PyObject *_wrap_FXDirSelector_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirSelector_setFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirSelector_setFocus. Expected _FXPyDirSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirSelector_setFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirSelector_killFocus(_swigobj)  (_swigobj->_killFocus())
static PyObject *_wrap_FXDirSelector_killFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirSelector_killFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirSelector_killFocus. Expected _FXPyDirSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirSelector_killFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirSelector_setDefault(_swigobj,_swigarg0)  (_swigobj->_setDefault(_swigarg0))
static PyObject *_wrap_FXDirSelector_setDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirSelector * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FXDirSelector_setDefault",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirSelector_setDefault. Expected _FXPyDirSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirSelector_setDefault(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirSelector_recalc(_swigobj)  (_swigobj->_recalc())
static PyObject *_wrap_FXDirSelector_recalc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirSelector_recalc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirSelector_recalc. Expected _FXPyDirSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirSelector_recalc(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirSelector_layout(_swigobj)  (_swigobj->_layout())
static PyObject *_wrap_FXDirSelector_layout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirSelector_layout",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirSelector_layout. Expected _FXPyDirSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirSelector_layout(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirSelector_lower(_swigobj)  (_swigobj->_lowerWindow())
static PyObject *_wrap_FXDirSelector_lower(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirSelector_lower",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirSelector_lower. Expected _FXPyDirSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirSelector_lower(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirSelector_move(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_move(_swigarg0,_swigarg1))
static PyObject *_wrap_FXDirSelector_move(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirSelector * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXDirSelector_move",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirSelector_move. Expected _FXPyDirSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirSelector_move(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirSelector_position(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->_position(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FXDirSelector_position(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirSelector * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FXDirSelector_position",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirSelector_position. Expected _FXPyDirSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirSelector_position(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirSelector_isComposite(_swigobj)  (_swigobj->_isComposite())
static PyObject *_wrap_FXDirSelector_isComposite(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyDirSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirSelector_isComposite",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirSelector_isComposite. Expected _FXPyDirSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXDirSelector_isComposite(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXDirSelector_contains(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_contains(_swigarg0,_swigarg1))
static PyObject *_wrap_FXDirSelector_contains(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyDirSelector * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXDirSelector_contains",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirSelector_contains. Expected _FXPyDirSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXDirSelector_contains(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXDirSelector_getWidthForHeight(_swigobj,_swigarg0)  (_swigobj->_getWidthForHeight(_swigarg0))
static PyObject *_wrap_FXDirSelector_getWidthForHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyDirSelector * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXDirSelector_getWidthForHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirSelector_getWidthForHeight. Expected _FXPyDirSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXDirSelector_getWidthForHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXDirSelector_getHeightForWidth(_swigobj,_swigarg0)  (_swigobj->_getHeightForWidth(_swigarg0))
static PyObject *_wrap_FXDirSelector_getHeightForWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyDirSelector * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXDirSelector_getHeightForWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirSelector_getHeightForWidth. Expected _FXPyDirSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXDirSelector_getHeightForWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXDirSelector_doesSaveUnder(_swigobj)  (_swigobj->_doesSaveUnder())
static PyObject *_wrap_FXDirSelector_doesSaveUnder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyDirSelector * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirSelector_doesSaveUnder",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirSelector_doesSaveUnder. Expected _FXPyDirSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXDirSelector_doesSaveUnder(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXDirSelector_reparent(_swigobj,_swigarg0)  (_swigobj->_reparent(_swigarg0))
static PyObject *_wrap_FXDirSelector_reparent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirSelector * _arg0;
    FXComposite * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","newparent", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXDirSelector_reparent",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirSelector_reparent. Expected _FXPyDirSelector_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXDirSelector_reparent. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirSelector_reparent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirSelector_setBackColor(_swigobj,_swigarg0)  (_swigobj->_setBackColor(_swigarg0))
static PyObject *_wrap_FXDirSelector_setBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirSelector * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXDirSelector_setBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirSelector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirSelector_setBackColor. Expected _FXPyDirSelector_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirSelector_setBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXDirDialogToFXDialogBox(void *ptr) {
    FXDirDialog *src;
    FXDialogBox *dest;
    src = (FXDirDialog *) ptr;
    dest = (FXDialogBox *) src;
    return (void *) dest;
}

static void *SwigFXDirDialogToFXTopWindow(void *ptr) {
    FXDirDialog *src;
    FXTopWindow *dest;
    src = (FXDirDialog *) ptr;
    dest = (FXTopWindow *) src;
    return (void *) dest;
}

static void *SwigFXDirDialogToFXShell(void *ptr) {
    FXDirDialog *src;
    FXShell *dest;
    src = (FXDirDialog *) ptr;
    dest = (FXShell *) src;
    return (void *) dest;
}

static void *SwigFXDirDialogToFXComposite(void *ptr) {
    FXDirDialog *src;
    FXComposite *dest;
    src = (FXDirDialog *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXDirDialogToFXWindow(void *ptr) {
    FXDirDialog *src;
    FXWindow *dest;
    src = (FXDirDialog *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXDirDialogToFXDrawable(void *ptr) {
    FXDirDialog *src;
    FXDrawable *dest;
    src = (FXDirDialog *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXDirDialogToFXId(void *ptr) {
    FXDirDialog *src;
    FXId *dest;
    src = (FXDirDialog *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXDirDialogToFXObject(void *ptr) {
    FXDirDialog *src;
    FXObject *dest;
    src = (FXDirDialog *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FX_DirDialog(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6) (new FXDirDialog(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6))
static PyObject *_wrap_new_FX_DirDialog(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDirDialog * _result;
    FXWindow * _arg0;
    FXString * _arg1;
    FXuint  _arg2 = (FXuint ) 0;
    FXint  _arg3 = (FXint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 500;
    FXint  _arg6 = (FXint ) 300;
    PyObject * _obj0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "owner","name","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|iiiii:new_FX_DirDialog",_kwnames,&_obj0,&_obj1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6)) 
        return NULL;
{
    if (_obj0 == Py_None)
	_arg0 = NULL;
    else
	SWIG_GetPtrObj(_obj0, (void**) &_arg0, "_FXWindow_p");
}
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXDirDialog *)new_FX_DirDialog(_arg0,*_arg1,_arg2,_arg3,_arg4,_arg5,_arg6);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXDirDialog_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_DirDialog_setDirectory(_swigobj,_swigarg0)  (_swigobj->setDirectory(_swigarg0))
static PyObject *_wrap_FX_DirDialog_setDirectory(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDirDialog * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","path", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_DirDialog_setDirectory",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDirDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DirDialog_setDirectory. Expected _FXDirDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DirDialog_setDirectory(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_DirDialog_getDirectory(_swigobj)  (_swigobj->getDirectory())
static PyObject *_wrap_FX_DirDialog_getDirectory(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXDirDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_DirDialog_getDirectory",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDirDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DirDialog_getDirectory. Expected _FXDirDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_DirDialog_getDirectory(_arg0));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

#define FX_DirDialog_setDirBoxStyle(_swigobj,_swigarg0)  (_swigobj->setDirBoxStyle(_swigarg0))
static PyObject *_wrap_FX_DirDialog_setDirBoxStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDirDialog * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","style", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_DirDialog_setDirBoxStyle",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDirDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DirDialog_setDirBoxStyle. Expected _FXDirDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_DirDialog_setDirBoxStyle(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_DirDialog_getDirBoxStyle(_swigobj)  (_swigobj->getDirBoxStyle())
static PyObject *_wrap_FX_DirDialog_getDirBoxStyle(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXDirDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_DirDialog_getDirBoxStyle",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXDirDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_DirDialog_getDirBoxStyle. Expected _FXDirDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )FX_DirDialog_getDirBoxStyle(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static void *SwigFXPyDirDialogToFXDirDialog(void *ptr) {
    FXPyDirDialog *src;
    FXDirDialog *dest;
    src = (FXPyDirDialog *) ptr;
    dest = (FXDirDialog *) src;
    return (void *) dest;
}

static void *SwigFXPyDirDialogToFXDialogBox(void *ptr) {
    FXPyDirDialog *src;
    FXDialogBox *dest;
    src = (FXPyDirDialog *) ptr;
    dest = (FXDialogBox *) src;
    return (void *) dest;
}

static void *SwigFXPyDirDialogToFXTopWindow(void *ptr) {
    FXPyDirDialog *src;
    FXTopWindow *dest;
    src = (FXPyDirDialog *) ptr;
    dest = (FXTopWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyDirDialogToFXShell(void *ptr) {
    FXPyDirDialog *src;
    FXShell *dest;
    src = (FXPyDirDialog *) ptr;
    dest = (FXShell *) src;
    return (void *) dest;
}

static void *SwigFXPyDirDialogToFXComposite(void *ptr) {
    FXPyDirDialog *src;
    FXComposite *dest;
    src = (FXPyDirDialog *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXPyDirDialogToFXWindow(void *ptr) {
    FXPyDirDialog *src;
    FXWindow *dest;
    src = (FXPyDirDialog *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyDirDialogToFXDrawable(void *ptr) {
    FXPyDirDialog *src;
    FXDrawable *dest;
    src = (FXPyDirDialog *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPyDirDialogToFXId(void *ptr) {
    FXPyDirDialog *src;
    FXId *dest;
    src = (FXPyDirDialog *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPyDirDialogToFXObject(void *ptr) {
    FXPyDirDialog *src;
    FXObject *dest;
    src = (FXPyDirDialog *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXDirDialog(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6) (new FXPyDirDialog(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6))
static PyObject *_wrap_new_FXDirDialog(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirDialog * _result;
    FXWindow * _arg0;
    FXString * _arg1;
    FXuint  _arg2 = (FXuint ) 0;
    FXint  _arg3 = (FXint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 500;
    FXint  _arg6 = (FXint ) 300;
    PyObject * _obj0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "owner","name","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|iiiii:new_FXDirDialog",_kwnames,&_obj0,&_obj1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6)) 
        return NULL;
{
    if (_obj0 == Py_None)
	_arg0 = NULL;
    else
	SWIG_GetPtrObj(_obj0, (void**) &_arg0, "_FXWindow_p");
}
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyDirDialog *)new_FXDirDialog(_arg0,*_arg1,_arg2,_arg3,_arg4,_arg5,_arg6);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyDirDialog_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    delete _arg1;
}
    return _resultobj;
}

#define FXDirDialog_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXDirDialog_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyDirDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXDirDialog_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirDialog_onDefault. Expected _FXPyDirDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXDirDialog_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXDirDialog_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXDirDialog_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirDialog_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirDialog_create. Expected _FXPyDirDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirDialog_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirDialog_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXDirDialog_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirDialog_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirDialog_destroy. Expected _FXPyDirDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirDialog_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirDialog_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXDirDialog_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirDialog_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirDialog_detach. Expected _FXPyDirDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirDialog_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirDialog_resize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_resize(_swigarg0,_swigarg1))
static PyObject *_wrap_FXDirDialog_resize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirDialog * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXDirDialog_resize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirDialog_resize. Expected _FXPyDirDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirDialog_resize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirDialog_getDefaultWidth(_swigobj)  (_swigobj->_getDefaultWidth())
static PyObject *_wrap_FXDirDialog_getDefaultWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyDirDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirDialog_getDefaultWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirDialog_getDefaultWidth. Expected _FXPyDirDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXDirDialog_getDefaultWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXDirDialog_getDefaultHeight(_swigobj)  (_swigobj->_getDefaultHeight())
static PyObject *_wrap_FXDirDialog_getDefaultHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyDirDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirDialog_getDefaultHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirDialog_getDefaultHeight. Expected _FXPyDirDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXDirDialog_getDefaultHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXDirDialog_show(_swigobj)  (_swigobj->_show())
static PyObject *_wrap_FXDirDialog_show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirDialog_show",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirDialog_show. Expected _FXPyDirDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirDialog_show(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirDialog_hide(_swigobj)  (_swigobj->_hide())
static PyObject *_wrap_FXDirDialog_hide(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirDialog_hide",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirDialog_hide. Expected _FXPyDirDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirDialog_hide(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirDialog_enable(_swigobj)  (_swigobj->_enable())
static PyObject *_wrap_FXDirDialog_enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirDialog_enable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirDialog_enable. Expected _FXPyDirDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirDialog_enable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirDialog_disable(_swigobj)  (_swigobj->_disable())
static PyObject *_wrap_FXDirDialog_disable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirDialog_disable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirDialog_disable. Expected _FXPyDirDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirDialog_disable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirDialog_canFocus(_swigobj)  (_swigobj->_canFocus())
static PyObject *_wrap_FXDirDialog_canFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyDirDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirDialog_canFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirDialog_canFocus. Expected _FXPyDirDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXDirDialog_canFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXDirDialog_setFocus(_swigobj)  (_swigobj->_setFocus())
static PyObject *_wrap_FXDirDialog_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirDialog_setFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirDialog_setFocus. Expected _FXPyDirDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirDialog_setFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirDialog_killFocus(_swigobj)  (_swigobj->_killFocus())
static PyObject *_wrap_FXDirDialog_killFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirDialog_killFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirDialog_killFocus. Expected _FXPyDirDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirDialog_killFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirDialog_setDefault(_swigobj,_swigarg0)  (_swigobj->_setDefault(_swigarg0))
static PyObject *_wrap_FXDirDialog_setDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirDialog * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FXDirDialog_setDefault",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirDialog_setDefault. Expected _FXPyDirDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirDialog_setDefault(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirDialog_recalc(_swigobj)  (_swigobj->_recalc())
static PyObject *_wrap_FXDirDialog_recalc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirDialog_recalc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirDialog_recalc. Expected _FXPyDirDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirDialog_recalc(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirDialog_layout(_swigobj)  (_swigobj->_layout())
static PyObject *_wrap_FXDirDialog_layout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirDialog_layout",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirDialog_layout. Expected _FXPyDirDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirDialog_layout(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirDialog_lower(_swigobj)  (_swigobj->_lowerWindow())
static PyObject *_wrap_FXDirDialog_lower(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirDialog_lower",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirDialog_lower. Expected _FXPyDirDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirDialog_lower(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirDialog_move(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_move(_swigarg0,_swigarg1))
static PyObject *_wrap_FXDirDialog_move(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirDialog * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXDirDialog_move",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirDialog_move. Expected _FXPyDirDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirDialog_move(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirDialog_position(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->_position(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FXDirDialog_position(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirDialog * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FXDirDialog_position",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirDialog_position. Expected _FXPyDirDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirDialog_position(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirDialog_isComposite(_swigobj)  (_swigobj->_isComposite())
static PyObject *_wrap_FXDirDialog_isComposite(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyDirDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirDialog_isComposite",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirDialog_isComposite. Expected _FXPyDirDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXDirDialog_isComposite(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXDirDialog_contains(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_contains(_swigarg0,_swigarg1))
static PyObject *_wrap_FXDirDialog_contains(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyDirDialog * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXDirDialog_contains",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirDialog_contains. Expected _FXPyDirDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXDirDialog_contains(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXDirDialog_getWidthForHeight(_swigobj,_swigarg0)  (_swigobj->_getWidthForHeight(_swigarg0))
static PyObject *_wrap_FXDirDialog_getWidthForHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyDirDialog * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXDirDialog_getWidthForHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirDialog_getWidthForHeight. Expected _FXPyDirDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXDirDialog_getWidthForHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXDirDialog_getHeightForWidth(_swigobj,_swigarg0)  (_swigobj->_getHeightForWidth(_swigarg0))
static PyObject *_wrap_FXDirDialog_getHeightForWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyDirDialog * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXDirDialog_getHeightForWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirDialog_getHeightForWidth. Expected _FXPyDirDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXDirDialog_getHeightForWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXDirDialog_doesSaveUnder(_swigobj)  (_swigobj->_doesSaveUnder())
static PyObject *_wrap_FXDirDialog_doesSaveUnder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyDirDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirDialog_doesSaveUnder",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirDialog_doesSaveUnder. Expected _FXPyDirDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXDirDialog_doesSaveUnder(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXDirDialog_reparent(_swigobj,_swigarg0)  (_swigobj->_reparent(_swigarg0))
static PyObject *_wrap_FXDirDialog_reparent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirDialog * _arg0;
    FXComposite * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","newparent", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXDirDialog_reparent",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirDialog_reparent. Expected _FXPyDirDialog_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXDirDialog_reparent. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirDialog_reparent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirDialog_setBackColor(_swigobj,_swigarg0)  (_swigobj->_setBackColor(_swigarg0))
static PyObject *_wrap_FXDirDialog_setBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirDialog * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXDirDialog_setBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirDialog_setBackColor. Expected _FXPyDirDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirDialog_setBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirDialog_show2(_swigobj,_swigarg0)  (_swigobj->_show(_swigarg0))
static PyObject *_wrap_FXDirDialog_show2(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirDialog * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","placement", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXDirDialog_show2",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirDialog_show2. Expected _FXPyDirDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirDialog_show2(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirDialog_iconify(_swigobj)  (_swigobj->_iconify())
static PyObject *_wrap_FXDirDialog_iconify(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirDialog_iconify",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirDialog_iconify. Expected _FXPyDirDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirDialog_iconify(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXDirDialog_deiconify(_swigobj)  (_swigobj->_deiconify())
static PyObject *_wrap_FXDirDialog_deiconify(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyDirDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXDirDialog_deiconify",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyDirDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXDirDialog_deiconify. Expected _FXPyDirDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXDirDialog_deiconify(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXPrintDialogToFXDialogBox(void *ptr) {
    FXPrintDialog *src;
    FXDialogBox *dest;
    src = (FXPrintDialog *) ptr;
    dest = (FXDialogBox *) src;
    return (void *) dest;
}

static void *SwigFXPrintDialogToFXTopWindow(void *ptr) {
    FXPrintDialog *src;
    FXTopWindow *dest;
    src = (FXPrintDialog *) ptr;
    dest = (FXTopWindow *) src;
    return (void *) dest;
}

static void *SwigFXPrintDialogToFXShell(void *ptr) {
    FXPrintDialog *src;
    FXShell *dest;
    src = (FXPrintDialog *) ptr;
    dest = (FXShell *) src;
    return (void *) dest;
}

static void *SwigFXPrintDialogToFXComposite(void *ptr) {
    FXPrintDialog *src;
    FXComposite *dest;
    src = (FXPrintDialog *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXPrintDialogToFXWindow(void *ptr) {
    FXPrintDialog *src;
    FXWindow *dest;
    src = (FXPrintDialog *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXPrintDialogToFXDrawable(void *ptr) {
    FXPrintDialog *src;
    FXDrawable *dest;
    src = (FXPrintDialog *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPrintDialogToFXId(void *ptr) {
    FXPrintDialog *src;
    FXId *dest;
    src = (FXPrintDialog *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPrintDialogToFXObject(void *ptr) {
    FXPrintDialog *src;
    FXObject *dest;
    src = (FXPrintDialog *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define FX_PrintDialog_onCmdToPrinter(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdToPrinter(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_PrintDialog_onCmdToPrinter(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPrintDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_PrintDialog_onCmdToPrinter",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_PrintDialog_onCmdToPrinter. Expected _FXPrintDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_PrintDialog_onCmdToPrinter. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_PrintDialog_onCmdToPrinter(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_PrintDialog_onUpdToPrinter(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdToPrinter(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_PrintDialog_onUpdToPrinter(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPrintDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_PrintDialog_onUpdToPrinter",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_PrintDialog_onUpdToPrinter. Expected _FXPrintDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_PrintDialog_onUpdToPrinter. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_PrintDialog_onUpdToPrinter(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_PrintDialog_onCmdToFile(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdToFile(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_PrintDialog_onCmdToFile(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPrintDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_PrintDialog_onCmdToFile",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_PrintDialog_onCmdToFile. Expected _FXPrintDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_PrintDialog_onCmdToFile. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_PrintDialog_onCmdToFile(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_PrintDialog_onUpdToFile(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdToFile(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_PrintDialog_onUpdToFile(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPrintDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_PrintDialog_onUpdToFile",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_PrintDialog_onUpdToFile. Expected _FXPrintDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_PrintDialog_onUpdToFile. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_PrintDialog_onUpdToFile(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_PrintDialog_onCmdBrowse(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdBrowse(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_PrintDialog_onCmdBrowse(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPrintDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_PrintDialog_onCmdBrowse",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_PrintDialog_onCmdBrowse. Expected _FXPrintDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_PrintDialog_onCmdBrowse. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_PrintDialog_onCmdBrowse(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_PrintDialog_onUpdBrowse(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdBrowse(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_PrintDialog_onUpdBrowse(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPrintDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_PrintDialog_onUpdBrowse",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_PrintDialog_onUpdBrowse. Expected _FXPrintDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_PrintDialog_onUpdBrowse. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_PrintDialog_onUpdBrowse(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_PrintDialog_onCmdProps(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdProps(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_PrintDialog_onCmdProps(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPrintDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_PrintDialog_onCmdProps",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_PrintDialog_onCmdProps. Expected _FXPrintDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_PrintDialog_onCmdProps. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_PrintDialog_onCmdProps(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_PrintDialog_onUpdProps(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdProps(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_PrintDialog_onUpdProps(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPrintDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_PrintDialog_onUpdProps",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_PrintDialog_onUpdProps. Expected _FXPrintDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_PrintDialog_onUpdProps. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_PrintDialog_onUpdProps(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_PrintDialog_onCmdPortrait(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdPortrait(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_PrintDialog_onCmdPortrait(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPrintDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_PrintDialog_onCmdPortrait",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_PrintDialog_onCmdPortrait. Expected _FXPrintDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_PrintDialog_onCmdPortrait. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_PrintDialog_onCmdPortrait(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_PrintDialog_onUpdPortrait(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdPortrait(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_PrintDialog_onUpdPortrait(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPrintDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_PrintDialog_onUpdPortrait",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_PrintDialog_onUpdPortrait. Expected _FXPrintDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_PrintDialog_onUpdPortrait. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_PrintDialog_onUpdPortrait(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_PrintDialog_onCmdLandscape(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdLandscape(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_PrintDialog_onCmdLandscape(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPrintDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_PrintDialog_onCmdLandscape",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_PrintDialog_onCmdLandscape. Expected _FXPrintDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_PrintDialog_onCmdLandscape. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_PrintDialog_onCmdLandscape(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_PrintDialog_onUpdLandscape(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdLandscape(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_PrintDialog_onUpdLandscape(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPrintDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_PrintDialog_onUpdLandscape",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_PrintDialog_onUpdLandscape. Expected _FXPrintDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_PrintDialog_onUpdLandscape. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_PrintDialog_onUpdLandscape(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_PrintDialog_onCmdPages(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdPages(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_PrintDialog_onCmdPages(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPrintDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_PrintDialog_onCmdPages",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_PrintDialog_onCmdPages. Expected _FXPrintDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_PrintDialog_onCmdPages. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_PrintDialog_onCmdPages(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_PrintDialog_onUpdPages(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdPages(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_PrintDialog_onUpdPages(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPrintDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_PrintDialog_onUpdPages",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_PrintDialog_onUpdPages. Expected _FXPrintDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_PrintDialog_onUpdPages. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_PrintDialog_onUpdPages(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_PrintDialog_onCmdColor(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdColor(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_PrintDialog_onCmdColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPrintDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_PrintDialog_onCmdColor",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_PrintDialog_onCmdColor. Expected _FXPrintDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_PrintDialog_onCmdColor. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_PrintDialog_onCmdColor(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_PrintDialog_onUpdColor(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdColor(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_PrintDialog_onUpdColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPrintDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_PrintDialog_onUpdColor",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_PrintDialog_onUpdColor. Expected _FXPrintDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_PrintDialog_onUpdColor. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_PrintDialog_onUpdColor(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_PrintDialog_onCmdGray(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdGray(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_PrintDialog_onCmdGray(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPrintDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_PrintDialog_onCmdGray",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_PrintDialog_onCmdGray. Expected _FXPrintDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_PrintDialog_onCmdGray. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_PrintDialog_onCmdGray(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_PrintDialog_onUpdGray(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdGray(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_PrintDialog_onUpdGray(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPrintDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_PrintDialog_onUpdGray",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_PrintDialog_onUpdGray. Expected _FXPrintDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_PrintDialog_onUpdGray. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_PrintDialog_onUpdGray(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_PrintDialog_onCmdNumCopies(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdNumCopies(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_PrintDialog_onCmdNumCopies(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPrintDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_PrintDialog_onCmdNumCopies",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_PrintDialog_onCmdNumCopies. Expected _FXPrintDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_PrintDialog_onCmdNumCopies. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_PrintDialog_onCmdNumCopies(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_PrintDialog_onUpdNumCopies(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdNumCopies(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_PrintDialog_onUpdNumCopies(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPrintDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_PrintDialog_onUpdNumCopies",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_PrintDialog_onUpdNumCopies. Expected _FXPrintDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_PrintDialog_onUpdNumCopies. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_PrintDialog_onUpdNumCopies(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_PrintDialog_onCmdFirstPage(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdFirstPage(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_PrintDialog_onCmdFirstPage(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPrintDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_PrintDialog_onCmdFirstPage",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_PrintDialog_onCmdFirstPage. Expected _FXPrintDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_PrintDialog_onCmdFirstPage. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_PrintDialog_onCmdFirstPage(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_PrintDialog_onUpdFirstPage(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdFirstPage(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_PrintDialog_onUpdFirstPage(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPrintDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_PrintDialog_onUpdFirstPage",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_PrintDialog_onUpdFirstPage. Expected _FXPrintDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_PrintDialog_onUpdFirstPage. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_PrintDialog_onUpdFirstPage(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_PrintDialog_onCmdLastPage(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdLastPage(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_PrintDialog_onCmdLastPage(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPrintDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_PrintDialog_onCmdLastPage",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_PrintDialog_onCmdLastPage. Expected _FXPrintDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_PrintDialog_onCmdLastPage. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_PrintDialog_onCmdLastPage(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_PrintDialog_onUpdLastPage(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdLastPage(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_PrintDialog_onUpdLastPage(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPrintDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_PrintDialog_onUpdLastPage",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_PrintDialog_onUpdLastPage. Expected _FXPrintDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_PrintDialog_onUpdLastPage. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_PrintDialog_onUpdLastPage(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_PrintDialog_onCmdCollateNormal(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdCollateNormal(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_PrintDialog_onCmdCollateNormal(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPrintDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_PrintDialog_onCmdCollateNormal",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_PrintDialog_onCmdCollateNormal. Expected _FXPrintDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_PrintDialog_onCmdCollateNormal. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_PrintDialog_onCmdCollateNormal(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_PrintDialog_onUpdCollateNormal(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdCollateNormal(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_PrintDialog_onUpdCollateNormal(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPrintDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_PrintDialog_onUpdCollateNormal",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_PrintDialog_onUpdCollateNormal. Expected _FXPrintDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_PrintDialog_onUpdCollateNormal. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_PrintDialog_onUpdCollateNormal(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_PrintDialog_onCmdCollateReversed(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdCollateReversed(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_PrintDialog_onCmdCollateReversed(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPrintDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_PrintDialog_onCmdCollateReversed",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_PrintDialog_onCmdCollateReversed. Expected _FXPrintDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_PrintDialog_onCmdCollateReversed. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_PrintDialog_onCmdCollateReversed(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_PrintDialog_onUpdCollateReversed(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdCollateReversed(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_PrintDialog_onUpdCollateReversed(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPrintDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_PrintDialog_onUpdCollateReversed",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_PrintDialog_onUpdCollateReversed. Expected _FXPrintDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_PrintDialog_onUpdCollateReversed. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_PrintDialog_onUpdCollateReversed(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_PrintDialog_onCmdFileName(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdFileName(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_PrintDialog_onCmdFileName(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPrintDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_PrintDialog_onCmdFileName",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_PrintDialog_onCmdFileName. Expected _FXPrintDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_PrintDialog_onCmdFileName. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_PrintDialog_onCmdFileName(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_PrintDialog_onUpdFileName(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdFileName(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_PrintDialog_onUpdFileName(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPrintDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_PrintDialog_onUpdFileName",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_PrintDialog_onUpdFileName. Expected _FXPrintDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_PrintDialog_onUpdFileName. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_PrintDialog_onUpdFileName(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_PrintDialog_onCmdPrinterName(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdPrinterName(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_PrintDialog_onCmdPrinterName(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPrintDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_PrintDialog_onCmdPrinterName",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_PrintDialog_onCmdPrinterName. Expected _FXPrintDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_PrintDialog_onCmdPrinterName. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_PrintDialog_onCmdPrinterName(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_PrintDialog_onUpdPrinterName(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdPrinterName(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_PrintDialog_onUpdPrinterName(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPrintDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_PrintDialog_onUpdPrinterName",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_PrintDialog_onUpdPrinterName. Expected _FXPrintDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_PrintDialog_onUpdPrinterName. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_PrintDialog_onUpdPrinterName(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_PrintDialog_onCmdAccept(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdAccept(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_PrintDialog_onCmdAccept(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPrintDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_PrintDialog_onCmdAccept",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_PrintDialog_onCmdAccept. Expected _FXPrintDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_PrintDialog_onCmdAccept. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_PrintDialog_onCmdAccept(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_PrintDialog_onCmdMedia(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdMedia(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_PrintDialog_onCmdMedia(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPrintDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_PrintDialog_onCmdMedia",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_PrintDialog_onCmdMedia. Expected _FXPrintDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_PrintDialog_onCmdMedia. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_PrintDialog_onCmdMedia(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_PrintDialog_onUpdMedia(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdMedia(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_PrintDialog_onUpdMedia(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPrintDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_PrintDialog_onUpdMedia",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_PrintDialog_onUpdMedia. Expected _FXPrintDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_PrintDialog_onUpdMedia. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_PrintDialog_onUpdMedia(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define new_FX_PrintDialog(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6) (new FXPrintDialog(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6))
static PyObject *_wrap_new_FX_PrintDialog(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPrintDialog * _result;
    FXWindow * _arg0;
    FXString * _arg1;
    FXuint  _arg2 = (FXuint ) 0;
    FXint  _arg3 = (FXint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    PyObject * _obj0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "owner","name","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|iiiii:new_FX_PrintDialog",_kwnames,&_obj0,&_obj1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6)) 
        return NULL;
{
    if (_obj0 == Py_None)
	_arg0 = NULL;
    else
	SWIG_GetPtrObj(_obj0, (void**) &_arg0, "_FXWindow_p");
}
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPrintDialog *)new_FX_PrintDialog(_arg0,*_arg1,_arg2,_arg3,_arg4,_arg5,_arg6);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPrintDialog_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_PrintDialog_setPrinter(_swigobj,_swigarg0)  (_swigobj->setPrinter(_swigarg0))
static PyObject *_wrap_FX_PrintDialog_setPrinter(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPrintDialog * _arg0;
    FXPrinter * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","pr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_PrintDialog_setPrinter",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_PrintDialog_setPrinter. Expected _FXPrintDialog_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXPrinter_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FX_PrintDialog_setPrinter. Expected _FXPrinter_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_PrintDialog_setPrinter(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static FXPrinter * FXPrintDialog_getPrinter(FXPrintDialog *self) {
      FXPrinter* pr = new FXPrinter;
      self->getPrinter(*pr);
      return pr;
    }
static PyObject *_wrap_FX_PrintDialog_getPrinter(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPrinter * _result;
    FXPrintDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_PrintDialog_getPrinter",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_PrintDialog_getPrinter. Expected _FXPrintDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPrinter *)FXPrintDialog_getPrinter(_arg0);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPrinter_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define delete_FXPrintDialog(_swigobj) (delete _swigobj)
static PyObject *_wrap_delete_FX_PrintDialog(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPrintDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:delete_FX_PrintDialog",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of delete_FX_PrintDialog. Expected _FXPrintDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        delete_FXPrintDialog(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXPyPrintDialogToFXPrintDialog(void *ptr) {
    FXPyPrintDialog *src;
    FXPrintDialog *dest;
    src = (FXPyPrintDialog *) ptr;
    dest = (FXPrintDialog *) src;
    return (void *) dest;
}

static void *SwigFXPyPrintDialogToFXDialogBox(void *ptr) {
    FXPyPrintDialog *src;
    FXDialogBox *dest;
    src = (FXPyPrintDialog *) ptr;
    dest = (FXDialogBox *) src;
    return (void *) dest;
}

static void *SwigFXPyPrintDialogToFXTopWindow(void *ptr) {
    FXPyPrintDialog *src;
    FXTopWindow *dest;
    src = (FXPyPrintDialog *) ptr;
    dest = (FXTopWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyPrintDialogToFXShell(void *ptr) {
    FXPyPrintDialog *src;
    FXShell *dest;
    src = (FXPyPrintDialog *) ptr;
    dest = (FXShell *) src;
    return (void *) dest;
}

static void *SwigFXPyPrintDialogToFXComposite(void *ptr) {
    FXPyPrintDialog *src;
    FXComposite *dest;
    src = (FXPyPrintDialog *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXPyPrintDialogToFXWindow(void *ptr) {
    FXPyPrintDialog *src;
    FXWindow *dest;
    src = (FXPyPrintDialog *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyPrintDialogToFXDrawable(void *ptr) {
    FXPyPrintDialog *src;
    FXDrawable *dest;
    src = (FXPyPrintDialog *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPyPrintDialogToFXId(void *ptr) {
    FXPyPrintDialog *src;
    FXId *dest;
    src = (FXPyPrintDialog *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPyPrintDialogToFXObject(void *ptr) {
    FXPyPrintDialog *src;
    FXObject *dest;
    src = (FXPyPrintDialog *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXPrintDialog(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6) (new FXPyPrintDialog(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6))
static PyObject *_wrap_new_FXPrintDialog(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPrintDialog * _result;
    FXWindow * _arg0;
    FXString * _arg1;
    FXuint  _arg2 = (FXuint ) 0;
    FXint  _arg3 = (FXint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    PyObject * _obj0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "owner","name","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|iiiii:new_FXPrintDialog",_kwnames,&_obj0,&_obj1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6)) 
        return NULL;
{
    if (_obj0 == Py_None)
	_arg0 = NULL;
    else
	SWIG_GetPtrObj(_obj0, (void**) &_arg0, "_FXWindow_p");
}
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyPrintDialog *)new_FXPrintDialog(_arg0,*_arg1,_arg2,_arg3,_arg4,_arg5,_arg6);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyPrintDialog_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    delete _arg1;
}
    return _resultobj;
}

#define FXPrintDialog_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXPrintDialog_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyPrintDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXPrintDialog_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPrintDialog_onDefault. Expected _FXPyPrintDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXPrintDialog_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXPrintDialog_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXPrintDialog_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPrintDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXPrintDialog_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPrintDialog_create. Expected _FXPyPrintDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXPrintDialog_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXPrintDialog_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXPrintDialog_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPrintDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXPrintDialog_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPrintDialog_destroy. Expected _FXPyPrintDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXPrintDialog_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXPrintDialog_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXPrintDialog_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPrintDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXPrintDialog_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPrintDialog_detach. Expected _FXPyPrintDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXPrintDialog_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXPrintDialog_resize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_resize(_swigarg0,_swigarg1))
static PyObject *_wrap_FXPrintDialog_resize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPrintDialog * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXPrintDialog_resize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPrintDialog_resize. Expected _FXPyPrintDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXPrintDialog_resize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXPrintDialog_getDefaultWidth(_swigobj)  (_swigobj->_getDefaultWidth())
static PyObject *_wrap_FXPrintDialog_getDefaultWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyPrintDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXPrintDialog_getDefaultWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPrintDialog_getDefaultWidth. Expected _FXPyPrintDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXPrintDialog_getDefaultWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXPrintDialog_getDefaultHeight(_swigobj)  (_swigobj->_getDefaultHeight())
static PyObject *_wrap_FXPrintDialog_getDefaultHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyPrintDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXPrintDialog_getDefaultHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPrintDialog_getDefaultHeight. Expected _FXPyPrintDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXPrintDialog_getDefaultHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXPrintDialog_show(_swigobj)  (_swigobj->_show())
static PyObject *_wrap_FXPrintDialog_show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPrintDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXPrintDialog_show",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPrintDialog_show. Expected _FXPyPrintDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXPrintDialog_show(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXPrintDialog_hide(_swigobj)  (_swigobj->_hide())
static PyObject *_wrap_FXPrintDialog_hide(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPrintDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXPrintDialog_hide",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPrintDialog_hide. Expected _FXPyPrintDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXPrintDialog_hide(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXPrintDialog_enable(_swigobj)  (_swigobj->_enable())
static PyObject *_wrap_FXPrintDialog_enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPrintDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXPrintDialog_enable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPrintDialog_enable. Expected _FXPyPrintDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXPrintDialog_enable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXPrintDialog_disable(_swigobj)  (_swigobj->_disable())
static PyObject *_wrap_FXPrintDialog_disable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPrintDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXPrintDialog_disable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPrintDialog_disable. Expected _FXPyPrintDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXPrintDialog_disable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXPrintDialog_canFocus(_swigobj)  (_swigobj->_canFocus())
static PyObject *_wrap_FXPrintDialog_canFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyPrintDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXPrintDialog_canFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPrintDialog_canFocus. Expected _FXPyPrintDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXPrintDialog_canFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXPrintDialog_setFocus(_swigobj)  (_swigobj->_setFocus())
static PyObject *_wrap_FXPrintDialog_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPrintDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXPrintDialog_setFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPrintDialog_setFocus. Expected _FXPyPrintDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXPrintDialog_setFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXPrintDialog_killFocus(_swigobj)  (_swigobj->_killFocus())
static PyObject *_wrap_FXPrintDialog_killFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPrintDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXPrintDialog_killFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPrintDialog_killFocus. Expected _FXPyPrintDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXPrintDialog_killFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXPrintDialog_setDefault(_swigobj,_swigarg0)  (_swigobj->_setDefault(_swigarg0))
static PyObject *_wrap_FXPrintDialog_setDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPrintDialog * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FXPrintDialog_setDefault",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPrintDialog_setDefault. Expected _FXPyPrintDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXPrintDialog_setDefault(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXPrintDialog_recalc(_swigobj)  (_swigobj->_recalc())
static PyObject *_wrap_FXPrintDialog_recalc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPrintDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXPrintDialog_recalc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPrintDialog_recalc. Expected _FXPyPrintDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXPrintDialog_recalc(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXPrintDialog_layout(_swigobj)  (_swigobj->_layout())
static PyObject *_wrap_FXPrintDialog_layout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPrintDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXPrintDialog_layout",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPrintDialog_layout. Expected _FXPyPrintDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXPrintDialog_layout(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXPrintDialog_lower(_swigobj)  (_swigobj->_lowerWindow())
static PyObject *_wrap_FXPrintDialog_lower(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPrintDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXPrintDialog_lower",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPrintDialog_lower. Expected _FXPyPrintDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXPrintDialog_lower(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXPrintDialog_move(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_move(_swigarg0,_swigarg1))
static PyObject *_wrap_FXPrintDialog_move(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPrintDialog * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXPrintDialog_move",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPrintDialog_move. Expected _FXPyPrintDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXPrintDialog_move(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXPrintDialog_position(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->_position(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FXPrintDialog_position(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPrintDialog * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FXPrintDialog_position",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPrintDialog_position. Expected _FXPyPrintDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXPrintDialog_position(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXPrintDialog_isComposite(_swigobj)  (_swigobj->_isComposite())
static PyObject *_wrap_FXPrintDialog_isComposite(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyPrintDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXPrintDialog_isComposite",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPrintDialog_isComposite. Expected _FXPyPrintDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXPrintDialog_isComposite(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXPrintDialog_contains(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_contains(_swigarg0,_swigarg1))
static PyObject *_wrap_FXPrintDialog_contains(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyPrintDialog * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXPrintDialog_contains",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPrintDialog_contains. Expected _FXPyPrintDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXPrintDialog_contains(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXPrintDialog_getWidthForHeight(_swigobj,_swigarg0)  (_swigobj->_getWidthForHeight(_swigarg0))
static PyObject *_wrap_FXPrintDialog_getWidthForHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyPrintDialog * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXPrintDialog_getWidthForHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPrintDialog_getWidthForHeight. Expected _FXPyPrintDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXPrintDialog_getWidthForHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXPrintDialog_getHeightForWidth(_swigobj,_swigarg0)  (_swigobj->_getHeightForWidth(_swigarg0))
static PyObject *_wrap_FXPrintDialog_getHeightForWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyPrintDialog * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXPrintDialog_getHeightForWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPrintDialog_getHeightForWidth. Expected _FXPyPrintDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXPrintDialog_getHeightForWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXPrintDialog_doesSaveUnder(_swigobj)  (_swigobj->_doesSaveUnder())
static PyObject *_wrap_FXPrintDialog_doesSaveUnder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyPrintDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXPrintDialog_doesSaveUnder",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPrintDialog_doesSaveUnder. Expected _FXPyPrintDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXPrintDialog_doesSaveUnder(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXPrintDialog_reparent(_swigobj,_swigarg0)  (_swigobj->_reparent(_swigarg0))
static PyObject *_wrap_FXPrintDialog_reparent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPrintDialog * _arg0;
    FXComposite * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","newparent", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXPrintDialog_reparent",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPrintDialog_reparent. Expected _FXPyPrintDialog_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXPrintDialog_reparent. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXPrintDialog_reparent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXPrintDialog_setBackColor(_swigobj,_swigarg0)  (_swigobj->_setBackColor(_swigarg0))
static PyObject *_wrap_FXPrintDialog_setBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPrintDialog * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXPrintDialog_setBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPrintDialog_setBackColor. Expected _FXPyPrintDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXPrintDialog_setBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXPrintDialog_show2(_swigobj,_swigarg0)  (_swigobj->_show(_swigarg0))
static PyObject *_wrap_FXPrintDialog_show2(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPrintDialog * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","placement", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXPrintDialog_show2",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPrintDialog_show2. Expected _FXPyPrintDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXPrintDialog_show2(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXPrintDialog_iconify(_swigobj)  (_swigobj->_iconify())
static PyObject *_wrap_FXPrintDialog_iconify(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPrintDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXPrintDialog_iconify",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPrintDialog_iconify. Expected _FXPyPrintDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXPrintDialog_iconify(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXPrintDialog_deiconify(_swigobj)  (_swigobj->_deiconify())
static PyObject *_wrap_FXPrintDialog_deiconify(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyPrintDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXPrintDialog_deiconify",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyPrintDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXPrintDialog_deiconify. Expected _FXPyPrintDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXPrintDialog_deiconify(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXMessageBoxToFXDialogBox(void *ptr) {
    FXMessageBox *src;
    FXDialogBox *dest;
    src = (FXMessageBox *) ptr;
    dest = (FXDialogBox *) src;
    return (void *) dest;
}

static void *SwigFXMessageBoxToFXTopWindow(void *ptr) {
    FXMessageBox *src;
    FXTopWindow *dest;
    src = (FXMessageBox *) ptr;
    dest = (FXTopWindow *) src;
    return (void *) dest;
}

static void *SwigFXMessageBoxToFXShell(void *ptr) {
    FXMessageBox *src;
    FXShell *dest;
    src = (FXMessageBox *) ptr;
    dest = (FXShell *) src;
    return (void *) dest;
}

static void *SwigFXMessageBoxToFXComposite(void *ptr) {
    FXMessageBox *src;
    FXComposite *dest;
    src = (FXMessageBox *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXMessageBoxToFXWindow(void *ptr) {
    FXMessageBox *src;
    FXWindow *dest;
    src = (FXMessageBox *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXMessageBoxToFXDrawable(void *ptr) {
    FXMessageBox *src;
    FXDrawable *dest;
    src = (FXMessageBox *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXMessageBoxToFXId(void *ptr) {
    FXMessageBox *src;
    FXId *dest;
    src = (FXMessageBox *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXMessageBoxToFXObject(void *ptr) {
    FXMessageBox *src;
    FXObject *dest;
    src = (FXMessageBox *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define FX_MessageBox_onCmdClicked(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdClicked(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_MessageBox_onCmdClicked(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXMessageBox * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_MessageBox_onCmdClicked",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXMessageBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_MessageBox_onCmdClicked. Expected _FXMessageBox_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_MessageBox_onCmdClicked. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_MessageBox_onCmdClicked(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_MessageBox_onCmdCancel(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdCancel(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_MessageBox_onCmdCancel(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXMessageBox * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_MessageBox_onCmdCancel",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXMessageBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_MessageBox_onCmdCancel. Expected _FXMessageBox_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_MessageBox_onCmdCancel. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_MessageBox_onCmdCancel(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define new_FX_MessageBox(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6) (new FXMessageBox(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6))
static PyObject *_wrap_new_FX_MessageBox(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXMessageBox * _result;
    FXWindow * _arg0;
    FXString * _arg1;
    FXString * _arg2;
    FXIcon * _arg3 = (FXIcon *) NULL;
    FXuint  _arg4 = (FXuint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    PyObject * _obj0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "owner","caption","text","ic","opts","x","y", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO|Oiii:new_FX_MessageBox",_kwnames,&_obj0,&_obj1,&_obj2,&_obj3,&_arg4,&_arg5,&_arg6)) 
        return NULL;
{
    if (_obj0 == Py_None)
	_arg0 = NULL;
    else
	SWIG_GetPtrObj(_obj0, (void**) &_arg0, "_FXWindow_p");
}
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    if (_obj2 == Py_None)
	_arg2 = new FXString;
    else if (!PyString_Check(_obj2)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg2 = new FXString(PyString_AsString(_obj2));
}
    if (_obj3)
{
    if (_obj3 == Py_None)
	_arg3 = NULL;
    else
	SWIG_GetPtrObj(_obj3, (void**) &_arg3, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXMessageBox *)new_FX_MessageBox(_arg0,*_arg1,*_arg2,_arg3,_arg4,_arg5,_arg6);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXMessageBox_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    delete _arg1;
}
{
    delete _arg2;
}
    return _resultobj;
}

static void *SwigFXPyMessageBoxToFXMessageBox(void *ptr) {
    FXPyMessageBox *src;
    FXMessageBox *dest;
    src = (FXPyMessageBox *) ptr;
    dest = (FXMessageBox *) src;
    return (void *) dest;
}

static void *SwigFXPyMessageBoxToFXDialogBox(void *ptr) {
    FXPyMessageBox *src;
    FXDialogBox *dest;
    src = (FXPyMessageBox *) ptr;
    dest = (FXDialogBox *) src;
    return (void *) dest;
}

static void *SwigFXPyMessageBoxToFXTopWindow(void *ptr) {
    FXPyMessageBox *src;
    FXTopWindow *dest;
    src = (FXPyMessageBox *) ptr;
    dest = (FXTopWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyMessageBoxToFXShell(void *ptr) {
    FXPyMessageBox *src;
    FXShell *dest;
    src = (FXPyMessageBox *) ptr;
    dest = (FXShell *) src;
    return (void *) dest;
}

static void *SwigFXPyMessageBoxToFXComposite(void *ptr) {
    FXPyMessageBox *src;
    FXComposite *dest;
    src = (FXPyMessageBox *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXPyMessageBoxToFXWindow(void *ptr) {
    FXPyMessageBox *src;
    FXWindow *dest;
    src = (FXPyMessageBox *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyMessageBoxToFXDrawable(void *ptr) {
    FXPyMessageBox *src;
    FXDrawable *dest;
    src = (FXPyMessageBox *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPyMessageBoxToFXId(void *ptr) {
    FXPyMessageBox *src;
    FXId *dest;
    src = (FXPyMessageBox *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPyMessageBoxToFXObject(void *ptr) {
    FXPyMessageBox *src;
    FXObject *dest;
    src = (FXPyMessageBox *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXMessageBox(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6) (new FXPyMessageBox(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6))
static PyObject *_wrap_new_FXMessageBox(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMessageBox * _result;
    FXWindow * _arg0;
    FXString * _arg1;
    FXString * _arg2;
    FXIcon * _arg3 = (FXIcon *) NULL;
    FXuint  _arg4 = (FXuint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    PyObject * _obj0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "owner","caption","text","ic","opts","x","y", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO|Oiii:new_FXMessageBox",_kwnames,&_obj0,&_obj1,&_obj2,&_obj3,&_arg4,&_arg5,&_arg6)) 
        return NULL;
{
    if (_obj0 == Py_None)
	_arg0 = NULL;
    else
	SWIG_GetPtrObj(_obj0, (void**) &_arg0, "_FXWindow_p");
}
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    if (_obj2 == Py_None)
	_arg2 = new FXString;
    else if (!PyString_Check(_obj2)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg2 = new FXString(PyString_AsString(_obj2));
}
    if (_obj3)
{
    if (_obj3 == Py_None)
	_arg3 = NULL;
    else
	SWIG_GetPtrObj(_obj3, (void**) &_arg3, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyMessageBox *)new_FXMessageBox(_arg0,*_arg1,*_arg2,_arg3,_arg4,_arg5,_arg6);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyMessageBox_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    delete _arg1;
}
{
    delete _arg2;
}
    return _resultobj;
}

#define FXMessageBox_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXMessageBox_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyMessageBox * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXMessageBox_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMessageBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMessageBox_onDefault. Expected _FXPyMessageBox_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXMessageBox_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXMessageBox_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXMessageBox_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMessageBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXMessageBox_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMessageBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMessageBox_create. Expected _FXPyMessageBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXMessageBox_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXMessageBox_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXMessageBox_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMessageBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXMessageBox_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMessageBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMessageBox_destroy. Expected _FXPyMessageBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXMessageBox_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXMessageBox_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXMessageBox_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMessageBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXMessageBox_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMessageBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMessageBox_detach. Expected _FXPyMessageBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXMessageBox_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXMessageBox_resize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_resize(_swigarg0,_swigarg1))
static PyObject *_wrap_FXMessageBox_resize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMessageBox * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXMessageBox_resize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMessageBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMessageBox_resize. Expected _FXPyMessageBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXMessageBox_resize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXMessageBox_getDefaultWidth(_swigobj)  (_swigobj->_getDefaultWidth())
static PyObject *_wrap_FXMessageBox_getDefaultWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyMessageBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXMessageBox_getDefaultWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMessageBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMessageBox_getDefaultWidth. Expected _FXPyMessageBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXMessageBox_getDefaultWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXMessageBox_getDefaultHeight(_swigobj)  (_swigobj->_getDefaultHeight())
static PyObject *_wrap_FXMessageBox_getDefaultHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyMessageBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXMessageBox_getDefaultHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMessageBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMessageBox_getDefaultHeight. Expected _FXPyMessageBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXMessageBox_getDefaultHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXMessageBox_show(_swigobj)  (_swigobj->_show())
static PyObject *_wrap_FXMessageBox_show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMessageBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXMessageBox_show",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMessageBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMessageBox_show. Expected _FXPyMessageBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXMessageBox_show(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXMessageBox_hide(_swigobj)  (_swigobj->_hide())
static PyObject *_wrap_FXMessageBox_hide(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMessageBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXMessageBox_hide",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMessageBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMessageBox_hide. Expected _FXPyMessageBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXMessageBox_hide(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXMessageBox_enable(_swigobj)  (_swigobj->_enable())
static PyObject *_wrap_FXMessageBox_enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMessageBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXMessageBox_enable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMessageBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMessageBox_enable. Expected _FXPyMessageBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXMessageBox_enable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXMessageBox_disable(_swigobj)  (_swigobj->_disable())
static PyObject *_wrap_FXMessageBox_disable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMessageBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXMessageBox_disable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMessageBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMessageBox_disable. Expected _FXPyMessageBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXMessageBox_disable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXMessageBox_canFocus(_swigobj)  (_swigobj->_canFocus())
static PyObject *_wrap_FXMessageBox_canFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyMessageBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXMessageBox_canFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMessageBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMessageBox_canFocus. Expected _FXPyMessageBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXMessageBox_canFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXMessageBox_setFocus(_swigobj)  (_swigobj->_setFocus())
static PyObject *_wrap_FXMessageBox_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMessageBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXMessageBox_setFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMessageBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMessageBox_setFocus. Expected _FXPyMessageBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXMessageBox_setFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXMessageBox_killFocus(_swigobj)  (_swigobj->_killFocus())
static PyObject *_wrap_FXMessageBox_killFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMessageBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXMessageBox_killFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMessageBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMessageBox_killFocus. Expected _FXPyMessageBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXMessageBox_killFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXMessageBox_setDefault(_swigobj,_swigarg0)  (_swigobj->_setDefault(_swigarg0))
static PyObject *_wrap_FXMessageBox_setDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMessageBox * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FXMessageBox_setDefault",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMessageBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMessageBox_setDefault. Expected _FXPyMessageBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXMessageBox_setDefault(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXMessageBox_recalc(_swigobj)  (_swigobj->_recalc())
static PyObject *_wrap_FXMessageBox_recalc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMessageBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXMessageBox_recalc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMessageBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMessageBox_recalc. Expected _FXPyMessageBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXMessageBox_recalc(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXMessageBox_layout(_swigobj)  (_swigobj->_layout())
static PyObject *_wrap_FXMessageBox_layout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMessageBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXMessageBox_layout",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMessageBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMessageBox_layout. Expected _FXPyMessageBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXMessageBox_layout(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXMessageBox_lower(_swigobj)  (_swigobj->_lowerWindow())
static PyObject *_wrap_FXMessageBox_lower(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMessageBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXMessageBox_lower",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMessageBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMessageBox_lower. Expected _FXPyMessageBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXMessageBox_lower(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXMessageBox_move(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_move(_swigarg0,_swigarg1))
static PyObject *_wrap_FXMessageBox_move(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMessageBox * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXMessageBox_move",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMessageBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMessageBox_move. Expected _FXPyMessageBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXMessageBox_move(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXMessageBox_position(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->_position(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FXMessageBox_position(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMessageBox * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FXMessageBox_position",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMessageBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMessageBox_position. Expected _FXPyMessageBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXMessageBox_position(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXMessageBox_isComposite(_swigobj)  (_swigobj->_isComposite())
static PyObject *_wrap_FXMessageBox_isComposite(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyMessageBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXMessageBox_isComposite",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMessageBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMessageBox_isComposite. Expected _FXPyMessageBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXMessageBox_isComposite(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXMessageBox_contains(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_contains(_swigarg0,_swigarg1))
static PyObject *_wrap_FXMessageBox_contains(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyMessageBox * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXMessageBox_contains",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMessageBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMessageBox_contains. Expected _FXPyMessageBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXMessageBox_contains(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXMessageBox_getWidthForHeight(_swigobj,_swigarg0)  (_swigobj->_getWidthForHeight(_swigarg0))
static PyObject *_wrap_FXMessageBox_getWidthForHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyMessageBox * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXMessageBox_getWidthForHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMessageBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMessageBox_getWidthForHeight. Expected _FXPyMessageBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXMessageBox_getWidthForHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXMessageBox_getHeightForWidth(_swigobj,_swigarg0)  (_swigobj->_getHeightForWidth(_swigarg0))
static PyObject *_wrap_FXMessageBox_getHeightForWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyMessageBox * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXMessageBox_getHeightForWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMessageBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMessageBox_getHeightForWidth. Expected _FXPyMessageBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXMessageBox_getHeightForWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXMessageBox_doesSaveUnder(_swigobj)  (_swigobj->_doesSaveUnder())
static PyObject *_wrap_FXMessageBox_doesSaveUnder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyMessageBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXMessageBox_doesSaveUnder",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMessageBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMessageBox_doesSaveUnder. Expected _FXPyMessageBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXMessageBox_doesSaveUnder(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXMessageBox_reparent(_swigobj,_swigarg0)  (_swigobj->_reparent(_swigarg0))
static PyObject *_wrap_FXMessageBox_reparent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMessageBox * _arg0;
    FXComposite * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","newparent", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXMessageBox_reparent",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMessageBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMessageBox_reparent. Expected _FXPyMessageBox_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXMessageBox_reparent. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXMessageBox_reparent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXMessageBox_setBackColor(_swigobj,_swigarg0)  (_swigobj->_setBackColor(_swigarg0))
static PyObject *_wrap_FXMessageBox_setBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMessageBox * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXMessageBox_setBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMessageBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMessageBox_setBackColor. Expected _FXPyMessageBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXMessageBox_setBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXMessageBox_show2(_swigobj,_swigarg0)  (_swigobj->_show(_swigarg0))
static PyObject *_wrap_FXMessageBox_show2(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMessageBox * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","placement", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXMessageBox_show2",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMessageBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMessageBox_show2. Expected _FXPyMessageBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXMessageBox_show2(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXMessageBox_iconify(_swigobj)  (_swigobj->_iconify())
static PyObject *_wrap_FXMessageBox_iconify(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMessageBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXMessageBox_iconify",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMessageBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMessageBox_iconify. Expected _FXPyMessageBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXMessageBox_iconify(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXMessageBox_deiconify(_swigobj)  (_swigobj->_deiconify())
static PyObject *_wrap_FXMessageBox_deiconify(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyMessageBox * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXMessageBox_deiconify",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyMessageBox_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXMessageBox_deiconify. Expected _FXPyMessageBox_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXMessageBox_deiconify(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXFileAssoc_command_set(_swigobj,_swigval) (_swigobj->command = *(_swigval),_swigval)
static PyObject *_wrap_FXFileAssoc_command_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXFileAssoc * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","command", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXFileAssoc_command_set",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileAssoc_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileAssoc_command_set. Expected _FXFileAssoc_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXString *)FXFileAssoc_command_set(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _arg1;
}
    return _resultobj;
}

#define FXFileAssoc_command_get(_swigobj) (&_swigobj->command)
static PyObject *_wrap_FXFileAssoc_command_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXFileAssoc * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileAssoc_command_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileAssoc_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileAssoc_command_get. Expected _FXFileAssoc_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXString *)FXFileAssoc_command_get(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
    return _resultobj;
}

#define FXFileAssoc_extension_set(_swigobj,_swigval) (_swigobj->extension = *(_swigval),_swigval)
static PyObject *_wrap_FXFileAssoc_extension_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXFileAssoc * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","extension", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXFileAssoc_extension_set",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileAssoc_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileAssoc_extension_set. Expected _FXFileAssoc_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXString *)FXFileAssoc_extension_set(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _arg1;
}
    return _resultobj;
}

#define FXFileAssoc_extension_get(_swigobj) (&_swigobj->extension)
static PyObject *_wrap_FXFileAssoc_extension_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXFileAssoc * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileAssoc_extension_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileAssoc_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileAssoc_extension_get. Expected _FXFileAssoc_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXString *)FXFileAssoc_extension_get(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
    return _resultobj;
}

#define FXFileAssoc_mimetype_set(_swigobj,_swigval) (_swigobj->mimetype = *(_swigval),_swigval)
static PyObject *_wrap_FXFileAssoc_mimetype_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXFileAssoc * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","mimetype", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXFileAssoc_mimetype_set",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileAssoc_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileAssoc_mimetype_set. Expected _FXFileAssoc_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXString *)FXFileAssoc_mimetype_set(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _arg1;
}
    return _resultobj;
}

#define FXFileAssoc_mimetype_get(_swigobj) (&_swigobj->mimetype)
static PyObject *_wrap_FXFileAssoc_mimetype_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXFileAssoc * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileAssoc_mimetype_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileAssoc_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileAssoc_mimetype_get. Expected _FXFileAssoc_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXString *)FXFileAssoc_mimetype_get(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
    return _resultobj;
}

#define FXFileAssoc_bigicon_set(_swigobj,_swigval) (_swigobj->bigicon = _swigval,_swigval)
static PyObject *_wrap_FXFileAssoc_bigicon_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIcon * _result;
    FXFileAssoc * _arg0;
    FXIcon * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","bigicon", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXFileAssoc_bigicon_set",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileAssoc_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileAssoc_bigicon_set. Expected _FXFileAssoc_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXIcon *)FXFileAssoc_bigicon_set(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FXFileAssoc_bigicon_get(_swigobj) ((FXIcon *) _swigobj->bigicon)
static PyObject *_wrap_FXFileAssoc_bigicon_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIcon * _result;
    FXFileAssoc * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileAssoc_bigicon_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileAssoc_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileAssoc_bigicon_get. Expected _FXFileAssoc_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXIcon *)FXFileAssoc_bigicon_get(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FXFileAssoc_bigiconopen_set(_swigobj,_swigval) (_swigobj->bigiconopen = _swigval,_swigval)
static PyObject *_wrap_FXFileAssoc_bigiconopen_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIcon * _result;
    FXFileAssoc * _arg0;
    FXIcon * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","bigiconopen", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXFileAssoc_bigiconopen_set",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileAssoc_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileAssoc_bigiconopen_set. Expected _FXFileAssoc_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXIcon *)FXFileAssoc_bigiconopen_set(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FXFileAssoc_bigiconopen_get(_swigobj) ((FXIcon *) _swigobj->bigiconopen)
static PyObject *_wrap_FXFileAssoc_bigiconopen_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIcon * _result;
    FXFileAssoc * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileAssoc_bigiconopen_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileAssoc_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileAssoc_bigiconopen_get. Expected _FXFileAssoc_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXIcon *)FXFileAssoc_bigiconopen_get(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FXFileAssoc_miniicon_set(_swigobj,_swigval) (_swigobj->miniicon = _swigval,_swigval)
static PyObject *_wrap_FXFileAssoc_miniicon_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIcon * _result;
    FXFileAssoc * _arg0;
    FXIcon * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","miniicon", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXFileAssoc_miniicon_set",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileAssoc_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileAssoc_miniicon_set. Expected _FXFileAssoc_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXIcon *)FXFileAssoc_miniicon_set(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FXFileAssoc_miniicon_get(_swigobj) ((FXIcon *) _swigobj->miniicon)
static PyObject *_wrap_FXFileAssoc_miniicon_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIcon * _result;
    FXFileAssoc * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileAssoc_miniicon_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileAssoc_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileAssoc_miniicon_get. Expected _FXFileAssoc_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXIcon *)FXFileAssoc_miniicon_get(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FXFileAssoc_miniiconopen_set(_swigobj,_swigval) (_swigobj->miniiconopen = _swigval,_swigval)
static PyObject *_wrap_FXFileAssoc_miniiconopen_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIcon * _result;
    FXFileAssoc * _arg0;
    FXIcon * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","miniiconopen", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXFileAssoc_miniiconopen_set",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileAssoc_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileAssoc_miniiconopen_set. Expected _FXFileAssoc_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXIcon *)FXFileAssoc_miniiconopen_set(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FXFileAssoc_miniiconopen_get(_swigobj) ((FXIcon *) _swigobj->miniiconopen)
static PyObject *_wrap_FXFileAssoc_miniiconopen_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIcon * _result;
    FXFileAssoc * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileAssoc_miniiconopen_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileAssoc_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileAssoc_miniiconopen_get. Expected _FXFileAssoc_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXIcon *)FXFileAssoc_miniiconopen_get(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FXFileAssoc_dragtype_set(_swigobj,_swigval) (_swigobj->dragtype = _swigval,_swigval)
static PyObject *_wrap_FXFileAssoc_dragtype_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDragType  _result;
    FXFileAssoc * _arg0;
    FXDragType  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","dragtype", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXFileAssoc_dragtype_set",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileAssoc_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileAssoc_dragtype_set. Expected _FXFileAssoc_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXDragType )FXFileAssoc_dragtype_set(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXFileAssoc_dragtype_get(_swigobj) ((FXDragType ) _swigobj->dragtype)
static PyObject *_wrap_FXFileAssoc_dragtype_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXDragType  _result;
    FXFileAssoc * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileAssoc_dragtype_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileAssoc_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileAssoc_dragtype_get. Expected _FXFileAssoc_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXDragType )FXFileAssoc_dragtype_get(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXFileAssoc_flags_set(_swigobj,_swigval) (_swigobj->flags = _swigval,_swigval)
static PyObject *_wrap_FXFileAssoc_flags_set(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXFileAssoc * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","flags", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXFileAssoc_flags_set",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileAssoc_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileAssoc_flags_set. Expected _FXFileAssoc_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )FXFileAssoc_flags_set(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXFileAssoc_flags_get(_swigobj) ((FXuint ) _swigobj->flags)
static PyObject *_wrap_FXFileAssoc_flags_get(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXFileAssoc * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXFileAssoc_flags_get",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileAssoc_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileAssoc_flags_get. Expected _FXFileAssoc_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )FXFileAssoc_flags_get(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static void *SwigFXIconDictToFXDict(void *ptr) {
    FXIconDict *src;
    FXDict *dest;
    src = (FXIconDict *) ptr;
    dest = (FXDict *) src;
    return (void *) dest;
}

static void *SwigFXIconDictToFXObject(void *ptr) {
    FXIconDict *src;
    FXObject *dest;
    src = (FXIconDict *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FX_IconDict(_swigarg0) (new FXIconDict(_swigarg0))
static PyObject *_wrap_new_FX_IconDict(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconDict * _result;
    FXApp * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "a", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:new_FX_IconDict",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXApp_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FX_IconDict. Expected _FXApp_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXIconDict *)new_FX_IconDict(_arg0);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXIconDict_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_IconDict_getApp(_swigobj)  (_swigobj->getApp())
static PyObject *_wrap_FX_IconDict_getApp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXApp * _result;
    FXIconDict * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_IconDict_getApp",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconDict_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconDict_getApp. Expected _FXIconDict_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXApp *)FX_IconDict_getApp(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_IconDict_setIconPath(_swigobj,_swigarg0)  (_swigobj->setIconPath(_swigarg0))
static PyObject *_wrap_FX_IconDict_setIconPath(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIconDict * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","p", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_IconDict_setIconPath",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconDict_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconDict_setIconPath. Expected _FXIconDict_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_IconDict_setIconPath(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_IconDict_getIconPath(_swigobj)  (_swigobj->getIconPath())
static PyObject *_wrap_FX_IconDict_getIconPath(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXIconDict * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_IconDict_getIconPath",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconDict_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconDict_getIconPath. Expected _FXIconDict_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_IconDict_getIconPath(_arg0));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

#define FX_IconDict_insert(_swigobj,_swigarg0)  (_swigobj->insert(_swigarg0))
static PyObject *_wrap_FX_IconDict_insert(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIcon * _result;
    FXIconDict * _arg0;
    FXchar * _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","name", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Os:FX_IconDict_insert",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconDict_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconDict_insert. Expected _FXIconDict_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXIcon *)FX_IconDict_insert(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_IconDict_remove(_swigobj,_swigarg0)  (_swigobj->remove(_swigarg0))
static PyObject *_wrap_FX_IconDict_remove(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIcon * _result;
    FXIconDict * _arg0;
    FXchar * _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","name", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Os:FX_IconDict_remove",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconDict_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconDict_remove. Expected _FXIconDict_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXIcon *)FX_IconDict_remove(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_IconDict_find(_swigobj,_swigarg0)  (_swigobj->find(_swigarg0))
static PyObject *_wrap_FX_IconDict_find(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXIcon * _result;
    FXIconDict * _arg0;
    FXchar * _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","name", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Os:FX_IconDict_find",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXIconDict_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_IconDict_find. Expected _FXIconDict_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXIcon *)FX_IconDict_find(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

static void *SwigFXPyIconDictToFXIconDict(void *ptr) {
    FXPyIconDict *src;
    FXIconDict *dest;
    src = (FXPyIconDict *) ptr;
    dest = (FXIconDict *) src;
    return (void *) dest;
}

static void *SwigFXPyIconDictToFXDict(void *ptr) {
    FXPyIconDict *src;
    FXDict *dest;
    src = (FXPyIconDict *) ptr;
    dest = (FXDict *) src;
    return (void *) dest;
}

static void *SwigFXPyIconDictToFXObject(void *ptr) {
    FXPyIconDict *src;
    FXObject *dest;
    src = (FXPyIconDict *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXIconDict(_swigarg0) (new FXPyIconDict(_swigarg0))
static PyObject *_wrap_new_FXIconDict(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyIconDict * _result;
    FXApp * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "a", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:new_FXIconDict",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXApp_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FXIconDict. Expected _FXApp_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyIconDict *)new_FXIconDict(_arg0);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyIconDict_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FXIconDict_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXIconDict_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyIconDict * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXIconDict_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyIconDict_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXIconDict_onDefault. Expected _FXPyIconDict_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXIconDict_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

static void *SwigFXFileDictToFXDict(void *ptr) {
    FXFileDict *src;
    FXDict *dest;
    src = (FXFileDict *) ptr;
    dest = (FXDict *) src;
    return (void *) dest;
}

static void *SwigFXFileDictToFXObject(void *ptr) {
    FXFileDict *src;
    FXObject *dest;
    src = (FXFileDict *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FX_FileDict(_swigarg0) (new FXFileDict(_swigarg0))
static PyObject *_wrap_new_FX_FileDict(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileDict * _result;
    FXApp * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "a", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:new_FX_FileDict",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXApp_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FX_FileDict. Expected _FXApp_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXFileDict *)new_FX_FileDict(_arg0);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXFileDict_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_FileDict_getApp(_swigobj)  (_swigobj->getApp())
static PyObject *_wrap_FX_FileDict_getApp(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXApp * _result;
    FXFileDict * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileDict_getApp",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileDict_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileDict_getApp. Expected _FXFileDict_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXApp *)FX_FileDict_getApp(_arg0);

    FXPy_END_ALLOW_THREADS
}{
    if (_result) {
	_resultobj = FXPyMakeShadowObject(_result);
    } else {
	Py_INCREF(Py_None);
	_resultobj = Py_None;
    }
}
    return _resultobj;
}

#define FX_FileDict_setIconPath(_swigobj,_swigarg0)  (_swigobj->setIconPath(_swigarg0))
static PyObject *_wrap_FX_FileDict_setIconPath(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileDict * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","path", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_FileDict_setIconPath",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileDict_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileDict_setIconPath. Expected _FXFileDict_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_FileDict_setIconPath(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_FileDict_getIconPath(_swigobj)  (_swigobj->getIconPath())
static PyObject *_wrap_FX_FileDict_getIconPath(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXFileDict * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_FileDict_getIconPath",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileDict_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileDict_getIconPath. Expected _FXFileDict_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_FileDict_getIconPath(_arg0));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

#define FX_FileDict_replace(_swigobj,_swigarg0,_swigarg1)  (_swigobj->replace(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_FileDict_replace(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileAssoc * _result;
    FXFileDict * _arg0;
    FXchar * _arg1;
    FXchar * _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","ext","str", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oss:FX_FileDict_replace",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileDict_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileDict_replace. Expected _FXFileDict_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXFileAssoc *)FX_FileDict_replace(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXFileAssoc_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_FileDict_remove(_swigobj,_swigarg0)  (_swigobj->remove(_swigarg0))
static PyObject *_wrap_FX_FileDict_remove(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileAssoc * _result;
    FXFileDict * _arg0;
    FXchar * _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","ext", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Os:FX_FileDict_remove",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileDict_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileDict_remove. Expected _FXFileDict_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXFileAssoc *)FX_FileDict_remove(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXFileAssoc_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_FileDict_find(_swigobj,_swigarg0)  (_swigobj->find(_swigarg0))
static PyObject *_wrap_FX_FileDict_find(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileAssoc * _result;
    FXFileDict * _arg0;
    FXchar * _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","ext", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Os:FX_FileDict_find",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileDict_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileDict_find. Expected _FXFileDict_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXFileAssoc *)FX_FileDict_find(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXFileAssoc_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_FileDict_associate(_swigobj,_swigarg0)  (_swigobj->associate(_swigarg0))
static PyObject *_wrap_FX_FileDict_associate(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileAssoc * _result;
    FXFileDict * _arg0;
    FXchar * _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","key", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Os:FX_FileDict_associate",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileDict_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileDict_associate. Expected _FXFileDict_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXFileAssoc *)FX_FileDict_associate(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXFileAssoc_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_FileDict_findFileBinding(_swigobj,_swigarg0)  (_swigobj->findFileBinding(_swigarg0))
static PyObject *_wrap_FX_FileDict_findFileBinding(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileAssoc * _result;
    FXFileDict * _arg0;
    FXchar * _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pathname", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Os:FX_FileDict_findFileBinding",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileDict_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileDict_findFileBinding. Expected _FXFileDict_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXFileAssoc *)FX_FileDict_findFileBinding(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXFileAssoc_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_FileDict_findDirBinding(_swigobj,_swigarg0)  (_swigobj->findDirBinding(_swigarg0))
static PyObject *_wrap_FX_FileDict_findDirBinding(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileAssoc * _result;
    FXFileDict * _arg0;
    FXchar * _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pathname", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Os:FX_FileDict_findDirBinding",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileDict_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileDict_findDirBinding. Expected _FXFileDict_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXFileAssoc *)FX_FileDict_findDirBinding(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXFileAssoc_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FX_FileDict_findExecBinding(_swigobj,_swigarg0)  (_swigobj->findExecBinding(_swigarg0))
static PyObject *_wrap_FX_FileDict_findExecBinding(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXFileAssoc * _result;
    FXFileDict * _arg0;
    FXchar * _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","pathname", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Os:FX_FileDict_findExecBinding",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXFileDict_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_FileDict_findExecBinding. Expected _FXFileDict_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXFileAssoc *)FX_FileDict_findExecBinding(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXFileAssoc_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

static void *SwigFXPyFileDictToFXFileDict(void *ptr) {
    FXPyFileDict *src;
    FXFileDict *dest;
    src = (FXPyFileDict *) ptr;
    dest = (FXFileDict *) src;
    return (void *) dest;
}

static void *SwigFXPyFileDictToFXDict(void *ptr) {
    FXPyFileDict *src;
    FXDict *dest;
    src = (FXPyFileDict *) ptr;
    dest = (FXDict *) src;
    return (void *) dest;
}

static void *SwigFXPyFileDictToFXObject(void *ptr) {
    FXPyFileDict *src;
    FXObject *dest;
    src = (FXPyFileDict *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXFileDict(_swigarg0) (new FXPyFileDict(_swigarg0))
static PyObject *_wrap_new_FXFileDict(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyFileDict * _result;
    FXApp * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "a", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:new_FXFileDict",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXApp_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of new_FXFileDict. Expected _FXApp_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyFileDict *)new_FXFileDict(_arg0);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyFileDict_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
    return _resultobj;
}

#define FXFileDict_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXFileDict_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyFileDict * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXFileDict_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyFileDict_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXFileDict_onDefault. Expected _FXPyFileDict_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXFileDict_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

static void *SwigFXReplaceDialogToFXDialogBox(void *ptr) {
    FXReplaceDialog *src;
    FXDialogBox *dest;
    src = (FXReplaceDialog *) ptr;
    dest = (FXDialogBox *) src;
    return (void *) dest;
}

static void *SwigFXReplaceDialogToFXTopWindow(void *ptr) {
    FXReplaceDialog *src;
    FXTopWindow *dest;
    src = (FXReplaceDialog *) ptr;
    dest = (FXTopWindow *) src;
    return (void *) dest;
}

static void *SwigFXReplaceDialogToFXShell(void *ptr) {
    FXReplaceDialog *src;
    FXShell *dest;
    src = (FXReplaceDialog *) ptr;
    dest = (FXShell *) src;
    return (void *) dest;
}

static void *SwigFXReplaceDialogToFXComposite(void *ptr) {
    FXReplaceDialog *src;
    FXComposite *dest;
    src = (FXReplaceDialog *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXReplaceDialogToFXWindow(void *ptr) {
    FXReplaceDialog *src;
    FXWindow *dest;
    src = (FXReplaceDialog *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXReplaceDialogToFXDrawable(void *ptr) {
    FXReplaceDialog *src;
    FXDrawable *dest;
    src = (FXReplaceDialog *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXReplaceDialogToFXId(void *ptr) {
    FXReplaceDialog *src;
    FXId *dest;
    src = (FXReplaceDialog *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXReplaceDialogToFXObject(void *ptr) {
    FXReplaceDialog *src;
    FXObject *dest;
    src = (FXReplaceDialog *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define FX_ReplaceDialog_onCmdAll(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdAll(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ReplaceDialog_onCmdAll(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXReplaceDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ReplaceDialog_onCmdAll",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ReplaceDialog_onCmdAll. Expected _FXReplaceDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ReplaceDialog_onCmdAll. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ReplaceDialog_onCmdAll(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ReplaceDialog_onCmdNext(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdNext(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ReplaceDialog_onCmdNext(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXReplaceDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ReplaceDialog_onCmdNext",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ReplaceDialog_onCmdNext. Expected _FXReplaceDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ReplaceDialog_onCmdNext. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ReplaceDialog_onCmdNext(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ReplaceDialog_onUpdDir(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdDir(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ReplaceDialog_onUpdDir(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXReplaceDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ReplaceDialog_onUpdDir",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ReplaceDialog_onUpdDir. Expected _FXReplaceDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ReplaceDialog_onUpdDir. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ReplaceDialog_onUpdDir(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ReplaceDialog_onCmdDir(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdDir(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ReplaceDialog_onCmdDir(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXReplaceDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ReplaceDialog_onCmdDir",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ReplaceDialog_onCmdDir. Expected _FXReplaceDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ReplaceDialog_onCmdDir. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ReplaceDialog_onCmdDir(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ReplaceDialog_onUpdMode(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onUpdMode(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ReplaceDialog_onUpdMode(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXReplaceDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ReplaceDialog_onUpdMode",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ReplaceDialog_onUpdMode. Expected _FXReplaceDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ReplaceDialog_onUpdMode. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ReplaceDialog_onUpdMode(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ReplaceDialog_onCmdMode(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdMode(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ReplaceDialog_onCmdMode(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXReplaceDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ReplaceDialog_onCmdMode",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ReplaceDialog_onCmdMode. Expected _FXReplaceDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ReplaceDialog_onCmdMode. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ReplaceDialog_onCmdMode(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ReplaceDialog_onSearchKey(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onSearchKey(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ReplaceDialog_onSearchKey(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXReplaceDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ReplaceDialog_onSearchKey",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ReplaceDialog_onSearchKey. Expected _FXReplaceDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ReplaceDialog_onSearchKey. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ReplaceDialog_onSearchKey(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ReplaceDialog_onReplaceKey(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onReplaceKey(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ReplaceDialog_onReplaceKey(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXReplaceDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ReplaceDialog_onReplaceKey",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ReplaceDialog_onReplaceKey. Expected _FXReplaceDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ReplaceDialog_onReplaceKey. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ReplaceDialog_onReplaceKey(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ReplaceDialog_onCmdSearchHist(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSearchHist(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ReplaceDialog_onCmdSearchHist(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXReplaceDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ReplaceDialog_onCmdSearchHist",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ReplaceDialog_onCmdSearchHist. Expected _FXReplaceDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ReplaceDialog_onCmdSearchHist. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ReplaceDialog_onCmdSearchHist(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ReplaceDialog_onCmdReplaceHist(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdReplaceHist(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ReplaceDialog_onCmdReplaceHist(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXReplaceDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ReplaceDialog_onCmdReplaceHist",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ReplaceDialog_onCmdReplaceHist. Expected _FXReplaceDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ReplaceDialog_onCmdReplaceHist. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ReplaceDialog_onCmdReplaceHist(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ReplaceDialog_onCmdAccept(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdAccept(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ReplaceDialog_onCmdAccept(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXReplaceDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ReplaceDialog_onCmdAccept",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ReplaceDialog_onCmdAccept. Expected _FXReplaceDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ReplaceDialog_onCmdAccept. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ReplaceDialog_onCmdAccept(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define new_FX_ReplaceDialog(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7) (new FXReplaceDialog(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7))
static PyObject *_wrap_new_FX_ReplaceDialog(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXReplaceDialog * _result;
    FXWindow * _arg0;
    FXString * _arg1;
    FXIcon * _arg2 = (FXIcon *) NULL;
    FXuint  _arg3 = (FXuint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    PyObject * _obj0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "owner","caption","ic","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|Oiiiii:new_FX_ReplaceDialog",_kwnames,&_obj0,&_obj1,&_obj2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7)) 
        return NULL;
{
    if (_obj0 == Py_None)
	_arg0 = NULL;
    else
	SWIG_GetPtrObj(_obj0, (void**) &_arg0, "_FXWindow_p");
}
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
    if (_obj2)
{
    if (_obj2 == Py_None)
	_arg2 = NULL;
    else
	SWIG_GetPtrObj(_obj2, (void**) &_arg2, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXReplaceDialog *)new_FX_ReplaceDialog(_arg0,*_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXReplaceDialog_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_ReplaceDialog_setSearchText(_swigobj,_swigarg0)  (_swigobj->setSearchText(_swigarg0))
static PyObject *_wrap_FX_ReplaceDialog_setSearchText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXReplaceDialog * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","text", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_ReplaceDialog_setSearchText",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ReplaceDialog_setSearchText. Expected _FXReplaceDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_ReplaceDialog_setSearchText(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_ReplaceDialog_getSearchText(_swigobj)  (_swigobj->getSearchText())
static PyObject *_wrap_FX_ReplaceDialog_getSearchText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXReplaceDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_ReplaceDialog_getSearchText",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ReplaceDialog_getSearchText. Expected _FXReplaceDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_ReplaceDialog_getSearchText(_arg0));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

#define FX_ReplaceDialog_setReplaceText(_swigobj,_swigarg0)  (_swigobj->setReplaceText(_swigarg0))
static PyObject *_wrap_FX_ReplaceDialog_setReplaceText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXReplaceDialog * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","text", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_ReplaceDialog_setReplaceText",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ReplaceDialog_setReplaceText. Expected _FXReplaceDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_ReplaceDialog_setReplaceText(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_ReplaceDialog_getReplaceText(_swigobj)  (_swigobj->getReplaceText())
static PyObject *_wrap_FX_ReplaceDialog_getReplaceText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXReplaceDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_ReplaceDialog_getReplaceText",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ReplaceDialog_getReplaceText. Expected _FXReplaceDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_ReplaceDialog_getReplaceText(_arg0));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

#define FX_ReplaceDialog_setSearchMode(_swigobj,_swigarg0)  (_swigobj->setSearchMode(_swigarg0))
static PyObject *_wrap_FX_ReplaceDialog_setSearchMode(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXReplaceDialog * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","mode", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_ReplaceDialog_setSearchMode",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ReplaceDialog_setSearchMode. Expected _FXReplaceDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_ReplaceDialog_setSearchMode(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_ReplaceDialog_getSearchMode(_swigobj)  (_swigobj->getSearchMode())
static PyObject *_wrap_FX_ReplaceDialog_getSearchMode(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXReplaceDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_ReplaceDialog_getSearchMode",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ReplaceDialog_getSearchMode. Expected _FXReplaceDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )FX_ReplaceDialog_getSearchMode(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static void *SwigFXPyReplaceDialogToFXReplaceDialog(void *ptr) {
    FXPyReplaceDialog *src;
    FXReplaceDialog *dest;
    src = (FXPyReplaceDialog *) ptr;
    dest = (FXReplaceDialog *) src;
    return (void *) dest;
}

static void *SwigFXPyReplaceDialogToFXDialogBox(void *ptr) {
    FXPyReplaceDialog *src;
    FXDialogBox *dest;
    src = (FXPyReplaceDialog *) ptr;
    dest = (FXDialogBox *) src;
    return (void *) dest;
}

static void *SwigFXPyReplaceDialogToFXTopWindow(void *ptr) {
    FXPyReplaceDialog *src;
    FXTopWindow *dest;
    src = (FXPyReplaceDialog *) ptr;
    dest = (FXTopWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyReplaceDialogToFXShell(void *ptr) {
    FXPyReplaceDialog *src;
    FXShell *dest;
    src = (FXPyReplaceDialog *) ptr;
    dest = (FXShell *) src;
    return (void *) dest;
}

static void *SwigFXPyReplaceDialogToFXComposite(void *ptr) {
    FXPyReplaceDialog *src;
    FXComposite *dest;
    src = (FXPyReplaceDialog *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXPyReplaceDialogToFXWindow(void *ptr) {
    FXPyReplaceDialog *src;
    FXWindow *dest;
    src = (FXPyReplaceDialog *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyReplaceDialogToFXDrawable(void *ptr) {
    FXPyReplaceDialog *src;
    FXDrawable *dest;
    src = (FXPyReplaceDialog *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPyReplaceDialogToFXId(void *ptr) {
    FXPyReplaceDialog *src;
    FXId *dest;
    src = (FXPyReplaceDialog *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPyReplaceDialogToFXObject(void *ptr) {
    FXPyReplaceDialog *src;
    FXObject *dest;
    src = (FXPyReplaceDialog *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXReplaceDialog(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7) (new FXPyReplaceDialog(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7))
static PyObject *_wrap_new_FXReplaceDialog(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyReplaceDialog * _result;
    FXWindow * _arg0;
    FXString * _arg1;
    FXIcon * _arg2 = (FXIcon *) NULL;
    FXuint  _arg3 = (FXuint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    PyObject * _obj0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "owner","caption","ic","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|Oiiiii:new_FXReplaceDialog",_kwnames,&_obj0,&_obj1,&_obj2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7)) 
        return NULL;
{
    if (_obj0 == Py_None)
	_arg0 = NULL;
    else
	SWIG_GetPtrObj(_obj0, (void**) &_arg0, "_FXWindow_p");
}
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
    if (_obj2)
{
    if (_obj2 == Py_None)
	_arg2 = NULL;
    else
	SWIG_GetPtrObj(_obj2, (void**) &_arg2, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyReplaceDialog *)new_FXReplaceDialog(_arg0,*_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyReplaceDialog_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    delete _arg1;
}
    return _resultobj;
}

#define FXReplaceDialog_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXReplaceDialog_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyReplaceDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXReplaceDialog_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXReplaceDialog_onDefault. Expected _FXPyReplaceDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXReplaceDialog_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXReplaceDialog_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXReplaceDialog_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyReplaceDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXReplaceDialog_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXReplaceDialog_create. Expected _FXPyReplaceDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXReplaceDialog_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXReplaceDialog_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXReplaceDialog_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyReplaceDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXReplaceDialog_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXReplaceDialog_destroy. Expected _FXPyReplaceDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXReplaceDialog_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXReplaceDialog_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXReplaceDialog_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyReplaceDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXReplaceDialog_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXReplaceDialog_detach. Expected _FXPyReplaceDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXReplaceDialog_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXReplaceDialog_resize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_resize(_swigarg0,_swigarg1))
static PyObject *_wrap_FXReplaceDialog_resize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyReplaceDialog * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXReplaceDialog_resize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXReplaceDialog_resize. Expected _FXPyReplaceDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXReplaceDialog_resize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXReplaceDialog_getDefaultWidth(_swigobj)  (_swigobj->_getDefaultWidth())
static PyObject *_wrap_FXReplaceDialog_getDefaultWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyReplaceDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXReplaceDialog_getDefaultWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXReplaceDialog_getDefaultWidth. Expected _FXPyReplaceDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXReplaceDialog_getDefaultWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXReplaceDialog_getDefaultHeight(_swigobj)  (_swigobj->_getDefaultHeight())
static PyObject *_wrap_FXReplaceDialog_getDefaultHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyReplaceDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXReplaceDialog_getDefaultHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXReplaceDialog_getDefaultHeight. Expected _FXPyReplaceDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXReplaceDialog_getDefaultHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXReplaceDialog_show(_swigobj)  (_swigobj->_show())
static PyObject *_wrap_FXReplaceDialog_show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyReplaceDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXReplaceDialog_show",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXReplaceDialog_show. Expected _FXPyReplaceDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXReplaceDialog_show(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXReplaceDialog_hide(_swigobj)  (_swigobj->_hide())
static PyObject *_wrap_FXReplaceDialog_hide(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyReplaceDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXReplaceDialog_hide",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXReplaceDialog_hide. Expected _FXPyReplaceDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXReplaceDialog_hide(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXReplaceDialog_enable(_swigobj)  (_swigobj->_enable())
static PyObject *_wrap_FXReplaceDialog_enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyReplaceDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXReplaceDialog_enable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXReplaceDialog_enable. Expected _FXPyReplaceDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXReplaceDialog_enable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXReplaceDialog_disable(_swigobj)  (_swigobj->_disable())
static PyObject *_wrap_FXReplaceDialog_disable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyReplaceDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXReplaceDialog_disable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXReplaceDialog_disable. Expected _FXPyReplaceDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXReplaceDialog_disable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXReplaceDialog_canFocus(_swigobj)  (_swigobj->_canFocus())
static PyObject *_wrap_FXReplaceDialog_canFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyReplaceDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXReplaceDialog_canFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXReplaceDialog_canFocus. Expected _FXPyReplaceDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXReplaceDialog_canFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXReplaceDialog_setFocus(_swigobj)  (_swigobj->_setFocus())
static PyObject *_wrap_FXReplaceDialog_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyReplaceDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXReplaceDialog_setFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXReplaceDialog_setFocus. Expected _FXPyReplaceDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXReplaceDialog_setFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXReplaceDialog_killFocus(_swigobj)  (_swigobj->_killFocus())
static PyObject *_wrap_FXReplaceDialog_killFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyReplaceDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXReplaceDialog_killFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXReplaceDialog_killFocus. Expected _FXPyReplaceDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXReplaceDialog_killFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXReplaceDialog_setDefault(_swigobj,_swigarg0)  (_swigobj->_setDefault(_swigarg0))
static PyObject *_wrap_FXReplaceDialog_setDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyReplaceDialog * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FXReplaceDialog_setDefault",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXReplaceDialog_setDefault. Expected _FXPyReplaceDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXReplaceDialog_setDefault(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXReplaceDialog_recalc(_swigobj)  (_swigobj->_recalc())
static PyObject *_wrap_FXReplaceDialog_recalc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyReplaceDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXReplaceDialog_recalc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXReplaceDialog_recalc. Expected _FXPyReplaceDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXReplaceDialog_recalc(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXReplaceDialog_layout(_swigobj)  (_swigobj->_layout())
static PyObject *_wrap_FXReplaceDialog_layout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyReplaceDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXReplaceDialog_layout",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXReplaceDialog_layout. Expected _FXPyReplaceDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXReplaceDialog_layout(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXReplaceDialog_lower(_swigobj)  (_swigobj->_lowerWindow())
static PyObject *_wrap_FXReplaceDialog_lower(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyReplaceDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXReplaceDialog_lower",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXReplaceDialog_lower. Expected _FXPyReplaceDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXReplaceDialog_lower(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXReplaceDialog_move(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_move(_swigarg0,_swigarg1))
static PyObject *_wrap_FXReplaceDialog_move(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyReplaceDialog * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXReplaceDialog_move",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXReplaceDialog_move. Expected _FXPyReplaceDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXReplaceDialog_move(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXReplaceDialog_position(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->_position(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FXReplaceDialog_position(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyReplaceDialog * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FXReplaceDialog_position",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXReplaceDialog_position. Expected _FXPyReplaceDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXReplaceDialog_position(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXReplaceDialog_isComposite(_swigobj)  (_swigobj->_isComposite())
static PyObject *_wrap_FXReplaceDialog_isComposite(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyReplaceDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXReplaceDialog_isComposite",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXReplaceDialog_isComposite. Expected _FXPyReplaceDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXReplaceDialog_isComposite(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXReplaceDialog_contains(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_contains(_swigarg0,_swigarg1))
static PyObject *_wrap_FXReplaceDialog_contains(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyReplaceDialog * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXReplaceDialog_contains",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXReplaceDialog_contains. Expected _FXPyReplaceDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXReplaceDialog_contains(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXReplaceDialog_getWidthForHeight(_swigobj,_swigarg0)  (_swigobj->_getWidthForHeight(_swigarg0))
static PyObject *_wrap_FXReplaceDialog_getWidthForHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyReplaceDialog * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXReplaceDialog_getWidthForHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXReplaceDialog_getWidthForHeight. Expected _FXPyReplaceDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXReplaceDialog_getWidthForHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXReplaceDialog_getHeightForWidth(_swigobj,_swigarg0)  (_swigobj->_getHeightForWidth(_swigarg0))
static PyObject *_wrap_FXReplaceDialog_getHeightForWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyReplaceDialog * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXReplaceDialog_getHeightForWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXReplaceDialog_getHeightForWidth. Expected _FXPyReplaceDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXReplaceDialog_getHeightForWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXReplaceDialog_doesSaveUnder(_swigobj)  (_swigobj->_doesSaveUnder())
static PyObject *_wrap_FXReplaceDialog_doesSaveUnder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyReplaceDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXReplaceDialog_doesSaveUnder",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXReplaceDialog_doesSaveUnder. Expected _FXPyReplaceDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXReplaceDialog_doesSaveUnder(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXReplaceDialog_reparent(_swigobj,_swigarg0)  (_swigobj->_reparent(_swigarg0))
static PyObject *_wrap_FXReplaceDialog_reparent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyReplaceDialog * _arg0;
    FXComposite * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","newparent", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXReplaceDialog_reparent",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXReplaceDialog_reparent. Expected _FXPyReplaceDialog_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXReplaceDialog_reparent. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXReplaceDialog_reparent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXReplaceDialog_setBackColor(_swigobj,_swigarg0)  (_swigobj->_setBackColor(_swigarg0))
static PyObject *_wrap_FXReplaceDialog_setBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyReplaceDialog * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXReplaceDialog_setBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXReplaceDialog_setBackColor. Expected _FXPyReplaceDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXReplaceDialog_setBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXReplaceDialog_show2(_swigobj,_swigarg0)  (_swigobj->_show(_swigarg0))
static PyObject *_wrap_FXReplaceDialog_show2(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyReplaceDialog * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","placement", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXReplaceDialog_show2",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXReplaceDialog_show2. Expected _FXPyReplaceDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXReplaceDialog_show2(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXReplaceDialog_iconify(_swigobj)  (_swigobj->_iconify())
static PyObject *_wrap_FXReplaceDialog_iconify(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyReplaceDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXReplaceDialog_iconify",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXReplaceDialog_iconify. Expected _FXPyReplaceDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXReplaceDialog_iconify(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXReplaceDialog_deiconify(_swigobj)  (_swigobj->_deiconify())
static PyObject *_wrap_FXReplaceDialog_deiconify(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyReplaceDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXReplaceDialog_deiconify",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyReplaceDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXReplaceDialog_deiconify. Expected _FXPyReplaceDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXReplaceDialog_deiconify(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXSearchDialogToFXReplaceDialog(void *ptr) {
    FXSearchDialog *src;
    FXReplaceDialog *dest;
    src = (FXSearchDialog *) ptr;
    dest = (FXReplaceDialog *) src;
    return (void *) dest;
}

static void *SwigFXSearchDialogToFXDialogBox(void *ptr) {
    FXSearchDialog *src;
    FXDialogBox *dest;
    src = (FXSearchDialog *) ptr;
    dest = (FXDialogBox *) src;
    return (void *) dest;
}

static void *SwigFXSearchDialogToFXTopWindow(void *ptr) {
    FXSearchDialog *src;
    FXTopWindow *dest;
    src = (FXSearchDialog *) ptr;
    dest = (FXTopWindow *) src;
    return (void *) dest;
}

static void *SwigFXSearchDialogToFXShell(void *ptr) {
    FXSearchDialog *src;
    FXShell *dest;
    src = (FXSearchDialog *) ptr;
    dest = (FXShell *) src;
    return (void *) dest;
}

static void *SwigFXSearchDialogToFXComposite(void *ptr) {
    FXSearchDialog *src;
    FXComposite *dest;
    src = (FXSearchDialog *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXSearchDialogToFXWindow(void *ptr) {
    FXSearchDialog *src;
    FXWindow *dest;
    src = (FXSearchDialog *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXSearchDialogToFXDrawable(void *ptr) {
    FXSearchDialog *src;
    FXDrawable *dest;
    src = (FXSearchDialog *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXSearchDialogToFXId(void *ptr) {
    FXSearchDialog *src;
    FXId *dest;
    src = (FXSearchDialog *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXSearchDialogToFXObject(void *ptr) {
    FXSearchDialog *src;
    FXObject *dest;
    src = (FXSearchDialog *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FX_SearchDialog(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7) (new FXSearchDialog(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7))
static PyObject *_wrap_new_FX_SearchDialog(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXSearchDialog * _result;
    FXWindow * _arg0;
    FXString * _arg1;
    FXIcon * _arg2 = (FXIcon *) NULL;
    FXuint  _arg3 = (FXuint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    PyObject * _obj0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "owner","caption","ic","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|Oiiiii:new_FX_SearchDialog",_kwnames,&_obj0,&_obj1,&_obj2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7)) 
        return NULL;
{
    if (_obj0 == Py_None)
	_arg0 = NULL;
    else
	SWIG_GetPtrObj(_obj0, (void**) &_arg0, "_FXWindow_p");
}
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
    if (_obj2)
{
    if (_obj2 == Py_None)
	_arg2 = NULL;
    else
	SWIG_GetPtrObj(_obj2, (void**) &_arg2, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXSearchDialog *)new_FX_SearchDialog(_arg0,*_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXSearchDialog_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    delete _arg1;
}
    return _resultobj;
}

static void *SwigFXPySearchDialogToFXSearchDialog(void *ptr) {
    FXPySearchDialog *src;
    FXSearchDialog *dest;
    src = (FXPySearchDialog *) ptr;
    dest = (FXSearchDialog *) src;
    return (void *) dest;
}

static void *SwigFXPySearchDialogToFXReplaceDialog(void *ptr) {
    FXPySearchDialog *src;
    FXReplaceDialog *dest;
    src = (FXPySearchDialog *) ptr;
    dest = (FXReplaceDialog *) src;
    return (void *) dest;
}

static void *SwigFXPySearchDialogToFXDialogBox(void *ptr) {
    FXPySearchDialog *src;
    FXDialogBox *dest;
    src = (FXPySearchDialog *) ptr;
    dest = (FXDialogBox *) src;
    return (void *) dest;
}

static void *SwigFXPySearchDialogToFXTopWindow(void *ptr) {
    FXPySearchDialog *src;
    FXTopWindow *dest;
    src = (FXPySearchDialog *) ptr;
    dest = (FXTopWindow *) src;
    return (void *) dest;
}

static void *SwigFXPySearchDialogToFXShell(void *ptr) {
    FXPySearchDialog *src;
    FXShell *dest;
    src = (FXPySearchDialog *) ptr;
    dest = (FXShell *) src;
    return (void *) dest;
}

static void *SwigFXPySearchDialogToFXComposite(void *ptr) {
    FXPySearchDialog *src;
    FXComposite *dest;
    src = (FXPySearchDialog *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXPySearchDialogToFXWindow(void *ptr) {
    FXPySearchDialog *src;
    FXWindow *dest;
    src = (FXPySearchDialog *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXPySearchDialogToFXDrawable(void *ptr) {
    FXPySearchDialog *src;
    FXDrawable *dest;
    src = (FXPySearchDialog *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPySearchDialogToFXId(void *ptr) {
    FXPySearchDialog *src;
    FXId *dest;
    src = (FXPySearchDialog *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPySearchDialogToFXObject(void *ptr) {
    FXPySearchDialog *src;
    FXObject *dest;
    src = (FXPySearchDialog *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXSearchDialog(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7) (new FXPySearchDialog(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7))
static PyObject *_wrap_new_FXSearchDialog(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySearchDialog * _result;
    FXWindow * _arg0;
    FXString * _arg1;
    FXIcon * _arg2 = (FXIcon *) NULL;
    FXuint  _arg3 = (FXuint ) 0;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    PyObject * _obj0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "owner","caption","ic","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO|Oiiiii:new_FXSearchDialog",_kwnames,&_obj0,&_obj1,&_obj2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7)) 
        return NULL;
{
    if (_obj0 == Py_None)
	_arg0 = NULL;
    else
	SWIG_GetPtrObj(_obj0, (void**) &_arg0, "_FXWindow_p");
}
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
    if (_obj2)
{
    if (_obj2 == Py_None)
	_arg2 = NULL;
    else
	SWIG_GetPtrObj(_obj2, (void**) &_arg2, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPySearchDialog *)new_FXSearchDialog(_arg0,*_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPySearchDialog_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    delete _arg1;
}
    return _resultobj;
}

#define FXSearchDialog_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXSearchDialog_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPySearchDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXSearchDialog_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySearchDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSearchDialog_onDefault. Expected _FXPySearchDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXSearchDialog_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXSearchDialog_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXSearchDialog_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySearchDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSearchDialog_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySearchDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSearchDialog_create. Expected _FXPySearchDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSearchDialog_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSearchDialog_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXSearchDialog_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySearchDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSearchDialog_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySearchDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSearchDialog_destroy. Expected _FXPySearchDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSearchDialog_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSearchDialog_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXSearchDialog_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySearchDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSearchDialog_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySearchDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSearchDialog_detach. Expected _FXPySearchDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSearchDialog_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSearchDialog_resize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_resize(_swigarg0,_swigarg1))
static PyObject *_wrap_FXSearchDialog_resize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySearchDialog * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXSearchDialog_resize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySearchDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSearchDialog_resize. Expected _FXPySearchDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSearchDialog_resize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSearchDialog_getDefaultWidth(_swigobj)  (_swigobj->_getDefaultWidth())
static PyObject *_wrap_FXSearchDialog_getDefaultWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPySearchDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSearchDialog_getDefaultWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySearchDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSearchDialog_getDefaultWidth. Expected _FXPySearchDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXSearchDialog_getDefaultWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXSearchDialog_getDefaultHeight(_swigobj)  (_swigobj->_getDefaultHeight())
static PyObject *_wrap_FXSearchDialog_getDefaultHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPySearchDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSearchDialog_getDefaultHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySearchDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSearchDialog_getDefaultHeight. Expected _FXPySearchDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXSearchDialog_getDefaultHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXSearchDialog_show(_swigobj)  (_swigobj->_show())
static PyObject *_wrap_FXSearchDialog_show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySearchDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSearchDialog_show",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySearchDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSearchDialog_show. Expected _FXPySearchDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSearchDialog_show(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSearchDialog_hide(_swigobj)  (_swigobj->_hide())
static PyObject *_wrap_FXSearchDialog_hide(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySearchDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSearchDialog_hide",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySearchDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSearchDialog_hide. Expected _FXPySearchDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSearchDialog_hide(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSearchDialog_enable(_swigobj)  (_swigobj->_enable())
static PyObject *_wrap_FXSearchDialog_enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySearchDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSearchDialog_enable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySearchDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSearchDialog_enable. Expected _FXPySearchDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSearchDialog_enable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSearchDialog_disable(_swigobj)  (_swigobj->_disable())
static PyObject *_wrap_FXSearchDialog_disable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySearchDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSearchDialog_disable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySearchDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSearchDialog_disable. Expected _FXPySearchDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSearchDialog_disable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSearchDialog_canFocus(_swigobj)  (_swigobj->_canFocus())
static PyObject *_wrap_FXSearchDialog_canFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPySearchDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSearchDialog_canFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySearchDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSearchDialog_canFocus. Expected _FXPySearchDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXSearchDialog_canFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXSearchDialog_setFocus(_swigobj)  (_swigobj->_setFocus())
static PyObject *_wrap_FXSearchDialog_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySearchDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSearchDialog_setFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySearchDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSearchDialog_setFocus. Expected _FXPySearchDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSearchDialog_setFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSearchDialog_killFocus(_swigobj)  (_swigobj->_killFocus())
static PyObject *_wrap_FXSearchDialog_killFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySearchDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSearchDialog_killFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySearchDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSearchDialog_killFocus. Expected _FXPySearchDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSearchDialog_killFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSearchDialog_setDefault(_swigobj,_swigarg0)  (_swigobj->_setDefault(_swigarg0))
static PyObject *_wrap_FXSearchDialog_setDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySearchDialog * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FXSearchDialog_setDefault",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySearchDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSearchDialog_setDefault. Expected _FXPySearchDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSearchDialog_setDefault(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSearchDialog_recalc(_swigobj)  (_swigobj->_recalc())
static PyObject *_wrap_FXSearchDialog_recalc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySearchDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSearchDialog_recalc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySearchDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSearchDialog_recalc. Expected _FXPySearchDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSearchDialog_recalc(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSearchDialog_layout(_swigobj)  (_swigobj->_layout())
static PyObject *_wrap_FXSearchDialog_layout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySearchDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSearchDialog_layout",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySearchDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSearchDialog_layout. Expected _FXPySearchDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSearchDialog_layout(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSearchDialog_lower(_swigobj)  (_swigobj->_lowerWindow())
static PyObject *_wrap_FXSearchDialog_lower(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySearchDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSearchDialog_lower",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySearchDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSearchDialog_lower. Expected _FXPySearchDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSearchDialog_lower(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSearchDialog_move(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_move(_swigarg0,_swigarg1))
static PyObject *_wrap_FXSearchDialog_move(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySearchDialog * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXSearchDialog_move",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySearchDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSearchDialog_move. Expected _FXPySearchDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSearchDialog_move(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSearchDialog_position(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->_position(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FXSearchDialog_position(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySearchDialog * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FXSearchDialog_position",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySearchDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSearchDialog_position. Expected _FXPySearchDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSearchDialog_position(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSearchDialog_isComposite(_swigobj)  (_swigobj->_isComposite())
static PyObject *_wrap_FXSearchDialog_isComposite(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPySearchDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSearchDialog_isComposite",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySearchDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSearchDialog_isComposite. Expected _FXPySearchDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXSearchDialog_isComposite(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXSearchDialog_contains(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_contains(_swigarg0,_swigarg1))
static PyObject *_wrap_FXSearchDialog_contains(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPySearchDialog * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXSearchDialog_contains",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySearchDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSearchDialog_contains. Expected _FXPySearchDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXSearchDialog_contains(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXSearchDialog_getWidthForHeight(_swigobj,_swigarg0)  (_swigobj->_getWidthForHeight(_swigarg0))
static PyObject *_wrap_FXSearchDialog_getWidthForHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPySearchDialog * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXSearchDialog_getWidthForHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySearchDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSearchDialog_getWidthForHeight. Expected _FXPySearchDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXSearchDialog_getWidthForHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXSearchDialog_getHeightForWidth(_swigobj,_swigarg0)  (_swigobj->_getHeightForWidth(_swigarg0))
static PyObject *_wrap_FXSearchDialog_getHeightForWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPySearchDialog * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXSearchDialog_getHeightForWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySearchDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSearchDialog_getHeightForWidth. Expected _FXPySearchDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXSearchDialog_getHeightForWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXSearchDialog_doesSaveUnder(_swigobj)  (_swigobj->_doesSaveUnder())
static PyObject *_wrap_FXSearchDialog_doesSaveUnder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPySearchDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSearchDialog_doesSaveUnder",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySearchDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSearchDialog_doesSaveUnder. Expected _FXPySearchDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXSearchDialog_doesSaveUnder(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXSearchDialog_reparent(_swigobj,_swigarg0)  (_swigobj->_reparent(_swigarg0))
static PyObject *_wrap_FXSearchDialog_reparent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySearchDialog * _arg0;
    FXComposite * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","newparent", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXSearchDialog_reparent",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySearchDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSearchDialog_reparent. Expected _FXPySearchDialog_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXSearchDialog_reparent. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSearchDialog_reparent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSearchDialog_setBackColor(_swigobj,_swigarg0)  (_swigobj->_setBackColor(_swigarg0))
static PyObject *_wrap_FXSearchDialog_setBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySearchDialog * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXSearchDialog_setBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySearchDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSearchDialog_setBackColor. Expected _FXPySearchDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSearchDialog_setBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSearchDialog_show2(_swigobj,_swigarg0)  (_swigobj->_show(_swigarg0))
static PyObject *_wrap_FXSearchDialog_show2(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySearchDialog * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","placement", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXSearchDialog_show2",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySearchDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSearchDialog_show2. Expected _FXPySearchDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSearchDialog_show2(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSearchDialog_iconify(_swigobj)  (_swigobj->_iconify())
static PyObject *_wrap_FXSearchDialog_iconify(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySearchDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSearchDialog_iconify",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySearchDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSearchDialog_iconify. Expected _FXPySearchDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSearchDialog_iconify(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXSearchDialog_deiconify(_swigobj)  (_swigobj->_deiconify())
static PyObject *_wrap_FXSearchDialog_deiconify(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPySearchDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXSearchDialog_deiconify",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPySearchDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXSearchDialog_deiconify. Expected _FXPySearchDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXSearchDialog_deiconify(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXInputDialogToFXDialogBox(void *ptr) {
    FXInputDialog *src;
    FXDialogBox *dest;
    src = (FXInputDialog *) ptr;
    dest = (FXDialogBox *) src;
    return (void *) dest;
}

static void *SwigFXInputDialogToFXTopWindow(void *ptr) {
    FXInputDialog *src;
    FXTopWindow *dest;
    src = (FXInputDialog *) ptr;
    dest = (FXTopWindow *) src;
    return (void *) dest;
}

static void *SwigFXInputDialogToFXShell(void *ptr) {
    FXInputDialog *src;
    FXShell *dest;
    src = (FXInputDialog *) ptr;
    dest = (FXShell *) src;
    return (void *) dest;
}

static void *SwigFXInputDialogToFXComposite(void *ptr) {
    FXInputDialog *src;
    FXComposite *dest;
    src = (FXInputDialog *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXInputDialogToFXWindow(void *ptr) {
    FXInputDialog *src;
    FXWindow *dest;
    src = (FXInputDialog *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXInputDialogToFXDrawable(void *ptr) {
    FXInputDialog *src;
    FXDrawable *dest;
    src = (FXInputDialog *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXInputDialogToFXId(void *ptr) {
    FXInputDialog *src;
    FXId *dest;
    src = (FXInputDialog *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXInputDialogToFXObject(void *ptr) {
    FXInputDialog *src;
    FXObject *dest;
    src = (FXInputDialog *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define FX_InputDialog_onCmdAccept(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdAccept(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_InputDialog_onCmdAccept(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXInputDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_InputDialog_onCmdAccept",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXInputDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_InputDialog_onCmdAccept. Expected _FXInputDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_InputDialog_onCmdAccept. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_InputDialog_onCmdAccept(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define new_FX_InputDialog(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8) (new FXInputDialog(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8))
static PyObject *_wrap_new_FX_InputDialog(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXInputDialog * _result;
    FXWindow * _arg0;
    FXString * _arg1;
    FXString * _arg2;
    FXIcon * _arg3 = (FXIcon *) NULL;
    FXuint  _arg4 = (FXuint ) (INPUTDIALOG_STRING);
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    FXint  _arg8 = (FXint ) 0;
    PyObject * _obj0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "owner","caption","label","ic","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO|Oiiiii:new_FX_InputDialog",_kwnames,&_obj0,&_obj1,&_obj2,&_obj3,&_arg4,&_arg5,&_arg6,&_arg7,&_arg8)) 
        return NULL;
{
    if (_obj0 == Py_None)
	_arg0 = NULL;
    else
	SWIG_GetPtrObj(_obj0, (void**) &_arg0, "_FXWindow_p");
}
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    if (_obj2 == Py_None)
	_arg2 = new FXString;
    else if (!PyString_Check(_obj2)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg2 = new FXString(PyString_AsString(_obj2));
}
    if (_obj3)
{
    if (_obj3 == Py_None)
	_arg3 = NULL;
    else
	SWIG_GetPtrObj(_obj3, (void**) &_arg3, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXInputDialog *)new_FX_InputDialog(_arg0,*_arg1,*_arg2,_arg3,_arg4,_arg5,_arg6,_arg7,_arg8);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXInputDialog_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    delete _arg1;
}
{
    delete _arg2;
}
    return _resultobj;
}

#define FX_InputDialog_getText(_swigobj)  (_swigobj->getText())
static PyObject *_wrap_FX_InputDialog_getText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXInputDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_InputDialog_getText",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXInputDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_InputDialog_getText. Expected _FXInputDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_InputDialog_getText(_arg0));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

#define FX_InputDialog_setText(_swigobj,_swigarg0)  (_swigobj->setText(_swigarg0))
static PyObject *_wrap_FX_InputDialog_setText(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXInputDialog * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","text", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_InputDialog_setText",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXInputDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_InputDialog_setText. Expected _FXInputDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_InputDialog_setText(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_InputDialog_setNumColumns(_swigobj,_swigarg0)  (_swigobj->setNumColumns(_swigarg0))
static PyObject *_wrap_FX_InputDialog_setNumColumns(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXInputDialog * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","num", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_InputDialog_setNumColumns",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXInputDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_InputDialog_setNumColumns. Expected _FXInputDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_InputDialog_setNumColumns(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_InputDialog_getNumColumns(_swigobj)  (_swigobj->getNumColumns())
static PyObject *_wrap_FX_InputDialog_getNumColumns(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXInputDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_InputDialog_getNumColumns",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXInputDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_InputDialog_getNumColumns. Expected _FXInputDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FX_InputDialog_getNumColumns(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_InputDialog_setLimits(_swigobj,_swigarg0,_swigarg1)  (_swigobj->setLimits(_swigarg0,_swigarg1))
static PyObject *_wrap_FX_InputDialog_setLimits(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXInputDialog * _arg0;
    FXdouble  _arg1;
    FXdouble  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","lo","hi", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Odd:FX_InputDialog_setLimits",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXInputDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_InputDialog_setLimits. Expected _FXInputDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_InputDialog_setLimits(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static PyObject * FXInputDialog_getLimits(FXInputDialog *self) {
      FXdouble lo,hi;
      self->getLimits(lo,hi);
      PyObject* obj=PyTuple_New(2);
      if(obj){
        PyTuple_SetItem(obj,0,PyFloat_FromDouble(lo));
        PyTuple_SetItem(obj,1,PyFloat_FromDouble(hi));
        }
      return obj;
    }
static PyObject *_wrap_FX_InputDialog_getLimits(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    PyObject * _result;
    FXInputDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_InputDialog_getLimits",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXInputDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_InputDialog_getLimits. Expected _FXInputDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (PyObject *)FXInputDialog_getLimits(_arg0);

    FXPy_END_ALLOW_THREADS
}{
  _resultobj = _result;
}
    return _resultobj;
}

#define FX_InputDialog_execute(_swigobj,_swigarg0)  (_swigobj->execute(_swigarg0))
static PyObject *_wrap_FX_InputDialog_execute(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXInputDialog * _arg0;
    FXuint  _arg1 = (FXuint ) PLACEMENT_CURSOR;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","placement", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|i:FX_InputDialog_execute",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXInputDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_InputDialog_execute. Expected _FXInputDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )FX_InputDialog_execute(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static PyObject *_wrap_FX_InputDialog_getString(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXString * _arg0;
    FXWindow * _arg1;
    FXString * _arg2;
    FXString * _arg3;
    FXIcon * _arg4 = (FXIcon *) NULL;
    PyObject * _obj0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    PyObject * _obj3 = 0;
    PyObject * _obj4 = 0;
    char *_kwnames[] = { "result","owner","caption","label","ic", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOOO|O:FX_InputDialog_getString",_kwnames,&_obj0,&_obj1,&_obj2,&_obj3,&_obj4)) 
        return NULL;
{
    if (_obj0 == Py_None)
	_arg0 = new FXString;
    else if (!PyString_Check(_obj0)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg0 = new FXString(PyString_AsString(_obj0));
}
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXWindow_p");
}
{
    if (_obj2 == Py_None)
	_arg2 = new FXString;
    else if (!PyString_Check(_obj2)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg2 = new FXString(PyString_AsString(_obj2));
}
{
    if (_obj3 == Py_None)
	_arg3 = new FXString;
    else if (!PyString_Check(_obj3)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg3 = new FXString(PyString_AsString(_obj3));
}
    if (_obj4)
{
    if (_obj4 == Py_None)
	_arg4 = NULL;
    else
	SWIG_GetPtrObj(_obj4, (void**) &_arg4, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXInputDialog::getString(*_arg0,_arg1,*_arg2,*_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
{
    delete _arg0;
}
{
    delete _arg2;
}
{
    delete _arg3;
}
    return _resultobj;
}

static PyObject *_wrap_FX_InputDialog_getInteger(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXint * _arg0;
    FXWindow * _arg1;
    FXString * _arg2;
    FXString * _arg3;
    FXIcon * _arg4 = (FXIcon *) NULL;
    FXint  _arg5 = (FXint ) 1;
    FXint  _arg6 = (FXint ) 0;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    PyObject * _obj3 = 0;
    PyObject * _obj4 = 0;
    char *_kwnames[] = { "result","owner","caption","label","ic","lo","hi", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOOO|Oii:FX_InputDialog_getInteger",_kwnames,&_argo0,&_obj1,&_obj2,&_obj3,&_obj4,&_arg5,&_arg6)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXint_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_InputDialog_getInteger. Expected _FXint_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXWindow_p");
}
{
    if (_obj2 == Py_None)
	_arg2 = new FXString;
    else if (!PyString_Check(_obj2)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg2 = new FXString(PyString_AsString(_obj2));
}
{
    if (_obj3 == Py_None)
	_arg3 = new FXString;
    else if (!PyString_Check(_obj3)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg3 = new FXString(PyString_AsString(_obj3));
}
    if (_obj4)
{
    if (_obj4 == Py_None)
	_arg4 = NULL;
    else
	SWIG_GetPtrObj(_obj4, (void**) &_arg4, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXInputDialog::getInteger(*_arg0,_arg1,*_arg2,*_arg3,_arg4,_arg5,_arg6);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
{
    delete _arg2;
}
{
    delete _arg3;
}
    return _resultobj;
}

static PyObject *_wrap_FX_InputDialog_getReal(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXdouble * _arg0;
    FXWindow * _arg1;
    FXString * _arg2;
    FXString * _arg3;
    FXIcon * _arg4 = (FXIcon *) NULL;
    FXdouble  _arg5 = (FXdouble ) 1.0;
    FXdouble  _arg6 = (FXdouble ) 0.0;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    PyObject * _obj3 = 0;
    PyObject * _obj4 = 0;
    char *_kwnames[] = { "result","owner","caption","label","ic","lo","hi", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOOO|Odd:FX_InputDialog_getReal",_kwnames,&_argo0,&_obj1,&_obj2,&_obj3,&_obj4,&_arg5,&_arg6)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXdouble_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_InputDialog_getReal. Expected _FXdouble_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXWindow_p");
}
{
    if (_obj2 == Py_None)
	_arg2 = new FXString;
    else if (!PyString_Check(_obj2)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg2 = new FXString(PyString_AsString(_obj2));
}
{
    if (_obj3 == Py_None)
	_arg3 = new FXString;
    else if (!PyString_Check(_obj3)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg3 = new FXString(PyString_AsString(_obj3));
}
    if (_obj4)
{
    if (_obj4 == Py_None)
	_arg4 = NULL;
    else
	SWIG_GetPtrObj(_obj4, (void**) &_arg4, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXInputDialog::getReal(*_arg0,_arg1,*_arg2,*_arg3,_arg4,_arg5,_arg6);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
{
    delete _arg2;
}
{
    delete _arg3;
}
    return _resultobj;
}

static void *SwigFXPyInputDialogToFXInputDialog(void *ptr) {
    FXPyInputDialog *src;
    FXInputDialog *dest;
    src = (FXPyInputDialog *) ptr;
    dest = (FXInputDialog *) src;
    return (void *) dest;
}

static void *SwigFXPyInputDialogToFXDialogBox(void *ptr) {
    FXPyInputDialog *src;
    FXDialogBox *dest;
    src = (FXPyInputDialog *) ptr;
    dest = (FXDialogBox *) src;
    return (void *) dest;
}

static void *SwigFXPyInputDialogToFXTopWindow(void *ptr) {
    FXPyInputDialog *src;
    FXTopWindow *dest;
    src = (FXPyInputDialog *) ptr;
    dest = (FXTopWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyInputDialogToFXShell(void *ptr) {
    FXPyInputDialog *src;
    FXShell *dest;
    src = (FXPyInputDialog *) ptr;
    dest = (FXShell *) src;
    return (void *) dest;
}

static void *SwigFXPyInputDialogToFXComposite(void *ptr) {
    FXPyInputDialog *src;
    FXComposite *dest;
    src = (FXPyInputDialog *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXPyInputDialogToFXWindow(void *ptr) {
    FXPyInputDialog *src;
    FXWindow *dest;
    src = (FXPyInputDialog *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyInputDialogToFXDrawable(void *ptr) {
    FXPyInputDialog *src;
    FXDrawable *dest;
    src = (FXPyInputDialog *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPyInputDialogToFXId(void *ptr) {
    FXPyInputDialog *src;
    FXId *dest;
    src = (FXPyInputDialog *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPyInputDialogToFXObject(void *ptr) {
    FXPyInputDialog *src;
    FXObject *dest;
    src = (FXPyInputDialog *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXInputDialog(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8) (new FXPyInputDialog(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8))
static PyObject *_wrap_new_FXInputDialog(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyInputDialog * _result;
    FXWindow * _arg0;
    FXString * _arg1;
    FXString * _arg2;
    FXIcon * _arg3 = (FXIcon *) NULL;
    FXuint  _arg4 = (FXuint ) (INPUTDIALOG_STRING);
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    FXint  _arg8 = (FXint ) 0;
    PyObject * _obj0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "owner","caption","label","ic","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO|Oiiiii:new_FXInputDialog",_kwnames,&_obj0,&_obj1,&_obj2,&_obj3,&_arg4,&_arg5,&_arg6,&_arg7,&_arg8)) 
        return NULL;
{
    if (_obj0 == Py_None)
	_arg0 = NULL;
    else
	SWIG_GetPtrObj(_obj0, (void**) &_arg0, "_FXWindow_p");
}
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    if (_obj2 == Py_None)
	_arg2 = new FXString;
    else if (!PyString_Check(_obj2)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg2 = new FXString(PyString_AsString(_obj2));
}
    if (_obj3)
{
    if (_obj3 == Py_None)
	_arg3 = NULL;
    else
	SWIG_GetPtrObj(_obj3, (void**) &_arg3, "_FXIcon_p");
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyInputDialog *)new_FXInputDialog(_arg0,*_arg1,*_arg2,_arg3,_arg4,_arg5,_arg6,_arg7,_arg8);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyInputDialog_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    delete _arg1;
}
{
    delete _arg2;
}
    return _resultobj;
}

#define FXInputDialog_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXInputDialog_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyInputDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXInputDialog_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyInputDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXInputDialog_onDefault. Expected _FXPyInputDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXInputDialog_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXInputDialog_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXInputDialog_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyInputDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXInputDialog_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyInputDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXInputDialog_create. Expected _FXPyInputDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXInputDialog_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXInputDialog_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXInputDialog_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyInputDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXInputDialog_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyInputDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXInputDialog_destroy. Expected _FXPyInputDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXInputDialog_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXInputDialog_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXInputDialog_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyInputDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXInputDialog_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyInputDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXInputDialog_detach. Expected _FXPyInputDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXInputDialog_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXInputDialog_resize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_resize(_swigarg0,_swigarg1))
static PyObject *_wrap_FXInputDialog_resize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyInputDialog * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXInputDialog_resize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyInputDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXInputDialog_resize. Expected _FXPyInputDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXInputDialog_resize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXInputDialog_getDefaultWidth(_swigobj)  (_swigobj->_getDefaultWidth())
static PyObject *_wrap_FXInputDialog_getDefaultWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyInputDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXInputDialog_getDefaultWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyInputDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXInputDialog_getDefaultWidth. Expected _FXPyInputDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXInputDialog_getDefaultWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXInputDialog_getDefaultHeight(_swigobj)  (_swigobj->_getDefaultHeight())
static PyObject *_wrap_FXInputDialog_getDefaultHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyInputDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXInputDialog_getDefaultHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyInputDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXInputDialog_getDefaultHeight. Expected _FXPyInputDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXInputDialog_getDefaultHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXInputDialog_show(_swigobj)  (_swigobj->_show())
static PyObject *_wrap_FXInputDialog_show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyInputDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXInputDialog_show",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyInputDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXInputDialog_show. Expected _FXPyInputDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXInputDialog_show(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXInputDialog_hide(_swigobj)  (_swigobj->_hide())
static PyObject *_wrap_FXInputDialog_hide(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyInputDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXInputDialog_hide",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyInputDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXInputDialog_hide. Expected _FXPyInputDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXInputDialog_hide(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXInputDialog_enable(_swigobj)  (_swigobj->_enable())
static PyObject *_wrap_FXInputDialog_enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyInputDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXInputDialog_enable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyInputDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXInputDialog_enable. Expected _FXPyInputDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXInputDialog_enable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXInputDialog_disable(_swigobj)  (_swigobj->_disable())
static PyObject *_wrap_FXInputDialog_disable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyInputDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXInputDialog_disable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyInputDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXInputDialog_disable. Expected _FXPyInputDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXInputDialog_disable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXInputDialog_canFocus(_swigobj)  (_swigobj->_canFocus())
static PyObject *_wrap_FXInputDialog_canFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyInputDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXInputDialog_canFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyInputDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXInputDialog_canFocus. Expected _FXPyInputDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXInputDialog_canFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXInputDialog_setFocus(_swigobj)  (_swigobj->_setFocus())
static PyObject *_wrap_FXInputDialog_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyInputDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXInputDialog_setFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyInputDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXInputDialog_setFocus. Expected _FXPyInputDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXInputDialog_setFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXInputDialog_killFocus(_swigobj)  (_swigobj->_killFocus())
static PyObject *_wrap_FXInputDialog_killFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyInputDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXInputDialog_killFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyInputDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXInputDialog_killFocus. Expected _FXPyInputDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXInputDialog_killFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXInputDialog_setDefault(_swigobj,_swigarg0)  (_swigobj->_setDefault(_swigarg0))
static PyObject *_wrap_FXInputDialog_setDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyInputDialog * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FXInputDialog_setDefault",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyInputDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXInputDialog_setDefault. Expected _FXPyInputDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXInputDialog_setDefault(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXInputDialog_recalc(_swigobj)  (_swigobj->_recalc())
static PyObject *_wrap_FXInputDialog_recalc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyInputDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXInputDialog_recalc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyInputDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXInputDialog_recalc. Expected _FXPyInputDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXInputDialog_recalc(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXInputDialog_layout(_swigobj)  (_swigobj->_layout())
static PyObject *_wrap_FXInputDialog_layout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyInputDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXInputDialog_layout",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyInputDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXInputDialog_layout. Expected _FXPyInputDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXInputDialog_layout(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXInputDialog_lower(_swigobj)  (_swigobj->_lowerWindow())
static PyObject *_wrap_FXInputDialog_lower(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyInputDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXInputDialog_lower",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyInputDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXInputDialog_lower. Expected _FXPyInputDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXInputDialog_lower(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXInputDialog_move(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_move(_swigarg0,_swigarg1))
static PyObject *_wrap_FXInputDialog_move(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyInputDialog * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXInputDialog_move",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyInputDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXInputDialog_move. Expected _FXPyInputDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXInputDialog_move(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXInputDialog_position(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->_position(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FXInputDialog_position(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyInputDialog * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FXInputDialog_position",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyInputDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXInputDialog_position. Expected _FXPyInputDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXInputDialog_position(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXInputDialog_isComposite(_swigobj)  (_swigobj->_isComposite())
static PyObject *_wrap_FXInputDialog_isComposite(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyInputDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXInputDialog_isComposite",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyInputDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXInputDialog_isComposite. Expected _FXPyInputDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXInputDialog_isComposite(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXInputDialog_contains(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_contains(_swigarg0,_swigarg1))
static PyObject *_wrap_FXInputDialog_contains(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyInputDialog * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXInputDialog_contains",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyInputDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXInputDialog_contains. Expected _FXPyInputDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXInputDialog_contains(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXInputDialog_getWidthForHeight(_swigobj,_swigarg0)  (_swigobj->_getWidthForHeight(_swigarg0))
static PyObject *_wrap_FXInputDialog_getWidthForHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyInputDialog * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXInputDialog_getWidthForHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyInputDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXInputDialog_getWidthForHeight. Expected _FXPyInputDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXInputDialog_getWidthForHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXInputDialog_getHeightForWidth(_swigobj,_swigarg0)  (_swigobj->_getHeightForWidth(_swigarg0))
static PyObject *_wrap_FXInputDialog_getHeightForWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyInputDialog * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXInputDialog_getHeightForWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyInputDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXInputDialog_getHeightForWidth. Expected _FXPyInputDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXInputDialog_getHeightForWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXInputDialog_doesSaveUnder(_swigobj)  (_swigobj->_doesSaveUnder())
static PyObject *_wrap_FXInputDialog_doesSaveUnder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyInputDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXInputDialog_doesSaveUnder",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyInputDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXInputDialog_doesSaveUnder. Expected _FXPyInputDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXInputDialog_doesSaveUnder(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXInputDialog_reparent(_swigobj,_swigarg0)  (_swigobj->_reparent(_swigarg0))
static PyObject *_wrap_FXInputDialog_reparent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyInputDialog * _arg0;
    FXComposite * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","newparent", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXInputDialog_reparent",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyInputDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXInputDialog_reparent. Expected _FXPyInputDialog_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXInputDialog_reparent. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXInputDialog_reparent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXInputDialog_setBackColor(_swigobj,_swigarg0)  (_swigobj->_setBackColor(_swigarg0))
static PyObject *_wrap_FXInputDialog_setBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyInputDialog * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXInputDialog_setBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyInputDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXInputDialog_setBackColor. Expected _FXPyInputDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXInputDialog_setBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXInputDialog_show2(_swigobj,_swigarg0)  (_swigobj->_show(_swigarg0))
static PyObject *_wrap_FXInputDialog_show2(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyInputDialog * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","placement", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXInputDialog_show2",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyInputDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXInputDialog_show2. Expected _FXPyInputDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXInputDialog_show2(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXInputDialog_iconify(_swigobj)  (_swigobj->_iconify())
static PyObject *_wrap_FXInputDialog_iconify(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyInputDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXInputDialog_iconify",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyInputDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXInputDialog_iconify. Expected _FXPyInputDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXInputDialog_iconify(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXInputDialog_deiconify(_swigobj)  (_swigobj->_deiconify())
static PyObject *_wrap_FXInputDialog_deiconify(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyInputDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXInputDialog_deiconify",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyInputDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXInputDialog_deiconify. Expected _FXPyInputDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXInputDialog_deiconify(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXProgressDialogToFXDialogBox(void *ptr) {
    FXProgressDialog *src;
    FXDialogBox *dest;
    src = (FXProgressDialog *) ptr;
    dest = (FXDialogBox *) src;
    return (void *) dest;
}

static void *SwigFXProgressDialogToFXTopWindow(void *ptr) {
    FXProgressDialog *src;
    FXTopWindow *dest;
    src = (FXProgressDialog *) ptr;
    dest = (FXTopWindow *) src;
    return (void *) dest;
}

static void *SwigFXProgressDialogToFXShell(void *ptr) {
    FXProgressDialog *src;
    FXShell *dest;
    src = (FXProgressDialog *) ptr;
    dest = (FXShell *) src;
    return (void *) dest;
}

static void *SwigFXProgressDialogToFXComposite(void *ptr) {
    FXProgressDialog *src;
    FXComposite *dest;
    src = (FXProgressDialog *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXProgressDialogToFXWindow(void *ptr) {
    FXProgressDialog *src;
    FXWindow *dest;
    src = (FXProgressDialog *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXProgressDialogToFXDrawable(void *ptr) {
    FXProgressDialog *src;
    FXDrawable *dest;
    src = (FXProgressDialog *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXProgressDialogToFXId(void *ptr) {
    FXProgressDialog *src;
    FXId *dest;
    src = (FXProgressDialog *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXProgressDialogToFXObject(void *ptr) {
    FXProgressDialog *src;
    FXObject *dest;
    src = (FXProgressDialog *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define FX_ProgressDialog_onCmdSetValue(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSetValue(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ProgressDialog_onCmdSetValue(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXProgressDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ProgressDialog_onCmdSetValue",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ProgressDialog_onCmdSetValue. Expected _FXProgressDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ProgressDialog_onCmdSetValue. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ProgressDialog_onCmdSetValue(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ProgressDialog_onCmdSetIntValue(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSetIntValue(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ProgressDialog_onCmdSetIntValue(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXProgressDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ProgressDialog_onCmdSetIntValue",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ProgressDialog_onCmdSetIntValue. Expected _FXProgressDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ProgressDialog_onCmdSetIntValue. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ProgressDialog_onCmdSetIntValue(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ProgressDialog_onCmdGetIntValue(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdGetIntValue(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ProgressDialog_onCmdGetIntValue(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXProgressDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ProgressDialog_onCmdGetIntValue",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ProgressDialog_onCmdGetIntValue. Expected _FXProgressDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ProgressDialog_onCmdGetIntValue. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ProgressDialog_onCmdGetIntValue(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ProgressDialog_onCmdSetStringValue(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdSetStringValue(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ProgressDialog_onCmdSetStringValue(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXProgressDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ProgressDialog_onCmdSetStringValue",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ProgressDialog_onCmdSetStringValue. Expected _FXProgressDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ProgressDialog_onCmdSetStringValue. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ProgressDialog_onCmdSetStringValue(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ProgressDialog_onCmdGetStringValue(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdGetStringValue(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ProgressDialog_onCmdGetStringValue(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXProgressDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ProgressDialog_onCmdGetStringValue",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ProgressDialog_onCmdGetStringValue. Expected _FXProgressDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ProgressDialog_onCmdGetStringValue. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ProgressDialog_onCmdGetStringValue(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FX_ProgressDialog_onCmdCancel(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->onCmdCancel(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FX_ProgressDialog_onCmdCancel(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXProgressDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _argo3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","arg4", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FX_ProgressDialog_onCmdCancel",_kwnames,&_argo0,&_obj1,&_arg2,&_argo3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ProgressDialog_onCmdCancel. Expected _FXProgressDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
    if (_argo3) {
        if (_argo3 == Py_None) { _arg3 = NULL; }
        else if (SWIG_GetPtrObj(_argo3,(void **) &_arg3,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of FX_ProgressDialog_onCmdCancel. Expected _void_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FX_ProgressDialog_onCmdCancel(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define new_FX_ProgressDialog(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7) (new FXProgressDialog(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7))
static PyObject *_wrap_new_FX_ProgressDialog(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXProgressDialog * _result;
    FXWindow * _arg0;
    FXString * _arg1;
    FXString * _arg2;
    FXuint  _arg3 = (FXuint ) PROGRESSDIALOG_NORMAL;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    PyObject * _obj0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "owner","caption","label","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO|iiiii:new_FX_ProgressDialog",_kwnames,&_obj0,&_obj1,&_obj2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7)) 
        return NULL;
{
    if (_obj0 == Py_None)
	_arg0 = NULL;
    else
	SWIG_GetPtrObj(_obj0, (void**) &_arg0, "_FXWindow_p");
}
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    if (_obj2 == Py_None)
	_arg2 = new FXString;
    else if (!PyString_Check(_obj2)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg2 = new FXString(PyString_AsString(_obj2));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXProgressDialog *)new_FX_ProgressDialog(_arg0,*_arg1,*_arg2,_arg3,_arg4,_arg5,_arg6,_arg7);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXProgressDialog_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    delete _arg1;
}
{
    delete _arg2;
}
    return _resultobj;
}

#define FX_ProgressDialog_setMessage(_swigobj,_swigarg0)  (_swigobj->setMessage(_swigarg0))
static PyObject *_wrap_FX_ProgressDialog_setMessage(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXProgressDialog * _arg0;
    FXString * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    char *_kwnames[] = { "self","msg", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FX_ProgressDialog_setMessage",_kwnames,&_argo0,&_obj1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ProgressDialog_setMessage. Expected _FXProgressDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_ProgressDialog_setMessage(_arg0,*_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
{
    delete _arg1;
}
    return _resultobj;
}

#define FX_ProgressDialog_getMessage(_swigobj)  (_swigobj->getMessage())
static PyObject *_wrap_FX_ProgressDialog_getMessage(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXString * _result;
    FXProgressDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_ProgressDialog_getMessage",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ProgressDialog_getMessage. Expected _FXProgressDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = new FXString (FX_ProgressDialog_getMessage(_arg0));

    FXPy_END_ALLOW_THREADS
}{
    _resultobj = PyString_FromString(_result->text());
}
{
    delete _result;
}
    return _resultobj;
}

#define FX_ProgressDialog_setProgress(_swigobj,_swigarg0)  (_swigobj->setProgress(_swigarg0))
static PyObject *_wrap_FX_ProgressDialog_setProgress(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXProgressDialog * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","value", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_ProgressDialog_setProgress",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ProgressDialog_setProgress. Expected _FXProgressDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_ProgressDialog_setProgress(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_ProgressDialog_getProgress(_swigobj)  (_swigobj->getProgress())
static PyObject *_wrap_FX_ProgressDialog_getProgress(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXProgressDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_ProgressDialog_getProgress",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ProgressDialog_getProgress. Expected _FXProgressDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )FX_ProgressDialog_getProgress(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_ProgressDialog_setTotal(_swigobj,_swigarg0)  (_swigobj->setTotal(_swigarg0))
static PyObject *_wrap_FX_ProgressDialog_setTotal(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXProgressDialog * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","value", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_ProgressDialog_setTotal",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ProgressDialog_setTotal. Expected _FXProgressDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_ProgressDialog_setTotal(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_ProgressDialog_getTotal(_swigobj)  (_swigobj->getTotal())
static PyObject *_wrap_FX_ProgressDialog_getTotal(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXuint  _result;
    FXProgressDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_ProgressDialog_getTotal",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ProgressDialog_getTotal. Expected _FXProgressDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXuint )FX_ProgressDialog_getTotal(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FX_ProgressDialog_increment(_swigobj,_swigarg0)  (_swigobj->increment(_swigarg0))
static PyObject *_wrap_FX_ProgressDialog_increment(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXProgressDialog * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","value", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FX_ProgressDialog_increment",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ProgressDialog_increment. Expected _FXProgressDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FX_ProgressDialog_increment(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FX_ProgressDialog_isCancelled(_swigobj)  (_swigobj->isCancelled())
static PyObject *_wrap_FX_ProgressDialog_isCancelled(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXProgressDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FX_ProgressDialog_isCancelled",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FX_ProgressDialog_isCancelled. Expected _FXProgressDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FX_ProgressDialog_isCancelled(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define delete_FXProgressDialog(_swigobj) (delete _swigobj)
static PyObject *_wrap_delete_FX_ProgressDialog(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXProgressDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:delete_FX_ProgressDialog",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of delete_FX_ProgressDialog. Expected _FXProgressDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        delete_FXProgressDialog(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigFXPyProgressDialogToFXProgressDialog(void *ptr) {
    FXPyProgressDialog *src;
    FXProgressDialog *dest;
    src = (FXPyProgressDialog *) ptr;
    dest = (FXProgressDialog *) src;
    return (void *) dest;
}

static void *SwigFXPyProgressDialogToFXDialogBox(void *ptr) {
    FXPyProgressDialog *src;
    FXDialogBox *dest;
    src = (FXPyProgressDialog *) ptr;
    dest = (FXDialogBox *) src;
    return (void *) dest;
}

static void *SwigFXPyProgressDialogToFXTopWindow(void *ptr) {
    FXPyProgressDialog *src;
    FXTopWindow *dest;
    src = (FXPyProgressDialog *) ptr;
    dest = (FXTopWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyProgressDialogToFXShell(void *ptr) {
    FXPyProgressDialog *src;
    FXShell *dest;
    src = (FXPyProgressDialog *) ptr;
    dest = (FXShell *) src;
    return (void *) dest;
}

static void *SwigFXPyProgressDialogToFXComposite(void *ptr) {
    FXPyProgressDialog *src;
    FXComposite *dest;
    src = (FXPyProgressDialog *) ptr;
    dest = (FXComposite *) src;
    return (void *) dest;
}

static void *SwigFXPyProgressDialogToFXWindow(void *ptr) {
    FXPyProgressDialog *src;
    FXWindow *dest;
    src = (FXPyProgressDialog *) ptr;
    dest = (FXWindow *) src;
    return (void *) dest;
}

static void *SwigFXPyProgressDialogToFXDrawable(void *ptr) {
    FXPyProgressDialog *src;
    FXDrawable *dest;
    src = (FXPyProgressDialog *) ptr;
    dest = (FXDrawable *) src;
    return (void *) dest;
}

static void *SwigFXPyProgressDialogToFXId(void *ptr) {
    FXPyProgressDialog *src;
    FXId *dest;
    src = (FXPyProgressDialog *) ptr;
    dest = (FXId *) src;
    return (void *) dest;
}

static void *SwigFXPyProgressDialogToFXObject(void *ptr) {
    FXPyProgressDialog *src;
    FXObject *dest;
    src = (FXPyProgressDialog *) ptr;
    dest = (FXObject *) src;
    return (void *) dest;
}

#define new_FXProgressDialog(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7) (new FXPyProgressDialog(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7))
static PyObject *_wrap_new_FXProgressDialog(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyProgressDialog * _result;
    FXWindow * _arg0;
    FXString * _arg1;
    FXString * _arg2;
    FXuint  _arg3 = (FXuint ) PROGRESSDIALOG_NORMAL;
    FXint  _arg4 = (FXint ) 0;
    FXint  _arg5 = (FXint ) 0;
    FXint  _arg6 = (FXint ) 0;
    FXint  _arg7 = (FXint ) 0;
    PyObject * _obj0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj2 = 0;
    char *_kwnames[] = { "owner","caption","label","opts","x","y","w","h", NULL };
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOO|iiiii:new_FXProgressDialog",_kwnames,&_obj0,&_obj1,&_obj2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7)) 
        return NULL;
{
    if (_obj0 == Py_None)
	_arg0 = NULL;
    else
	SWIG_GetPtrObj(_obj0, (void**) &_arg0, "_FXWindow_p");
}
{
    if (_obj1 == Py_None)
	_arg1 = new FXString;
    else if (!PyString_Check(_obj1)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg1 = new FXString(PyString_AsString(_obj1));
}
{
    if (_obj2 == Py_None)
	_arg2 = new FXString;
    else if (!PyString_Check(_obj2)) {
	PyErr_SetString(PyExc_TypeError, "not a string");
	return NULL;
    }
    else
	_arg2 = new FXString(PyString_AsString(_obj2));
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXPyProgressDialog *)new_FXProgressDialog(_arg0,*_arg1,*_arg2,_arg3,_arg4,_arg5,_arg6,_arg7);

    FXPy_END_ALLOW_THREADS
}    if (_result) {
        SWIG_MakePtr(_ptemp, (char *) _result,"_FXPyProgressDialog_p");
        _resultobj = Py_BuildValue("s",_ptemp);
    } else {
        Py_INCREF(Py_None);
        _resultobj = Py_None;
    }
{
    delete _arg1;
}
{
    delete _arg2;
}
    return _resultobj;
}

#define FXProgressDialog_onDefault(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->_onDefault(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_FXProgressDialog_onDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    long  _result;
    FXPyProgressDialog * _arg0;
    FXObject * _arg1;
    FXSelector  _arg2;
    void * _arg3;
    PyObject * _argo0 = 0;
    PyObject * _obj1 = 0;
    PyObject * _obj3 = 0;
    char *_kwnames[] = { "self","arg2","arg3","ptr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OOiO:FXProgressDialog_onDefault",_kwnames,&_argo0,&_obj1,&_arg2,&_obj3)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXProgressDialog_onDefault. Expected _FXPyProgressDialog_p.");
        return NULL;
        }
    }
{
    if (_obj1 == Py_None)
	_arg1 = NULL;
    else
	SWIG_GetPtrObj(_obj1, (void**) &_arg1, "_FXObject_p");
}
{
    _arg3 = NULL;
    if (PyObject_HasAttrString(_obj3, "this")) {
	PyObject *obj = PyObject_GetAttrString(_obj3, "this");
	char *str = PyString_AsString(obj);
	if (str) {
	    if (!strcmp(str, "NULL"))
		_arg3 = NULL;
	}
	else
	    _arg3 = (void*) _obj3;
	Py_DECREF(obj);
    }
    else
	_arg3 = (void*) _obj3;
}
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (long )FXProgressDialog_onDefault(_arg0,_arg1,_arg2,_arg3);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define FXProgressDialog_create(_swigobj)  (_swigobj->_create())
static PyObject *_wrap_FXProgressDialog_create(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyProgressDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXProgressDialog_create",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXProgressDialog_create. Expected _FXPyProgressDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXProgressDialog_create(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXProgressDialog_destroy(_swigobj)  (_swigobj->_destroy())
static PyObject *_wrap_FXProgressDialog_destroy(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyProgressDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXProgressDialog_destroy",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXProgressDialog_destroy. Expected _FXPyProgressDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXProgressDialog_destroy(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXProgressDialog_detach(_swigobj)  (_swigobj->_detach())
static PyObject *_wrap_FXProgressDialog_detach(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyProgressDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXProgressDialog_detach",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXProgressDialog_detach. Expected _FXPyProgressDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXProgressDialog_detach(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXProgressDialog_resize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_resize(_swigarg0,_swigarg1))
static PyObject *_wrap_FXProgressDialog_resize(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyProgressDialog * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXProgressDialog_resize",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXProgressDialog_resize. Expected _FXPyProgressDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXProgressDialog_resize(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXProgressDialog_getDefaultWidth(_swigobj)  (_swigobj->_getDefaultWidth())
static PyObject *_wrap_FXProgressDialog_getDefaultWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyProgressDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXProgressDialog_getDefaultWidth",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXProgressDialog_getDefaultWidth. Expected _FXPyProgressDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXProgressDialog_getDefaultWidth(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXProgressDialog_getDefaultHeight(_swigobj)  (_swigobj->_getDefaultHeight())
static PyObject *_wrap_FXProgressDialog_getDefaultHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyProgressDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXProgressDialog_getDefaultHeight",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXProgressDialog_getDefaultHeight. Expected _FXPyProgressDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXProgressDialog_getDefaultHeight(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXProgressDialog_show(_swigobj)  (_swigobj->_show())
static PyObject *_wrap_FXProgressDialog_show(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyProgressDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXProgressDialog_show",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXProgressDialog_show. Expected _FXPyProgressDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXProgressDialog_show(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXProgressDialog_hide(_swigobj)  (_swigobj->_hide())
static PyObject *_wrap_FXProgressDialog_hide(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyProgressDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXProgressDialog_hide",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXProgressDialog_hide. Expected _FXPyProgressDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXProgressDialog_hide(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXProgressDialog_enable(_swigobj)  (_swigobj->_enable())
static PyObject *_wrap_FXProgressDialog_enable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyProgressDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXProgressDialog_enable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXProgressDialog_enable. Expected _FXPyProgressDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXProgressDialog_enable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXProgressDialog_disable(_swigobj)  (_swigobj->_disable())
static PyObject *_wrap_FXProgressDialog_disable(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyProgressDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXProgressDialog_disable",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXProgressDialog_disable. Expected _FXPyProgressDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXProgressDialog_disable(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXProgressDialog_canFocus(_swigobj)  (_swigobj->_canFocus())
static PyObject *_wrap_FXProgressDialog_canFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyProgressDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXProgressDialog_canFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXProgressDialog_canFocus. Expected _FXPyProgressDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXProgressDialog_canFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXProgressDialog_setFocus(_swigobj)  (_swigobj->_setFocus())
static PyObject *_wrap_FXProgressDialog_setFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyProgressDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXProgressDialog_setFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXProgressDialog_setFocus. Expected _FXPyProgressDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXProgressDialog_setFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXProgressDialog_killFocus(_swigobj)  (_swigobj->_killFocus())
static PyObject *_wrap_FXProgressDialog_killFocus(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyProgressDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXProgressDialog_killFocus",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXProgressDialog_killFocus. Expected _FXPyProgressDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXProgressDialog_killFocus(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXProgressDialog_setDefault(_swigobj,_swigarg0)  (_swigobj->_setDefault(_swigarg0))
static PyObject *_wrap_FXProgressDialog_setDefault(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyProgressDialog * _arg0;
    FXbool  _arg1 = (FXbool ) TRUE;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","enable", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O|b:FXProgressDialog_setDefault",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXProgressDialog_setDefault. Expected _FXPyProgressDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXProgressDialog_setDefault(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXProgressDialog_recalc(_swigobj)  (_swigobj->_recalc())
static PyObject *_wrap_FXProgressDialog_recalc(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyProgressDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXProgressDialog_recalc",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXProgressDialog_recalc. Expected _FXPyProgressDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXProgressDialog_recalc(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXProgressDialog_layout(_swigobj)  (_swigobj->_layout())
static PyObject *_wrap_FXProgressDialog_layout(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyProgressDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXProgressDialog_layout",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXProgressDialog_layout. Expected _FXPyProgressDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXProgressDialog_layout(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXProgressDialog_lower(_swigobj)  (_swigobj->_lowerWindow())
static PyObject *_wrap_FXProgressDialog_lower(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyProgressDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXProgressDialog_lower",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXProgressDialog_lower. Expected _FXPyProgressDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXProgressDialog_lower(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXProgressDialog_move(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_move(_swigarg0,_swigarg1))
static PyObject *_wrap_FXProgressDialog_move(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyProgressDialog * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXProgressDialog_move",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXProgressDialog_move. Expected _FXPyProgressDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXProgressDialog_move(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXProgressDialog_position(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->_position(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_FXProgressDialog_position(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyProgressDialog * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    FXint  _arg3;
    FXint  _arg4;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y","w","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oiiii:FXProgressDialog_position",_kwnames,&_argo0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXProgressDialog_position. Expected _FXPyProgressDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXProgressDialog_position(_arg0,_arg1,_arg2,_arg3,_arg4);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXProgressDialog_isComposite(_swigobj)  (_swigobj->_isComposite())
static PyObject *_wrap_FXProgressDialog_isComposite(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyProgressDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXProgressDialog_isComposite",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXProgressDialog_isComposite. Expected _FXPyProgressDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXProgressDialog_isComposite(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXProgressDialog_contains(_swigobj,_swigarg0,_swigarg1)  (_swigobj->_contains(_swigarg0,_swigarg1))
static PyObject *_wrap_FXProgressDialog_contains(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyProgressDialog * _arg0;
    FXint  _arg1;
    FXint  _arg2;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","x","y", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oii:FXProgressDialog_contains",_kwnames,&_argo0,&_arg1,&_arg2)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXProgressDialog_contains. Expected _FXPyProgressDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXProgressDialog_contains(_arg0,_arg1,_arg2);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXProgressDialog_getWidthForHeight(_swigobj,_swigarg0)  (_swigobj->_getWidthForHeight(_swigarg0))
static PyObject *_wrap_FXProgressDialog_getWidthForHeight(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyProgressDialog * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","h", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXProgressDialog_getWidthForHeight",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXProgressDialog_getWidthForHeight. Expected _FXPyProgressDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXProgressDialog_getWidthForHeight(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXProgressDialog_getHeightForWidth(_swigobj,_swigarg0)  (_swigobj->_getHeightForWidth(_swigarg0))
static PyObject *_wrap_FXProgressDialog_getHeightForWidth(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXint  _result;
    FXPyProgressDialog * _arg0;
    FXint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","w", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXProgressDialog_getHeightForWidth",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXProgressDialog_getHeightForWidth. Expected _FXPyProgressDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXint )FXProgressDialog_getHeightForWidth(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define FXProgressDialog_doesSaveUnder(_swigobj)  (_swigobj->_doesSaveUnder())
static PyObject *_wrap_FXProgressDialog_doesSaveUnder(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXbool  _result;
    FXPyProgressDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXProgressDialog_doesSaveUnder",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXProgressDialog_doesSaveUnder. Expected _FXPyProgressDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        _result = (FXbool )FXProgressDialog_doesSaveUnder(_arg0);

    FXPy_END_ALLOW_THREADS
}    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define FXProgressDialog_reparent(_swigobj,_swigarg0)  (_swigobj->_reparent(_swigarg0))
static PyObject *_wrap_FXProgressDialog_reparent(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyProgressDialog * _arg0;
    FXComposite * _arg1;
    PyObject * _argo0 = 0;
    PyObject * _argo1 = 0;
    char *_kwnames[] = { "self","newparent", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"OO:FXProgressDialog_reparent",_kwnames,&_argo0,&_argo1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXProgressDialog_reparent. Expected _FXPyProgressDialog_p.");
        return NULL;
        }
    }
    if (_argo1) {
        if (_argo1 == Py_None) { _arg1 = NULL; }
        else if (SWIG_GetPtrObj(_argo1,(void **) &_arg1,"_FXComposite_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of FXProgressDialog_reparent. Expected _FXComposite_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXProgressDialog_reparent(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXProgressDialog_setBackColor(_swigobj,_swigarg0)  (_swigobj->_setBackColor(_swigarg0))
static PyObject *_wrap_FXProgressDialog_setBackColor(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyProgressDialog * _arg0;
    FXColor  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","clr", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXProgressDialog_setBackColor",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXProgressDialog_setBackColor. Expected _FXPyProgressDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXProgressDialog_setBackColor(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXProgressDialog_show2(_swigobj,_swigarg0)  (_swigobj->_show(_swigarg0))
static PyObject *_wrap_FXProgressDialog_show2(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyProgressDialog * _arg0;
    FXuint  _arg1;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self","placement", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"Oi:FXProgressDialog_show2",_kwnames,&_argo0,&_arg1)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXProgressDialog_show2. Expected _FXPyProgressDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXProgressDialog_show2(_arg0,_arg1);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXProgressDialog_iconify(_swigobj)  (_swigobj->_iconify())
static PyObject *_wrap_FXProgressDialog_iconify(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyProgressDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXProgressDialog_iconify",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXProgressDialog_iconify. Expected _FXPyProgressDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXProgressDialog_iconify(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define FXProgressDialog_deiconify(_swigobj)  (_swigobj->_deiconify())
static PyObject *_wrap_FXProgressDialog_deiconify(PyObject *self, PyObject *args, PyObject *kwargs) {
    PyObject * _resultobj;
    FXPyProgressDialog * _arg0;
    PyObject * _argo0 = 0;
    char *_kwnames[] = { "self", NULL };

    self = self;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,"O:FXProgressDialog_deiconify",_kwnames,&_argo0)) 
        return NULL;
    if (_argo0) {
        if (_argo0 == Py_None) { _arg0 = NULL; }
        else if (SWIG_GetPtrObj(_argo0,(void **) &_arg0,"_FXPyProgressDialog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of FXProgressDialog_deiconify. Expected _FXPyProgressDialog_p.");
        return NULL;
        }
    }
{
    FXPy_BEGIN_ALLOW_THREADS
        FXProgressDialog_deiconify(_arg0);

    FXPy_END_ALLOW_THREADS
}    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static PyMethodDef dialogscMethods[] = {
	 { "FXProgressDialog_deiconify", (PyCFunction) _wrap_FXProgressDialog_deiconify, METH_VARARGS | METH_KEYWORDS },
	 { "FXProgressDialog_iconify", (PyCFunction) _wrap_FXProgressDialog_iconify, METH_VARARGS | METH_KEYWORDS },
	 { "FXProgressDialog_show2", (PyCFunction) _wrap_FXProgressDialog_show2, METH_VARARGS | METH_KEYWORDS },
	 { "FXProgressDialog_setBackColor", (PyCFunction) _wrap_FXProgressDialog_setBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FXProgressDialog_reparent", (PyCFunction) _wrap_FXProgressDialog_reparent, METH_VARARGS | METH_KEYWORDS },
	 { "FXProgressDialog_doesSaveUnder", (PyCFunction) _wrap_FXProgressDialog_doesSaveUnder, METH_VARARGS | METH_KEYWORDS },
	 { "FXProgressDialog_getHeightForWidth", (PyCFunction) _wrap_FXProgressDialog_getHeightForWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXProgressDialog_getWidthForHeight", (PyCFunction) _wrap_FXProgressDialog_getWidthForHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXProgressDialog_contains", (PyCFunction) _wrap_FXProgressDialog_contains, METH_VARARGS | METH_KEYWORDS },
	 { "FXProgressDialog_isComposite", (PyCFunction) _wrap_FXProgressDialog_isComposite, METH_VARARGS | METH_KEYWORDS },
	 { "FXProgressDialog_position", (PyCFunction) _wrap_FXProgressDialog_position, METH_VARARGS | METH_KEYWORDS },
	 { "FXProgressDialog_move", (PyCFunction) _wrap_FXProgressDialog_move, METH_VARARGS | METH_KEYWORDS },
	 { "FXProgressDialog_lower", (PyCFunction) _wrap_FXProgressDialog_lower, METH_VARARGS | METH_KEYWORDS },
	 { "FXProgressDialog_layout", (PyCFunction) _wrap_FXProgressDialog_layout, METH_VARARGS | METH_KEYWORDS },
	 { "FXProgressDialog_recalc", (PyCFunction) _wrap_FXProgressDialog_recalc, METH_VARARGS | METH_KEYWORDS },
	 { "FXProgressDialog_setDefault", (PyCFunction) _wrap_FXProgressDialog_setDefault, METH_VARARGS | METH_KEYWORDS },
	 { "FXProgressDialog_killFocus", (PyCFunction) _wrap_FXProgressDialog_killFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXProgressDialog_setFocus", (PyCFunction) _wrap_FXProgressDialog_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXProgressDialog_canFocus", (PyCFunction) _wrap_FXProgressDialog_canFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXProgressDialog_disable", (PyCFunction) _wrap_FXProgressDialog_disable, METH_VARARGS | METH_KEYWORDS },
	 { "FXProgressDialog_enable", (PyCFunction) _wrap_FXProgressDialog_enable, METH_VARARGS | METH_KEYWORDS },
	 { "FXProgressDialog_hide", (PyCFunction) _wrap_FXProgressDialog_hide, METH_VARARGS | METH_KEYWORDS },
	 { "FXProgressDialog_show", (PyCFunction) _wrap_FXProgressDialog_show, METH_VARARGS | METH_KEYWORDS },
	 { "FXProgressDialog_getDefaultHeight", (PyCFunction) _wrap_FXProgressDialog_getDefaultHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXProgressDialog_getDefaultWidth", (PyCFunction) _wrap_FXProgressDialog_getDefaultWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXProgressDialog_resize", (PyCFunction) _wrap_FXProgressDialog_resize, METH_VARARGS | METH_KEYWORDS },
	 { "FXProgressDialog_detach", (PyCFunction) _wrap_FXProgressDialog_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXProgressDialog_destroy", (PyCFunction) _wrap_FXProgressDialog_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXProgressDialog_create", (PyCFunction) _wrap_FXProgressDialog_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXProgressDialog_onDefault", (PyCFunction) _wrap_FXProgressDialog_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXProgressDialog", (PyCFunction) _wrap_new_FXProgressDialog, METH_VARARGS | METH_KEYWORDS },
	 { "delete_FX_ProgressDialog", (PyCFunction) _wrap_delete_FX_ProgressDialog, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ProgressDialog_isCancelled", (PyCFunction) _wrap_FX_ProgressDialog_isCancelled, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ProgressDialog_increment", (PyCFunction) _wrap_FX_ProgressDialog_increment, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ProgressDialog_getTotal", (PyCFunction) _wrap_FX_ProgressDialog_getTotal, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ProgressDialog_setTotal", (PyCFunction) _wrap_FX_ProgressDialog_setTotal, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ProgressDialog_getProgress", (PyCFunction) _wrap_FX_ProgressDialog_getProgress, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ProgressDialog_setProgress", (PyCFunction) _wrap_FX_ProgressDialog_setProgress, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ProgressDialog_getMessage", (PyCFunction) _wrap_FX_ProgressDialog_getMessage, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ProgressDialog_setMessage", (PyCFunction) _wrap_FX_ProgressDialog_setMessage, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_ProgressDialog", (PyCFunction) _wrap_new_FX_ProgressDialog, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ProgressDialog_onCmdCancel", (PyCFunction) _wrap_FX_ProgressDialog_onCmdCancel, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ProgressDialog_onCmdGetStringValue", (PyCFunction) _wrap_FX_ProgressDialog_onCmdGetStringValue, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ProgressDialog_onCmdSetStringValue", (PyCFunction) _wrap_FX_ProgressDialog_onCmdSetStringValue, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ProgressDialog_onCmdGetIntValue", (PyCFunction) _wrap_FX_ProgressDialog_onCmdGetIntValue, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ProgressDialog_onCmdSetIntValue", (PyCFunction) _wrap_FX_ProgressDialog_onCmdSetIntValue, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ProgressDialog_onCmdSetValue", (PyCFunction) _wrap_FX_ProgressDialog_onCmdSetValue, METH_VARARGS | METH_KEYWORDS },
	 { "FXInputDialog_deiconify", (PyCFunction) _wrap_FXInputDialog_deiconify, METH_VARARGS | METH_KEYWORDS },
	 { "FXInputDialog_iconify", (PyCFunction) _wrap_FXInputDialog_iconify, METH_VARARGS | METH_KEYWORDS },
	 { "FXInputDialog_show2", (PyCFunction) _wrap_FXInputDialog_show2, METH_VARARGS | METH_KEYWORDS },
	 { "FXInputDialog_setBackColor", (PyCFunction) _wrap_FXInputDialog_setBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FXInputDialog_reparent", (PyCFunction) _wrap_FXInputDialog_reparent, METH_VARARGS | METH_KEYWORDS },
	 { "FXInputDialog_doesSaveUnder", (PyCFunction) _wrap_FXInputDialog_doesSaveUnder, METH_VARARGS | METH_KEYWORDS },
	 { "FXInputDialog_getHeightForWidth", (PyCFunction) _wrap_FXInputDialog_getHeightForWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXInputDialog_getWidthForHeight", (PyCFunction) _wrap_FXInputDialog_getWidthForHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXInputDialog_contains", (PyCFunction) _wrap_FXInputDialog_contains, METH_VARARGS | METH_KEYWORDS },
	 { "FXInputDialog_isComposite", (PyCFunction) _wrap_FXInputDialog_isComposite, METH_VARARGS | METH_KEYWORDS },
	 { "FXInputDialog_position", (PyCFunction) _wrap_FXInputDialog_position, METH_VARARGS | METH_KEYWORDS },
	 { "FXInputDialog_move", (PyCFunction) _wrap_FXInputDialog_move, METH_VARARGS | METH_KEYWORDS },
	 { "FXInputDialog_lower", (PyCFunction) _wrap_FXInputDialog_lower, METH_VARARGS | METH_KEYWORDS },
	 { "FXInputDialog_layout", (PyCFunction) _wrap_FXInputDialog_layout, METH_VARARGS | METH_KEYWORDS },
	 { "FXInputDialog_recalc", (PyCFunction) _wrap_FXInputDialog_recalc, METH_VARARGS | METH_KEYWORDS },
	 { "FXInputDialog_setDefault", (PyCFunction) _wrap_FXInputDialog_setDefault, METH_VARARGS | METH_KEYWORDS },
	 { "FXInputDialog_killFocus", (PyCFunction) _wrap_FXInputDialog_killFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXInputDialog_setFocus", (PyCFunction) _wrap_FXInputDialog_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXInputDialog_canFocus", (PyCFunction) _wrap_FXInputDialog_canFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXInputDialog_disable", (PyCFunction) _wrap_FXInputDialog_disable, METH_VARARGS | METH_KEYWORDS },
	 { "FXInputDialog_enable", (PyCFunction) _wrap_FXInputDialog_enable, METH_VARARGS | METH_KEYWORDS },
	 { "FXInputDialog_hide", (PyCFunction) _wrap_FXInputDialog_hide, METH_VARARGS | METH_KEYWORDS },
	 { "FXInputDialog_show", (PyCFunction) _wrap_FXInputDialog_show, METH_VARARGS | METH_KEYWORDS },
	 { "FXInputDialog_getDefaultHeight", (PyCFunction) _wrap_FXInputDialog_getDefaultHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXInputDialog_getDefaultWidth", (PyCFunction) _wrap_FXInputDialog_getDefaultWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXInputDialog_resize", (PyCFunction) _wrap_FXInputDialog_resize, METH_VARARGS | METH_KEYWORDS },
	 { "FXInputDialog_detach", (PyCFunction) _wrap_FXInputDialog_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXInputDialog_destroy", (PyCFunction) _wrap_FXInputDialog_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXInputDialog_create", (PyCFunction) _wrap_FXInputDialog_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXInputDialog_onDefault", (PyCFunction) _wrap_FXInputDialog_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXInputDialog", (PyCFunction) _wrap_new_FXInputDialog, METH_VARARGS | METH_KEYWORDS },
	 { "FX_InputDialog_getReal", (PyCFunction) _wrap_FX_InputDialog_getReal, METH_VARARGS | METH_KEYWORDS },
	 { "FX_InputDialog_getInteger", (PyCFunction) _wrap_FX_InputDialog_getInteger, METH_VARARGS | METH_KEYWORDS },
	 { "FX_InputDialog_getString", (PyCFunction) _wrap_FX_InputDialog_getString, METH_VARARGS | METH_KEYWORDS },
	 { "FX_InputDialog_execute", (PyCFunction) _wrap_FX_InputDialog_execute, METH_VARARGS | METH_KEYWORDS },
	 { "FX_InputDialog_getLimits", (PyCFunction) _wrap_FX_InputDialog_getLimits, METH_VARARGS | METH_KEYWORDS },
	 { "FX_InputDialog_setLimits", (PyCFunction) _wrap_FX_InputDialog_setLimits, METH_VARARGS | METH_KEYWORDS },
	 { "FX_InputDialog_getNumColumns", (PyCFunction) _wrap_FX_InputDialog_getNumColumns, METH_VARARGS | METH_KEYWORDS },
	 { "FX_InputDialog_setNumColumns", (PyCFunction) _wrap_FX_InputDialog_setNumColumns, METH_VARARGS | METH_KEYWORDS },
	 { "FX_InputDialog_setText", (PyCFunction) _wrap_FX_InputDialog_setText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_InputDialog_getText", (PyCFunction) _wrap_FX_InputDialog_getText, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_InputDialog", (PyCFunction) _wrap_new_FX_InputDialog, METH_VARARGS | METH_KEYWORDS },
	 { "FX_InputDialog_onCmdAccept", (PyCFunction) _wrap_FX_InputDialog_onCmdAccept, METH_VARARGS | METH_KEYWORDS },
	 { "FXSearchDialog_deiconify", (PyCFunction) _wrap_FXSearchDialog_deiconify, METH_VARARGS | METH_KEYWORDS },
	 { "FXSearchDialog_iconify", (PyCFunction) _wrap_FXSearchDialog_iconify, METH_VARARGS | METH_KEYWORDS },
	 { "FXSearchDialog_show2", (PyCFunction) _wrap_FXSearchDialog_show2, METH_VARARGS | METH_KEYWORDS },
	 { "FXSearchDialog_setBackColor", (PyCFunction) _wrap_FXSearchDialog_setBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FXSearchDialog_reparent", (PyCFunction) _wrap_FXSearchDialog_reparent, METH_VARARGS | METH_KEYWORDS },
	 { "FXSearchDialog_doesSaveUnder", (PyCFunction) _wrap_FXSearchDialog_doesSaveUnder, METH_VARARGS | METH_KEYWORDS },
	 { "FXSearchDialog_getHeightForWidth", (PyCFunction) _wrap_FXSearchDialog_getHeightForWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXSearchDialog_getWidthForHeight", (PyCFunction) _wrap_FXSearchDialog_getWidthForHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXSearchDialog_contains", (PyCFunction) _wrap_FXSearchDialog_contains, METH_VARARGS | METH_KEYWORDS },
	 { "FXSearchDialog_isComposite", (PyCFunction) _wrap_FXSearchDialog_isComposite, METH_VARARGS | METH_KEYWORDS },
	 { "FXSearchDialog_position", (PyCFunction) _wrap_FXSearchDialog_position, METH_VARARGS | METH_KEYWORDS },
	 { "FXSearchDialog_move", (PyCFunction) _wrap_FXSearchDialog_move, METH_VARARGS | METH_KEYWORDS },
	 { "FXSearchDialog_lower", (PyCFunction) _wrap_FXSearchDialog_lower, METH_VARARGS | METH_KEYWORDS },
	 { "FXSearchDialog_layout", (PyCFunction) _wrap_FXSearchDialog_layout, METH_VARARGS | METH_KEYWORDS },
	 { "FXSearchDialog_recalc", (PyCFunction) _wrap_FXSearchDialog_recalc, METH_VARARGS | METH_KEYWORDS },
	 { "FXSearchDialog_setDefault", (PyCFunction) _wrap_FXSearchDialog_setDefault, METH_VARARGS | METH_KEYWORDS },
	 { "FXSearchDialog_killFocus", (PyCFunction) _wrap_FXSearchDialog_killFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXSearchDialog_setFocus", (PyCFunction) _wrap_FXSearchDialog_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXSearchDialog_canFocus", (PyCFunction) _wrap_FXSearchDialog_canFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXSearchDialog_disable", (PyCFunction) _wrap_FXSearchDialog_disable, METH_VARARGS | METH_KEYWORDS },
	 { "FXSearchDialog_enable", (PyCFunction) _wrap_FXSearchDialog_enable, METH_VARARGS | METH_KEYWORDS },
	 { "FXSearchDialog_hide", (PyCFunction) _wrap_FXSearchDialog_hide, METH_VARARGS | METH_KEYWORDS },
	 { "FXSearchDialog_show", (PyCFunction) _wrap_FXSearchDialog_show, METH_VARARGS | METH_KEYWORDS },
	 { "FXSearchDialog_getDefaultHeight", (PyCFunction) _wrap_FXSearchDialog_getDefaultHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXSearchDialog_getDefaultWidth", (PyCFunction) _wrap_FXSearchDialog_getDefaultWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXSearchDialog_resize", (PyCFunction) _wrap_FXSearchDialog_resize, METH_VARARGS | METH_KEYWORDS },
	 { "FXSearchDialog_detach", (PyCFunction) _wrap_FXSearchDialog_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXSearchDialog_destroy", (PyCFunction) _wrap_FXSearchDialog_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXSearchDialog_create", (PyCFunction) _wrap_FXSearchDialog_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXSearchDialog_onDefault", (PyCFunction) _wrap_FXSearchDialog_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXSearchDialog", (PyCFunction) _wrap_new_FXSearchDialog, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_SearchDialog", (PyCFunction) _wrap_new_FX_SearchDialog, METH_VARARGS | METH_KEYWORDS },
	 { "FXReplaceDialog_deiconify", (PyCFunction) _wrap_FXReplaceDialog_deiconify, METH_VARARGS | METH_KEYWORDS },
	 { "FXReplaceDialog_iconify", (PyCFunction) _wrap_FXReplaceDialog_iconify, METH_VARARGS | METH_KEYWORDS },
	 { "FXReplaceDialog_show2", (PyCFunction) _wrap_FXReplaceDialog_show2, METH_VARARGS | METH_KEYWORDS },
	 { "FXReplaceDialog_setBackColor", (PyCFunction) _wrap_FXReplaceDialog_setBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FXReplaceDialog_reparent", (PyCFunction) _wrap_FXReplaceDialog_reparent, METH_VARARGS | METH_KEYWORDS },
	 { "FXReplaceDialog_doesSaveUnder", (PyCFunction) _wrap_FXReplaceDialog_doesSaveUnder, METH_VARARGS | METH_KEYWORDS },
	 { "FXReplaceDialog_getHeightForWidth", (PyCFunction) _wrap_FXReplaceDialog_getHeightForWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXReplaceDialog_getWidthForHeight", (PyCFunction) _wrap_FXReplaceDialog_getWidthForHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXReplaceDialog_contains", (PyCFunction) _wrap_FXReplaceDialog_contains, METH_VARARGS | METH_KEYWORDS },
	 { "FXReplaceDialog_isComposite", (PyCFunction) _wrap_FXReplaceDialog_isComposite, METH_VARARGS | METH_KEYWORDS },
	 { "FXReplaceDialog_position", (PyCFunction) _wrap_FXReplaceDialog_position, METH_VARARGS | METH_KEYWORDS },
	 { "FXReplaceDialog_move", (PyCFunction) _wrap_FXReplaceDialog_move, METH_VARARGS | METH_KEYWORDS },
	 { "FXReplaceDialog_lower", (PyCFunction) _wrap_FXReplaceDialog_lower, METH_VARARGS | METH_KEYWORDS },
	 { "FXReplaceDialog_layout", (PyCFunction) _wrap_FXReplaceDialog_layout, METH_VARARGS | METH_KEYWORDS },
	 { "FXReplaceDialog_recalc", (PyCFunction) _wrap_FXReplaceDialog_recalc, METH_VARARGS | METH_KEYWORDS },
	 { "FXReplaceDialog_setDefault", (PyCFunction) _wrap_FXReplaceDialog_setDefault, METH_VARARGS | METH_KEYWORDS },
	 { "FXReplaceDialog_killFocus", (PyCFunction) _wrap_FXReplaceDialog_killFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXReplaceDialog_setFocus", (PyCFunction) _wrap_FXReplaceDialog_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXReplaceDialog_canFocus", (PyCFunction) _wrap_FXReplaceDialog_canFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXReplaceDialog_disable", (PyCFunction) _wrap_FXReplaceDialog_disable, METH_VARARGS | METH_KEYWORDS },
	 { "FXReplaceDialog_enable", (PyCFunction) _wrap_FXReplaceDialog_enable, METH_VARARGS | METH_KEYWORDS },
	 { "FXReplaceDialog_hide", (PyCFunction) _wrap_FXReplaceDialog_hide, METH_VARARGS | METH_KEYWORDS },
	 { "FXReplaceDialog_show", (PyCFunction) _wrap_FXReplaceDialog_show, METH_VARARGS | METH_KEYWORDS },
	 { "FXReplaceDialog_getDefaultHeight", (PyCFunction) _wrap_FXReplaceDialog_getDefaultHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXReplaceDialog_getDefaultWidth", (PyCFunction) _wrap_FXReplaceDialog_getDefaultWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXReplaceDialog_resize", (PyCFunction) _wrap_FXReplaceDialog_resize, METH_VARARGS | METH_KEYWORDS },
	 { "FXReplaceDialog_detach", (PyCFunction) _wrap_FXReplaceDialog_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXReplaceDialog_destroy", (PyCFunction) _wrap_FXReplaceDialog_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXReplaceDialog_create", (PyCFunction) _wrap_FXReplaceDialog_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXReplaceDialog_onDefault", (PyCFunction) _wrap_FXReplaceDialog_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXReplaceDialog", (PyCFunction) _wrap_new_FXReplaceDialog, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ReplaceDialog_getSearchMode", (PyCFunction) _wrap_FX_ReplaceDialog_getSearchMode, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ReplaceDialog_setSearchMode", (PyCFunction) _wrap_FX_ReplaceDialog_setSearchMode, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ReplaceDialog_getReplaceText", (PyCFunction) _wrap_FX_ReplaceDialog_getReplaceText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ReplaceDialog_setReplaceText", (PyCFunction) _wrap_FX_ReplaceDialog_setReplaceText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ReplaceDialog_getSearchText", (PyCFunction) _wrap_FX_ReplaceDialog_getSearchText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ReplaceDialog_setSearchText", (PyCFunction) _wrap_FX_ReplaceDialog_setSearchText, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_ReplaceDialog", (PyCFunction) _wrap_new_FX_ReplaceDialog, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ReplaceDialog_onCmdAccept", (PyCFunction) _wrap_FX_ReplaceDialog_onCmdAccept, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ReplaceDialog_onCmdReplaceHist", (PyCFunction) _wrap_FX_ReplaceDialog_onCmdReplaceHist, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ReplaceDialog_onCmdSearchHist", (PyCFunction) _wrap_FX_ReplaceDialog_onCmdSearchHist, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ReplaceDialog_onReplaceKey", (PyCFunction) _wrap_FX_ReplaceDialog_onReplaceKey, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ReplaceDialog_onSearchKey", (PyCFunction) _wrap_FX_ReplaceDialog_onSearchKey, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ReplaceDialog_onCmdMode", (PyCFunction) _wrap_FX_ReplaceDialog_onCmdMode, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ReplaceDialog_onUpdMode", (PyCFunction) _wrap_FX_ReplaceDialog_onUpdMode, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ReplaceDialog_onCmdDir", (PyCFunction) _wrap_FX_ReplaceDialog_onCmdDir, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ReplaceDialog_onUpdDir", (PyCFunction) _wrap_FX_ReplaceDialog_onUpdDir, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ReplaceDialog_onCmdNext", (PyCFunction) _wrap_FX_ReplaceDialog_onCmdNext, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ReplaceDialog_onCmdAll", (PyCFunction) _wrap_FX_ReplaceDialog_onCmdAll, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileDict_onDefault", (PyCFunction) _wrap_FXFileDict_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXFileDict", (PyCFunction) _wrap_new_FXFileDict, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileDict_findExecBinding", (PyCFunction) _wrap_FX_FileDict_findExecBinding, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileDict_findDirBinding", (PyCFunction) _wrap_FX_FileDict_findDirBinding, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileDict_findFileBinding", (PyCFunction) _wrap_FX_FileDict_findFileBinding, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileDict_associate", (PyCFunction) _wrap_FX_FileDict_associate, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileDict_find", (PyCFunction) _wrap_FX_FileDict_find, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileDict_remove", (PyCFunction) _wrap_FX_FileDict_remove, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileDict_replace", (PyCFunction) _wrap_FX_FileDict_replace, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileDict_getIconPath", (PyCFunction) _wrap_FX_FileDict_getIconPath, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileDict_setIconPath", (PyCFunction) _wrap_FX_FileDict_setIconPath, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileDict_getApp", (PyCFunction) _wrap_FX_FileDict_getApp, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_FileDict", (PyCFunction) _wrap_new_FX_FileDict, METH_VARARGS | METH_KEYWORDS },
	 { "FXIconDict_onDefault", (PyCFunction) _wrap_FXIconDict_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXIconDict", (PyCFunction) _wrap_new_FXIconDict, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconDict_find", (PyCFunction) _wrap_FX_IconDict_find, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconDict_remove", (PyCFunction) _wrap_FX_IconDict_remove, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconDict_insert", (PyCFunction) _wrap_FX_IconDict_insert, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconDict_getIconPath", (PyCFunction) _wrap_FX_IconDict_getIconPath, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconDict_setIconPath", (PyCFunction) _wrap_FX_IconDict_setIconPath, METH_VARARGS | METH_KEYWORDS },
	 { "FX_IconDict_getApp", (PyCFunction) _wrap_FX_IconDict_getApp, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_IconDict", (PyCFunction) _wrap_new_FX_IconDict, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileAssoc_flags_get", (PyCFunction) _wrap_FXFileAssoc_flags_get, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileAssoc_flags_set", (PyCFunction) _wrap_FXFileAssoc_flags_set, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileAssoc_dragtype_get", (PyCFunction) _wrap_FXFileAssoc_dragtype_get, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileAssoc_dragtype_set", (PyCFunction) _wrap_FXFileAssoc_dragtype_set, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileAssoc_miniiconopen_get", (PyCFunction) _wrap_FXFileAssoc_miniiconopen_get, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileAssoc_miniiconopen_set", (PyCFunction) _wrap_FXFileAssoc_miniiconopen_set, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileAssoc_miniicon_get", (PyCFunction) _wrap_FXFileAssoc_miniicon_get, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileAssoc_miniicon_set", (PyCFunction) _wrap_FXFileAssoc_miniicon_set, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileAssoc_bigiconopen_get", (PyCFunction) _wrap_FXFileAssoc_bigiconopen_get, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileAssoc_bigiconopen_set", (PyCFunction) _wrap_FXFileAssoc_bigiconopen_set, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileAssoc_bigicon_get", (PyCFunction) _wrap_FXFileAssoc_bigicon_get, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileAssoc_bigicon_set", (PyCFunction) _wrap_FXFileAssoc_bigicon_set, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileAssoc_mimetype_get", (PyCFunction) _wrap_FXFileAssoc_mimetype_get, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileAssoc_mimetype_set", (PyCFunction) _wrap_FXFileAssoc_mimetype_set, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileAssoc_extension_get", (PyCFunction) _wrap_FXFileAssoc_extension_get, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileAssoc_extension_set", (PyCFunction) _wrap_FXFileAssoc_extension_set, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileAssoc_command_get", (PyCFunction) _wrap_FXFileAssoc_command_get, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileAssoc_command_set", (PyCFunction) _wrap_FXFileAssoc_command_set, METH_VARARGS | METH_KEYWORDS },
	 { "FXMessageBox_deiconify", (PyCFunction) _wrap_FXMessageBox_deiconify, METH_VARARGS | METH_KEYWORDS },
	 { "FXMessageBox_iconify", (PyCFunction) _wrap_FXMessageBox_iconify, METH_VARARGS | METH_KEYWORDS },
	 { "FXMessageBox_show2", (PyCFunction) _wrap_FXMessageBox_show2, METH_VARARGS | METH_KEYWORDS },
	 { "FXMessageBox_setBackColor", (PyCFunction) _wrap_FXMessageBox_setBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FXMessageBox_reparent", (PyCFunction) _wrap_FXMessageBox_reparent, METH_VARARGS | METH_KEYWORDS },
	 { "FXMessageBox_doesSaveUnder", (PyCFunction) _wrap_FXMessageBox_doesSaveUnder, METH_VARARGS | METH_KEYWORDS },
	 { "FXMessageBox_getHeightForWidth", (PyCFunction) _wrap_FXMessageBox_getHeightForWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXMessageBox_getWidthForHeight", (PyCFunction) _wrap_FXMessageBox_getWidthForHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXMessageBox_contains", (PyCFunction) _wrap_FXMessageBox_contains, METH_VARARGS | METH_KEYWORDS },
	 { "FXMessageBox_isComposite", (PyCFunction) _wrap_FXMessageBox_isComposite, METH_VARARGS | METH_KEYWORDS },
	 { "FXMessageBox_position", (PyCFunction) _wrap_FXMessageBox_position, METH_VARARGS | METH_KEYWORDS },
	 { "FXMessageBox_move", (PyCFunction) _wrap_FXMessageBox_move, METH_VARARGS | METH_KEYWORDS },
	 { "FXMessageBox_lower", (PyCFunction) _wrap_FXMessageBox_lower, METH_VARARGS | METH_KEYWORDS },
	 { "FXMessageBox_layout", (PyCFunction) _wrap_FXMessageBox_layout, METH_VARARGS | METH_KEYWORDS },
	 { "FXMessageBox_recalc", (PyCFunction) _wrap_FXMessageBox_recalc, METH_VARARGS | METH_KEYWORDS },
	 { "FXMessageBox_setDefault", (PyCFunction) _wrap_FXMessageBox_setDefault, METH_VARARGS | METH_KEYWORDS },
	 { "FXMessageBox_killFocus", (PyCFunction) _wrap_FXMessageBox_killFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXMessageBox_setFocus", (PyCFunction) _wrap_FXMessageBox_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXMessageBox_canFocus", (PyCFunction) _wrap_FXMessageBox_canFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXMessageBox_disable", (PyCFunction) _wrap_FXMessageBox_disable, METH_VARARGS | METH_KEYWORDS },
	 { "FXMessageBox_enable", (PyCFunction) _wrap_FXMessageBox_enable, METH_VARARGS | METH_KEYWORDS },
	 { "FXMessageBox_hide", (PyCFunction) _wrap_FXMessageBox_hide, METH_VARARGS | METH_KEYWORDS },
	 { "FXMessageBox_show", (PyCFunction) _wrap_FXMessageBox_show, METH_VARARGS | METH_KEYWORDS },
	 { "FXMessageBox_getDefaultHeight", (PyCFunction) _wrap_FXMessageBox_getDefaultHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXMessageBox_getDefaultWidth", (PyCFunction) _wrap_FXMessageBox_getDefaultWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXMessageBox_resize", (PyCFunction) _wrap_FXMessageBox_resize, METH_VARARGS | METH_KEYWORDS },
	 { "FXMessageBox_detach", (PyCFunction) _wrap_FXMessageBox_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXMessageBox_destroy", (PyCFunction) _wrap_FXMessageBox_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXMessageBox_create", (PyCFunction) _wrap_FXMessageBox_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXMessageBox_onDefault", (PyCFunction) _wrap_FXMessageBox_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXMessageBox", (PyCFunction) _wrap_new_FXMessageBox, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_MessageBox", (PyCFunction) _wrap_new_FX_MessageBox, METH_VARARGS | METH_KEYWORDS },
	 { "FX_MessageBox_onCmdCancel", (PyCFunction) _wrap_FX_MessageBox_onCmdCancel, METH_VARARGS | METH_KEYWORDS },
	 { "FX_MessageBox_onCmdClicked", (PyCFunction) _wrap_FX_MessageBox_onCmdClicked, METH_VARARGS | METH_KEYWORDS },
	 { "FXPrintDialog_deiconify", (PyCFunction) _wrap_FXPrintDialog_deiconify, METH_VARARGS | METH_KEYWORDS },
	 { "FXPrintDialog_iconify", (PyCFunction) _wrap_FXPrintDialog_iconify, METH_VARARGS | METH_KEYWORDS },
	 { "FXPrintDialog_show2", (PyCFunction) _wrap_FXPrintDialog_show2, METH_VARARGS | METH_KEYWORDS },
	 { "FXPrintDialog_setBackColor", (PyCFunction) _wrap_FXPrintDialog_setBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FXPrintDialog_reparent", (PyCFunction) _wrap_FXPrintDialog_reparent, METH_VARARGS | METH_KEYWORDS },
	 { "FXPrintDialog_doesSaveUnder", (PyCFunction) _wrap_FXPrintDialog_doesSaveUnder, METH_VARARGS | METH_KEYWORDS },
	 { "FXPrintDialog_getHeightForWidth", (PyCFunction) _wrap_FXPrintDialog_getHeightForWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXPrintDialog_getWidthForHeight", (PyCFunction) _wrap_FXPrintDialog_getWidthForHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXPrintDialog_contains", (PyCFunction) _wrap_FXPrintDialog_contains, METH_VARARGS | METH_KEYWORDS },
	 { "FXPrintDialog_isComposite", (PyCFunction) _wrap_FXPrintDialog_isComposite, METH_VARARGS | METH_KEYWORDS },
	 { "FXPrintDialog_position", (PyCFunction) _wrap_FXPrintDialog_position, METH_VARARGS | METH_KEYWORDS },
	 { "FXPrintDialog_move", (PyCFunction) _wrap_FXPrintDialog_move, METH_VARARGS | METH_KEYWORDS },
	 { "FXPrintDialog_lower", (PyCFunction) _wrap_FXPrintDialog_lower, METH_VARARGS | METH_KEYWORDS },
	 { "FXPrintDialog_layout", (PyCFunction) _wrap_FXPrintDialog_layout, METH_VARARGS | METH_KEYWORDS },
	 { "FXPrintDialog_recalc", (PyCFunction) _wrap_FXPrintDialog_recalc, METH_VARARGS | METH_KEYWORDS },
	 { "FXPrintDialog_setDefault", (PyCFunction) _wrap_FXPrintDialog_setDefault, METH_VARARGS | METH_KEYWORDS },
	 { "FXPrintDialog_killFocus", (PyCFunction) _wrap_FXPrintDialog_killFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXPrintDialog_setFocus", (PyCFunction) _wrap_FXPrintDialog_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXPrintDialog_canFocus", (PyCFunction) _wrap_FXPrintDialog_canFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXPrintDialog_disable", (PyCFunction) _wrap_FXPrintDialog_disable, METH_VARARGS | METH_KEYWORDS },
	 { "FXPrintDialog_enable", (PyCFunction) _wrap_FXPrintDialog_enable, METH_VARARGS | METH_KEYWORDS },
	 { "FXPrintDialog_hide", (PyCFunction) _wrap_FXPrintDialog_hide, METH_VARARGS | METH_KEYWORDS },
	 { "FXPrintDialog_show", (PyCFunction) _wrap_FXPrintDialog_show, METH_VARARGS | METH_KEYWORDS },
	 { "FXPrintDialog_getDefaultHeight", (PyCFunction) _wrap_FXPrintDialog_getDefaultHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXPrintDialog_getDefaultWidth", (PyCFunction) _wrap_FXPrintDialog_getDefaultWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXPrintDialog_resize", (PyCFunction) _wrap_FXPrintDialog_resize, METH_VARARGS | METH_KEYWORDS },
	 { "FXPrintDialog_detach", (PyCFunction) _wrap_FXPrintDialog_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXPrintDialog_destroy", (PyCFunction) _wrap_FXPrintDialog_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXPrintDialog_create", (PyCFunction) _wrap_FXPrintDialog_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXPrintDialog_onDefault", (PyCFunction) _wrap_FXPrintDialog_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXPrintDialog", (PyCFunction) _wrap_new_FXPrintDialog, METH_VARARGS | METH_KEYWORDS },
	 { "delete_FX_PrintDialog", (PyCFunction) _wrap_delete_FX_PrintDialog, METH_VARARGS | METH_KEYWORDS },
	 { "FX_PrintDialog_getPrinter", (PyCFunction) _wrap_FX_PrintDialog_getPrinter, METH_VARARGS | METH_KEYWORDS },
	 { "FX_PrintDialog_setPrinter", (PyCFunction) _wrap_FX_PrintDialog_setPrinter, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_PrintDialog", (PyCFunction) _wrap_new_FX_PrintDialog, METH_VARARGS | METH_KEYWORDS },
	 { "FX_PrintDialog_onUpdMedia", (PyCFunction) _wrap_FX_PrintDialog_onUpdMedia, METH_VARARGS | METH_KEYWORDS },
	 { "FX_PrintDialog_onCmdMedia", (PyCFunction) _wrap_FX_PrintDialog_onCmdMedia, METH_VARARGS | METH_KEYWORDS },
	 { "FX_PrintDialog_onCmdAccept", (PyCFunction) _wrap_FX_PrintDialog_onCmdAccept, METH_VARARGS | METH_KEYWORDS },
	 { "FX_PrintDialog_onUpdPrinterName", (PyCFunction) _wrap_FX_PrintDialog_onUpdPrinterName, METH_VARARGS | METH_KEYWORDS },
	 { "FX_PrintDialog_onCmdPrinterName", (PyCFunction) _wrap_FX_PrintDialog_onCmdPrinterName, METH_VARARGS | METH_KEYWORDS },
	 { "FX_PrintDialog_onUpdFileName", (PyCFunction) _wrap_FX_PrintDialog_onUpdFileName, METH_VARARGS | METH_KEYWORDS },
	 { "FX_PrintDialog_onCmdFileName", (PyCFunction) _wrap_FX_PrintDialog_onCmdFileName, METH_VARARGS | METH_KEYWORDS },
	 { "FX_PrintDialog_onUpdCollateReversed", (PyCFunction) _wrap_FX_PrintDialog_onUpdCollateReversed, METH_VARARGS | METH_KEYWORDS },
	 { "FX_PrintDialog_onCmdCollateReversed", (PyCFunction) _wrap_FX_PrintDialog_onCmdCollateReversed, METH_VARARGS | METH_KEYWORDS },
	 { "FX_PrintDialog_onUpdCollateNormal", (PyCFunction) _wrap_FX_PrintDialog_onUpdCollateNormal, METH_VARARGS | METH_KEYWORDS },
	 { "FX_PrintDialog_onCmdCollateNormal", (PyCFunction) _wrap_FX_PrintDialog_onCmdCollateNormal, METH_VARARGS | METH_KEYWORDS },
	 { "FX_PrintDialog_onUpdLastPage", (PyCFunction) _wrap_FX_PrintDialog_onUpdLastPage, METH_VARARGS | METH_KEYWORDS },
	 { "FX_PrintDialog_onCmdLastPage", (PyCFunction) _wrap_FX_PrintDialog_onCmdLastPage, METH_VARARGS | METH_KEYWORDS },
	 { "FX_PrintDialog_onUpdFirstPage", (PyCFunction) _wrap_FX_PrintDialog_onUpdFirstPage, METH_VARARGS | METH_KEYWORDS },
	 { "FX_PrintDialog_onCmdFirstPage", (PyCFunction) _wrap_FX_PrintDialog_onCmdFirstPage, METH_VARARGS | METH_KEYWORDS },
	 { "FX_PrintDialog_onUpdNumCopies", (PyCFunction) _wrap_FX_PrintDialog_onUpdNumCopies, METH_VARARGS | METH_KEYWORDS },
	 { "FX_PrintDialog_onCmdNumCopies", (PyCFunction) _wrap_FX_PrintDialog_onCmdNumCopies, METH_VARARGS | METH_KEYWORDS },
	 { "FX_PrintDialog_onUpdGray", (PyCFunction) _wrap_FX_PrintDialog_onUpdGray, METH_VARARGS | METH_KEYWORDS },
	 { "FX_PrintDialog_onCmdGray", (PyCFunction) _wrap_FX_PrintDialog_onCmdGray, METH_VARARGS | METH_KEYWORDS },
	 { "FX_PrintDialog_onUpdColor", (PyCFunction) _wrap_FX_PrintDialog_onUpdColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_PrintDialog_onCmdColor", (PyCFunction) _wrap_FX_PrintDialog_onCmdColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_PrintDialog_onUpdPages", (PyCFunction) _wrap_FX_PrintDialog_onUpdPages, METH_VARARGS | METH_KEYWORDS },
	 { "FX_PrintDialog_onCmdPages", (PyCFunction) _wrap_FX_PrintDialog_onCmdPages, METH_VARARGS | METH_KEYWORDS },
	 { "FX_PrintDialog_onUpdLandscape", (PyCFunction) _wrap_FX_PrintDialog_onUpdLandscape, METH_VARARGS | METH_KEYWORDS },
	 { "FX_PrintDialog_onCmdLandscape", (PyCFunction) _wrap_FX_PrintDialog_onCmdLandscape, METH_VARARGS | METH_KEYWORDS },
	 { "FX_PrintDialog_onUpdPortrait", (PyCFunction) _wrap_FX_PrintDialog_onUpdPortrait, METH_VARARGS | METH_KEYWORDS },
	 { "FX_PrintDialog_onCmdPortrait", (PyCFunction) _wrap_FX_PrintDialog_onCmdPortrait, METH_VARARGS | METH_KEYWORDS },
	 { "FX_PrintDialog_onUpdProps", (PyCFunction) _wrap_FX_PrintDialog_onUpdProps, METH_VARARGS | METH_KEYWORDS },
	 { "FX_PrintDialog_onCmdProps", (PyCFunction) _wrap_FX_PrintDialog_onCmdProps, METH_VARARGS | METH_KEYWORDS },
	 { "FX_PrintDialog_onUpdBrowse", (PyCFunction) _wrap_FX_PrintDialog_onUpdBrowse, METH_VARARGS | METH_KEYWORDS },
	 { "FX_PrintDialog_onCmdBrowse", (PyCFunction) _wrap_FX_PrintDialog_onCmdBrowse, METH_VARARGS | METH_KEYWORDS },
	 { "FX_PrintDialog_onUpdToFile", (PyCFunction) _wrap_FX_PrintDialog_onUpdToFile, METH_VARARGS | METH_KEYWORDS },
	 { "FX_PrintDialog_onCmdToFile", (PyCFunction) _wrap_FX_PrintDialog_onCmdToFile, METH_VARARGS | METH_KEYWORDS },
	 { "FX_PrintDialog_onUpdToPrinter", (PyCFunction) _wrap_FX_PrintDialog_onUpdToPrinter, METH_VARARGS | METH_KEYWORDS },
	 { "FX_PrintDialog_onCmdToPrinter", (PyCFunction) _wrap_FX_PrintDialog_onCmdToPrinter, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirDialog_deiconify", (PyCFunction) _wrap_FXDirDialog_deiconify, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirDialog_iconify", (PyCFunction) _wrap_FXDirDialog_iconify, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirDialog_show2", (PyCFunction) _wrap_FXDirDialog_show2, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirDialog_setBackColor", (PyCFunction) _wrap_FXDirDialog_setBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirDialog_reparent", (PyCFunction) _wrap_FXDirDialog_reparent, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirDialog_doesSaveUnder", (PyCFunction) _wrap_FXDirDialog_doesSaveUnder, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirDialog_getHeightForWidth", (PyCFunction) _wrap_FXDirDialog_getHeightForWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirDialog_getWidthForHeight", (PyCFunction) _wrap_FXDirDialog_getWidthForHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirDialog_contains", (PyCFunction) _wrap_FXDirDialog_contains, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirDialog_isComposite", (PyCFunction) _wrap_FXDirDialog_isComposite, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirDialog_position", (PyCFunction) _wrap_FXDirDialog_position, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirDialog_move", (PyCFunction) _wrap_FXDirDialog_move, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirDialog_lower", (PyCFunction) _wrap_FXDirDialog_lower, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirDialog_layout", (PyCFunction) _wrap_FXDirDialog_layout, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirDialog_recalc", (PyCFunction) _wrap_FXDirDialog_recalc, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirDialog_setDefault", (PyCFunction) _wrap_FXDirDialog_setDefault, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirDialog_killFocus", (PyCFunction) _wrap_FXDirDialog_killFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirDialog_setFocus", (PyCFunction) _wrap_FXDirDialog_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirDialog_canFocus", (PyCFunction) _wrap_FXDirDialog_canFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirDialog_disable", (PyCFunction) _wrap_FXDirDialog_disable, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirDialog_enable", (PyCFunction) _wrap_FXDirDialog_enable, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirDialog_hide", (PyCFunction) _wrap_FXDirDialog_hide, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirDialog_show", (PyCFunction) _wrap_FXDirDialog_show, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirDialog_getDefaultHeight", (PyCFunction) _wrap_FXDirDialog_getDefaultHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirDialog_getDefaultWidth", (PyCFunction) _wrap_FXDirDialog_getDefaultWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirDialog_resize", (PyCFunction) _wrap_FXDirDialog_resize, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirDialog_detach", (PyCFunction) _wrap_FXDirDialog_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirDialog_destroy", (PyCFunction) _wrap_FXDirDialog_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirDialog_create", (PyCFunction) _wrap_FXDirDialog_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirDialog_onDefault", (PyCFunction) _wrap_FXDirDialog_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXDirDialog", (PyCFunction) _wrap_new_FXDirDialog, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DirDialog_getDirBoxStyle", (PyCFunction) _wrap_FX_DirDialog_getDirBoxStyle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DirDialog_setDirBoxStyle", (PyCFunction) _wrap_FX_DirDialog_setDirBoxStyle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DirDialog_getDirectory", (PyCFunction) _wrap_FX_DirDialog_getDirectory, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DirDialog_setDirectory", (PyCFunction) _wrap_FX_DirDialog_setDirectory, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_DirDialog", (PyCFunction) _wrap_new_FX_DirDialog, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirSelector_setBackColor", (PyCFunction) _wrap_FXDirSelector_setBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirSelector_reparent", (PyCFunction) _wrap_FXDirSelector_reparent, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirSelector_doesSaveUnder", (PyCFunction) _wrap_FXDirSelector_doesSaveUnder, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirSelector_getHeightForWidth", (PyCFunction) _wrap_FXDirSelector_getHeightForWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirSelector_getWidthForHeight", (PyCFunction) _wrap_FXDirSelector_getWidthForHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirSelector_contains", (PyCFunction) _wrap_FXDirSelector_contains, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirSelector_isComposite", (PyCFunction) _wrap_FXDirSelector_isComposite, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirSelector_position", (PyCFunction) _wrap_FXDirSelector_position, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirSelector_move", (PyCFunction) _wrap_FXDirSelector_move, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirSelector_lower", (PyCFunction) _wrap_FXDirSelector_lower, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirSelector_layout", (PyCFunction) _wrap_FXDirSelector_layout, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirSelector_recalc", (PyCFunction) _wrap_FXDirSelector_recalc, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirSelector_setDefault", (PyCFunction) _wrap_FXDirSelector_setDefault, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirSelector_killFocus", (PyCFunction) _wrap_FXDirSelector_killFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirSelector_setFocus", (PyCFunction) _wrap_FXDirSelector_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirSelector_canFocus", (PyCFunction) _wrap_FXDirSelector_canFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirSelector_disable", (PyCFunction) _wrap_FXDirSelector_disable, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirSelector_enable", (PyCFunction) _wrap_FXDirSelector_enable, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirSelector_hide", (PyCFunction) _wrap_FXDirSelector_hide, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirSelector_show", (PyCFunction) _wrap_FXDirSelector_show, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirSelector_getDefaultHeight", (PyCFunction) _wrap_FXDirSelector_getDefaultHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirSelector_getDefaultWidth", (PyCFunction) _wrap_FXDirSelector_getDefaultWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirSelector_resize", (PyCFunction) _wrap_FXDirSelector_resize, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirSelector_detach", (PyCFunction) _wrap_FXDirSelector_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirSelector_destroy", (PyCFunction) _wrap_FXDirSelector_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirSelector_create", (PyCFunction) _wrap_FXDirSelector_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirSelector_onDefault", (PyCFunction) _wrap_FXDirSelector_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXDirSelector", (PyCFunction) _wrap_new_FXDirSelector, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DirSelector_getDirBoxStyle", (PyCFunction) _wrap_FX_DirSelector_getDirBoxStyle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DirSelector_setDirBoxStyle", (PyCFunction) _wrap_FX_DirSelector_setDirBoxStyle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DirSelector_getDirectory", (PyCFunction) _wrap_FX_DirSelector_getDirectory, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DirSelector_setDirectory", (PyCFunction) _wrap_FX_DirSelector_setDirectory, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DirSelector_cancelButton", (PyCFunction) _wrap_FX_DirSelector_cancelButton, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DirSelector_acceptButton", (PyCFunction) _wrap_FX_DirSelector_acceptButton, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_DirSelector", (PyCFunction) _wrap_new_FX_DirSelector, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DirSelector_onCmdDriveChanged", (PyCFunction) _wrap_FX_DirSelector_onCmdDriveChanged, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DirSelector_onCmdOpened", (PyCFunction) _wrap_FX_DirSelector_onCmdOpened, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DirSelector_onCmdName", (PyCFunction) _wrap_FX_DirSelector_onCmdName, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontDialog_deiconify", (PyCFunction) _wrap_FXFontDialog_deiconify, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontDialog_iconify", (PyCFunction) _wrap_FXFontDialog_iconify, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontDialog_show2", (PyCFunction) _wrap_FXFontDialog_show2, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontDialog_setBackColor", (PyCFunction) _wrap_FXFontDialog_setBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontDialog_reparent", (PyCFunction) _wrap_FXFontDialog_reparent, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontDialog_doesSaveUnder", (PyCFunction) _wrap_FXFontDialog_doesSaveUnder, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontDialog_getHeightForWidth", (PyCFunction) _wrap_FXFontDialog_getHeightForWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontDialog_getWidthForHeight", (PyCFunction) _wrap_FXFontDialog_getWidthForHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontDialog_contains", (PyCFunction) _wrap_FXFontDialog_contains, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontDialog_isComposite", (PyCFunction) _wrap_FXFontDialog_isComposite, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontDialog_position", (PyCFunction) _wrap_FXFontDialog_position, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontDialog_move", (PyCFunction) _wrap_FXFontDialog_move, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontDialog_lower", (PyCFunction) _wrap_FXFontDialog_lower, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontDialog_layout", (PyCFunction) _wrap_FXFontDialog_layout, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontDialog_recalc", (PyCFunction) _wrap_FXFontDialog_recalc, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontDialog_setDefault", (PyCFunction) _wrap_FXFontDialog_setDefault, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontDialog_killFocus", (PyCFunction) _wrap_FXFontDialog_killFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontDialog_setFocus", (PyCFunction) _wrap_FXFontDialog_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontDialog_canFocus", (PyCFunction) _wrap_FXFontDialog_canFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontDialog_disable", (PyCFunction) _wrap_FXFontDialog_disable, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontDialog_enable", (PyCFunction) _wrap_FXFontDialog_enable, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontDialog_hide", (PyCFunction) _wrap_FXFontDialog_hide, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontDialog_show", (PyCFunction) _wrap_FXFontDialog_show, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontDialog_getDefaultHeight", (PyCFunction) _wrap_FXFontDialog_getDefaultHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontDialog_getDefaultWidth", (PyCFunction) _wrap_FXFontDialog_getDefaultWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontDialog_resize", (PyCFunction) _wrap_FXFontDialog_resize, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontDialog_detach", (PyCFunction) _wrap_FXFontDialog_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontDialog_destroy", (PyCFunction) _wrap_FXFontDialog_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontDialog_create", (PyCFunction) _wrap_FXFontDialog_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontDialog_onDefault", (PyCFunction) _wrap_FXFontDialog_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXFontDialog", (PyCFunction) _wrap_new_FXFontDialog, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FontDialog_getFontSelection", (PyCFunction) _wrap_FX_FontDialog_getFontSelection, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FontDialog_setFontSelection", (PyCFunction) _wrap_FX_FontDialog_setFontSelection, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_FontDialog", (PyCFunction) _wrap_new_FX_FontDialog, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontSelector_setBackColor", (PyCFunction) _wrap_FXFontSelector_setBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontSelector_reparent", (PyCFunction) _wrap_FXFontSelector_reparent, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontSelector_doesSaveUnder", (PyCFunction) _wrap_FXFontSelector_doesSaveUnder, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontSelector_getHeightForWidth", (PyCFunction) _wrap_FXFontSelector_getHeightForWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontSelector_getWidthForHeight", (PyCFunction) _wrap_FXFontSelector_getWidthForHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontSelector_contains", (PyCFunction) _wrap_FXFontSelector_contains, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontSelector_isComposite", (PyCFunction) _wrap_FXFontSelector_isComposite, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontSelector_position", (PyCFunction) _wrap_FXFontSelector_position, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontSelector_move", (PyCFunction) _wrap_FXFontSelector_move, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontSelector_lower", (PyCFunction) _wrap_FXFontSelector_lower, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontSelector_layout", (PyCFunction) _wrap_FXFontSelector_layout, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontSelector_recalc", (PyCFunction) _wrap_FXFontSelector_recalc, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontSelector_setDefault", (PyCFunction) _wrap_FXFontSelector_setDefault, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontSelector_killFocus", (PyCFunction) _wrap_FXFontSelector_killFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontSelector_setFocus", (PyCFunction) _wrap_FXFontSelector_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontSelector_canFocus", (PyCFunction) _wrap_FXFontSelector_canFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontSelector_disable", (PyCFunction) _wrap_FXFontSelector_disable, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontSelector_enable", (PyCFunction) _wrap_FXFontSelector_enable, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontSelector_hide", (PyCFunction) _wrap_FXFontSelector_hide, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontSelector_show", (PyCFunction) _wrap_FXFontSelector_show, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontSelector_getDefaultHeight", (PyCFunction) _wrap_FXFontSelector_getDefaultHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontSelector_getDefaultWidth", (PyCFunction) _wrap_FXFontSelector_getDefaultWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontSelector_resize", (PyCFunction) _wrap_FXFontSelector_resize, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontSelector_detach", (PyCFunction) _wrap_FXFontSelector_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontSelector_destroy", (PyCFunction) _wrap_FXFontSelector_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontSelector_create", (PyCFunction) _wrap_FXFontSelector_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXFontSelector_onDefault", (PyCFunction) _wrap_FXFontSelector_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXFontSelector", (PyCFunction) _wrap_new_FXFontSelector, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FontSelector_getFontSelection", (PyCFunction) _wrap_FX_FontSelector_getFontSelection, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FontSelector_setFontSelection", (PyCFunction) _wrap_FX_FontSelector_setFontSelection, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FontSelector_cancelButton", (PyCFunction) _wrap_FX_FontSelector_cancelButton, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FontSelector_acceptButton", (PyCFunction) _wrap_FX_FontSelector_acceptButton, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_FontSelector", (PyCFunction) _wrap_new_FX_FontSelector, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FontSelector_onUpdAllFonts", (PyCFunction) _wrap_FX_FontSelector_onUpdAllFonts, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FontSelector_onCmdAllFonts", (PyCFunction) _wrap_FX_FontSelector_onCmdAllFonts, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FontSelector_onUpdScalable", (PyCFunction) _wrap_FX_FontSelector_onUpdScalable, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FontSelector_onCmdScalable", (PyCFunction) _wrap_FX_FontSelector_onCmdScalable, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FontSelector_onUpdPitch", (PyCFunction) _wrap_FX_FontSelector_onUpdPitch, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FontSelector_onCmdPitch", (PyCFunction) _wrap_FX_FontSelector_onCmdPitch, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FontSelector_onUpdSetWidth", (PyCFunction) _wrap_FX_FontSelector_onUpdSetWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FontSelector_onCmdSetWidth", (PyCFunction) _wrap_FX_FontSelector_onCmdSetWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FontSelector_onUpdCharset", (PyCFunction) _wrap_FX_FontSelector_onUpdCharset, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FontSelector_onCmdCharset", (PyCFunction) _wrap_FX_FontSelector_onCmdCharset, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FontSelector_onCmdSizeText", (PyCFunction) _wrap_FX_FontSelector_onCmdSizeText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FontSelector_onCmdSize", (PyCFunction) _wrap_FX_FontSelector_onCmdSize, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FontSelector_onCmdStyleText", (PyCFunction) _wrap_FX_FontSelector_onCmdStyleText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FontSelector_onCmdStyle", (PyCFunction) _wrap_FX_FontSelector_onCmdStyle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FontSelector_onCmdWeight", (PyCFunction) _wrap_FX_FontSelector_onCmdWeight, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FontSelector_onCmdFamily", (PyCFunction) _wrap_FX_FontSelector_onCmdFamily, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorDialog_deiconify", (PyCFunction) _wrap_FXColorDialog_deiconify, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorDialog_iconify", (PyCFunction) _wrap_FXColorDialog_iconify, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorDialog_show2", (PyCFunction) _wrap_FXColorDialog_show2, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorDialog_setBackColor", (PyCFunction) _wrap_FXColorDialog_setBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorDialog_reparent", (PyCFunction) _wrap_FXColorDialog_reparent, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorDialog_doesSaveUnder", (PyCFunction) _wrap_FXColorDialog_doesSaveUnder, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorDialog_getHeightForWidth", (PyCFunction) _wrap_FXColorDialog_getHeightForWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorDialog_getWidthForHeight", (PyCFunction) _wrap_FXColorDialog_getWidthForHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorDialog_contains", (PyCFunction) _wrap_FXColorDialog_contains, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorDialog_isComposite", (PyCFunction) _wrap_FXColorDialog_isComposite, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorDialog_position", (PyCFunction) _wrap_FXColorDialog_position, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorDialog_move", (PyCFunction) _wrap_FXColorDialog_move, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorDialog_lower", (PyCFunction) _wrap_FXColorDialog_lower, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorDialog_layout", (PyCFunction) _wrap_FXColorDialog_layout, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorDialog_recalc", (PyCFunction) _wrap_FXColorDialog_recalc, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorDialog_setDefault", (PyCFunction) _wrap_FXColorDialog_setDefault, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorDialog_killFocus", (PyCFunction) _wrap_FXColorDialog_killFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorDialog_setFocus", (PyCFunction) _wrap_FXColorDialog_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorDialog_canFocus", (PyCFunction) _wrap_FXColorDialog_canFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorDialog_disable", (PyCFunction) _wrap_FXColorDialog_disable, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorDialog_enable", (PyCFunction) _wrap_FXColorDialog_enable, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorDialog_hide", (PyCFunction) _wrap_FXColorDialog_hide, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorDialog_show", (PyCFunction) _wrap_FXColorDialog_show, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorDialog_getDefaultHeight", (PyCFunction) _wrap_FXColorDialog_getDefaultHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorDialog_getDefaultWidth", (PyCFunction) _wrap_FXColorDialog_getDefaultWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorDialog_resize", (PyCFunction) _wrap_FXColorDialog_resize, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorDialog_detach", (PyCFunction) _wrap_FXColorDialog_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorDialog_destroy", (PyCFunction) _wrap_FXColorDialog_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorDialog_create", (PyCFunction) _wrap_FXColorDialog_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorDialog_onDefault", (PyCFunction) _wrap_FXColorDialog_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXColorDialog", (PyCFunction) _wrap_new_FXColorDialog, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorDialog_setOpaqueOnly", (PyCFunction) _wrap_FX_ColorDialog_setOpaqueOnly, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorDialog_isOpaqueOnly", (PyCFunction) _wrap_FX_ColorDialog_isOpaqueOnly, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorDialog_getRGBA", (PyCFunction) _wrap_FX_ColorDialog_getRGBA, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorDialog_setRGBA", (PyCFunction) _wrap_FX_ColorDialog_setRGBA, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_ColorDialog", (PyCFunction) _wrap_new_FX_ColorDialog, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorDialog_onCmdColor", (PyCFunction) _wrap_FX_ColorDialog_onCmdColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorDialog_onChgColor", (PyCFunction) _wrap_FX_ColorDialog_onChgColor, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorSelector_setBackColor", (PyCFunction) _wrap_FXColorSelector_setBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorSelector_reparent", (PyCFunction) _wrap_FXColorSelector_reparent, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorSelector_doesSaveUnder", (PyCFunction) _wrap_FXColorSelector_doesSaveUnder, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorSelector_getHeightForWidth", (PyCFunction) _wrap_FXColorSelector_getHeightForWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorSelector_getWidthForHeight", (PyCFunction) _wrap_FXColorSelector_getWidthForHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorSelector_contains", (PyCFunction) _wrap_FXColorSelector_contains, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorSelector_isComposite", (PyCFunction) _wrap_FXColorSelector_isComposite, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorSelector_position", (PyCFunction) _wrap_FXColorSelector_position, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorSelector_move", (PyCFunction) _wrap_FXColorSelector_move, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorSelector_lower", (PyCFunction) _wrap_FXColorSelector_lower, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorSelector_layout", (PyCFunction) _wrap_FXColorSelector_layout, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorSelector_recalc", (PyCFunction) _wrap_FXColorSelector_recalc, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorSelector_setDefault", (PyCFunction) _wrap_FXColorSelector_setDefault, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorSelector_killFocus", (PyCFunction) _wrap_FXColorSelector_killFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorSelector_setFocus", (PyCFunction) _wrap_FXColorSelector_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorSelector_canFocus", (PyCFunction) _wrap_FXColorSelector_canFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorSelector_disable", (PyCFunction) _wrap_FXColorSelector_disable, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorSelector_enable", (PyCFunction) _wrap_FXColorSelector_enable, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorSelector_hide", (PyCFunction) _wrap_FXColorSelector_hide, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorSelector_show", (PyCFunction) _wrap_FXColorSelector_show, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorSelector_getDefaultHeight", (PyCFunction) _wrap_FXColorSelector_getDefaultHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorSelector_getDefaultWidth", (PyCFunction) _wrap_FXColorSelector_getDefaultWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorSelector_resize", (PyCFunction) _wrap_FXColorSelector_resize, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorSelector_detach", (PyCFunction) _wrap_FXColorSelector_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorSelector_destroy", (PyCFunction) _wrap_FXColorSelector_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorSelector_create", (PyCFunction) _wrap_FXColorSelector_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXColorSelector_onDefault", (PyCFunction) _wrap_FXColorSelector_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXColorSelector", (PyCFunction) _wrap_new_FXColorSelector, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorSelector_setOpaqueOnly", (PyCFunction) _wrap_FX_ColorSelector_setOpaqueOnly, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorSelector_isOpaqueOnly", (PyCFunction) _wrap_FX_ColorSelector_isOpaqueOnly, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorSelector_getRGBA", (PyCFunction) _wrap_FX_ColorSelector_getRGBA, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorSelector_setRGBA", (PyCFunction) _wrap_FX_ColorSelector_setRGBA, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorSelector_cancelButton", (PyCFunction) _wrap_FX_ColorSelector_cancelButton, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorSelector_acceptButton", (PyCFunction) _wrap_FX_ColorSelector_acceptButton, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_ColorSelector", (PyCFunction) _wrap_new_FX_ColorSelector, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorSelector_onCmdColorPick", (PyCFunction) _wrap_FX_ColorSelector_onCmdColorPick, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorSelector_onUpdBar", (PyCFunction) _wrap_FX_ColorSelector_onUpdBar, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorSelector_onCmdBar", (PyCFunction) _wrap_FX_ColorSelector_onCmdBar, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorSelector_onUpdWheel", (PyCFunction) _wrap_FX_ColorSelector_onUpdWheel, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorSelector_onCmdWheel", (PyCFunction) _wrap_FX_ColorSelector_onCmdWheel, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorSelector_onUpdAlphaLabel", (PyCFunction) _wrap_FX_ColorSelector_onUpdAlphaLabel, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorSelector_onUpdAlphaText", (PyCFunction) _wrap_FX_ColorSelector_onUpdAlphaText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorSelector_onCmdAlphaText", (PyCFunction) _wrap_FX_ColorSelector_onCmdAlphaText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorSelector_onUpdAlphaSlider", (PyCFunction) _wrap_FX_ColorSelector_onUpdAlphaSlider, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorSelector_onCmdAlphaSlider", (PyCFunction) _wrap_FX_ColorSelector_onCmdAlphaSlider, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorSelector_onCmdActivePane", (PyCFunction) _wrap_FX_ColorSelector_onCmdActivePane, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorSelector_onCmdSetValue", (PyCFunction) _wrap_FX_ColorSelector_onCmdSetValue, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorSelector_onChgCustomWell", (PyCFunction) _wrap_FX_ColorSelector_onChgCustomWell, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorSelector_onCmdCustomWell", (PyCFunction) _wrap_FX_ColorSelector_onCmdCustomWell, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorSelector_onCmdList", (PyCFunction) _wrap_FX_ColorSelector_onCmdList, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorSelector_onUpdCMYText", (PyCFunction) _wrap_FX_ColorSelector_onUpdCMYText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorSelector_onCmdCMYText", (PyCFunction) _wrap_FX_ColorSelector_onCmdCMYText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorSelector_onUpdCMYSlider", (PyCFunction) _wrap_FX_ColorSelector_onUpdCMYSlider, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorSelector_onCmdCMYSlider", (PyCFunction) _wrap_FX_ColorSelector_onCmdCMYSlider, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorSelector_onUpdHSVText", (PyCFunction) _wrap_FX_ColorSelector_onUpdHSVText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorSelector_onCmdHSVText", (PyCFunction) _wrap_FX_ColorSelector_onCmdHSVText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorSelector_onUpdHSVSlider", (PyCFunction) _wrap_FX_ColorSelector_onUpdHSVSlider, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorSelector_onCmdHSVSlider", (PyCFunction) _wrap_FX_ColorSelector_onCmdHSVSlider, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorSelector_onUpdRGBText", (PyCFunction) _wrap_FX_ColorSelector_onUpdRGBText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorSelector_onCmdRGBText", (PyCFunction) _wrap_FX_ColorSelector_onCmdRGBText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorSelector_onUpdRGBSlider", (PyCFunction) _wrap_FX_ColorSelector_onUpdRGBSlider, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorSelector_onCmdRGBSlider", (PyCFunction) _wrap_FX_ColorSelector_onCmdRGBSlider, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorSelector_onChgWell", (PyCFunction) _wrap_FX_ColorSelector_onChgWell, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorSelector_onCmdWell", (PyCFunction) _wrap_FX_ColorSelector_onCmdWell, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorSelector_onChgColor", (PyCFunction) _wrap_FX_ColorSelector_onChgColor, METH_VARARGS | METH_KEYWORDS },
	 { "FX_ColorSelector_onCmdColor", (PyCFunction) _wrap_FX_ColorSelector_onCmdColor, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileDialog_deiconify", (PyCFunction) _wrap_FXFileDialog_deiconify, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileDialog_iconify", (PyCFunction) _wrap_FXFileDialog_iconify, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileDialog_show2", (PyCFunction) _wrap_FXFileDialog_show2, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileDialog_setBackColor", (PyCFunction) _wrap_FXFileDialog_setBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileDialog_reparent", (PyCFunction) _wrap_FXFileDialog_reparent, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileDialog_doesSaveUnder", (PyCFunction) _wrap_FXFileDialog_doesSaveUnder, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileDialog_getHeightForWidth", (PyCFunction) _wrap_FXFileDialog_getHeightForWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileDialog_getWidthForHeight", (PyCFunction) _wrap_FXFileDialog_getWidthForHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileDialog_contains", (PyCFunction) _wrap_FXFileDialog_contains, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileDialog_isComposite", (PyCFunction) _wrap_FXFileDialog_isComposite, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileDialog_position", (PyCFunction) _wrap_FXFileDialog_position, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileDialog_move", (PyCFunction) _wrap_FXFileDialog_move, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileDialog_lower", (PyCFunction) _wrap_FXFileDialog_lower, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileDialog_layout", (PyCFunction) _wrap_FXFileDialog_layout, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileDialog_recalc", (PyCFunction) _wrap_FXFileDialog_recalc, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileDialog_setDefault", (PyCFunction) _wrap_FXFileDialog_setDefault, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileDialog_killFocus", (PyCFunction) _wrap_FXFileDialog_killFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileDialog_setFocus", (PyCFunction) _wrap_FXFileDialog_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileDialog_canFocus", (PyCFunction) _wrap_FXFileDialog_canFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileDialog_disable", (PyCFunction) _wrap_FXFileDialog_disable, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileDialog_enable", (PyCFunction) _wrap_FXFileDialog_enable, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileDialog_hide", (PyCFunction) _wrap_FXFileDialog_hide, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileDialog_show", (PyCFunction) _wrap_FXFileDialog_show, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileDialog_getDefaultHeight", (PyCFunction) _wrap_FXFileDialog_getDefaultHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileDialog_getDefaultWidth", (PyCFunction) _wrap_FXFileDialog_getDefaultWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileDialog_resize", (PyCFunction) _wrap_FXFileDialog_resize, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileDialog_detach", (PyCFunction) _wrap_FXFileDialog_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileDialog_destroy", (PyCFunction) _wrap_FXFileDialog_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileDialog_create", (PyCFunction) _wrap_FXFileDialog_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileDialog_onDefault", (PyCFunction) _wrap_FXFileDialog_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXFileDialog", (PyCFunction) _wrap_new_FXFileDialog, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileDialog_getOpenDirectory", (PyCFunction) _wrap_FX_FileDialog_getOpenDirectory, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileDialog_getSaveFilename", (PyCFunction) _wrap_FX_FileDialog_getSaveFilename, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileDialog_getOpenFilenames", (PyCFunction) _wrap_FX_FileDialog_getOpenFilenames, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileDialog_getOpenFilename", (PyCFunction) _wrap_FX_FileDialog_getOpenFilename, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileDialog_getReadOnly", (PyCFunction) _wrap_FX_FileDialog_getReadOnly, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileDialog_setReadOnly", (PyCFunction) _wrap_FX_FileDialog_setReadOnly, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileDialog_shownReadOnly", (PyCFunction) _wrap_FX_FileDialog_shownReadOnly, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileDialog_showReadOnly", (PyCFunction) _wrap_FX_FileDialog_showReadOnly, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileDialog_getSelectMode", (PyCFunction) _wrap_FX_FileDialog_getSelectMode, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileDialog_setSelectMode", (PyCFunction) _wrap_FX_FileDialog_setSelectMode, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileDialog_getFileBoxStyle", (PyCFunction) _wrap_FX_FileDialog_getFileBoxStyle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileDialog_setFileBoxStyle", (PyCFunction) _wrap_FX_FileDialog_setFileBoxStyle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileDialog_getItemSpace", (PyCFunction) _wrap_FX_FileDialog_getItemSpace, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileDialog_setItemSpace", (PyCFunction) _wrap_FX_FileDialog_setItemSpace, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileDialog_setPatternText", (PyCFunction) _wrap_FX_FileDialog_setPatternText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileDialog_getPatternText", (PyCFunction) _wrap_FX_FileDialog_getPatternText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileDialog_getCurrentPattern", (PyCFunction) _wrap_FX_FileDialog_getCurrentPattern, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileDialog_setCurrentPattern", (PyCFunction) _wrap_FX_FileDialog_setCurrentPattern, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileDialog_setPatternList", (PyCFunction) _wrap_FX_FileDialog_setPatternList, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileDialog_getDirectory", (PyCFunction) _wrap_FX_FileDialog_getDirectory, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileDialog_setDirectory", (PyCFunction) _wrap_FX_FileDialog_setDirectory, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileDialog_getPattern", (PyCFunction) _wrap_FX_FileDialog_getPattern, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileDialog_setPattern", (PyCFunction) _wrap_FX_FileDialog_setPattern, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileDialog_getFilenames", (PyCFunction) _wrap_FX_FileDialog_getFilenames, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileDialog_getFilename", (PyCFunction) _wrap_FX_FileDialog_getFilename, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileDialog_setFilename", (PyCFunction) _wrap_FX_FileDialog_setFilename, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_FileDialog", (PyCFunction) _wrap_new_FX_FileDialog, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileSelector_setBackColor", (PyCFunction) _wrap_FXFileSelector_setBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileSelector_reparent", (PyCFunction) _wrap_FXFileSelector_reparent, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileSelector_doesSaveUnder", (PyCFunction) _wrap_FXFileSelector_doesSaveUnder, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileSelector_getHeightForWidth", (PyCFunction) _wrap_FXFileSelector_getHeightForWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileSelector_getWidthForHeight", (PyCFunction) _wrap_FXFileSelector_getWidthForHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileSelector_contains", (PyCFunction) _wrap_FXFileSelector_contains, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileSelector_isComposite", (PyCFunction) _wrap_FXFileSelector_isComposite, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileSelector_position", (PyCFunction) _wrap_FXFileSelector_position, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileSelector_move", (PyCFunction) _wrap_FXFileSelector_move, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileSelector_lower", (PyCFunction) _wrap_FXFileSelector_lower, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileSelector_layout", (PyCFunction) _wrap_FXFileSelector_layout, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileSelector_recalc", (PyCFunction) _wrap_FXFileSelector_recalc, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileSelector_setDefault", (PyCFunction) _wrap_FXFileSelector_setDefault, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileSelector_killFocus", (PyCFunction) _wrap_FXFileSelector_killFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileSelector_setFocus", (PyCFunction) _wrap_FXFileSelector_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileSelector_canFocus", (PyCFunction) _wrap_FXFileSelector_canFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileSelector_disable", (PyCFunction) _wrap_FXFileSelector_disable, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileSelector_enable", (PyCFunction) _wrap_FXFileSelector_enable, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileSelector_hide", (PyCFunction) _wrap_FXFileSelector_hide, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileSelector_show", (PyCFunction) _wrap_FXFileSelector_show, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileSelector_getDefaultHeight", (PyCFunction) _wrap_FXFileSelector_getDefaultHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileSelector_getDefaultWidth", (PyCFunction) _wrap_FXFileSelector_getDefaultWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileSelector_resize", (PyCFunction) _wrap_FXFileSelector_resize, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileSelector_detach", (PyCFunction) _wrap_FXFileSelector_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileSelector_destroy", (PyCFunction) _wrap_FXFileSelector_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileSelector_create", (PyCFunction) _wrap_FXFileSelector_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileSelector_onDefault", (PyCFunction) _wrap_FXFileSelector_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXFileSelector", (PyCFunction) _wrap_new_FXFileSelector, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_getReadOnly", (PyCFunction) _wrap_FX_FileSelector_getReadOnly, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_setReadOnly", (PyCFunction) _wrap_FX_FileSelector_setReadOnly, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_shownReadOnly", (PyCFunction) _wrap_FX_FileSelector_shownReadOnly, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_showReadOnly", (PyCFunction) _wrap_FX_FileSelector_showReadOnly, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_getSelectMode", (PyCFunction) _wrap_FX_FileSelector_getSelectMode, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_setSelectMode", (PyCFunction) _wrap_FX_FileSelector_setSelectMode, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_getFileBoxStyle", (PyCFunction) _wrap_FX_FileSelector_getFileBoxStyle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_setFileBoxStyle", (PyCFunction) _wrap_FX_FileSelector_setFileBoxStyle, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_getItemSpace", (PyCFunction) _wrap_FX_FileSelector_getItemSpace, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_setItemSpace", (PyCFunction) _wrap_FX_FileSelector_setItemSpace, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_setPatternText", (PyCFunction) _wrap_FX_FileSelector_setPatternText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_getPatternText", (PyCFunction) _wrap_FX_FileSelector_getPatternText, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_getCurrentPattern", (PyCFunction) _wrap_FX_FileSelector_getCurrentPattern, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_setCurrentPattern", (PyCFunction) _wrap_FX_FileSelector_setCurrentPattern, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_getDirectory", (PyCFunction) _wrap_FX_FileSelector_getDirectory, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_setDirectory", (PyCFunction) _wrap_FX_FileSelector_setDirectory, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_setPatternList", (PyCFunction) _wrap_FX_FileSelector_setPatternList, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_getPattern", (PyCFunction) _wrap_FX_FileSelector_getPattern, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_setPattern", (PyCFunction) _wrap_FX_FileSelector_setPattern, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_getFilenames", (PyCFunction) _wrap_FX_FileSelector_getFilenames, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_getFilename", (PyCFunction) _wrap_FX_FileSelector_getFilename, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_setFilename", (PyCFunction) _wrap_FX_FileSelector_setFilename, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_cancelButton", (PyCFunction) _wrap_FX_FileSelector_cancelButton, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_acceptButton", (PyCFunction) _wrap_FX_FileSelector_acceptButton, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_FileSelector", (PyCFunction) _wrap_new_FX_FileSelector, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_onPopupMenu", (PyCFunction) _wrap_FX_FileSelector_onPopupMenu, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_onUpdSelected", (PyCFunction) _wrap_FX_FileSelector_onUpdSelected, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_onCmdDelete", (PyCFunction) _wrap_FX_FileSelector_onCmdDelete, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_onCmdLink", (PyCFunction) _wrap_FX_FileSelector_onCmdLink, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_onCmdCopy", (PyCFunction) _wrap_FX_FileSelector_onCmdCopy, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_onCmdMove", (PyCFunction) _wrap_FX_FileSelector_onCmdMove, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_onUpdNew", (PyCFunction) _wrap_FX_FileSelector_onUpdNew, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_onCmdNew", (PyCFunction) _wrap_FX_FileSelector_onCmdNew, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_onCmdVisit", (PyCFunction) _wrap_FX_FileSelector_onCmdVisit, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_onCmdBookmark", (PyCFunction) _wrap_FX_FileSelector_onCmdBookmark, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_onCmdWork", (PyCFunction) _wrap_FX_FileSelector_onCmdWork, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_onCmdHome", (PyCFunction) _wrap_FX_FileSelector_onCmdHome, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_onCmdDirTree", (PyCFunction) _wrap_FX_FileSelector_onCmdDirTree, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_onUpdDirectoryUp", (PyCFunction) _wrap_FX_FileSelector_onUpdDirectoryUp, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_onCmdDirectoryUp", (PyCFunction) _wrap_FX_FileSelector_onCmdDirectoryUp, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_onCmdItemDeselected", (PyCFunction) _wrap_FX_FileSelector_onCmdItemDeselected, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_onCmdItemSelected", (PyCFunction) _wrap_FX_FileSelector_onCmdItemSelected, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_onCmdItemDblClicked", (PyCFunction) _wrap_FX_FileSelector_onCmdItemDblClicked, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_onCmdFilter", (PyCFunction) _wrap_FX_FileSelector_onCmdFilter, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileSelector_onCmdAccept", (PyCFunction) _wrap_FX_FileSelector_onCmdAccept, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileList_moveContents", (PyCFunction) _wrap_FXFileList_moveContents, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileList_getViewportHeight", (PyCFunction) _wrap_FXFileList_getViewportHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileList_getViewportWidth", (PyCFunction) _wrap_FXFileList_getViewportWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileList_getContentHeight", (PyCFunction) _wrap_FXFileList_getContentHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileList_getContentWidth", (PyCFunction) _wrap_FXFileList_getContentWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileList_setBackColor", (PyCFunction) _wrap_FXFileList_setBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileList_reparent", (PyCFunction) _wrap_FXFileList_reparent, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileList_doesSaveUnder", (PyCFunction) _wrap_FXFileList_doesSaveUnder, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileList_getHeightForWidth", (PyCFunction) _wrap_FXFileList_getHeightForWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileList_getWidthForHeight", (PyCFunction) _wrap_FXFileList_getWidthForHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileList_contains", (PyCFunction) _wrap_FXFileList_contains, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileList_isComposite", (PyCFunction) _wrap_FXFileList_isComposite, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileList_position", (PyCFunction) _wrap_FXFileList_position, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileList_move", (PyCFunction) _wrap_FXFileList_move, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileList_lower", (PyCFunction) _wrap_FXFileList_lower, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileList_layout", (PyCFunction) _wrap_FXFileList_layout, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileList_recalc", (PyCFunction) _wrap_FXFileList_recalc, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileList_setDefault", (PyCFunction) _wrap_FXFileList_setDefault, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileList_killFocus", (PyCFunction) _wrap_FXFileList_killFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileList_setFocus", (PyCFunction) _wrap_FXFileList_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileList_canFocus", (PyCFunction) _wrap_FXFileList_canFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileList_disable", (PyCFunction) _wrap_FXFileList_disable, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileList_enable", (PyCFunction) _wrap_FXFileList_enable, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileList_hide", (PyCFunction) _wrap_FXFileList_hide, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileList_show", (PyCFunction) _wrap_FXFileList_show, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileList_getDefaultHeight", (PyCFunction) _wrap_FXFileList_getDefaultHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileList_getDefaultWidth", (PyCFunction) _wrap_FXFileList_getDefaultWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileList_resize", (PyCFunction) _wrap_FXFileList_resize, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileList_detach", (PyCFunction) _wrap_FXFileList_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileList_destroy", (PyCFunction) _wrap_FXFileList_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileList_create", (PyCFunction) _wrap_FXFileList_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileList_onDefault", (PyCFunction) _wrap_FXFileList_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXFileList", (PyCFunction) _wrap_new_FXFileList, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_showOnlyDirectories2", (PyCFunction) _wrap_FX_FileList_showOnlyDirectories2, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_showOnlyDirectories", (PyCFunction) _wrap_FX_FileList_showOnlyDirectories, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_getAssociations", (PyCFunction) _wrap_FX_FileList_getAssociations, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_setAssociations", (PyCFunction) _wrap_FX_FileList_setAssociations, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_showHiddenFiles2", (PyCFunction) _wrap_FX_FileList_showHiddenFiles2, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_showHiddenFiles", (PyCFunction) _wrap_FX_FileList_showHiddenFiles, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_setMatchMode", (PyCFunction) _wrap_FX_FileList_setMatchMode, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_getMatchMode", (PyCFunction) _wrap_FX_FileList_getMatchMode, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_getItemAssoc", (PyCFunction) _wrap_FX_FileList_getItemAssoc, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_getItemPathname", (PyCFunction) _wrap_FX_FileList_getItemPathname, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_getItemFilename", (PyCFunction) _wrap_FX_FileList_getItemFilename, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_isItemExecutable", (PyCFunction) _wrap_FX_FileList_isItemExecutable, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_isItemFile", (PyCFunction) _wrap_FX_FileList_isItemFile, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_isItemDirectory", (PyCFunction) _wrap_FX_FileList_isItemDirectory, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_getPattern", (PyCFunction) _wrap_FX_FileList_getPattern, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_setPattern", (PyCFunction) _wrap_FX_FileList_setPattern, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_getDirectory", (PyCFunction) _wrap_FX_FileList_getDirectory, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_setDirectory", (PyCFunction) _wrap_FX_FileList_setDirectory, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_getCurrentFile", (PyCFunction) _wrap_FX_FileList_getCurrentFile, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_setCurrentFile", (PyCFunction) _wrap_FX_FileList_setCurrentFile, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_FileList", (PyCFunction) _wrap_new_FX_FileList, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onUpdHeader", (PyCFunction) _wrap_FX_FileList_onUpdHeader, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onCmdHeader", (PyCFunction) _wrap_FX_FileList_onCmdHeader, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onUpdHideHidden", (PyCFunction) _wrap_FX_FileList_onUpdHideHidden, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onCmdHideHidden", (PyCFunction) _wrap_FX_FileList_onCmdHideHidden, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onUpdShowHidden", (PyCFunction) _wrap_FX_FileList_onUpdShowHidden, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onCmdShowHidden", (PyCFunction) _wrap_FX_FileList_onCmdShowHidden, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onUpdToggleHidden", (PyCFunction) _wrap_FX_FileList_onUpdToggleHidden, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onCmdToggleHidden", (PyCFunction) _wrap_FX_FileList_onCmdToggleHidden, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onUpdSetDirectory", (PyCFunction) _wrap_FX_FileList_onUpdSetDirectory, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onCmdSetDirectory", (PyCFunction) _wrap_FX_FileList_onCmdSetDirectory, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onUpdSetPattern", (PyCFunction) _wrap_FX_FileList_onUpdSetPattern, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onCmdSetPattern", (PyCFunction) _wrap_FX_FileList_onCmdSetPattern, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onUpdSortReverse", (PyCFunction) _wrap_FX_FileList_onUpdSortReverse, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onCmdSortReverse", (PyCFunction) _wrap_FX_FileList_onCmdSortReverse, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onUpdSortByGroup", (PyCFunction) _wrap_FX_FileList_onUpdSortByGroup, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onCmdSortByGroup", (PyCFunction) _wrap_FX_FileList_onCmdSortByGroup, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onUpdSortByUser", (PyCFunction) _wrap_FX_FileList_onUpdSortByUser, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onCmdSortByUser", (PyCFunction) _wrap_FX_FileList_onCmdSortByUser, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onUpdSortByTime", (PyCFunction) _wrap_FX_FileList_onUpdSortByTime, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onCmdSortByTime", (PyCFunction) _wrap_FX_FileList_onCmdSortByTime, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onUpdSortBySize", (PyCFunction) _wrap_FX_FileList_onUpdSortBySize, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onCmdSortBySize", (PyCFunction) _wrap_FX_FileList_onCmdSortBySize, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onUpdSortByType", (PyCFunction) _wrap_FX_FileList_onUpdSortByType, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onCmdSortByType", (PyCFunction) _wrap_FX_FileList_onCmdSortByType, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onUpdSortByName", (PyCFunction) _wrap_FX_FileList_onUpdSortByName, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onCmdSortByName", (PyCFunction) _wrap_FX_FileList_onCmdSortByName, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onUpdDirectoryUp", (PyCFunction) _wrap_FX_FileList_onUpdDirectoryUp, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onCmdDirectoryUp", (PyCFunction) _wrap_FX_FileList_onCmdDirectoryUp, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onCmdSetStringValue", (PyCFunction) _wrap_FX_FileList_onCmdSetStringValue, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onCmdGetStringValue", (PyCFunction) _wrap_FX_FileList_onCmdGetStringValue, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onCmdSetValue", (PyCFunction) _wrap_FX_FileList_onCmdSetValue, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onDragged", (PyCFunction) _wrap_FX_FileList_onDragged, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onEndDrag", (PyCFunction) _wrap_FX_FileList_onEndDrag, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onBeginDrag", (PyCFunction) _wrap_FX_FileList_onBeginDrag, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onDNDRequest", (PyCFunction) _wrap_FX_FileList_onDNDRequest, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onDNDDrop", (PyCFunction) _wrap_FX_FileList_onDNDDrop, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onDNDMotion", (PyCFunction) _wrap_FX_FileList_onDNDMotion, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onDNDLeave", (PyCFunction) _wrap_FX_FileList_onDNDLeave, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onDNDEnter", (PyCFunction) _wrap_FX_FileList_onDNDEnter, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onOpenTimer", (PyCFunction) _wrap_FX_FileList_onOpenTimer, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileList_onRefreshTimer", (PyCFunction) _wrap_FX_FileList_onRefreshTimer, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileItem_destroy", (PyCFunction) _wrap_FXFileItem_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileItem_detach", (PyCFunction) _wrap_FXFileItem_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileItem_create", (PyCFunction) _wrap_FXFileItem_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileItem_getHeight", (PyCFunction) _wrap_FXFileItem_getHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileItem_getWidth", (PyCFunction) _wrap_FXFileItem_getWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileItem_setIconOwned", (PyCFunction) _wrap_FXFileItem_setIconOwned, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileItem_setDraggable", (PyCFunction) _wrap_FXFileItem_setDraggable, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileItem_setEnabled", (PyCFunction) _wrap_FXFileItem_setEnabled, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileItem_setSelected", (PyCFunction) _wrap_FXFileItem_setSelected, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileItem_setFocus", (PyCFunction) _wrap_FXFileItem_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileItem_setMiniIcon", (PyCFunction) _wrap_FXFileItem_setMiniIcon, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileItem_setBigIcon", (PyCFunction) _wrap_FXFileItem_setBigIcon, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileItem_setText", (PyCFunction) _wrap_FXFileItem_setText, METH_VARARGS | METH_KEYWORDS },
	 { "FXFileItem_onDefault", (PyCFunction) _wrap_FXFileItem_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXFileItem", (PyCFunction) _wrap_new_FXFileItem, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileItem_getDate", (PyCFunction) _wrap_FX_FileItem_getDate, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileItem_getSize", (PyCFunction) _wrap_FX_FileItem_getSize, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileItem_getAssoc", (PyCFunction) _wrap_FX_FileItem_getAssoc, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileItem_isSocket", (PyCFunction) _wrap_FX_FileItem_isSocket, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileItem_isFifo", (PyCFunction) _wrap_FX_FileItem_isFifo, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileItem_isBlockdev", (PyCFunction) _wrap_FX_FileItem_isBlockdev, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileItem_isChardev", (PyCFunction) _wrap_FX_FileItem_isChardev, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileItem_isSymlink", (PyCFunction) _wrap_FX_FileItem_isSymlink, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileItem_isExecutable", (PyCFunction) _wrap_FX_FileItem_isExecutable, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileItem_isDirectory", (PyCFunction) _wrap_FX_FileItem_isDirectory, METH_VARARGS | METH_KEYWORDS },
	 { "FX_FileItem_isFile", (PyCFunction) _wrap_FX_FileItem_isFile, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_FileItem", (PyCFunction) _wrap_new_FX_FileItem, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirBox_setBackColor", (PyCFunction) _wrap_FXDirBox_setBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirBox_reparent", (PyCFunction) _wrap_FXDirBox_reparent, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirBox_doesSaveUnder", (PyCFunction) _wrap_FXDirBox_doesSaveUnder, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirBox_getHeightForWidth", (PyCFunction) _wrap_FXDirBox_getHeightForWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirBox_getWidthForHeight", (PyCFunction) _wrap_FXDirBox_getWidthForHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirBox_contains", (PyCFunction) _wrap_FXDirBox_contains, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirBox_isComposite", (PyCFunction) _wrap_FXDirBox_isComposite, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirBox_position", (PyCFunction) _wrap_FXDirBox_position, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirBox_move", (PyCFunction) _wrap_FXDirBox_move, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirBox_lower", (PyCFunction) _wrap_FXDirBox_lower, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirBox_layout", (PyCFunction) _wrap_FXDirBox_layout, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirBox_recalc", (PyCFunction) _wrap_FXDirBox_recalc, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirBox_setDefault", (PyCFunction) _wrap_FXDirBox_setDefault, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirBox_killFocus", (PyCFunction) _wrap_FXDirBox_killFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirBox_setFocus", (PyCFunction) _wrap_FXDirBox_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirBox_canFocus", (PyCFunction) _wrap_FXDirBox_canFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirBox_disable", (PyCFunction) _wrap_FXDirBox_disable, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirBox_enable", (PyCFunction) _wrap_FXDirBox_enable, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirBox_hide", (PyCFunction) _wrap_FXDirBox_hide, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirBox_show", (PyCFunction) _wrap_FXDirBox_show, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirBox_getDefaultHeight", (PyCFunction) _wrap_FXDirBox_getDefaultHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirBox_getDefaultWidth", (PyCFunction) _wrap_FXDirBox_getDefaultWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirBox_resize", (PyCFunction) _wrap_FXDirBox_resize, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirBox_detach", (PyCFunction) _wrap_FXDirBox_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirBox_destroy", (PyCFunction) _wrap_FXDirBox_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirBox_create", (PyCFunction) _wrap_FXDirBox_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXDirBox_onDefault", (PyCFunction) _wrap_FXDirBox_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "new_FXDirBox", (PyCFunction) _wrap_new_FXDirBox, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DirBox_getDirectory", (PyCFunction) _wrap_FX_DirBox_getDirectory, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DirBox_setDirectory", (PyCFunction) _wrap_FX_DirBox_setDirectory, METH_VARARGS | METH_KEYWORDS },
	 { "new_FX_DirBox", (PyCFunction) _wrap_new_FX_DirBox, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DirBox_onCmdGetStringValue", (PyCFunction) _wrap_FX_DirBox_onCmdGetStringValue, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DirBox_onCmdSetStringValue", (PyCFunction) _wrap_FX_DirBox_onCmdSetStringValue, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DirBox_onCmdSetValue", (PyCFunction) _wrap_FX_DirBox_onCmdSetValue, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DirBox_onCommand", (PyCFunction) _wrap_FX_DirBox_onCommand, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DirBox_onChanged", (PyCFunction) _wrap_FX_DirBox_onChanged, METH_VARARGS | METH_KEYWORDS },
	 { "FXDialogBox_deiconify", (PyCFunction) _wrap_FXDialogBox_deiconify, METH_VARARGS | METH_KEYWORDS },
	 { "FXDialogBox_iconify", (PyCFunction) _wrap_FXDialogBox_iconify, METH_VARARGS | METH_KEYWORDS },
	 { "FXDialogBox_show2", (PyCFunction) _wrap_FXDialogBox_show2, METH_VARARGS | METH_KEYWORDS },
	 { "FXDialogBox_setBackColor", (PyCFunction) _wrap_FXDialogBox_setBackColor, METH_VARARGS | METH_KEYWORDS },
	 { "FXDialogBox_reparent", (PyCFunction) _wrap_FXDialogBox_reparent, METH_VARARGS | METH_KEYWORDS },
	 { "FXDialogBox_doesSaveUnder", (PyCFunction) _wrap_FXDialogBox_doesSaveUnder, METH_VARARGS | METH_KEYWORDS },
	 { "FXDialogBox_getHeightForWidth", (PyCFunction) _wrap_FXDialogBox_getHeightForWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXDialogBox_getWidthForHeight", (PyCFunction) _wrap_FXDialogBox_getWidthForHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXDialogBox_contains", (PyCFunction) _wrap_FXDialogBox_contains, METH_VARARGS | METH_KEYWORDS },
	 { "FXDialogBox_isComposite", (PyCFunction) _wrap_FXDialogBox_isComposite, METH_VARARGS | METH_KEYWORDS },
	 { "FXDialogBox_position", (PyCFunction) _wrap_FXDialogBox_position, METH_VARARGS | METH_KEYWORDS },
	 { "FXDialogBox_move", (PyCFunction) _wrap_FXDialogBox_move, METH_VARARGS | METH_KEYWORDS },
	 { "FXDialogBox_lower", (PyCFunction) _wrap_FXDialogBox_lower, METH_VARARGS | METH_KEYWORDS },
	 { "FXDialogBox_layout", (PyCFunction) _wrap_FXDialogBox_layout, METH_VARARGS | METH_KEYWORDS },
	 { "FXDialogBox_recalc", (PyCFunction) _wrap_FXDialogBox_recalc, METH_VARARGS | METH_KEYWORDS },
	 { "FXDialogBox_setDefault", (PyCFunction) _wrap_FXDialogBox_setDefault, METH_VARARGS | METH_KEYWORDS },
	 { "FXDialogBox_killFocus", (PyCFunction) _wrap_FXDialogBox_killFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXDialogBox_setFocus", (PyCFunction) _wrap_FXDialogBox_setFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXDialogBox_canFocus", (PyCFunction) _wrap_FXDialogBox_canFocus, METH_VARARGS | METH_KEYWORDS },
	 { "FXDialogBox_disable", (PyCFunction) _wrap_FXDialogBox_disable, METH_VARARGS | METH_KEYWORDS },
	 { "FXDialogBox_enable", (PyCFunction) _wrap_FXDialogBox_enable, METH_VARARGS | METH_KEYWORDS },
	 { "FXDialogBox_hide", (PyCFunction) _wrap_FXDialogBox_hide, METH_VARARGS | METH_KEYWORDS },
	 { "FXDialogBox_show", (PyCFunction) _wrap_FXDialogBox_show, METH_VARARGS | METH_KEYWORDS },
	 { "FXDialogBox_getDefaultHeight", (PyCFunction) _wrap_FXDialogBox_getDefaultHeight, METH_VARARGS | METH_KEYWORDS },
	 { "FXDialogBox_getDefaultWidth", (PyCFunction) _wrap_FXDialogBox_getDefaultWidth, METH_VARARGS | METH_KEYWORDS },
	 { "FXDialogBox_resize", (PyCFunction) _wrap_FXDialogBox_resize, METH_VARARGS | METH_KEYWORDS },
	 { "FXDialogBox_detach", (PyCFunction) _wrap_FXDialogBox_detach, METH_VARARGS | METH_KEYWORDS },
	 { "FXDialogBox_destroy", (PyCFunction) _wrap_FXDialogBox_destroy, METH_VARARGS | METH_KEYWORDS },
	 { "FXDialogBox_create", (PyCFunction) _wrap_FXDialogBox_create, METH_VARARGS | METH_KEYWORDS },
	 { "FXDialogBox_onDefault", (PyCFunction) _wrap_FXDialogBox_onDefault, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DialogBox_execute", (PyCFunction) _wrap_FX_DialogBox_execute, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DialogBox_onCmdCancel", (PyCFunction) _wrap_FX_DialogBox_onCmdCancel, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DialogBox_onCmdAccept", (PyCFunction) _wrap_FX_DialogBox_onCmdAccept, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DialogBox_onClose", (PyCFunction) _wrap_FX_DialogBox_onClose, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DialogBox_onKeyRelease", (PyCFunction) _wrap_FX_DialogBox_onKeyRelease, METH_VARARGS | METH_KEYWORDS },
	 { "FX_DialogBox_onKeyPress", (PyCFunction) _wrap_FX_DialogBox_onKeyPress, METH_VARARGS | METH_KEYWORDS },
	 { "showModalInformationBox", (PyCFunction) _wrap_showModalInformationBox, METH_VARARGS | METH_KEYWORDS },
	 { "showModalQuestionBox", (PyCFunction) _wrap_showModalQuestionBox, METH_VARARGS | METH_KEYWORDS },
	 { "showModalWarningBox", (PyCFunction) _wrap_showModalWarningBox, METH_VARARGS | METH_KEYWORDS },
	 { "showModalErrorBox", (PyCFunction) _wrap_showModalErrorBox, METH_VARARGS | METH_KEYWORDS },
	 { "CreateFreeDialogBox", (PyCFunction) _wrap_CreateFreeDialogBox, METH_VARARGS | METH_KEYWORDS },
	 { "CreateOwnedDialogBox", (PyCFunction) _wrap_CreateOwnedDialogBox, METH_VARARGS | METH_KEYWORDS },
	 { NULL, NULL }
};
#ifdef __cplusplus
}
#endif
/*
 * This table is used by the pointer type-checker
 */
static struct { char *n1; char *n2; void *(*pcnv)(void *); } _swig_mapping[] = {
    { "_class_FXPyBMPImage","_FXPyBMPImage",0},
    { "_class_FXPyICOImage","_FXPyICOImage",0},
    { "_FXPyDelegator","_class_FXPyDelegator",0},
    { "_FX4Splitter","_class_FX4Splitter",0},
    { "_class_FXButton","_FXButton",0},
    { "_FXPyRadioButton","_class_FXPyRadioButton",0},
    { "_FXOption","_class_FXOption",0},
    { "_class_FXPyStatusbar","_FXPyStatusbar",0},
    { "_signed_long","_FXTime",0},
    { "_signed_long","_long",0},
    { "_class_FXPyPCXImage","_FXPyPCXImage",0},
    { "_class_FXPyToolbarTab","_FXPyToolbarTab",0},
    { "_class_FXColorSelector","_class_FXPyColorSelector",SwigFXPyColorSelectorToFXColorSelector},
    { "_class_FXColorSelector","_FXPyColorSelector",SwigFXPyColorSelectorToFXColorSelector},
    { "_class_FXColorSelector","_FXColorSelector",0},
    { "_class_FXTIFIcon","_FXTIFIcon",0},
    { "_FXPyHorizontalFrame","_class_FXPyHorizontalFrame",0},
    { "_double","_FXdouble",0},
    { "_FXPyObject","_class_FXPyObject",0},
    { "_FXPyGIFIcon","_class_FXPyGIFIcon",0},
    { "_FXBMPIcon","_class_FXBMPIcon",0},
    { "_FXICOIcon","_class_FXICOIcon",0},
    { "_class_FXList","_FXList",0},
    { "_FXTreeItem","_class_FXTreeItem",0},
    { "_class_FXSettings","_FXSettings",0},
    { "_class_FXRegistry","_FXRegistry",0},
    { "_class_FXMainWindow","_FXMainWindow",0},
    { "_class_FXPyOption","_FXPyOption",0},
    { "_FXTreeList","_class_FXTreeList",0},
    { "_FXDirBox","_class_FXPyDirBox",SwigFXPyDirBoxToFXDirBox},
    { "_FXDirBox","_FXPyDirBox",SwigFXPyDirBoxToFXDirBox},
    { "_FXDirBox","_class_FXDirBox",0},
    { "_FXFileDict","_class_FXPyFileDict",SwigFXPyFileDictToFXFileDict},
    { "_FXFileDict","_FXPyFileDict",SwigFXPyFileDictToFXFileDict},
    { "_FXFileDict","_class_FXFileDict",0},
    { "_FXPySpinner","_class_FXPySpinner",0},
    { "_class_FXColorBar","_FXColorBar",0},
    { "_FXTopWindow","_class_FXPyProgressDialog",SwigFXPyProgressDialogToFXTopWindow},
    { "_FXTopWindow","_FXPyProgressDialog",SwigFXPyProgressDialogToFXTopWindow},
    { "_FXTopWindow","_class_FXProgressDialog",SwigFXProgressDialogToFXTopWindow},
    { "_FXTopWindow","_FXProgressDialog",SwigFXProgressDialogToFXTopWindow},
    { "_FXTopWindow","_class_FXPyInputDialog",SwigFXPyInputDialogToFXTopWindow},
    { "_FXTopWindow","_FXPyInputDialog",SwigFXPyInputDialogToFXTopWindow},
    { "_FXTopWindow","_class_FXInputDialog",SwigFXInputDialogToFXTopWindow},
    { "_FXTopWindow","_FXInputDialog",SwigFXInputDialogToFXTopWindow},
    { "_FXTopWindow","_class_FXPySearchDialog",SwigFXPySearchDialogToFXTopWindow},
    { "_FXTopWindow","_FXPySearchDialog",SwigFXPySearchDialogToFXTopWindow},
    { "_FXTopWindow","_class_FXSearchDialog",SwigFXSearchDialogToFXTopWindow},
    { "_FXTopWindow","_FXSearchDialog",SwigFXSearchDialogToFXTopWindow},
    { "_FXTopWindow","_class_FXPyReplaceDialog",SwigFXPyReplaceDialogToFXTopWindow},
    { "_FXTopWindow","_FXPyReplaceDialog",SwigFXPyReplaceDialogToFXTopWindow},
    { "_FXTopWindow","_class_FXReplaceDialog",SwigFXReplaceDialogToFXTopWindow},
    { "_FXTopWindow","_FXReplaceDialog",SwigFXReplaceDialogToFXTopWindow},
    { "_FXTopWindow","_class_FXPyMessageBox",SwigFXPyMessageBoxToFXTopWindow},
    { "_FXTopWindow","_FXPyMessageBox",SwigFXPyMessageBoxToFXTopWindow},
    { "_FXTopWindow","_class_FXMessageBox",SwigFXMessageBoxToFXTopWindow},
    { "_FXTopWindow","_FXMessageBox",SwigFXMessageBoxToFXTopWindow},
    { "_FXTopWindow","_class_FXPyPrintDialog",SwigFXPyPrintDialogToFXTopWindow},
    { "_FXTopWindow","_FXPyPrintDialog",SwigFXPyPrintDialogToFXTopWindow},
    { "_FXTopWindow","_class_FXPrintDialog",SwigFXPrintDialogToFXTopWindow},
    { "_FXTopWindow","_FXPrintDialog",SwigFXPrintDialogToFXTopWindow},
    { "_FXTopWindow","_class_FXPyDirDialog",SwigFXPyDirDialogToFXTopWindow},
    { "_FXTopWindow","_FXPyDirDialog",SwigFXPyDirDialogToFXTopWindow},
    { "_FXTopWindow","_class_FXDirDialog",SwigFXDirDialogToFXTopWindow},
    { "_FXTopWindow","_FXDirDialog",SwigFXDirDialogToFXTopWindow},
    { "_FXTopWindow","_class_FXPyFontDialog",SwigFXPyFontDialogToFXTopWindow},
    { "_FXTopWindow","_FXPyFontDialog",SwigFXPyFontDialogToFXTopWindow},
    { "_FXTopWindow","_class_FXFontDialog",SwigFXFontDialogToFXTopWindow},
    { "_FXTopWindow","_FXFontDialog",SwigFXFontDialogToFXTopWindow},
    { "_FXTopWindow","_class_FXPyColorDialog",SwigFXPyColorDialogToFXTopWindow},
    { "_FXTopWindow","_FXPyColorDialog",SwigFXPyColorDialogToFXTopWindow},
    { "_FXTopWindow","_class_FXColorDialog",SwigFXColorDialogToFXTopWindow},
    { "_FXTopWindow","_FXColorDialog",SwigFXColorDialogToFXTopWindow},
    { "_FXTopWindow","_class_FXPyFileDialog",SwigFXPyFileDialogToFXTopWindow},
    { "_FXTopWindow","_FXPyFileDialog",SwigFXPyFileDialogToFXTopWindow},
    { "_FXTopWindow","_class_FXFileDialog",SwigFXFileDialogToFXTopWindow},
    { "_FXTopWindow","_FXFileDialog",SwigFXFileDialogToFXTopWindow},
    { "_FXTopWindow","_class_FXPyDialogBox",SwigFXPyDialogBoxToFXTopWindow},
    { "_FXTopWindow","_FXPyDialogBox",SwigFXPyDialogBoxToFXTopWindow},
    { "_FXTopWindow","_class_FXDialogBox",SwigFXDialogBoxToFXTopWindow},
    { "_FXTopWindow","_FXDialogBox",SwigFXDialogBoxToFXTopWindow},
    { "_FXTopWindow","_class_FXTopWindow",0},
    { "_FXPySwitcher","_class_FXPySwitcher",0},
    { "_FXShutterItem","_class_FXShutterItem",0},
    { "_FXTextField","_class_FXTextField",0},
    { "_class_FXTooltip","_FXTooltip",0},
    { "_class_FXVisual","_FXVisual",0},
    { "_FXIcon","_class_FXIcon",0},
    { "_FXPyMatrix","_class_FXPyMatrix",0},
    { "_class_FXStatusbar","_FXStatusbar",0},
    { "_class_FXPyDirBox","_FXPyDirBox",0},
    { "_FXDirSelector","_class_FXPyDirSelector",SwigFXPyDirSelectorToFXDirSelector},
    { "_FXDirSelector","_FXPyDirSelector",SwigFXPyDirSelectorToFXDirSelector},
    { "_FXDirSelector","_class_FXDirSelector",0},
    { "_class_FXDCPrint","_FXDCPrint",0},
    { "_class_FXGroupBox","_FXGroupBox",0},
    { "_FXToolbar","_class_FXToolbar",0},
    { "_class_FXIconItem","_class_FXPyFileItem",SwigFXPyFileItemToFXIconItem},
    { "_class_FXIconItem","_FXPyFileItem",SwigFXPyFileItemToFXIconItem},
    { "_class_FXIconItem","_class_FXFileItem",SwigFXFileItemToFXIconItem},
    { "_class_FXIconItem","_FXFileItem",SwigFXFileItemToFXIconItem},
    { "_class_FXIconItem","_FXIconItem",0},
    { "_FXTGAImage","_class_FXTGAImage",0},
    { "_class_FXPyTGAIcon","_FXPyTGAIcon",0},
    { "_FXPyStream","_class_FXPyStream",0},
    { "_class_FXPyDict","_FXPyDict",0},
    { "_class_FXRegion","_FXRegion",0},
    { "_FXShutter","_class_FXShutter",0},
    { "_class_FXPyToggleButton","_FXPyToggleButton",0},
    { "_class_FXTabBook","_FXTabBook",0},
    { "_class_FXIconList","_class_FXPyFileList",SwigFXPyFileListToFXIconList},
    { "_class_FXIconList","_FXPyFileList",SwigFXPyFileListToFXIconList},
    { "_class_FXIconList","_class_FXFileList",SwigFXFileListToFXIconList},
    { "_class_FXIconList","_FXFileList",SwigFXFileListToFXIconList},
    { "_class_FXIconList","_FXIconList",0},
    { "_FXPyPNGImage","_class_FXPyPNGImage",0},
    { "_class_FXAccelTable","_FXAccelTable",0},
    { "_class_FXToggleButton","_FXToggleButton",0},
    { "_FXPyApp","_class_FXPyApp",0},
    { "_FXDCWindow","_class_FXDCWindow",0},
    { "_FXPyScrollArea","_class_FXPyScrollArea",0},
    { "_class_FXDragCorner","_FXDragCorner",0},
    { "_class_FXHeader","_FXHeader",0},
    { "_class_FXPyId","_FXPyId",0},
    { "_class_FXCanvas","_FXCanvas",0},
    { "_FXInputDialog","_class_FXPyInputDialog",SwigFXPyInputDialogToFXInputDialog},
    { "_FXInputDialog","_FXPyInputDialog",SwigFXPyInputDialogToFXInputDialog},
    { "_FXInputDialog","_class_FXInputDialog",0},
    { "_FXApp","_class_FXApp",0},
    { "_class_FXPyRecentFiles","_FXPyRecentFiles",0},
    { "_class_FXPyDebugTarget","_FXPyDebugTarget",0},
    { "_class_FXCommand","_FXCommand",0},
    { "_class_FXPyFrame","_FXPyFrame",0},
    { "_class_FXListItem","_FXListItem",0},
    { "_class_FXTreeListBox","_class_FXPyDirBox",SwigFXPyDirBoxToFXTreeListBox},
    { "_class_FXTreeListBox","_FXPyDirBox",SwigFXPyDirBoxToFXTreeListBox},
    { "_class_FXTreeListBox","_class_FXDirBox",SwigFXDirBoxToFXTreeListBox},
    { "_class_FXTreeListBox","_FXDirBox",SwigFXDirBoxToFXTreeListBox},
    { "_class_FXTreeListBox","_FXTreeListBox",0},
    { "_long","_FXPixel",0},
    { "_long","_FXTime",0},
    { "_long","_unsigned_long",0},
    { "_long","_signed_long",0},
    { "_FXComposite","_class_FXPyProgressDialog",SwigFXPyProgressDialogToFXComposite},
    { "_FXComposite","_FXPyProgressDialog",SwigFXPyProgressDialogToFXComposite},
    { "_FXComposite","_class_FXProgressDialog",SwigFXProgressDialogToFXComposite},
    { "_FXComposite","_FXProgressDialog",SwigFXProgressDialogToFXComposite},
    { "_FXComposite","_class_FXPyInputDialog",SwigFXPyInputDialogToFXComposite},
    { "_FXComposite","_FXPyInputDialog",SwigFXPyInputDialogToFXComposite},
    { "_FXComposite","_class_FXInputDialog",SwigFXInputDialogToFXComposite},
    { "_FXComposite","_FXInputDialog",SwigFXInputDialogToFXComposite},
    { "_FXComposite","_class_FXPySearchDialog",SwigFXPySearchDialogToFXComposite},
    { "_FXComposite","_FXPySearchDialog",SwigFXPySearchDialogToFXComposite},
    { "_FXComposite","_class_FXSearchDialog",SwigFXSearchDialogToFXComposite},
    { "_FXComposite","_FXSearchDialog",SwigFXSearchDialogToFXComposite},
    { "_FXComposite","_class_FXPyReplaceDialog",SwigFXPyReplaceDialogToFXComposite},
    { "_FXComposite","_FXPyReplaceDialog",SwigFXPyReplaceDialogToFXComposite},
    { "_FXComposite","_class_FXReplaceDialog",SwigFXReplaceDialogToFXComposite},
    { "_FXComposite","_FXReplaceDialog",SwigFXReplaceDialogToFXComposite},
    { "_FXComposite","_class_FXPyMessageBox",SwigFXPyMessageBoxToFXComposite},
    { "_FXComposite","_FXPyMessageBox",SwigFXPyMessageBoxToFXComposite},
    { "_FXComposite","_class_FXMessageBox",SwigFXMessageBoxToFXComposite},
    { "_FXComposite","_FXMessageBox",SwigFXMessageBoxToFXComposite},
    { "_FXComposite","_class_FXPyPrintDialog",SwigFXPyPrintDialogToFXComposite},
    { "_FXComposite","_FXPyPrintDialog",SwigFXPyPrintDialogToFXComposite},
    { "_FXComposite","_class_FXPrintDialog",SwigFXPrintDialogToFXComposite},
    { "_FXComposite","_FXPrintDialog",SwigFXPrintDialogToFXComposite},
    { "_FXComposite","_class_FXPyDirDialog",SwigFXPyDirDialogToFXComposite},
    { "_FXComposite","_FXPyDirDialog",SwigFXPyDirDialogToFXComposite},
    { "_FXComposite","_class_FXDirDialog",SwigFXDirDialogToFXComposite},
    { "_FXComposite","_FXDirDialog",SwigFXDirDialogToFXComposite},
    { "_FXComposite","_class_FXPyDirSelector",SwigFXPyDirSelectorToFXComposite},
    { "_FXComposite","_FXPyDirSelector",SwigFXPyDirSelectorToFXComposite},
    { "_FXComposite","_class_FXDirSelector",SwigFXDirSelectorToFXComposite},
    { "_FXComposite","_FXDirSelector",SwigFXDirSelectorToFXComposite},
    { "_FXComposite","_class_FXPyFontDialog",SwigFXPyFontDialogToFXComposite},
    { "_FXComposite","_FXPyFontDialog",SwigFXPyFontDialogToFXComposite},
    { "_FXComposite","_class_FXFontDialog",SwigFXFontDialogToFXComposite},
    { "_FXComposite","_FXFontDialog",SwigFXFontDialogToFXComposite},
    { "_FXComposite","_class_FXPyFontSelector",SwigFXPyFontSelectorToFXComposite},
    { "_FXComposite","_FXPyFontSelector",SwigFXPyFontSelectorToFXComposite},
    { "_FXComposite","_class_FXFontSelector",SwigFXFontSelectorToFXComposite},
    { "_FXComposite","_FXFontSelector",SwigFXFontSelectorToFXComposite},
    { "_FXComposite","_class_FXPyColorDialog",SwigFXPyColorDialogToFXComposite},
    { "_FXComposite","_FXPyColorDialog",SwigFXPyColorDialogToFXComposite},
    { "_FXComposite","_class_FXColorDialog",SwigFXColorDialogToFXComposite},
    { "_FXComposite","_FXColorDialog",SwigFXColorDialogToFXComposite},
    { "_FXComposite","_class_FXPyColorSelector",SwigFXPyColorSelectorToFXComposite},
    { "_FXComposite","_FXPyColorSelector",SwigFXPyColorSelectorToFXComposite},
    { "_FXComposite","_class_FXColorSelector",SwigFXColorSelectorToFXComposite},
    { "_FXComposite","_FXColorSelector",SwigFXColorSelectorToFXComposite},
    { "_FXComposite","_class_FXPyFileDialog",SwigFXPyFileDialogToFXComposite},
    { "_FXComposite","_FXPyFileDialog",SwigFXPyFileDialogToFXComposite},
    { "_FXComposite","_class_FXFileDialog",SwigFXFileDialogToFXComposite},
    { "_FXComposite","_FXFileDialog",SwigFXFileDialogToFXComposite},
    { "_FXComposite","_class_FXPyFileSelector",SwigFXPyFileSelectorToFXComposite},
    { "_FXComposite","_FXPyFileSelector",SwigFXPyFileSelectorToFXComposite},
    { "_FXComposite","_class_FXFileSelector",SwigFXFileSelectorToFXComposite},
    { "_FXComposite","_FXFileSelector",SwigFXFileSelectorToFXComposite},
    { "_FXComposite","_class_FXPyFileList",SwigFXPyFileListToFXComposite},
    { "_FXComposite","_FXPyFileList",SwigFXPyFileListToFXComposite},
    { "_FXComposite","_class_FXFileList",SwigFXFileListToFXComposite},
    { "_FXComposite","_FXFileList",SwigFXFileListToFXComposite},
    { "_FXComposite","_class_FXPyDirBox",SwigFXPyDirBoxToFXComposite},
    { "_FXComposite","_FXPyDirBox",SwigFXPyDirBoxToFXComposite},
    { "_FXComposite","_class_FXDirBox",SwigFXDirBoxToFXComposite},
    { "_FXComposite","_FXDirBox",SwigFXDirBoxToFXComposite},
    { "_FXComposite","_class_FXPyDialogBox",SwigFXPyDialogBoxToFXComposite},
    { "_FXComposite","_FXPyDialogBox",SwigFXPyDialogBoxToFXComposite},
    { "_FXComposite","_class_FXDialogBox",SwigFXDialogBoxToFXComposite},
    { "_FXComposite","_FXDialogBox",SwigFXDialogBoxToFXComposite},
    { "_FXComposite","_class_FXComposite",0},
    { "_struct_FXArc","_FXArc",0},
    { "_class_FXPyFontDialog","_FXPyFontDialog",0},
    { "_FXRGBIcon","_class_FXRGBIcon",0},
    { "_FXScrollArea","_class_FXPyFileList",SwigFXPyFileListToFXScrollArea},
    { "_FXScrollArea","_FXPyFileList",SwigFXPyFileListToFXScrollArea},
    { "_FXScrollArea","_class_FXFileList",SwigFXFileListToFXScrollArea},
    { "_FXScrollArea","_FXFileList",SwigFXFileListToFXScrollArea},
    { "_FXScrollArea","_class_FXScrollArea",0},
    { "_FXLabel","_class_FXLabel",0},
    { "_class_FXPyColorWell","_FXPyColorWell",0},
    { "_FXPrinter","_struct_FXPrinter",0},
    { "_class_FXId","_class_FXPyProgressDialog",SwigFXPyProgressDialogToFXId},
    { "_class_FXId","_FXPyProgressDialog",SwigFXPyProgressDialogToFXId},
    { "_class_FXId","_class_FXProgressDialog",SwigFXProgressDialogToFXId},
    { "_class_FXId","_FXProgressDialog",SwigFXProgressDialogToFXId},
    { "_class_FXId","_class_FXPyInputDialog",SwigFXPyInputDialogToFXId},
    { "_class_FXId","_FXPyInputDialog",SwigFXPyInputDialogToFXId},
    { "_class_FXId","_class_FXInputDialog",SwigFXInputDialogToFXId},
    { "_class_FXId","_FXInputDialog",SwigFXInputDialogToFXId},
    { "_class_FXId","_class_FXPySearchDialog",SwigFXPySearchDialogToFXId},
    { "_class_FXId","_FXPySearchDialog",SwigFXPySearchDialogToFXId},
    { "_class_FXId","_class_FXSearchDialog",SwigFXSearchDialogToFXId},
    { "_class_FXId","_FXSearchDialog",SwigFXSearchDialogToFXId},
    { "_class_FXId","_class_FXPyReplaceDialog",SwigFXPyReplaceDialogToFXId},
    { "_class_FXId","_FXPyReplaceDialog",SwigFXPyReplaceDialogToFXId},
    { "_class_FXId","_class_FXReplaceDialog",SwigFXReplaceDialogToFXId},
    { "_class_FXId","_FXReplaceDialog",SwigFXReplaceDialogToFXId},
    { "_class_FXId","_class_FXPyMessageBox",SwigFXPyMessageBoxToFXId},
    { "_class_FXId","_FXPyMessageBox",SwigFXPyMessageBoxToFXId},
    { "_class_FXId","_class_FXMessageBox",SwigFXMessageBoxToFXId},
    { "_class_FXId","_FXMessageBox",SwigFXMessageBoxToFXId},
    { "_class_FXId","_class_FXPyPrintDialog",SwigFXPyPrintDialogToFXId},
    { "_class_FXId","_FXPyPrintDialog",SwigFXPyPrintDialogToFXId},
    { "_class_FXId","_class_FXPrintDialog",SwigFXPrintDialogToFXId},
    { "_class_FXId","_FXPrintDialog",SwigFXPrintDialogToFXId},
    { "_class_FXId","_class_FXPyDirDialog",SwigFXPyDirDialogToFXId},
    { "_class_FXId","_FXPyDirDialog",SwigFXPyDirDialogToFXId},
    { "_class_FXId","_class_FXDirDialog",SwigFXDirDialogToFXId},
    { "_class_FXId","_FXDirDialog",SwigFXDirDialogToFXId},
    { "_class_FXId","_class_FXPyDirSelector",SwigFXPyDirSelectorToFXId},
    { "_class_FXId","_FXPyDirSelector",SwigFXPyDirSelectorToFXId},
    { "_class_FXId","_class_FXDirSelector",SwigFXDirSelectorToFXId},
    { "_class_FXId","_FXDirSelector",SwigFXDirSelectorToFXId},
    { "_class_FXId","_class_FXPyFontDialog",SwigFXPyFontDialogToFXId},
    { "_class_FXId","_FXPyFontDialog",SwigFXPyFontDialogToFXId},
    { "_class_FXId","_class_FXFontDialog",SwigFXFontDialogToFXId},
    { "_class_FXId","_FXFontDialog",SwigFXFontDialogToFXId},
    { "_class_FXId","_class_FXPyFontSelector",SwigFXPyFontSelectorToFXId},
    { "_class_FXId","_FXPyFontSelector",SwigFXPyFontSelectorToFXId},
    { "_class_FXId","_class_FXFontSelector",SwigFXFontSelectorToFXId},
    { "_class_FXId","_FXFontSelector",SwigFXFontSelectorToFXId},
    { "_class_FXId","_class_FXPyColorDialog",SwigFXPyColorDialogToFXId},
    { "_class_FXId","_FXPyColorDialog",SwigFXPyColorDialogToFXId},
    { "_class_FXId","_class_FXColorDialog",SwigFXColorDialogToFXId},
    { "_class_FXId","_FXColorDialog",SwigFXColorDialogToFXId},
    { "_class_FXId","_class_FXPyColorSelector",SwigFXPyColorSelectorToFXId},
    { "_class_FXId","_FXPyColorSelector",SwigFXPyColorSelectorToFXId},
    { "_class_FXId","_class_FXColorSelector",SwigFXColorSelectorToFXId},
    { "_class_FXId","_FXColorSelector",SwigFXColorSelectorToFXId},
    { "_class_FXId","_class_FXPyFileDialog",SwigFXPyFileDialogToFXId},
    { "_class_FXId","_FXPyFileDialog",SwigFXPyFileDialogToFXId},
    { "_class_FXId","_class_FXFileDialog",SwigFXFileDialogToFXId},
    { "_class_FXId","_FXFileDialog",SwigFXFileDialogToFXId},
    { "_class_FXId","_class_FXPyFileSelector",SwigFXPyFileSelectorToFXId},
    { "_class_FXId","_FXPyFileSelector",SwigFXPyFileSelectorToFXId},
    { "_class_FXId","_class_FXFileSelector",SwigFXFileSelectorToFXId},
    { "_class_FXId","_FXFileSelector",SwigFXFileSelectorToFXId},
    { "_class_FXId","_class_FXPyFileList",SwigFXPyFileListToFXId},
    { "_class_FXId","_FXPyFileList",SwigFXPyFileListToFXId},
    { "_class_FXId","_class_FXFileList",SwigFXFileListToFXId},
    { "_class_FXId","_FXFileList",SwigFXFileListToFXId},
    { "_class_FXId","_class_FXPyDirBox",SwigFXPyDirBoxToFXId},
    { "_class_FXId","_FXPyDirBox",SwigFXPyDirBoxToFXId},
    { "_class_FXId","_class_FXDirBox",SwigFXDirBoxToFXId},
    { "_class_FXId","_FXDirBox",SwigFXDirBoxToFXId},
    { "_class_FXId","_class_FXPyDialogBox",SwigFXPyDialogBoxToFXId},
    { "_class_FXId","_FXPyDialogBox",SwigFXPyDialogBoxToFXId},
    { "_class_FXId","_class_FXDialogBox",SwigFXDialogBoxToFXId},
    { "_class_FXId","_FXDialogBox",SwigFXDialogBoxToFXId},
    { "_class_FXId","_FXId",0},
    { "_FXPyHorizontalSeparator","_class_FXPyHorizontalSeparator",0},
    { "_class_FXPyRadioButton","_FXPyRadioButton",0},
    { "_FXProgressBar","_class_FXProgressBar",0},
    { "_FXPrintDialog","_class_FXPyPrintDialog",SwigFXPyPrintDialogToFXPrintDialog},
    { "_FXPrintDialog","_FXPyPrintDialog",SwigFXPyPrintDialogToFXPrintDialog},
    { "_FXPrintDialog","_class_FXPrintDialog",0},
    { "_float","_FXfloat",0},
    { "_FXPyDrawable","_class_FXPyDrawable",0},
    { "_class_FXPyXPMIcon","_FXPyXPMIcon",0},
    { "_FXPyScrollWindow","_class_FXPyScrollWindow",0},
    { "_FXPyHeaderItem","_class_FXPyHeaderItem",0},
    { "_FXshort","_short",0},
    { "_FXshort","_signed_short",0},
    { "_FXshort","_unsigned_short",0},
    { "_FXshort","_FXushort",0},
    { "_FXFontDesc","_struct_FXFontDesc",0},
    { "_FXArc","_struct_FXArc",0},
    { "_FXPyIconDict","_class_FXPyIconDict",0},
    { "_FXSize","_class_FXSize",0},
    { "_class_FXBMPIcon","_FXBMPIcon",0},
    { "_class_FXICOIcon","_FXICOIcon",0},
    { "_FXPyShell","_class_FXPyShell",0},
    { "_FXPyFileSelector","_class_FXPyFileSelector",0},
    { "_FXPyColorDialog","_class_FXPyColorDialog",0},
    { "_class_FXPyTIFIcon","_FXPyTIFIcon",0},
    { "_FXSegment","_struct_FXSegment",0},
    { "_FXPyButton","_class_FXPyButton",0},
    { "_FXHeaderItem","_class_FXHeaderItem",0},
    { "_FXJPGImage","_class_FXJPGImage",0},
    { "_class_FXPySwitcher","_FXPySwitcher",0},
    { "_FXTabBar","_class_FXTabBar",0},
    { "_class_FXTIFImage","_FXTIFImage",0},
    { "_FXPyPCXIcon","_class_FXPyPCXIcon",0},
    { "_FXDC","_class_FXDC",0},
    { "_class_FXColorWell","_FXColorWell",0},
    { "_FXPyArrowButton","_class_FXPyArrowButton",0},
    { "_class_FXPyColorWheel","_FXPyColorWheel",0},
    { "_class_FXIcon","_FXIcon",0},
    { "_FXPopup","_class_FXPopup",0},
    { "_FXScrollbar","_class_FXScrollbar",0},
    { "_FXPyDirDialog","_class_FXPyDirDialog",0},
    { "_FXPy4Splitter","_class_FXPy4Splitter",0},
    { "_class_FXPyTooltip","_FXPyTooltip",0},
    { "_FXPyTabItem","_class_FXPyTabItem",0},
    { "_class_FXToolbar","_FXToolbar",0},
    { "_class_FXPyMessageBox","_FXPyMessageBox",0},
    { "_class_FXPySearchDialog","_FXPySearchDialog",0},
    { "_FXint","_FXInputHandle",0},
    { "_FXint","_FXDragType",0},
    { "_FXint","_FXHotKey",0},
    { "_FXint","_FXColor",0},
    { "_FXint","_FXID",0},
    { "_FXint","_FXSelector",0},
    { "_FXint","_int",0},
    { "_FXint","_signed_int",0},
    { "_FXint","_unsigned_int",0},
    { "_FXint","_FXuint",0},
    { "_FXPyPNGIcon","_class_FXPyPNGIcon",0},
    { "_class_FXWindow","_class_FXPyProgressDialog",SwigFXPyProgressDialogToFXWindow},
    { "_class_FXWindow","_FXPyProgressDialog",SwigFXPyProgressDialogToFXWindow},
    { "_class_FXWindow","_class_FXProgressDialog",SwigFXProgressDialogToFXWindow},
    { "_class_FXWindow","_FXProgressDialog",SwigFXProgressDialogToFXWindow},
    { "_class_FXWindow","_class_FXPyInputDialog",SwigFXPyInputDialogToFXWindow},
    { "_class_FXWindow","_FXPyInputDialog",SwigFXPyInputDialogToFXWindow},
    { "_class_FXWindow","_class_FXInputDialog",SwigFXInputDialogToFXWindow},
    { "_class_FXWindow","_FXInputDialog",SwigFXInputDialogToFXWindow},
    { "_class_FXWindow","_class_FXPySearchDialog",SwigFXPySearchDialogToFXWindow},
    { "_class_FXWindow","_FXPySearchDialog",SwigFXPySearchDialogToFXWindow},
    { "_class_FXWindow","_class_FXSearchDialog",SwigFXSearchDialogToFXWindow},
    { "_class_FXWindow","_FXSearchDialog",SwigFXSearchDialogToFXWindow},
    { "_class_FXWindow","_class_FXPyReplaceDialog",SwigFXPyReplaceDialogToFXWindow},
    { "_class_FXWindow","_FXPyReplaceDialog",SwigFXPyReplaceDialogToFXWindow},
    { "_class_FXWindow","_class_FXReplaceDialog",SwigFXReplaceDialogToFXWindow},
    { "_class_FXWindow","_FXReplaceDialog",SwigFXReplaceDialogToFXWindow},
    { "_class_FXWindow","_class_FXPyMessageBox",SwigFXPyMessageBoxToFXWindow},
    { "_class_FXWindow","_FXPyMessageBox",SwigFXPyMessageBoxToFXWindow},
    { "_class_FXWindow","_class_FXMessageBox",SwigFXMessageBoxToFXWindow},
    { "_class_FXWindow","_FXMessageBox",SwigFXMessageBoxToFXWindow},
    { "_class_FXWindow","_class_FXPyPrintDialog",SwigFXPyPrintDialogToFXWindow},
    { "_class_FXWindow","_FXPyPrintDialog",SwigFXPyPrintDialogToFXWindow},
    { "_class_FXWindow","_class_FXPrintDialog",SwigFXPrintDialogToFXWindow},
    { "_class_FXWindow","_FXPrintDialog",SwigFXPrintDialogToFXWindow},
    { "_class_FXWindow","_class_FXPyDirDialog",SwigFXPyDirDialogToFXWindow},
    { "_class_FXWindow","_FXPyDirDialog",SwigFXPyDirDialogToFXWindow},
    { "_class_FXWindow","_class_FXDirDialog",SwigFXDirDialogToFXWindow},
    { "_class_FXWindow","_FXDirDialog",SwigFXDirDialogToFXWindow},
    { "_class_FXWindow","_class_FXPyDirSelector",SwigFXPyDirSelectorToFXWindow},
    { "_class_FXWindow","_FXPyDirSelector",SwigFXPyDirSelectorToFXWindow},
    { "_class_FXWindow","_class_FXDirSelector",SwigFXDirSelectorToFXWindow},
    { "_class_FXWindow","_FXDirSelector",SwigFXDirSelectorToFXWindow},
    { "_class_FXWindow","_class_FXPyFontDialog",SwigFXPyFontDialogToFXWindow},
    { "_class_FXWindow","_FXPyFontDialog",SwigFXPyFontDialogToFXWindow},
    { "_class_FXWindow","_class_FXFontDialog",SwigFXFontDialogToFXWindow},
    { "_class_FXWindow","_FXFontDialog",SwigFXFontDialogToFXWindow},
    { "_class_FXWindow","_class_FXPyFontSelector",SwigFXPyFontSelectorToFXWindow},
    { "_class_FXWindow","_FXPyFontSelector",SwigFXPyFontSelectorToFXWindow},
    { "_class_FXWindow","_class_FXFontSelector",SwigFXFontSelectorToFXWindow},
    { "_class_FXWindow","_FXFontSelector",SwigFXFontSelectorToFXWindow},
    { "_class_FXWindow","_class_FXPyColorDialog",SwigFXPyColorDialogToFXWindow},
    { "_class_FXWindow","_FXPyColorDialog",SwigFXPyColorDialogToFXWindow},
    { "_class_FXWindow","_class_FXColorDialog",SwigFXColorDialogToFXWindow},
    { "_class_FXWindow","_FXColorDialog",SwigFXColorDialogToFXWindow},
    { "_class_FXWindow","_class_FXPyColorSelector",SwigFXPyColorSelectorToFXWindow},
    { "_class_FXWindow","_FXPyColorSelector",SwigFXPyColorSelectorToFXWindow},
    { "_class_FXWindow","_class_FXColorSelector",SwigFXColorSelectorToFXWindow},
    { "_class_FXWindow","_FXColorSelector",SwigFXColorSelectorToFXWindow},
    { "_class_FXWindow","_class_FXPyFileDialog",SwigFXPyFileDialogToFXWindow},
    { "_class_FXWindow","_FXPyFileDialog",SwigFXPyFileDialogToFXWindow},
    { "_class_FXWindow","_class_FXFileDialog",SwigFXFileDialogToFXWindow},
    { "_class_FXWindow","_FXFileDialog",SwigFXFileDialogToFXWindow},
    { "_class_FXWindow","_class_FXPyFileSelector",SwigFXPyFileSelectorToFXWindow},
    { "_class_FXWindow","_FXPyFileSelector",SwigFXPyFileSelectorToFXWindow},
    { "_class_FXWindow","_class_FXFileSelector",SwigFXFileSelectorToFXWindow},
    { "_class_FXWindow","_FXFileSelector",SwigFXFileSelectorToFXWindow},
    { "_class_FXWindow","_class_FXPyFileList",SwigFXPyFileListToFXWindow},
    { "_class_FXWindow","_FXPyFileList",SwigFXPyFileListToFXWindow},
    { "_class_FXWindow","_class_FXFileList",SwigFXFileListToFXWindow},
    { "_class_FXWindow","_FXFileList",SwigFXFileListToFXWindow},
    { "_class_FXWindow","_class_FXPyDirBox",SwigFXPyDirBoxToFXWindow},
    { "_class_FXWindow","_FXPyDirBox",SwigFXPyDirBoxToFXWindow},
    { "_class_FXWindow","_class_FXDirBox",SwigFXDirBoxToFXWindow},
    { "_class_FXWindow","_FXDirBox",SwigFXDirBoxToFXWindow},
    { "_class_FXWindow","_class_FXPyDialogBox",SwigFXPyDialogBoxToFXWindow},
    { "_class_FXWindow","_FXPyDialogBox",SwigFXPyDialogBoxToFXWindow},
    { "_class_FXWindow","_class_FXDialogBox",SwigFXDialogBoxToFXWindow},
    { "_class_FXWindow","_FXDialogBox",SwigFXDialogBoxToFXWindow},
    { "_class_FXWindow","_FXWindow",0},
    { "_FXPyRootWindow","_class_FXPyRootWindow",0},
    { "_class_FXShutter","_FXShutter",0},
    { "_class_FXPyTabBar","_FXPyTabBar",0},
    { "_FXDriveBox","_class_FXDriveBox",0},
    { "_class_FXSearchDialog","_class_FXPySearchDialog",SwigFXPySearchDialogToFXSearchDialog},
    { "_class_FXSearchDialog","_FXPySearchDialog",SwigFXPySearchDialogToFXSearchDialog},
    { "_class_FXSearchDialog","_FXSearchDialog",0},
    { "_FXushort","_FXshort",0},
    { "_FXushort","_unsigned_short",0},
    { "_FXushort","_short",0},
    { "_class_FXPoint","_FXPoint",0},
    { "_class_FXPyPNGImage","_FXPyPNGImage",0},
    { "_class_FXPyDCPrint","_FXPyDCPrint",0},
    { "_FXPyCheckButton","_class_FXPyCheckButton",0},
    { "_class_FXComboBox","_FXComboBox",0},
    { "_FXPyVisual","_class_FXPyVisual",0},
    { "_class_FXPyTabBook","_FXPyTabBook",0},
    { "_FXFileItem","_class_FXPyFileItem",SwigFXPyFileItemToFXFileItem},
    { "_FXFileItem","_FXPyFileItem",SwigFXPyFileItemToFXFileItem},
    { "_FXFileItem","_class_FXFileItem",0},
    { "_class_FXRectangle","_FXRectangle",0},
    { "_class_FXPyFont","_FXPyFont",0},
    { "_FXPyFileStream","_class_FXPyFileStream",0},
    { "_class_FXPyStatusline","_FXPyStatusline",0},
    { "_FXFileList","_class_FXPyFileList",SwigFXPyFileListToFXFileList},
    { "_FXFileList","_FXPyFileList",SwigFXPyFileListToFXFileList},
    { "_FXFileList","_class_FXFileList",0},
    { "_FXPyFileDialog","_class_FXPyFileDialog",0},
    { "_FXRGBImage","_class_FXRGBImage",0},
    { "_FXRootWindow","_class_FXRootWindow",0},
    { "_class_FXPacker","_class_FXPyDirSelector",SwigFXPyDirSelectorToFXPacker},
    { "_class_FXPacker","_FXPyDirSelector",SwigFXPyDirSelectorToFXPacker},
    { "_class_FXPacker","_class_FXDirSelector",SwigFXDirSelectorToFXPacker},
    { "_class_FXPacker","_FXDirSelector",SwigFXDirSelectorToFXPacker},
    { "_class_FXPacker","_class_FXPyFontSelector",SwigFXPyFontSelectorToFXPacker},
    { "_class_FXPacker","_FXPyFontSelector",SwigFXPyFontSelectorToFXPacker},
    { "_class_FXPacker","_class_FXFontSelector",SwigFXFontSelectorToFXPacker},
    { "_class_FXPacker","_FXFontSelector",SwigFXFontSelectorToFXPacker},
    { "_class_FXPacker","_class_FXPyColorSelector",SwigFXPyColorSelectorToFXPacker},
    { "_class_FXPacker","_FXPyColorSelector",SwigFXPyColorSelectorToFXPacker},
    { "_class_FXPacker","_class_FXColorSelector",SwigFXColorSelectorToFXPacker},
    { "_class_FXPacker","_FXColorSelector",SwigFXColorSelectorToFXPacker},
    { "_class_FXPacker","_class_FXPyFileSelector",SwigFXPyFileSelectorToFXPacker},
    { "_class_FXPacker","_FXPyFileSelector",SwigFXPyFileSelectorToFXPacker},
    { "_class_FXPacker","_class_FXFileSelector",SwigFXFileSelectorToFXPacker},
    { "_class_FXPacker","_FXFileSelector",SwigFXFileSelectorToFXPacker},
    { "_class_FXPacker","_class_FXPyDirBox",SwigFXPyDirBoxToFXPacker},
    { "_class_FXPacker","_FXPyDirBox",SwigFXPyDirBoxToFXPacker},
    { "_class_FXPacker","_class_FXDirBox",SwigFXDirBoxToFXPacker},
    { "_class_FXPacker","_FXDirBox",SwigFXDirBoxToFXPacker},
    { "_class_FXPacker","_FXPacker",0},
    { "_FXPyToolbarShell","_class_FXPyToolbarShell",0},
    { "_FXPyXPMImage","_class_FXPyXPMImage",0},
    { "_FXPyDataTarget","_class_FXPyDataTarget",0},
    { "_FXPyTopWindow","_class_FXPyTopWindow",0},
    { "_FXPyScrollCorner","_class_FXPyScrollCorner",0},
    { "_FXProgressDialog","_class_FXPyProgressDialog",SwigFXPyProgressDialogToFXProgressDialog},
    { "_FXProgressDialog","_FXPyProgressDialog",SwigFXPyProgressDialogToFXProgressDialog},
    { "_FXProgressDialog","_class_FXProgressDialog",0},
    { "_FXObject","_class_FXPyProgressDialog",SwigFXPyProgressDialogToFXObject},
    { "_FXObject","_FXPyProgressDialog",SwigFXPyProgressDialogToFXObject},
    { "_FXObject","_class_FXProgressDialog",SwigFXProgressDialogToFXObject},
    { "_FXObject","_FXProgressDialog",SwigFXProgressDialogToFXObject},
    { "_FXObject","_class_FXPyInputDialog",SwigFXPyInputDialogToFXObject},
    { "_FXObject","_FXPyInputDialog",SwigFXPyInputDialogToFXObject},
    { "_FXObject","_class_FXInputDialog",SwigFXInputDialogToFXObject},
    { "_FXObject","_FXInputDialog",SwigFXInputDialogToFXObject},
    { "_FXObject","_class_FXPySearchDialog",SwigFXPySearchDialogToFXObject},
    { "_FXObject","_FXPySearchDialog",SwigFXPySearchDialogToFXObject},
    { "_FXObject","_class_FXSearchDialog",SwigFXSearchDialogToFXObject},
    { "_FXObject","_FXSearchDialog",SwigFXSearchDialogToFXObject},
    { "_FXObject","_class_FXPyReplaceDialog",SwigFXPyReplaceDialogToFXObject},
    { "_FXObject","_FXPyReplaceDialog",SwigFXPyReplaceDialogToFXObject},
    { "_FXObject","_class_FXReplaceDialog",SwigFXReplaceDialogToFXObject},
    { "_FXObject","_FXReplaceDialog",SwigFXReplaceDialogToFXObject},
    { "_FXObject","_class_FXPyFileDict",SwigFXPyFileDictToFXObject},
    { "_FXObject","_FXPyFileDict",SwigFXPyFileDictToFXObject},
    { "_FXObject","_class_FXFileDict",SwigFXFileDictToFXObject},
    { "_FXObject","_FXFileDict",SwigFXFileDictToFXObject},
    { "_FXObject","_class_FXPyIconDict",SwigFXPyIconDictToFXObject},
    { "_FXObject","_FXPyIconDict",SwigFXPyIconDictToFXObject},
    { "_FXObject","_class_FXIconDict",SwigFXIconDictToFXObject},
    { "_FXObject","_FXIconDict",SwigFXIconDictToFXObject},
    { "_FXObject","_class_FXPyMessageBox",SwigFXPyMessageBoxToFXObject},
    { "_FXObject","_FXPyMessageBox",SwigFXPyMessageBoxToFXObject},
    { "_FXObject","_class_FXMessageBox",SwigFXMessageBoxToFXObject},
    { "_FXObject","_FXMessageBox",SwigFXMessageBoxToFXObject},
    { "_FXObject","_class_FXPyPrintDialog",SwigFXPyPrintDialogToFXObject},
    { "_FXObject","_FXPyPrintDialog",SwigFXPyPrintDialogToFXObject},
    { "_FXObject","_class_FXPrintDialog",SwigFXPrintDialogToFXObject},
    { "_FXObject","_FXPrintDialog",SwigFXPrintDialogToFXObject},
    { "_FXObject","_class_FXPyDirDialog",SwigFXPyDirDialogToFXObject},
    { "_FXObject","_FXPyDirDialog",SwigFXPyDirDialogToFXObject},
    { "_FXObject","_class_FXDirDialog",SwigFXDirDialogToFXObject},
    { "_FXObject","_FXDirDialog",SwigFXDirDialogToFXObject},
    { "_FXObject","_class_FXPyDirSelector",SwigFXPyDirSelectorToFXObject},
    { "_FXObject","_FXPyDirSelector",SwigFXPyDirSelectorToFXObject},
    { "_FXObject","_class_FXDirSelector",SwigFXDirSelectorToFXObject},
    { "_FXObject","_FXDirSelector",SwigFXDirSelectorToFXObject},
    { "_FXObject","_class_FXPyFontDialog",SwigFXPyFontDialogToFXObject},
    { "_FXObject","_FXPyFontDialog",SwigFXPyFontDialogToFXObject},
    { "_FXObject","_class_FXFontDialog",SwigFXFontDialogToFXObject},
    { "_FXObject","_FXFontDialog",SwigFXFontDialogToFXObject},
    { "_FXObject","_class_FXPyFontSelector",SwigFXPyFontSelectorToFXObject},
    { "_FXObject","_FXPyFontSelector",SwigFXPyFontSelectorToFXObject},
    { "_FXObject","_class_FXFontSelector",SwigFXFontSelectorToFXObject},
    { "_FXObject","_FXFontSelector",SwigFXFontSelectorToFXObject},
    { "_FXObject","_class_FXPyColorDialog",SwigFXPyColorDialogToFXObject},
    { "_FXObject","_FXPyColorDialog",SwigFXPyColorDialogToFXObject},
    { "_FXObject","_class_FXColorDialog",SwigFXColorDialogToFXObject},
    { "_FXObject","_FXColorDialog",SwigFXColorDialogToFXObject},
    { "_FXObject","_class_FXPyColorSelector",SwigFXPyColorSelectorToFXObject},
    { "_FXObject","_FXPyColorSelector",SwigFXPyColorSelectorToFXObject},
    { "_FXObject","_class_FXColorSelector",SwigFXColorSelectorToFXObject},
    { "_FXObject","_FXColorSelector",SwigFXColorSelectorToFXObject},
    { "_FXObject","_class_FXPyFileDialog",SwigFXPyFileDialogToFXObject},
    { "_FXObject","_FXPyFileDialog",SwigFXPyFileDialogToFXObject},
    { "_FXObject","_class_FXFileDialog",SwigFXFileDialogToFXObject},
    { "_FXObject","_FXFileDialog",SwigFXFileDialogToFXObject},
    { "_FXObject","_class_FXPyFileSelector",SwigFXPyFileSelectorToFXObject},
    { "_FXObject","_FXPyFileSelector",SwigFXPyFileSelectorToFXObject},
    { "_FXObject","_class_FXFileSelector",SwigFXFileSelectorToFXObject},
    { "_FXObject","_FXFileSelector",SwigFXFileSelectorToFXObject},
    { "_FXObject","_class_FXPyFileList",SwigFXPyFileListToFXObject},
    { "_FXObject","_FXPyFileList",SwigFXPyFileListToFXObject},
    { "_FXObject","_class_FXFileList",SwigFXFileListToFXObject},
    { "_FXObject","_FXFileList",SwigFXFileListToFXObject},
    { "_FXObject","_class_FXPyFileItem",SwigFXPyFileItemToFXObject},
    { "_FXObject","_FXPyFileItem",SwigFXPyFileItemToFXObject},
    { "_FXObject","_class_FXFileItem",SwigFXFileItemToFXObject},
    { "_FXObject","_FXFileItem",SwigFXFileItemToFXObject},
    { "_FXObject","_class_FXPyDirBox",SwigFXPyDirBoxToFXObject},
    { "_FXObject","_FXPyDirBox",SwigFXPyDirBoxToFXObject},
    { "_FXObject","_class_FXDirBox",SwigFXDirBoxToFXObject},
    { "_FXObject","_FXDirBox",SwigFXDirBoxToFXObject},
    { "_FXObject","_class_FXPyDialogBox",SwigFXPyDialogBoxToFXObject},
    { "_FXObject","_FXPyDialogBox",SwigFXPyDialogBoxToFXObject},
    { "_FXObject","_class_FXDialogBox",SwigFXDialogBoxToFXObject},
    { "_FXObject","_FXDialogBox",SwigFXDialogBoxToFXObject},
    { "_FXObject","_class_FXObject",0},
    { "_FXPyGIFImage","_class_FXPyGIFImage",0},
    { "_FXBMPImage","_class_FXBMPImage",0},
    { "_FXICOImage","_class_FXICOImage",0},
    { "_class_FXRGBIcon","_FXRGBIcon",0},
    { "_FXRecentFiles","_class_FXRecentFiles",0},
    { "_FXDebugTarget","_class_FXDebugTarget",0},
    { "_class_FXPyCommand","_FXPyCommand",0},
    { "_class_FXScrollArea","_class_FXPyFileList",SwigFXPyFileListToFXScrollArea},
    { "_class_FXScrollArea","_FXPyFileList",SwigFXPyFileListToFXScrollArea},
    { "_class_FXScrollArea","_class_FXFileList",SwigFXFileListToFXScrollArea},
    { "_class_FXScrollArea","_FXFileList",SwigFXFileListToFXScrollArea},
    { "_class_FXScrollArea","_FXScrollArea",0},
    { "_FXPySplitter","_class_FXPySplitter",0},
    { "_FXPyTextField","_class_FXPyTextField",0},
    { "_FXPyHeader","_class_FXPyHeader",0},
    { "_FXPCXImage","_class_FXPCXImage",0},
    { "_FXFileStream","_class_FXFileStream",0},
    { "_class_FXPyDelegator","_FXPyDelegator",0},
    { "_FXPyCanvas","_class_FXPyCanvas",0},
    { "_FXFileDialog","_class_FXPyFileDialog",SwigFXPyFileDialogToFXFileDialog},
    { "_FXFileDialog","_FXPyFileDialog",SwigFXPyFileDialogToFXFileDialog},
    { "_FXFileDialog","_class_FXFileDialog",0},
    { "_class_FXPyDrawable","_FXPyDrawable",0},
    { "_FXPyImage","_class_FXPyImage",0},
    { "_FXGIFIcon","_class_FXGIFIcon",0},
    { "_FXPyDial","_class_FXPyDial",0},
    { "_class_FXPyOptionMenu","_FXPyOptionMenu",0},
    { "_FXPyListBox","_class_FXPyListBox",0},
    { "_FXColor","_FXInputHandle",0},
    { "_FXColor","_FXDragType",0},
    { "_FXColor","_FXHotKey",0},
    { "_FXColor","_FXuint",0},
    { "_FXColor","_int",0},
    { "_FXColor","_unsigned_int",0},
    { "_FXColor","_FXint",0},
    { "_FXColor","_FXSelector",0},
    { "_FXColor","_FXID",0},
    { "_FXPyJPGIcon","_class_FXPyJPGIcon",0},
    { "_FXDataTarget","_class_FXDataTarget",0},
    { "_class_FXPyHorizontalFrame","_FXPyHorizontalFrame",0},
    { "_FXRadioButton","_class_FXRadioButton",0},
    { "_class_FXPyList","_FXPyList",0},
    { "_class_FXPyIconDict","_FXPyIconDict",0},
    { "_FXTime","_FXPixel",0},
    { "_FXTime","_long",0},
    { "_FXTime","_signed_long",0},
    { "_FXTime","_unsigned_long",0},
    { "_FXHotKey","_FXInputHandle",0},
    { "_FXHotKey","_FXDragType",0},
    { "_FXHotKey","_FXuint",0},
    { "_FXHotKey","_int",0},
    { "_FXHotKey","_unsigned_int",0},
    { "_FXHotKey","_FXint",0},
    { "_FXHotKey","_FXSelector",0},
    { "_FXHotKey","_FXID",0},
    { "_FXHotKey","_FXColor",0},
    { "_class_FXSize","_FXSize",0},
    { "_class_FXPyObject","_FXPyObject",0},
    { "_class_FXPyShell","_FXPyShell",0},
    { "_FXPyDC","_class_FXPyDC",0},
    { "_FXSpinner","_class_FXSpinner",0},
    { "_class_FXTreeItem","_FXTreeItem",0},
    { "_class_FXPyColorDialog","_FXPyColorDialog",0},
    { "_struct_FXFontDesc","_FXFontDesc",0},
    { "_FXMatrix","_class_FXMatrix",0},
    { "_class_FXTreeList","_FXTreeList",0},
    { "_class_FXFileDict","_class_FXPyFileDict",SwigFXPyFileDictToFXFileDict},
    { "_class_FXFileDict","_FXPyFileDict",SwigFXPyFileDictToFXFileDict},
    { "_class_FXFileDict","_FXFileDict",0},
    { "_class_FXPyBMPIcon","_FXPyBMPIcon",0},
    { "_class_FXPyICOIcon","_FXPyICOIcon",0},
    { "_class_FXHeaderItem","_FXHeaderItem",0},
    { "_char","_FXchar",0},
    { "_FXdouble","_double",0},
    { "_FXStream","_class_FXStream",0},
    { "_FXPyStringDict","_class_FXPyStringDict",0},
    { "_FXFrame","_class_FXFrame",0},
    { "_class_FXPicker","_FXPicker",0},
    { "_FXPyToolbarGrip","_class_FXPyToolbarGrip",0},
    { "_FXPyColorBar","_class_FXPyColorBar",0},
    { "_FXObjectPtr","_FXObject_p",0},
    { "_FXPyComposite","_class_FXPyComposite",0},
    { "_class_FXShutterItem","_FXShutterItem",0},
    { "_class_FXPyArrowButton","_FXPyArrowButton",0},
    { "_class_FXDelegator","_FXDelegator",0},
    { "_FXVerticalFrame","_class_FXVerticalFrame",0},
    { "_class_FXPyMatrix","_FXPyMatrix",0},
    { "_class_FXDirSelector","_class_FXPyDirSelector",SwigFXPyDirSelectorToFXDirSelector},
    { "_class_FXDirSelector","_FXPyDirSelector",SwigFXPyDirSelectorToFXDirSelector},
    { "_class_FXDirSelector","_FXDirSelector",0},
    { "_class_FXSlider","_FXSlider",0},
    { "_FXPyColorSelector","_class_FXPyColorSelector",0},
    { "_FXbool","_FXuchar",0},
    { "_FXbool","_unsigned_char",0},
    { "_class_FXTGAImage","_FXTGAImage",0},
    { "_class_FXPyStream","_FXPyStream",0},
    { "_FXStringDict","_class_FXStringDict",0},
    { "_FXPyGroupBox","_class_FXPyGroupBox",0},
    { "_FXPyIconItem","_class_FXPyIconItem",0},
    { "_FXDialogBox","_class_FXPyProgressDialog",SwigFXPyProgressDialogToFXDialogBox},
    { "_FXDialogBox","_FXPyProgressDialog",SwigFXPyProgressDialogToFXDialogBox},
    { "_FXDialogBox","_class_FXProgressDialog",SwigFXProgressDialogToFXDialogBox},
    { "_FXDialogBox","_FXProgressDialog",SwigFXProgressDialogToFXDialogBox},
    { "_FXDialogBox","_class_FXPyInputDialog",SwigFXPyInputDialogToFXDialogBox},
    { "_FXDialogBox","_FXPyInputDialog",SwigFXPyInputDialogToFXDialogBox},
    { "_FXDialogBox","_class_FXInputDialog",SwigFXInputDialogToFXDialogBox},
    { "_FXDialogBox","_FXInputDialog",SwigFXInputDialogToFXDialogBox},
    { "_FXDialogBox","_class_FXPySearchDialog",SwigFXPySearchDialogToFXDialogBox},
    { "_FXDialogBox","_FXPySearchDialog",SwigFXPySearchDialogToFXDialogBox},
    { "_FXDialogBox","_class_FXSearchDialog",SwigFXSearchDialogToFXDialogBox},
    { "_FXDialogBox","_FXSearchDialog",SwigFXSearchDialogToFXDialogBox},
    { "_FXDialogBox","_class_FXPyReplaceDialog",SwigFXPyReplaceDialogToFXDialogBox},
    { "_FXDialogBox","_FXPyReplaceDialog",SwigFXPyReplaceDialogToFXDialogBox},
    { "_FXDialogBox","_class_FXReplaceDialog",SwigFXReplaceDialogToFXDialogBox},
    { "_FXDialogBox","_FXReplaceDialog",SwigFXReplaceDialogToFXDialogBox},
    { "_FXDialogBox","_class_FXPyMessageBox",SwigFXPyMessageBoxToFXDialogBox},
    { "_FXDialogBox","_FXPyMessageBox",SwigFXPyMessageBoxToFXDialogBox},
    { "_FXDialogBox","_class_FXMessageBox",SwigFXMessageBoxToFXDialogBox},
    { "_FXDialogBox","_FXMessageBox",SwigFXMessageBoxToFXDialogBox},
    { "_FXDialogBox","_class_FXPyPrintDialog",SwigFXPyPrintDialogToFXDialogBox},
    { "_FXDialogBox","_FXPyPrintDialog",SwigFXPyPrintDialogToFXDialogBox},
    { "_FXDialogBox","_class_FXPrintDialog",SwigFXPrintDialogToFXDialogBox},
    { "_FXDialogBox","_FXPrintDialog",SwigFXPrintDialogToFXDialogBox},
    { "_FXDialogBox","_class_FXPyDirDialog",SwigFXPyDirDialogToFXDialogBox},
    { "_FXDialogBox","_FXPyDirDialog",SwigFXPyDirDialogToFXDialogBox},
    { "_FXDialogBox","_class_FXDirDialog",SwigFXDirDialogToFXDialogBox},
    { "_FXDialogBox","_FXDirDialog",SwigFXDirDialogToFXDialogBox},
    { "_FXDialogBox","_class_FXPyFontDialog",SwigFXPyFontDialogToFXDialogBox},
    { "_FXDialogBox","_FXPyFontDialog",SwigFXPyFontDialogToFXDialogBox},
    { "_FXDialogBox","_class_FXFontDialog",SwigFXFontDialogToFXDialogBox},
    { "_FXDialogBox","_FXFontDialog",SwigFXFontDialogToFXDialogBox},
    { "_FXDialogBox","_class_FXPyColorDialog",SwigFXPyColorDialogToFXDialogBox},
    { "_FXDialogBox","_FXPyColorDialog",SwigFXPyColorDialogToFXDialogBox},
    { "_FXDialogBox","_class_FXColorDialog",SwigFXColorDialogToFXDialogBox},
    { "_FXDialogBox","_FXColorDialog",SwigFXColorDialogToFXDialogBox},
    { "_FXDialogBox","_class_FXPyFileDialog",SwigFXPyFileDialogToFXDialogBox},
    { "_FXDialogBox","_FXPyFileDialog",SwigFXPyFileDialogToFXDialogBox},
    { "_FXDialogBox","_class_FXFileDialog",SwigFXFileDialogToFXDialogBox},
    { "_FXDialogBox","_FXFileDialog",SwigFXFileDialogToFXDialogBox},
    { "_FXDialogBox","_class_FXPyDialogBox",SwigFXPyDialogBoxToFXDialogBox},
    { "_FXDialogBox","_FXPyDialogBox",SwigFXPyDialogBoxToFXDialogBox},
    { "_FXDialogBox","_class_FXDialogBox",0},
    { "_class_FXPyCheckButton","_FXPyCheckButton",0},
    { "_class_FXPyToolbar","_FXPyToolbar",0},
    { "_FXPyIconList","_class_FXPyIconList",0},
    { "_class_FXPyApp","_FXPyApp",0},
    { "_class_FXDCWindow","_FXDCWindow",0},
    { "_class_FXPyShutter","_FXPyShutter",0},
    { "_FXFontSelector","_class_FXPyFontSelector",SwigFXPyFontSelectorToFXFontSelector},
    { "_FXFontSelector","_FXPyFontSelector",SwigFXPyFontSelectorToFXFontSelector},
    { "_FXFontSelector","_class_FXFontSelector",0},
    { "_class_FXInputDialog","_class_FXPyInputDialog",SwigFXPyInputDialogToFXInputDialog},
    { "_class_FXInputDialog","_FXPyInputDialog",SwigFXPyInputDialogToFXInputDialog},
    { "_class_FXInputDialog","_FXInputDialog",0},
    { "_FXPyWindow","_class_FXPyWindow",0},
    { "_class_FXRootWindow","_FXRootWindow",0},
    { "_class_FXPyXPMImage","_FXPyXPMImage",0},
    { "_FXPyListItem","_class_FXPyListItem",0},
    { "_class_FXPyGIFImage","_FXPyGIFImage",0},
    { "_class_FXPyVerticalFrame","_FXPyVerticalFrame",0},
    { "_class_FXPySplitter","_FXPySplitter",0},
    { "_class_FXLabel","_FXLabel",0},
    { "_class_FXFileStream","_FXFileStream",0},
    { "_class_FXPyMainWindow","_FXPyMainWindow",0},
    { "_class_FXHorizontalFrame","_FXHorizontalFrame",0},
    { "_FXButton","_class_FXButton",0},
    { "_FXPyScrollbar","_class_FXPyScrollbar",0},
    { "_class_FXProgressBar","_FXProgressBar",0},
    { "_class_FXFileDialog","_class_FXPyFileDialog",SwigFXPyFileDialogToFXFileDialog},
    { "_class_FXFileDialog","_FXPyFileDialog",SwigFXPyFileDialogToFXFileDialog},
    { "_class_FXFileDialog","_FXFileDialog",0},
    { "_class_FXPrintDialog","_class_FXPyPrintDialog",SwigFXPyPrintDialogToFXPrintDialog},
    { "_class_FXPrintDialog","_FXPyPrintDialog",SwigFXPyPrintDialogToFXPrintDialog},
    { "_class_FXPrintDialog","_FXPrintDialog",0},
    { "_class_FXPyImage","_FXPyImage",0},
    { "_class_FXGIFIcon","_FXGIFIcon",0},
    { "_class_FXPyRGBIcon","_FXPyRGBIcon",0},
    { "_FXPyPacker","_class_FXPyPacker",0},
    { "_class_FXPyScrollWindow","_FXPyScrollWindow",0},
    { "_FXPyToolbarTab","_class_FXPyToolbarTab",0},
    { "_unsigned_long","_FXPixel",0},
    { "_unsigned_long","_FXTime",0},
    { "_unsigned_long","_long",0},
    { "_class_FXDataTarget","_FXDataTarget",0},
    { "_class_FXScrollWindow","_FXScrollWindow",0},
    { "_FXDial","_class_FXDial",0},
    { "_FXReplaceDialog","_class_FXPySearchDialog",SwigFXPySearchDialogToFXReplaceDialog},
    { "_FXReplaceDialog","_FXPySearchDialog",SwigFXPySearchDialogToFXReplaceDialog},
    { "_FXReplaceDialog","_class_FXSearchDialog",SwigFXSearchDialogToFXReplaceDialog},
    { "_FXReplaceDialog","_FXSearchDialog",SwigFXSearchDialogToFXReplaceDialog},
    { "_FXReplaceDialog","_class_FXPyReplaceDialog",SwigFXPyReplaceDialogToFXReplaceDialog},
    { "_FXReplaceDialog","_FXPyReplaceDialog",SwigFXPyReplaceDialogToFXReplaceDialog},
    { "_FXReplaceDialog","_class_FXReplaceDialog",0},
    { "_class_FXPyDC","_FXPyDC",0},
    { "_FXPyVerticalSeparator","_class_FXPyVerticalSeparator",0},
    { "_class_FXSpinner","_FXSpinner",0},
    { "_class_FXPyFileSelector","_FXPyFileSelector",0},
    { "_class_FXPyButton","_FXPyButton",0},
    { "_class_FXFileSelector","_class_FXPyFileSelector",SwigFXPyFileSelectorToFXFileSelector},
    { "_class_FXFileSelector","_FXPyFileSelector",SwigFXPyFileSelectorToFXFileSelector},
    { "_class_FXFileSelector","_FXFileSelector",0},
    { "_FXPCXIcon","_class_FXPCXIcon",0},
    { "_FXSwitcher","_class_FXSwitcher",0},
    { "_FXToolbarTab","_class_FXToolbarTab",0},
    { "_FXColorDialog","_class_FXPyColorDialog",SwigFXPyColorDialogToFXColorDialog},
    { "_FXColorDialog","_FXPyColorDialog",SwigFXPyColorDialogToFXColorDialog},
    { "_FXColorDialog","_class_FXColorDialog",0},
    { "_class_FXJPGImage","_FXJPGImage",0},
    { "_class_FXPyToolbarGrip","_FXPyToolbarGrip",0},
    { "_class_FXPyColorBar","_FXPyColorBar",0},
    { "_class_FXPyIcon","_FXPyIcon",0},
    { "_class_FXPyAccelTable","_FXPyAccelTable",0},
    { "_class_FXDC","_FXDC",0},
    { "_FXTabItem","_class_FXTabItem",0},
    { "_FXVisual","_class_FXVisual",0},
    { "_FXPyTIFImage","_class_FXPyTIFImage",0},
    { "_FXPNGIcon","_class_FXPNGIcon",0},
    { "_class_FXPopup","_FXPopup",0},
    { "_class_FXVerticalFrame","_FXVerticalFrame",0},
    { "_class_FXPyDragCorner","_FXPyDragCorner",0},
    { "_FXStatusbar","_class_FXStatusbar",0},
    { "_class_FXPyDirDialog","_FXPyDirDialog",0},
    { "_signed_int","_FXInputHandle",0},
    { "_signed_int","_FXint",0},
    { "_signed_int","_int",0},
    { "_class_FXPy4Splitter","_FXPy4Splitter",0},
    { "_FXArrowButton","_class_FXArrowButton",0},
    { "_FXFileAssoc","_struct_FXFileAssoc",0},
    { "_FXPNGImage","_class_FXPNGImage",0},
    { "_FXPyTGAIcon","_class_FXPyTGAIcon",0},
    { "_FXPyDict","_class_FXPyDict",0},
    { "_class_FXStringDict","_FXStringDict",0},
    { "_FXRegion","_class_FXRegion",0},
    { "_class_FXPyGroupBox","_FXPyGroupBox",0},
    { "_FXPyPicker","_class_FXPyPicker",0},
    { "_class_FXDriveBox","_FXDriveBox",0},
    { "_class_FXPyIconItem","_FXPyIconItem",0},
    { "_class_FXPyReplaceDialog","_FXPyReplaceDialog",0},
    { "_FXVerticalSeparator","_class_FXVerticalSeparator",0},
    { "_FXToggleButton","_class_FXToggleButton",0},
    { "_class_FXPyIconList","_FXPyIconList",0},
    { "_FXRawEvent","__XEvent",0},
    { "_class_FXPyVisual","_FXPyVisual",0},
    { "_FXShell","_class_FXPyProgressDialog",SwigFXPyProgressDialogToFXShell},
    { "_FXShell","_FXPyProgressDialog",SwigFXPyProgressDialogToFXShell},
    { "_FXShell","_class_FXProgressDialog",SwigFXProgressDialogToFXShell},
    { "_FXShell","_FXProgressDialog",SwigFXProgressDialogToFXShell},
    { "_FXShell","_class_FXPyInputDialog",SwigFXPyInputDialogToFXShell},
    { "_FXShell","_FXPyInputDialog",SwigFXPyInputDialogToFXShell},
    { "_FXShell","_class_FXInputDialog",SwigFXInputDialogToFXShell},
    { "_FXShell","_FXInputDialog",SwigFXInputDialogToFXShell},
    { "_FXShell","_class_FXPySearchDialog",SwigFXPySearchDialogToFXShell},
    { "_FXShell","_FXPySearchDialog",SwigFXPySearchDialogToFXShell},
    { "_FXShell","_class_FXSearchDialog",SwigFXSearchDialogToFXShell},
    { "_FXShell","_FXSearchDialog",SwigFXSearchDialogToFXShell},
    { "_FXShell","_class_FXPyReplaceDialog",SwigFXPyReplaceDialogToFXShell},
    { "_FXShell","_FXPyReplaceDialog",SwigFXPyReplaceDialogToFXShell},
    { "_FXShell","_class_FXReplaceDialog",SwigFXReplaceDialogToFXShell},
    { "_FXShell","_FXReplaceDialog",SwigFXReplaceDialogToFXShell},
    { "_FXShell","_class_FXPyMessageBox",SwigFXPyMessageBoxToFXShell},
    { "_FXShell","_FXPyMessageBox",SwigFXPyMessageBoxToFXShell},
    { "_FXShell","_class_FXMessageBox",SwigFXMessageBoxToFXShell},
    { "_FXShell","_FXMessageBox",SwigFXMessageBoxToFXShell},
    { "_FXShell","_class_FXPyPrintDialog",SwigFXPyPrintDialogToFXShell},
    { "_FXShell","_FXPyPrintDialog",SwigFXPyPrintDialogToFXShell},
    { "_FXShell","_class_FXPrintDialog",SwigFXPrintDialogToFXShell},
    { "_FXShell","_FXPrintDialog",SwigFXPrintDialogToFXShell},
    { "_FXShell","_class_FXPyDirDialog",SwigFXPyDirDialogToFXShell},
    { "_FXShell","_FXPyDirDialog",SwigFXPyDirDialogToFXShell},
    { "_FXShell","_class_FXDirDialog",SwigFXDirDialogToFXShell},
    { "_FXShell","_FXDirDialog",SwigFXDirDialogToFXShell},
    { "_FXShell","_class_FXPyFontDialog",SwigFXPyFontDialogToFXShell},
    { "_FXShell","_FXPyFontDialog",SwigFXPyFontDialogToFXShell},
    { "_FXShell","_class_FXFontDialog",SwigFXFontDialogToFXShell},
    { "_FXShell","_FXFontDialog",SwigFXFontDialogToFXShell},
    { "_FXShell","_class_FXPyColorDialog",SwigFXPyColorDialogToFXShell},
    { "_FXShell","_FXPyColorDialog",SwigFXPyColorDialogToFXShell},
    { "_FXShell","_class_FXColorDialog",SwigFXColorDialogToFXShell},
    { "_FXShell","_FXColorDialog",SwigFXColorDialogToFXShell},
    { "_FXShell","_class_FXPyFileDialog",SwigFXPyFileDialogToFXShell},
    { "_FXShell","_FXPyFileDialog",SwigFXPyFileDialogToFXShell},
    { "_FXShell","_class_FXFileDialog",SwigFXFileDialogToFXShell},
    { "_FXShell","_FXFileDialog",SwigFXFileDialogToFXShell},
    { "_FXShell","_class_FXPyDialogBox",SwigFXPyDialogBoxToFXShell},
    { "_FXShell","_FXPyDialogBox",SwigFXPyDialogBoxToFXShell},
    { "_FXShell","_class_FXDialogBox",SwigFXDialogBoxToFXShell},
    { "_FXShell","_FXDialogBox",SwigFXDialogBoxToFXShell},
    { "_FXShell","_class_FXShell",0},
    { "_FXPyComboBox","_class_FXPyComboBox",0},
    { "_FXHeader","_class_FXHeader",0},
    { "_FXPyTreeListBox","_class_FXPyTreeListBox",0},
    { "_class_FXFileItem","_class_FXPyFileItem",SwigFXPyFileItemToFXFileItem},
    { "_class_FXFileItem","_FXPyFileItem",SwigFXPyFileItemToFXFileItem},
    { "_class_FXFileItem","_FXFileItem",0},
    { "_FXCanvas","_class_FXCanvas",0},
    { "_FXCheckButton","_class_FXCheckButton",0},
    { "_FXPySlider","_class_FXPySlider",0},
    { "_class_FXFileList","_class_FXPyFileList",SwigFXPyFileListToFXFileList},
    { "_class_FXFileList","_FXPyFileList",SwigFXPyFileListToFXFileList},
    { "_class_FXFileList","_FXFileList",0},
    { "_class_FXRGBImage","_FXRGBImage",0},
    { "_class_FXPyToolbarShell","_FXPyToolbarShell",0},
    { "_unsigned_short","_FXshort",0},
    { "_unsigned_short","_FXushort",0},
    { "_unsigned_short","_short",0},
    { "_class_FXPyTopWindow","_FXPyTopWindow",0},
    { "_class_FXPyScrollCorner","_FXPyScrollCorner",0},
    { "_class_FXPyListItem","_FXPyListItem",0},
    { "_class_FXToolbarShell","_FXToolbarShell",0},
    { "_FXPyFontDialog","_class_FXPyFontDialog",0},
    { "_class_FXProgressDialog","_class_FXPyProgressDialog",SwigFXPyProgressDialogToFXProgressDialog},
    { "_class_FXProgressDialog","_FXPyProgressDialog",SwigFXPyProgressDialogToFXProgressDialog},
    { "_class_FXProgressDialog","_FXProgressDialog",0},
    { "_class_FXBMPImage","_FXBMPImage",0},
    { "_class_FXICOImage","_FXICOImage",0},
    { "_class_FXRecentFiles","_FXRecentFiles",0},
    { "_class_FXDebugTarget","_FXDebugTarget",0},
    { "_class_FXPyTextField","_FXPyTextField",0},
    { "_class_FXScrollCorner","_FXScrollCorner",0},
    { "_class_FXPyHeader","_FXPyHeader",0},
    { "_FXListBox","_class_FXListBox",0},
    { "_class_FXDirDialog","_class_FXPyDirDialog",SwigFXPyDirDialogToFXDirDialog},
    { "_class_FXDirDialog","_FXPyDirDialog",SwigFXPyDirDialogToFXDirDialog},
    { "_class_FXDirDialog","_FXDirDialog",0},
    { "_FXDrawable","_class_FXPyProgressDialog",SwigFXPyProgressDialogToFXDrawable},
    { "_FXDrawable","_FXPyProgressDialog",SwigFXPyProgressDialogToFXDrawable},
    { "_FXDrawable","_class_FXProgressDialog",SwigFXProgressDialogToFXDrawable},
    { "_FXDrawable","_FXProgressDialog",SwigFXProgressDialogToFXDrawable},
    { "_FXDrawable","_class_FXPyInputDialog",SwigFXPyInputDialogToFXDrawable},
    { "_FXDrawable","_FXPyInputDialog",SwigFXPyInputDialogToFXDrawable},
    { "_FXDrawable","_class_FXInputDialog",SwigFXInputDialogToFXDrawable},
    { "_FXDrawable","_FXInputDialog",SwigFXInputDialogToFXDrawable},
    { "_FXDrawable","_class_FXPySearchDialog",SwigFXPySearchDialogToFXDrawable},
    { "_FXDrawable","_FXPySearchDialog",SwigFXPySearchDialogToFXDrawable},
    { "_FXDrawable","_class_FXSearchDialog",SwigFXSearchDialogToFXDrawable},
    { "_FXDrawable","_FXSearchDialog",SwigFXSearchDialogToFXDrawable},
    { "_FXDrawable","_class_FXPyReplaceDialog",SwigFXPyReplaceDialogToFXDrawable},
    { "_FXDrawable","_FXPyReplaceDialog",SwigFXPyReplaceDialogToFXDrawable},
    { "_FXDrawable","_class_FXReplaceDialog",SwigFXReplaceDialogToFXDrawable},
    { "_FXDrawable","_FXReplaceDialog",SwigFXReplaceDialogToFXDrawable},
    { "_FXDrawable","_class_FXPyMessageBox",SwigFXPyMessageBoxToFXDrawable},
    { "_FXDrawable","_FXPyMessageBox",SwigFXPyMessageBoxToFXDrawable},
    { "_FXDrawable","_class_FXMessageBox",SwigFXMessageBoxToFXDrawable},
    { "_FXDrawable","_FXMessageBox",SwigFXMessageBoxToFXDrawable},
    { "_FXDrawable","_class_FXPyPrintDialog",SwigFXPyPrintDialogToFXDrawable},
    { "_FXDrawable","_FXPyPrintDialog",SwigFXPyPrintDialogToFXDrawable},
    { "_FXDrawable","_class_FXPrintDialog",SwigFXPrintDialogToFXDrawable},
    { "_FXDrawable","_FXPrintDialog",SwigFXPrintDialogToFXDrawable},
    { "_FXDrawable","_class_FXPyDirDialog",SwigFXPyDirDialogToFXDrawable},
    { "_FXDrawable","_FXPyDirDialog",SwigFXPyDirDialogToFXDrawable},
    { "_FXDrawable","_class_FXDirDialog",SwigFXDirDialogToFXDrawable},
    { "_FXDrawable","_FXDirDialog",SwigFXDirDialogToFXDrawable},
    { "_FXDrawable","_class_FXPyDirSelector",SwigFXPyDirSelectorToFXDrawable},
    { "_FXDrawable","_FXPyDirSelector",SwigFXPyDirSelectorToFXDrawable},
    { "_FXDrawable","_class_FXDirSelector",SwigFXDirSelectorToFXDrawable},
    { "_FXDrawable","_FXDirSelector",SwigFXDirSelectorToFXDrawable},
    { "_FXDrawable","_class_FXPyFontDialog",SwigFXPyFontDialogToFXDrawable},
    { "_FXDrawable","_FXPyFontDialog",SwigFXPyFontDialogToFXDrawable},
    { "_FXDrawable","_class_FXFontDialog",SwigFXFontDialogToFXDrawable},
    { "_FXDrawable","_FXFontDialog",SwigFXFontDialogToFXDrawable},
    { "_FXDrawable","_class_FXPyFontSelector",SwigFXPyFontSelectorToFXDrawable},
    { "_FXDrawable","_FXPyFontSelector",SwigFXPyFontSelectorToFXDrawable},
    { "_FXDrawable","_class_FXFontSelector",SwigFXFontSelectorToFXDrawable},
    { "_FXDrawable","_FXFontSelector",SwigFXFontSelectorToFXDrawable},
    { "_FXDrawable","_class_FXPyColorDialog",SwigFXPyColorDialogToFXDrawable},
    { "_FXDrawable","_FXPyColorDialog",SwigFXPyColorDialogToFXDrawable},
    { "_FXDrawable","_class_FXColorDialog",SwigFXColorDialogToFXDrawable},
    { "_FXDrawable","_FXColorDialog",SwigFXColorDialogToFXDrawable},
    { "_FXDrawable","_class_FXPyColorSelector",SwigFXPyColorSelectorToFXDrawable},
    { "_FXDrawable","_FXPyColorSelector",SwigFXPyColorSelectorToFXDrawable},
    { "_FXDrawable","_class_FXColorSelector",SwigFXColorSelectorToFXDrawable},
    { "_FXDrawable","_FXColorSelector",SwigFXColorSelectorToFXDrawable},
    { "_FXDrawable","_class_FXPyFileDialog",SwigFXPyFileDialogToFXDrawable},
    { "_FXDrawable","_FXPyFileDialog",SwigFXPyFileDialogToFXDrawable},
    { "_FXDrawable","_class_FXFileDialog",SwigFXFileDialogToFXDrawable},
    { "_FXDrawable","_FXFileDialog",SwigFXFileDialogToFXDrawable},
    { "_FXDrawable","_class_FXPyFileSelector",SwigFXPyFileSelectorToFXDrawable},
    { "_FXDrawable","_FXPyFileSelector",SwigFXPyFileSelectorToFXDrawable},
    { "_FXDrawable","_class_FXFileSelector",SwigFXFileSelectorToFXDrawable},
    { "_FXDrawable","_FXFileSelector",SwigFXFileSelectorToFXDrawable},
    { "_FXDrawable","_class_FXPyFileList",SwigFXPyFileListToFXDrawable},
    { "_FXDrawable","_FXPyFileList",SwigFXPyFileListToFXDrawable},
    { "_FXDrawable","_class_FXFileList",SwigFXFileListToFXDrawable},
    { "_FXDrawable","_FXFileList",SwigFXFileListToFXDrawable},
    { "_FXDrawable","_class_FXPyDirBox",SwigFXPyDirBoxToFXDrawable},
    { "_FXDrawable","_FXPyDirBox",SwigFXPyDirBoxToFXDrawable},
    { "_FXDrawable","_class_FXDirBox",SwigFXDirBoxToFXDrawable},
    { "_FXDrawable","_FXDirBox",SwigFXDirBoxToFXDrawable},
    { "_FXDrawable","_class_FXPyDialogBox",SwigFXPyDialogBoxToFXDrawable},
    { "_FXDrawable","_FXPyDialogBox",SwigFXPyDialogBoxToFXDrawable},
    { "_FXDrawable","_class_FXDialogBox",SwigFXDialogBoxToFXDrawable},
    { "_FXDrawable","_FXDialogBox",SwigFXDialogBoxToFXDrawable},
    { "_FXDrawable","_class_FXDrawable",0},
    { "_class_FXPCXImage","_FXPCXImage",0},
    { "_FXJPGIcon","_class_FXJPGIcon",0},
    { "_class_FXPyCanvas","_FXPyCanvas",0},
    { "_class_FX4Splitter","_FX4Splitter",0},
    { "_class_FXOption","_FXOption",0},
    { "_FXPyXPMIcon","_class_FXPyXPMIcon",0},
    { "_FXIconDict","_class_FXPyIconDict",SwigFXPyIconDictToFXIconDict},
    { "_FXIconDict","_FXPyIconDict",SwigFXPyIconDictToFXIconDict},
    { "_FXIconDict","_class_FXIconDict",0},
    { "_FXObject_p","_FXObjectPtr",0},
    { "_FXID","_FXInputHandle",0},
    { "_FXID","_FXDragType",0},
    { "_FXID","_FXHotKey",0},
    { "_FXID","_FXColor",0},
    { "_FXID","_unsigned_int",0},
    { "_FXID","_int",0},
    { "_FXID","_FXuint",0},
    { "_FXID","_FXint",0},
    { "_FXID","_FXSelector",0},
    { "_FXHorizontalSeparator","_class_FXHorizontalSeparator",0},
    { "_class_FXDial","_FXDial",0},
    { "_class_FXRadioButton","_FXRadioButton",0},
    { "_FXPyDialogBox","_class_FXPyDialogBox",0},
    { "_FXFontDialog","_class_FXPyFontDialog",SwigFXPyFontDialogToFXFontDialog},
    { "_FXFontDialog","_FXPyFontDialog",SwigFXPyFontDialogToFXFontDialog},
    { "_FXFontDialog","_class_FXFontDialog",0},
    { "_class_FXReplaceDialog","_class_FXPySearchDialog",SwigFXPySearchDialogToFXReplaceDialog},
    { "_class_FXReplaceDialog","_FXPySearchDialog",SwigFXPySearchDialogToFXReplaceDialog},
    { "_class_FXReplaceDialog","_class_FXSearchDialog",SwigFXSearchDialogToFXReplaceDialog},
    { "_class_FXReplaceDialog","_FXSearchDialog",SwigFXSearchDialogToFXReplaceDialog},
    { "_class_FXReplaceDialog","_class_FXPyReplaceDialog",SwigFXPyReplaceDialogToFXReplaceDialog},
    { "_class_FXReplaceDialog","_FXPyReplaceDialog",SwigFXPyReplaceDialogToFXReplaceDialog},
    { "_class_FXReplaceDialog","_FXReplaceDialog",0},
    { "_class_FXPyGIFIcon","_FXPyGIFIcon",0},
    { "_class_FXPyVerticalSeparator","_FXPyVerticalSeparator",0},
    { "_struct_FXPrinter","_FXPrinter",0},
    { "_FXPyTIFIcon","_class_FXPyTIFIcon",0},
    { "_FXPyTreeItem","_class_FXPyTreeItem",0},
    { "_class_FXDirBox","_class_FXPyDirBox",SwigFXPyDirBoxToFXDirBox},
    { "_class_FXDirBox","_FXPyDirBox",SwigFXPyDirBoxToFXDirBox},
    { "_class_FXDirBox","_FXDirBox",0},
    { "_class_FXPCXIcon","_FXPCXIcon",0},
    { "_class_FXPySpinner","_FXPySpinner",0},
    { "_class_FXToolbarTab","_FXToolbarTab",0},
    { "_FXPyTreeList","_class_FXPyTreeList",0},
    { "_FXPyFileDict","_class_FXPyFileDict",0},
    { "_signed_short","_FXshort",0},
    { "_signed_short","_short",0},
    { "_class_FXFrame","_FXFrame",0},
    { "_class_FXTopWindow","_class_FXPyProgressDialog",SwigFXPyProgressDialogToFXTopWindow},
    { "_class_FXTopWindow","_FXPyProgressDialog",SwigFXPyProgressDialogToFXTopWindow},
    { "_class_FXTopWindow","_class_FXProgressDialog",SwigFXProgressDialogToFXTopWindow},
    { "_class_FXTopWindow","_FXProgressDialog",SwigFXProgressDialogToFXTopWindow},
    { "_class_FXTopWindow","_class_FXPyInputDialog",SwigFXPyInputDialogToFXTopWindow},
    { "_class_FXTopWindow","_FXPyInputDialog",SwigFXPyInputDialogToFXTopWindow},
    { "_class_FXTopWindow","_class_FXInputDialog",SwigFXInputDialogToFXTopWindow},
    { "_class_FXTopWindow","_FXInputDialog",SwigFXInputDialogToFXTopWindow},
    { "_class_FXTopWindow","_class_FXPySearchDialog",SwigFXPySearchDialogToFXTopWindow},
    { "_class_FXTopWindow","_FXPySearchDialog",SwigFXPySearchDialogToFXTopWindow},
    { "_class_FXTopWindow","_class_FXSearchDialog",SwigFXSearchDialogToFXTopWindow},
    { "_class_FXTopWindow","_FXSearchDialog",SwigFXSearchDialogToFXTopWindow},
    { "_class_FXTopWindow","_class_FXPyReplaceDialog",SwigFXPyReplaceDialogToFXTopWindow},
    { "_class_FXTopWindow","_FXPyReplaceDialog",SwigFXPyReplaceDialogToFXTopWindow},
    { "_class_FXTopWindow","_class_FXReplaceDialog",SwigFXReplaceDialogToFXTopWindow},
    { "_class_FXTopWindow","_FXReplaceDialog",SwigFXReplaceDialogToFXTopWindow},
    { "_class_FXTopWindow","_class_FXPyMessageBox",SwigFXPyMessageBoxToFXTopWindow},
    { "_class_FXTopWindow","_FXPyMessageBox",SwigFXPyMessageBoxToFXTopWindow},
    { "_class_FXTopWindow","_class_FXMessageBox",SwigFXMessageBoxToFXTopWindow},
    { "_class_FXTopWindow","_FXMessageBox",SwigFXMessageBoxToFXTopWindow},
    { "_class_FXTopWindow","_class_FXPyPrintDialog",SwigFXPyPrintDialogToFXTopWindow},
    { "_class_FXTopWindow","_FXPyPrintDialog",SwigFXPyPrintDialogToFXTopWindow},
    { "_class_FXTopWindow","_class_FXPrintDialog",SwigFXPrintDialogToFXTopWindow},
    { "_class_FXTopWindow","_FXPrintDialog",SwigFXPrintDialogToFXTopWindow},
    { "_class_FXTopWindow","_class_FXPyDirDialog",SwigFXPyDirDialogToFXTopWindow},
    { "_class_FXTopWindow","_FXPyDirDialog",SwigFXPyDirDialogToFXTopWindow},
    { "_class_FXTopWindow","_class_FXDirDialog",SwigFXDirDialogToFXTopWindow},
    { "_class_FXTopWindow","_FXDirDialog",SwigFXDirDialogToFXTopWindow},
    { "_class_FXTopWindow","_class_FXPyFontDialog",SwigFXPyFontDialogToFXTopWindow},
    { "_class_FXTopWindow","_FXPyFontDialog",SwigFXPyFontDialogToFXTopWindow},
    { "_class_FXTopWindow","_class_FXFontDialog",SwigFXFontDialogToFXTopWindow},
    { "_class_FXTopWindow","_FXFontDialog",SwigFXFontDialogToFXTopWindow},
    { "_class_FXTopWindow","_class_FXPyColorDialog",SwigFXPyColorDialogToFXTopWindow},
    { "_class_FXTopWindow","_FXPyColorDialog",SwigFXPyColorDialogToFXTopWindow},
    { "_class_FXTopWindow","_class_FXColorDialog",SwigFXColorDialogToFXTopWindow},
    { "_class_FXTopWindow","_FXColorDialog",SwigFXColorDialogToFXTopWindow},
    { "_class_FXTopWindow","_class_FXPyFileDialog",SwigFXPyFileDialogToFXTopWindow},
    { "_class_FXTopWindow","_FXPyFileDialog",SwigFXPyFileDialogToFXTopWindow},
    { "_class_FXTopWindow","_class_FXFileDialog",SwigFXFileDialogToFXTopWindow},
    { "_class_FXTopWindow","_FXFileDialog",SwigFXFileDialogToFXTopWindow},
    { "_class_FXTopWindow","_class_FXPyDialogBox",SwigFXPyDialogBoxToFXTopWindow},
    { "_class_FXTopWindow","_FXPyDialogBox",SwigFXPyDialogBoxToFXTopWindow},
    { "_class_FXTopWindow","_class_FXDialogBox",SwigFXDialogBoxToFXTopWindow},
    { "_class_FXTopWindow","_FXDialogBox",SwigFXDialogBoxToFXTopWindow},
    { "_class_FXTopWindow","_FXTopWindow",0},
    { "_FXfloat","_float",0},
    { "_FXEvent","_struct_FXEvent",0},
    { "_class_FXPyComposite","_FXPyComposite",0},
    { "_FXColorWell","_class_FXColorWell",0},
    { "_class_FXTextField","_FXTextField",0},
    { "_class_FXTabItem","_FXTabItem",0},
    { "_FXPyColorWheel","_class_FXPyColorWheel",0},
    { "_class_FXPyTIFImage","_FXPyTIFImage",0},
    { "_class_FXPNGIcon","_FXPNGIcon",0},
    { "_struct_FXSegment","_FXSegment",0},
    { "_FXToolbarGrip","_class_FXToolbarGrip",0},
    { "_FXPyTooltip","_class_FXPyTooltip",0},
    { "_FXPyMessageBox","_class_FXPyMessageBox",0},
    { "_unsigned_char","_FXbool",0},
    { "_unsigned_char","_FXuchar",0},
    { "_FXPixel","_unsigned_long",0},
    { "_FXPixel","_long",0},
    { "_FXPixel","_FXTime",0},
    { "_FXImage","_class_FXImage",0},
    { "_FXWindow","_class_FXPyProgressDialog",SwigFXPyProgressDialogToFXWindow},
    { "_FXWindow","_FXPyProgressDialog",SwigFXPyProgressDialogToFXWindow},
    { "_FXWindow","_class_FXProgressDialog",SwigFXProgressDialogToFXWindow},
    { "_FXWindow","_FXProgressDialog",SwigFXProgressDialogToFXWindow},
    { "_FXWindow","_class_FXPyInputDialog",SwigFXPyInputDialogToFXWindow},
    { "_FXWindow","_FXPyInputDialog",SwigFXPyInputDialogToFXWindow},
    { "_FXWindow","_class_FXInputDialog",SwigFXInputDialogToFXWindow},
    { "_FXWindow","_FXInputDialog",SwigFXInputDialogToFXWindow},
    { "_FXWindow","_class_FXPySearchDialog",SwigFXPySearchDialogToFXWindow},
    { "_FXWindow","_FXPySearchDialog",SwigFXPySearchDialogToFXWindow},
    { "_FXWindow","_class_FXSearchDialog",SwigFXSearchDialogToFXWindow},
    { "_FXWindow","_FXSearchDialog",SwigFXSearchDialogToFXWindow},
    { "_FXWindow","_class_FXPyReplaceDialog",SwigFXPyReplaceDialogToFXWindow},
    { "_FXWindow","_FXPyReplaceDialog",SwigFXPyReplaceDialogToFXWindow},
    { "_FXWindow","_class_FXReplaceDialog",SwigFXReplaceDialogToFXWindow},
    { "_FXWindow","_FXReplaceDialog",SwigFXReplaceDialogToFXWindow},
    { "_FXWindow","_class_FXPyMessageBox",SwigFXPyMessageBoxToFXWindow},
    { "_FXWindow","_FXPyMessageBox",SwigFXPyMessageBoxToFXWindow},
    { "_FXWindow","_class_FXMessageBox",SwigFXMessageBoxToFXWindow},
    { "_FXWindow","_FXMessageBox",SwigFXMessageBoxToFXWindow},
    { "_FXWindow","_class_FXPyPrintDialog",SwigFXPyPrintDialogToFXWindow},
    { "_FXWindow","_FXPyPrintDialog",SwigFXPyPrintDialogToFXWindow},
    { "_FXWindow","_class_FXPrintDialog",SwigFXPrintDialogToFXWindow},
    { "_FXWindow","_FXPrintDialog",SwigFXPrintDialogToFXWindow},
    { "_FXWindow","_class_FXPyDirDialog",SwigFXPyDirDialogToFXWindow},
    { "_FXWindow","_FXPyDirDialog",SwigFXPyDirDialogToFXWindow},
    { "_FXWindow","_class_FXDirDialog",SwigFXDirDialogToFXWindow},
    { "_FXWindow","_FXDirDialog",SwigFXDirDialogToFXWindow},
    { "_FXWindow","_class_FXPyDirSelector",SwigFXPyDirSelectorToFXWindow},
    { "_FXWindow","_FXPyDirSelector",SwigFXPyDirSelectorToFXWindow},
    { "_FXWindow","_class_FXDirSelector",SwigFXDirSelectorToFXWindow},
    { "_FXWindow","_FXDirSelector",SwigFXDirSelectorToFXWindow},
    { "_FXWindow","_class_FXPyFontDialog",SwigFXPyFontDialogToFXWindow},
    { "_FXWindow","_FXPyFontDialog",SwigFXPyFontDialogToFXWindow},
    { "_FXWindow","_class_FXFontDialog",SwigFXFontDialogToFXWindow},
    { "_FXWindow","_FXFontDialog",SwigFXFontDialogToFXWindow},
    { "_FXWindow","_class_FXPyFontSelector",SwigFXPyFontSelectorToFXWindow},
    { "_FXWindow","_FXPyFontSelector",SwigFXPyFontSelectorToFXWindow},
    { "_FXWindow","_class_FXFontSelector",SwigFXFontSelectorToFXWindow},
    { "_FXWindow","_FXFontSelector",SwigFXFontSelectorToFXWindow},
    { "_FXWindow","_class_FXPyColorDialog",SwigFXPyColorDialogToFXWindow},
    { "_FXWindow","_FXPyColorDialog",SwigFXPyColorDialogToFXWindow},
    { "_FXWindow","_class_FXColorDialog",SwigFXColorDialogToFXWindow},
    { "_FXWindow","_FXColorDialog",SwigFXColorDialogToFXWindow},
    { "_FXWindow","_class_FXPyColorSelector",SwigFXPyColorSelectorToFXWindow},
    { "_FXWindow","_FXPyColorSelector",SwigFXPyColorSelectorToFXWindow},
    { "_FXWindow","_class_FXColorSelector",SwigFXColorSelectorToFXWindow},
    { "_FXWindow","_FXColorSelector",SwigFXColorSelectorToFXWindow},
    { "_FXWindow","_class_FXPyFileDialog",SwigFXPyFileDialogToFXWindow},
    { "_FXWindow","_FXPyFileDialog",SwigFXPyFileDialogToFXWindow},
    { "_FXWindow","_class_FXFileDialog",SwigFXFileDialogToFXWindow},
    { "_FXWindow","_FXFileDialog",SwigFXFileDialogToFXWindow},
    { "_FXWindow","_class_FXPyFileSelector",SwigFXPyFileSelectorToFXWindow},
    { "_FXWindow","_FXPyFileSelector",SwigFXPyFileSelectorToFXWindow},
    { "_FXWindow","_class_FXFileSelector",SwigFXFileSelectorToFXWindow},
    { "_FXWindow","_FXFileSelector",SwigFXFileSelectorToFXWindow},
    { "_FXWindow","_class_FXPyFileList",SwigFXPyFileListToFXWindow},
    { "_FXWindow","_FXPyFileList",SwigFXPyFileListToFXWindow},
    { "_FXWindow","_class_FXFileList",SwigFXFileListToFXWindow},
    { "_FXWindow","_FXFileList",SwigFXFileListToFXWindow},
    { "_FXWindow","_class_FXPyDirBox",SwigFXPyDirBoxToFXWindow},
    { "_FXWindow","_FXPyDirBox",SwigFXPyDirBoxToFXWindow},
    { "_FXWindow","_class_FXDirBox",SwigFXDirBoxToFXWindow},
    { "_FXWindow","_FXDirBox",SwigFXDirBoxToFXWindow},
    { "_FXWindow","_class_FXPyDialogBox",SwigFXPyDialogBoxToFXWindow},
    { "_FXWindow","_FXPyDialogBox",SwigFXPyDialogBoxToFXWindow},
    { "_FXWindow","_class_FXDialogBox",SwigFXDialogBoxToFXWindow},
    { "_FXWindow","_FXDialogBox",SwigFXDialogBoxToFXWindow},
    { "_FXWindow","_class_FXWindow",0},
    { "_FXSearchDialog","_class_FXPySearchDialog",SwigFXPySearchDialogToFXSearchDialog},
    { "_FXSearchDialog","_FXPySearchDialog",SwigFXPySearchDialogToFXSearchDialog},
    { "_FXSearchDialog","_class_FXSearchDialog",0},
    { "_unsigned_int","_FXInputHandle",0},
    { "_unsigned_int","_FXDragType",0},
    { "_unsigned_int","_FXHotKey",0},
    { "_unsigned_int","_FXColor",0},
    { "_unsigned_int","_FXID",0},
    { "_unsigned_int","_FXSelector",0},
    { "_unsigned_int","_FXint",0},
    { "_unsigned_int","_FXuint",0},
    { "_unsigned_int","_int",0},
    { "_FXPyTGAImage","_class_FXPyTGAImage",0},
    { "_FXDict","_class_FXPyFileDict",SwigFXPyFileDictToFXDict},
    { "_FXDict","_FXPyFileDict",SwigFXPyFileDictToFXDict},
    { "_FXDict","_class_FXFileDict",SwigFXFileDictToFXDict},
    { "_FXDict","_FXFileDict",SwigFXFileDictToFXDict},
    { "_FXDict","_class_FXPyIconDict",SwigFXPyIconDictToFXDict},
    { "_FXDict","_FXPyIconDict",SwigFXPyIconDictToFXDict},
    { "_FXDict","_class_FXIconDict",SwigFXIconDictToFXDict},
    { "_FXDict","_FXIconDict",SwigFXIconDictToFXDict},
    { "_FXDict","_class_FXDict",0},
    { "_FXPyDCPrint","_class_FXPyDCPrint",0},
    { "_FXColorWheel","_class_FXColorWheel",0},
    { "_FXuint","_FXInputHandle",0},
    { "_FXuint","_FXDragType",0},
    { "_FXuint","_FXHotKey",0},
    { "_FXuint","_FXColor",0},
    { "_FXuint","_FXID",0},
    { "_FXuint","_FXSelector",0},
    { "_FXuint","_FXint",0},
    { "_FXuint","_unsigned_int",0},
    { "_FXuint","_int",0},
    { "_class_FXPyScrollArea","_FXPyScrollArea",0},
    { "_FXPyTabBook","_class_FXPyTabBook",0},
    { "_class_FXPyComboBox","_FXPyComboBox",0},
    { "_class_FXPyTreeListBox","_FXPyTreeListBox",0},
    { "_FXPyFontSelector","_class_FXPyFontSelector",0},
    { "_short","_FXshort",0},
    { "_short","_FXushort",0},
    { "_short","_unsigned_short",0},
    { "_short","_signed_short",0},
    { "_FXRectangle","_class_FXRectangle",0},
    { "_FXPyFont","_class_FXPyFont",0},
    { "_FXPyDCWindow","_class_FXPyDCWindow",0},
    { "_FXPyStatusline","_class_FXPyStatusline",0},
    { "_FXMessageBox","_class_FXPyMessageBox",SwigFXPyMessageBoxToFXMessageBox},
    { "_FXMessageBox","_FXPyMessageBox",SwigFXPyMessageBoxToFXMessageBox},
    { "_FXMessageBox","_class_FXMessageBox",0},
    { "_class_FXApp","_FXApp",0},
    { "_FXXPMImage","_class_FXXPMImage",0},
    { "_class_FXPyWindow","_FXPyWindow",0},
    { "_FXPacker","_class_FXPyDirSelector",SwigFXPyDirSelectorToFXPacker},
    { "_FXPacker","_FXPyDirSelector",SwigFXPyDirSelectorToFXPacker},
    { "_FXPacker","_class_FXDirSelector",SwigFXDirSelectorToFXPacker},
    { "_FXPacker","_FXDirSelector",SwigFXDirSelectorToFXPacker},
    { "_FXPacker","_class_FXPyFontSelector",SwigFXPyFontSelectorToFXPacker},
    { "_FXPacker","_FXPyFontSelector",SwigFXPyFontSelectorToFXPacker},
    { "_FXPacker","_class_FXFontSelector",SwigFXFontSelectorToFXPacker},
    { "_FXPacker","_FXFontSelector",SwigFXFontSelectorToFXPacker},
    { "_FXPacker","_class_FXPyColorSelector",SwigFXPyColorSelectorToFXPacker},
    { "_FXPacker","_FXPyColorSelector",SwigFXPyColorSelectorToFXPacker},
    { "_FXPacker","_class_FXColorSelector",SwigFXColorSelectorToFXPacker},
    { "_FXPacker","_FXColorSelector",SwigFXColorSelectorToFXPacker},
    { "_FXPacker","_class_FXPyFileSelector",SwigFXPyFileSelectorToFXPacker},
    { "_FXPacker","_FXPyFileSelector",SwigFXPyFileSelectorToFXPacker},
    { "_FXPacker","_class_FXFileSelector",SwigFXFileSelectorToFXPacker},
    { "_FXPacker","_FXFileSelector",SwigFXFileSelectorToFXPacker},
    { "_FXPacker","_class_FXPyDirBox",SwigFXPyDirBoxToFXPacker},
    { "_FXPacker","_FXPyDirBox",SwigFXPyDirBoxToFXPacker},
    { "_FXPacker","_class_FXDirBox",SwigFXDirBoxToFXPacker},
    { "_FXPacker","_FXDirBox",SwigFXDirBoxToFXPacker},
    { "_FXPacker","_class_FXPacker",0},
    { "_FXGIFImage","_class_FXGIFImage",0},
    { "_class_FXComposite","_class_FXPyProgressDialog",SwigFXPyProgressDialogToFXComposite},
    { "_class_FXComposite","_FXPyProgressDialog",SwigFXPyProgressDialogToFXComposite},
    { "_class_FXComposite","_class_FXProgressDialog",SwigFXProgressDialogToFXComposite},
    { "_class_FXComposite","_FXProgressDialog",SwigFXProgressDialogToFXComposite},
    { "_class_FXComposite","_class_FXPyInputDialog",SwigFXPyInputDialogToFXComposite},
    { "_class_FXComposite","_FXPyInputDialog",SwigFXPyInputDialogToFXComposite},
    { "_class_FXComposite","_class_FXInputDialog",SwigFXInputDialogToFXComposite},
    { "_class_FXComposite","_FXInputDialog",SwigFXInputDialogToFXComposite},
    { "_class_FXComposite","_class_FXPySearchDialog",SwigFXPySearchDialogToFXComposite},
    { "_class_FXComposite","_FXPySearchDialog",SwigFXPySearchDialogToFXComposite},
    { "_class_FXComposite","_class_FXSearchDialog",SwigFXSearchDialogToFXComposite},
    { "_class_FXComposite","_FXSearchDialog",SwigFXSearchDialogToFXComposite},
    { "_class_FXComposite","_class_FXPyReplaceDialog",SwigFXPyReplaceDialogToFXComposite},
    { "_class_FXComposite","_FXPyReplaceDialog",SwigFXPyReplaceDialogToFXComposite},
    { "_class_FXComposite","_class_FXReplaceDialog",SwigFXReplaceDialogToFXComposite},
    { "_class_FXComposite","_FXReplaceDialog",SwigFXReplaceDialogToFXComposite},
    { "_class_FXComposite","_class_FXPyMessageBox",SwigFXPyMessageBoxToFXComposite},
    { "_class_FXComposite","_FXPyMessageBox",SwigFXPyMessageBoxToFXComposite},
    { "_class_FXComposite","_class_FXMessageBox",SwigFXMessageBoxToFXComposite},
    { "_class_FXComposite","_FXMessageBox",SwigFXMessageBoxToFXComposite},
    { "_class_FXComposite","_class_FXPyPrintDialog",SwigFXPyPrintDialogToFXComposite},
    { "_class_FXComposite","_FXPyPrintDialog",SwigFXPyPrintDialogToFXComposite},
    { "_class_FXComposite","_class_FXPrintDialog",SwigFXPrintDialogToFXComposite},
    { "_class_FXComposite","_FXPrintDialog",SwigFXPrintDialogToFXComposite},
    { "_class_FXComposite","_class_FXPyDirDialog",SwigFXPyDirDialogToFXComposite},
    { "_class_FXComposite","_FXPyDirDialog",SwigFXPyDirDialogToFXComposite},
    { "_class_FXComposite","_class_FXDirDialog",SwigFXDirDialogToFXComposite},
    { "_class_FXComposite","_FXDirDialog",SwigFXDirDialogToFXComposite},
    { "_class_FXComposite","_class_FXPyDirSelector",SwigFXPyDirSelectorToFXComposite},
    { "_class_FXComposite","_FXPyDirSelector",SwigFXPyDirSelectorToFXComposite},
    { "_class_FXComposite","_class_FXDirSelector",SwigFXDirSelectorToFXComposite},
    { "_class_FXComposite","_FXDirSelector",SwigFXDirSelectorToFXComposite},
    { "_class_FXComposite","_class_FXPyFontDialog",SwigFXPyFontDialogToFXComposite},
    { "_class_FXComposite","_FXPyFontDialog",SwigFXPyFontDialogToFXComposite},
    { "_class_FXComposite","_class_FXFontDialog",SwigFXFontDialogToFXComposite},
    { "_class_FXComposite","_FXFontDialog",SwigFXFontDialogToFXComposite},
    { "_class_FXComposite","_class_FXPyFontSelector",SwigFXPyFontSelectorToFXComposite},
    { "_class_FXComposite","_FXPyFontSelector",SwigFXPyFontSelectorToFXComposite},
    { "_class_FXComposite","_class_FXFontSelector",SwigFXFontSelectorToFXComposite},
    { "_class_FXComposite","_FXFontSelector",SwigFXFontSelectorToFXComposite},
    { "_class_FXComposite","_class_FXPyColorDialog",SwigFXPyColorDialogToFXComposite},
    { "_class_FXComposite","_FXPyColorDialog",SwigFXPyColorDialogToFXComposite},
    { "_class_FXComposite","_class_FXColorDialog",SwigFXColorDialogToFXComposite},
    { "_class_FXComposite","_FXColorDialog",SwigFXColorDialogToFXComposite},
    { "_class_FXComposite","_class_FXPyColorSelector",SwigFXPyColorSelectorToFXComposite},
    { "_class_FXComposite","_FXPyColorSelector",SwigFXPyColorSelectorToFXComposite},
    { "_class_FXComposite","_class_FXColorSelector",SwigFXColorSelectorToFXComposite},
    { "_class_FXComposite","_FXColorSelector",SwigFXColorSelectorToFXComposite},
    { "_class_FXComposite","_class_FXPyFileDialog",SwigFXPyFileDialogToFXComposite},
    { "_class_FXComposite","_FXPyFileDialog",SwigFXPyFileDialogToFXComposite},
    { "_class_FXComposite","_class_FXFileDialog",SwigFXFileDialogToFXComposite},
    { "_class_FXComposite","_FXFileDialog",SwigFXFileDialogToFXComposite},
    { "_class_FXComposite","_class_FXPyFileSelector",SwigFXPyFileSelectorToFXComposite},
    { "_class_FXComposite","_FXPyFileSelector",SwigFXPyFileSelectorToFXComposite},
    { "_class_FXComposite","_class_FXFileSelector",SwigFXFileSelectorToFXComposite},
    { "_class_FXComposite","_FXFileSelector",SwigFXFileSelectorToFXComposite},
    { "_class_FXComposite","_class_FXPyFileList",SwigFXPyFileListToFXComposite},
    { "_class_FXComposite","_FXPyFileList",SwigFXPyFileListToFXComposite},
    { "_class_FXComposite","_class_FXFileList",SwigFXFileListToFXComposite},
    { "_class_FXComposite","_FXFileList",SwigFXFileListToFXComposite},
    { "_class_FXComposite","_class_FXPyDirBox",SwigFXPyDirBoxToFXComposite},
    { "_class_FXComposite","_FXPyDirBox",SwigFXPyDirBoxToFXComposite},
    { "_class_FXComposite","_class_FXDirBox",SwigFXDirBoxToFXComposite},
    { "_class_FXComposite","_FXDirBox",SwigFXDirBoxToFXComposite},
    { "_class_FXComposite","_class_FXPyDialogBox",SwigFXPyDialogBoxToFXComposite},
    { "_class_FXComposite","_FXPyDialogBox",SwigFXPyDialogBoxToFXComposite},
    { "_class_FXComposite","_class_FXDialogBox",SwigFXDialogBoxToFXComposite},
    { "_class_FXComposite","_FXDialogBox",SwigFXDialogBoxToFXComposite},
    { "_class_FXComposite","_FXComposite",0},
    { "_FXSplitter","_class_FXSplitter",0},
    { "_FXPyCommand","_class_FXPyCommand",0},
    { "_class_FXListBox","_FXListBox",0},
    { "_class_FXJPGIcon","_FXJPGIcon",0},
    { "_class_FXPyHorizontalSeparator","_FXPyHorizontalSeparator",0},
    { "_class_FXPyScrollbar","_FXPyScrollbar",0},
    { "_FXStatusline","_class_FXStatusline",0},
    { "_FXPyStatusbar","_class_FXPyStatusbar",0},
    { "_FXchar","_char",0},
    { "_class_FXPyPacker","_FXPyPacker",0},
    { "_FXPyOptionMenu","_class_FXPyOptionMenu",0},
    { "_class_FXPyHeaderItem","_FXPyHeaderItem",0},
    { "_FXuchar","_FXbool",0},
    { "_FXuchar","_unsigned_char",0},
    { "_class_FXHorizontalSeparator","_FXHorizontalSeparator",0},
    { "_FXPyList","_class_FXPyList",0},
    { "_class_FXFontDialog","_class_FXPyFontDialog",SwigFXPyFontDialogToFXFontDialog},
    { "_class_FXFontDialog","_FXPyFontDialog",SwigFXPyFontDialogToFXFontDialog},
    { "_class_FXFontDialog","_FXFontDialog",0},
    { "_FXPyProgressDialog","_class_FXPyProgressDialog",0},
    { "_int","_FXInputHandle",0},
    { "_int","_FXDragType",0},
    { "_int","_FXHotKey",0},
    { "_int","_FXColor",0},
    { "_int","_FXID",0},
    { "_int","_FXSelector",0},
    { "_int","_FXint",0},
    { "_int","_FXuint",0},
    { "_int","_unsigned_int",0},
    { "_int","_signed_int",0},
    { "_FXDragType","_FXInputHandle",0},
    { "_FXDragType","_FXID",0},
    { "_FXDragType","_FXSelector",0},
    { "_FXDragType","_FXint",0},
    { "_FXDragType","_FXuint",0},
    { "_FXDragType","_int",0},
    { "_FXDragType","_unsigned_int",0},
    { "_FXDragType","_FXColor",0},
    { "_FXDragType","_FXHotKey",0},
    { "_FXSettings","_class_FXSettings",0},
    { "_FXRegistry","_class_FXRegistry",0},
    { "_FXPyOption","_class_FXPyOption",0},
    { "_class_FXPyTreeItem","_FXPyTreeItem",0},
    { "_FXPyBMPIcon","_class_FXPyBMPIcon",0},
    { "_FXPyICOIcon","_class_FXPyICOIcon",0},
    { "_class_FXSwitcher","_FXSwitcher",0},
    { "_FXPyShutterItem","_class_FXPyShutterItem",0},
    { "_FXOptionMenu","_class_FXOptionMenu",0},
    { "_FXColorBar","_class_FXColorBar",0},
    { "_class_FXPyTreeList","_FXPyTreeList",0},
    { "_class_FXColorDialog","_class_FXPyColorDialog",SwigFXPyColorDialogToFXColorDialog},
    { "_class_FXColorDialog","_FXPyColorDialog",SwigFXPyColorDialogToFXColorDialog},
    { "_class_FXColorDialog","_FXColorDialog",0},
    { "_class_FXPyFileDict","_FXPyFileDict",0},
    { "_FXPicker","_class_FXPicker",0},
    { "_class_FXTabBar","_FXTabBar",0},
    { "_FXPyDirSelector","_class_FXPyDirSelector",0},
    { "_FXPSBounds","_struct_FXPSBounds",0},
    { "_FXPyJPGImage","_class_FXPyJPGImage",0},
    { "_class_FXPyPCXIcon","_FXPyPCXIcon",0},
    { "_FXPyLabel","_class_FXPyLabel",0},
    { "_FXTGAIcon","_class_FXTGAIcon",0},
    { "_FXDelegator","_class_FXDelegator",0},
    { "_class_FXScrollbar","_FXScrollbar",0},
    { "_FXPyDirBox","_class_FXPyDirBox",0},
    { "_FXGroupBox","_class_FXGroupBox",0},
    { "_class_FXArrowButton","_FXArrowButton",0},
    { "_class_FXPyTabItem","_FXPyTabItem",0},
    { "_FXSlider","_class_FXSlider",0},
    { "_FXIconItem","_class_FXPyFileItem",SwigFXPyFileItemToFXIconItem},
    { "_FXIconItem","_FXPyFileItem",SwigFXPyFileItemToFXIconItem},
    { "_FXIconItem","_class_FXFileItem",SwigFXFileItemToFXIconItem},
    { "_FXIconItem","_FXFileItem",SwigFXFileItemToFXIconItem},
    { "_FXIconItem","_class_FXIconItem",0},
    { "_class_FXPNGImage","_FXPNGImage",0},
    { "_class_FXPyPNGIcon","_FXPyPNGIcon",0},
    { "_class_FXPyRootWindow","_FXPyRootWindow",0},
    { "_FXPyToggleButton","_class_FXPyToggleButton",0},
    { "_class_FXPyPicker","_FXPyPicker",0},
    { "_FXIconList","_class_FXPyFileList",SwigFXPyFileListToFXIconList},
    { "_FXIconList","_FXPyFileList",SwigFXPyFileListToFXIconList},
    { "_FXIconList","_class_FXFileList",SwigFXFileListToFXIconList},
    { "_FXIconList","_FXFileList",SwigFXFileListToFXIconList},
    { "_FXIconList","_class_FXIconList",0},
    { "_class_FXPyTGAImage","_FXPyTGAImage",0},
    { "_class_FXDict","_class_FXPyFileDict",SwigFXPyFileDictToFXDict},
    { "_class_FXDict","_FXPyFileDict",SwigFXPyFileDictToFXDict},
    { "_class_FXDict","_class_FXFileDict",SwigFXFileDictToFXDict},
    { "_class_FXDict","_FXFileDict",SwigFXFileDictToFXDict},
    { "_class_FXDict","_class_FXPyIconDict",SwigFXPyIconDictToFXDict},
    { "_class_FXDict","_FXPyIconDict",SwigFXPyIconDictToFXDict},
    { "_class_FXDict","_class_FXIconDict",SwigFXIconDictToFXDict},
    { "_class_FXDict","_FXIconDict",SwigFXIconDictToFXDict},
    { "_class_FXDict","_FXDict",0},
    { "_class_FXVerticalSeparator","_FXVerticalSeparator",0},
    { "_FXPyToolbar","_class_FXPyToolbar",0},
    { "_FXPyDriveBox","_class_FXPyDriveBox",0},
    { "_class_FXColorWheel","_FXColorWheel",0},
    { "_FXPyInputDialog","_class_FXPyInputDialog",0},
    { "_class_FXShell","_class_FXPyProgressDialog",SwigFXPyProgressDialogToFXShell},
    { "_class_FXShell","_FXPyProgressDialog",SwigFXPyProgressDialogToFXShell},
    { "_class_FXShell","_class_FXProgressDialog",SwigFXProgressDialogToFXShell},
    { "_class_FXShell","_FXProgressDialog",SwigFXProgressDialogToFXShell},
    { "_class_FXShell","_class_FXPyInputDialog",SwigFXPyInputDialogToFXShell},
    { "_class_FXShell","_FXPyInputDialog",SwigFXPyInputDialogToFXShell},
    { "_class_FXShell","_class_FXInputDialog",SwigFXInputDialogToFXShell},
    { "_class_FXShell","_FXInputDialog",SwigFXInputDialogToFXShell},
    { "_class_FXShell","_class_FXPySearchDialog",SwigFXPySearchDialogToFXShell},
    { "_class_FXShell","_FXPySearchDialog",SwigFXPySearchDialogToFXShell},
    { "_class_FXShell","_class_FXSearchDialog",SwigFXSearchDialogToFXShell},
    { "_class_FXShell","_FXSearchDialog",SwigFXSearchDialogToFXShell},
    { "_class_FXShell","_class_FXPyReplaceDialog",SwigFXPyReplaceDialogToFXShell},
    { "_class_FXShell","_FXPyReplaceDialog",SwigFXPyReplaceDialogToFXShell},
    { "_class_FXShell","_class_FXReplaceDialog",SwigFXReplaceDialogToFXShell},
    { "_class_FXShell","_FXReplaceDialog",SwigFXReplaceDialogToFXShell},
    { "_class_FXShell","_class_FXPyMessageBox",SwigFXPyMessageBoxToFXShell},
    { "_class_FXShell","_FXPyMessageBox",SwigFXPyMessageBoxToFXShell},
    { "_class_FXShell","_class_FXMessageBox",SwigFXMessageBoxToFXShell},
    { "_class_FXShell","_FXMessageBox",SwigFXMessageBoxToFXShell},
    { "_class_FXShell","_class_FXPyPrintDialog",SwigFXPyPrintDialogToFXShell},
    { "_class_FXShell","_FXPyPrintDialog",SwigFXPyPrintDialogToFXShell},
    { "_class_FXShell","_class_FXPrintDialog",SwigFXPrintDialogToFXShell},
    { "_class_FXShell","_FXPrintDialog",SwigFXPrintDialogToFXShell},
    { "_class_FXShell","_class_FXPyDirDialog",SwigFXPyDirDialogToFXShell},
    { "_class_FXShell","_FXPyDirDialog",SwigFXPyDirDialogToFXShell},
    { "_class_FXShell","_class_FXDirDialog",SwigFXDirDialogToFXShell},
    { "_class_FXShell","_FXDirDialog",SwigFXDirDialogToFXShell},
    { "_class_FXShell","_class_FXPyFontDialog",SwigFXPyFontDialogToFXShell},
    { "_class_FXShell","_FXPyFontDialog",SwigFXPyFontDialogToFXShell},
    { "_class_FXShell","_class_FXFontDialog",SwigFXFontDialogToFXShell},
    { "_class_FXShell","_FXFontDialog",SwigFXFontDialogToFXShell},
    { "_class_FXShell","_class_FXPyColorDialog",SwigFXPyColorDialogToFXShell},
    { "_class_FXShell","_FXPyColorDialog",SwigFXPyColorDialogToFXShell},
    { "_class_FXShell","_class_FXColorDialog",SwigFXColorDialogToFXShell},
    { "_class_FXShell","_FXColorDialog",SwigFXColorDialogToFXShell},
    { "_class_FXShell","_class_FXPyFileDialog",SwigFXPyFileDialogToFXShell},
    { "_class_FXShell","_FXPyFileDialog",SwigFXPyFileDialogToFXShell},
    { "_class_FXShell","_class_FXFileDialog",SwigFXFileDialogToFXShell},
    { "_class_FXShell","_FXFileDialog",SwigFXFileDialogToFXShell},
    { "_class_FXShell","_class_FXPyDialogBox",SwigFXPyDialogBoxToFXShell},
    { "_class_FXShell","_FXPyDialogBox",SwigFXPyDialogBoxToFXShell},
    { "_class_FXShell","_class_FXDialogBox",SwigFXDialogBoxToFXShell},
    { "_class_FXShell","_FXDialogBox",SwigFXDialogBoxToFXShell},
    { "_class_FXShell","_FXShell",0},
    { "_FXPyShutter","_class_FXPyShutter",0},
    { "_FXInputHandle","_FXint",0},
    { "_FXInputHandle","_FXuint",0},
    { "_FXInputHandle","_unsigned_int",0},
    { "_FXInputHandle","_signed_int",0},
    { "_FXInputHandle","_int",0},
    { "_FXInputHandle","_FXSelector",0},
    { "_FXInputHandle","_FXID",0},
    { "_FXInputHandle","_FXColor",0},
    { "_FXInputHandle","_FXHotKey",0},
    { "_FXInputHandle","_FXDragType",0},
    { "_class_FXPyFileStream","_FXPyFileStream",0},
    { "_class_FXPyDCWindow","_FXPyDCWindow",0},
    { "_class_FXCheckButton","_FXCheckButton",0},
    { "_class_FXPySlider","_FXPySlider",0},
    { "_FXPyFileItem","_class_FXPyFileItem",0},
    { "_class_FXPyFileDialog","_FXPyFileDialog",0},
    { "_class_FXMessageBox","_class_FXPyMessageBox",SwigFXPyMessageBoxToFXMessageBox},
    { "_class_FXMessageBox","_FXPyMessageBox",SwigFXPyMessageBoxToFXMessageBox},
    { "_class_FXMessageBox","_FXMessageBox",0},
    { "_FXFont","_class_FXFont",0},
    { "_FXListItem","_class_FXListItem",0},
    { "_FXTreeListBox","_class_FXPyDirBox",SwigFXPyDirBoxToFXTreeListBox},
    { "_FXTreeListBox","_FXPyDirBox",SwigFXPyDirBoxToFXTreeListBox},
    { "_FXTreeListBox","_class_FXDirBox",SwigFXDirBoxToFXTreeListBox},
    { "_FXTreeListBox","_FXDirBox",SwigFXDirBoxToFXTreeListBox},
    { "_FXTreeListBox","_class_FXTreeListBox",0},
    { "_FXPyFileList","_class_FXPyFileList",0},
    { "_FXPyRGBImage","_class_FXPyRGBImage",0},
    { "_class_FXPyDataTarget","_FXPyDataTarget",0},
    { "_FXPyProgressBar","_class_FXPyProgressBar",0},
    { "_FXPyPrintDialog","_class_FXPyPrintDialog",0},
    { "_class_FXObject","_class_FXPyProgressDialog",SwigFXPyProgressDialogToFXObject},
    { "_class_FXObject","_FXPyProgressDialog",SwigFXPyProgressDialogToFXObject},
    { "_class_FXObject","_class_FXProgressDialog",SwigFXProgressDialogToFXObject},
    { "_class_FXObject","_FXProgressDialog",SwigFXProgressDialogToFXObject},
    { "_class_FXObject","_class_FXPyInputDialog",SwigFXPyInputDialogToFXObject},
    { "_class_FXObject","_FXPyInputDialog",SwigFXPyInputDialogToFXObject},
    { "_class_FXObject","_class_FXInputDialog",SwigFXInputDialogToFXObject},
    { "_class_FXObject","_FXInputDialog",SwigFXInputDialogToFXObject},
    { "_class_FXObject","_class_FXPySearchDialog",SwigFXPySearchDialogToFXObject},
    { "_class_FXObject","_FXPySearchDialog",SwigFXPySearchDialogToFXObject},
    { "_class_FXObject","_class_FXSearchDialog",SwigFXSearchDialogToFXObject},
    { "_class_FXObject","_FXSearchDialog",SwigFXSearchDialogToFXObject},
    { "_class_FXObject","_class_FXPyReplaceDialog",SwigFXPyReplaceDialogToFXObject},
    { "_class_FXObject","_FXPyReplaceDialog",SwigFXPyReplaceDialogToFXObject},
    { "_class_FXObject","_class_FXReplaceDialog",SwigFXReplaceDialogToFXObject},
    { "_class_FXObject","_FXReplaceDialog",SwigFXReplaceDialogToFXObject},
    { "_class_FXObject","_class_FXPyFileDict",SwigFXPyFileDictToFXObject},
    { "_class_FXObject","_FXPyFileDict",SwigFXPyFileDictToFXObject},
    { "_class_FXObject","_class_FXFileDict",SwigFXFileDictToFXObject},
    { "_class_FXObject","_FXFileDict",SwigFXFileDictToFXObject},
    { "_class_FXObject","_class_FXPyIconDict",SwigFXPyIconDictToFXObject},
    { "_class_FXObject","_FXPyIconDict",SwigFXPyIconDictToFXObject},
    { "_class_FXObject","_class_FXIconDict",SwigFXIconDictToFXObject},
    { "_class_FXObject","_FXIconDict",SwigFXIconDictToFXObject},
    { "_class_FXObject","_class_FXPyMessageBox",SwigFXPyMessageBoxToFXObject},
    { "_class_FXObject","_FXPyMessageBox",SwigFXPyMessageBoxToFXObject},
    { "_class_FXObject","_class_FXMessageBox",SwigFXMessageBoxToFXObject},
    { "_class_FXObject","_FXMessageBox",SwigFXMessageBoxToFXObject},
    { "_class_FXObject","_class_FXPyPrintDialog",SwigFXPyPrintDialogToFXObject},
    { "_class_FXObject","_FXPyPrintDialog",SwigFXPyPrintDialogToFXObject},
    { "_class_FXObject","_class_FXPrintDialog",SwigFXPrintDialogToFXObject},
    { "_class_FXObject","_FXPrintDialog",SwigFXPrintDialogToFXObject},
    { "_class_FXObject","_class_FXPyDirDialog",SwigFXPyDirDialogToFXObject},
    { "_class_FXObject","_FXPyDirDialog",SwigFXPyDirDialogToFXObject},
    { "_class_FXObject","_class_FXDirDialog",SwigFXDirDialogToFXObject},
    { "_class_FXObject","_FXDirDialog",SwigFXDirDialogToFXObject},
    { "_class_FXObject","_class_FXPyDirSelector",SwigFXPyDirSelectorToFXObject},
    { "_class_FXObject","_FXPyDirSelector",SwigFXPyDirSelectorToFXObject},
    { "_class_FXObject","_class_FXDirSelector",SwigFXDirSelectorToFXObject},
    { "_class_FXObject","_FXDirSelector",SwigFXDirSelectorToFXObject},
    { "_class_FXObject","_class_FXPyFontDialog",SwigFXPyFontDialogToFXObject},
    { "_class_FXObject","_FXPyFontDialog",SwigFXPyFontDialogToFXObject},
    { "_class_FXObject","_class_FXFontDialog",SwigFXFontDialogToFXObject},
    { "_class_FXObject","_FXFontDialog",SwigFXFontDialogToFXObject},
    { "_class_FXObject","_class_FXPyFontSelector",SwigFXPyFontSelectorToFXObject},
    { "_class_FXObject","_FXPyFontSelector",SwigFXPyFontSelectorToFXObject},
    { "_class_FXObject","_class_FXFontSelector",SwigFXFontSelectorToFXObject},
    { "_class_FXObject","_FXFontSelector",SwigFXFontSelectorToFXObject},
    { "_class_FXObject","_class_FXPyColorDialog",SwigFXPyColorDialogToFXObject},
    { "_class_FXObject","_FXPyColorDialog",SwigFXPyColorDialogToFXObject},
    { "_class_FXObject","_class_FXColorDialog",SwigFXColorDialogToFXObject},
    { "_class_FXObject","_FXColorDialog",SwigFXColorDialogToFXObject},
    { "_class_FXObject","_class_FXPyColorSelector",SwigFXPyColorSelectorToFXObject},
    { "_class_FXObject","_FXPyColorSelector",SwigFXPyColorSelectorToFXObject},
    { "_class_FXObject","_class_FXColorSelector",SwigFXColorSelectorToFXObject},
    { "_class_FXObject","_FXColorSelector",SwigFXColorSelectorToFXObject},
    { "_class_FXObject","_class_FXPyFileDialog",SwigFXPyFileDialogToFXObject},
    { "_class_FXObject","_FXPyFileDialog",SwigFXPyFileDialogToFXObject},
    { "_class_FXObject","_class_FXFileDialog",SwigFXFileDialogToFXObject},
    { "_class_FXObject","_FXFileDialog",SwigFXFileDialogToFXObject},
    { "_class_FXObject","_class_FXPyFileSelector",SwigFXPyFileSelectorToFXObject},
    { "_class_FXObject","_FXPyFileSelector",SwigFXPyFileSelectorToFXObject},
    { "_class_FXObject","_class_FXFileSelector",SwigFXFileSelectorToFXObject},
    { "_class_FXObject","_FXFileSelector",SwigFXFileSelectorToFXObject},
    { "_class_FXObject","_class_FXPyFileList",SwigFXPyFileListToFXObject},
    { "_class_FXObject","_FXPyFileList",SwigFXPyFileListToFXObject},
    { "_class_FXObject","_class_FXFileList",SwigFXFileListToFXObject},
    { "_class_FXObject","_FXFileList",SwigFXFileListToFXObject},
    { "_class_FXObject","_class_FXPyFileItem",SwigFXPyFileItemToFXObject},
    { "_class_FXObject","_FXPyFileItem",SwigFXPyFileItemToFXObject},
    { "_class_FXObject","_class_FXFileItem",SwigFXFileItemToFXObject},
    { "_class_FXObject","_FXFileItem",SwigFXFileItemToFXObject},
    { "_class_FXObject","_class_FXPyDirBox",SwigFXPyDirBoxToFXObject},
    { "_class_FXObject","_FXPyDirBox",SwigFXPyDirBoxToFXObject},
    { "_class_FXObject","_class_FXDirBox",SwigFXDirBoxToFXObject},
    { "_class_FXObject","_FXDirBox",SwigFXDirBoxToFXObject},
    { "_class_FXObject","_class_FXPyDialogBox",SwigFXPyDialogBoxToFXObject},
    { "_class_FXObject","_FXPyDialogBox",SwigFXPyDialogBoxToFXObject},
    { "_class_FXObject","_class_FXDialogBox",SwigFXDialogBoxToFXObject},
    { "_class_FXObject","_FXDialogBox",SwigFXDialogBoxToFXObject},
    { "_class_FXObject","_FXObject",0},
    { "_FXXPMIcon","_class_FXXPMIcon",0},
    { "_FXPyPopup","_class_FXPyPopup",0},
    { "_FXPyVerticalFrame","_class_FXPyVerticalFrame",0},
    { "_FXPyColorWell","_class_FXPyColorWell",0},
    { "_FXId","_class_FXPyProgressDialog",SwigFXPyProgressDialogToFXId},
    { "_FXId","_FXPyProgressDialog",SwigFXPyProgressDialogToFXId},
    { "_FXId","_class_FXProgressDialog",SwigFXProgressDialogToFXId},
    { "_FXId","_FXProgressDialog",SwigFXProgressDialogToFXId},
    { "_FXId","_class_FXPyInputDialog",SwigFXPyInputDialogToFXId},
    { "_FXId","_FXPyInputDialog",SwigFXPyInputDialogToFXId},
    { "_FXId","_class_FXInputDialog",SwigFXInputDialogToFXId},
    { "_FXId","_FXInputDialog",SwigFXInputDialogToFXId},
    { "_FXId","_class_FXPySearchDialog",SwigFXPySearchDialogToFXId},
    { "_FXId","_FXPySearchDialog",SwigFXPySearchDialogToFXId},
    { "_FXId","_class_FXSearchDialog",SwigFXSearchDialogToFXId},
    { "_FXId","_FXSearchDialog",SwigFXSearchDialogToFXId},
    { "_FXId","_class_FXPyReplaceDialog",SwigFXPyReplaceDialogToFXId},
    { "_FXId","_FXPyReplaceDialog",SwigFXPyReplaceDialogToFXId},
    { "_FXId","_class_FXReplaceDialog",SwigFXReplaceDialogToFXId},
    { "_FXId","_FXReplaceDialog",SwigFXReplaceDialogToFXId},
    { "_FXId","_class_FXPyMessageBox",SwigFXPyMessageBoxToFXId},
    { "_FXId","_FXPyMessageBox",SwigFXPyMessageBoxToFXId},
    { "_FXId","_class_FXMessageBox",SwigFXMessageBoxToFXId},
    { "_FXId","_FXMessageBox",SwigFXMessageBoxToFXId},
    { "_FXId","_class_FXPyPrintDialog",SwigFXPyPrintDialogToFXId},
    { "_FXId","_FXPyPrintDialog",SwigFXPyPrintDialogToFXId},
    { "_FXId","_class_FXPrintDialog",SwigFXPrintDialogToFXId},
    { "_FXId","_FXPrintDialog",SwigFXPrintDialogToFXId},
    { "_FXId","_class_FXPyDirDialog",SwigFXPyDirDialogToFXId},
    { "_FXId","_FXPyDirDialog",SwigFXPyDirDialogToFXId},
    { "_FXId","_class_FXDirDialog",SwigFXDirDialogToFXId},
    { "_FXId","_FXDirDialog",SwigFXDirDialogToFXId},
    { "_FXId","_class_FXPyDirSelector",SwigFXPyDirSelectorToFXId},
    { "_FXId","_FXPyDirSelector",SwigFXPyDirSelectorToFXId},
    { "_FXId","_class_FXDirSelector",SwigFXDirSelectorToFXId},
    { "_FXId","_FXDirSelector",SwigFXDirSelectorToFXId},
    { "_FXId","_class_FXPyFontDialog",SwigFXPyFontDialogToFXId},
    { "_FXId","_FXPyFontDialog",SwigFXPyFontDialogToFXId},
    { "_FXId","_class_FXFontDialog",SwigFXFontDialogToFXId},
    { "_FXId","_FXFontDialog",SwigFXFontDialogToFXId},
    { "_FXId","_class_FXPyFontSelector",SwigFXPyFontSelectorToFXId},
    { "_FXId","_FXPyFontSelector",SwigFXPyFontSelectorToFXId},
    { "_FXId","_class_FXFontSelector",SwigFXFontSelectorToFXId},
    { "_FXId","_FXFontSelector",SwigFXFontSelectorToFXId},
    { "_FXId","_class_FXPyColorDialog",SwigFXPyColorDialogToFXId},
    { "_FXId","_FXPyColorDialog",SwigFXPyColorDialogToFXId},
    { "_FXId","_class_FXColorDialog",SwigFXColorDialogToFXId},
    { "_FXId","_FXColorDialog",SwigFXColorDialogToFXId},
    { "_FXId","_class_FXPyColorSelector",SwigFXPyColorSelectorToFXId},
    { "_FXId","_FXPyColorSelector",SwigFXPyColorSelectorToFXId},
    { "_FXId","_class_FXColorSelector",SwigFXColorSelectorToFXId},
    { "_FXId","_FXColorSelector",SwigFXColorSelectorToFXId},
    { "_FXId","_class_FXPyFileDialog",SwigFXPyFileDialogToFXId},
    { "_FXId","_FXPyFileDialog",SwigFXPyFileDialogToFXId},
    { "_FXId","_class_FXFileDialog",SwigFXFileDialogToFXId},
    { "_FXId","_FXFileDialog",SwigFXFileDialogToFXId},
    { "_FXId","_class_FXPyFileSelector",SwigFXPyFileSelectorToFXId},
    { "_FXId","_FXPyFileSelector",SwigFXPyFileSelectorToFXId},
    { "_FXId","_class_FXFileSelector",SwigFXFileSelectorToFXId},
    { "_FXId","_FXFileSelector",SwigFXFileSelectorToFXId},
    { "_FXId","_class_FXPyFileList",SwigFXPyFileListToFXId},
    { "_FXId","_FXPyFileList",SwigFXPyFileListToFXId},
    { "_FXId","_class_FXFileList",SwigFXFileListToFXId},
    { "_FXId","_FXFileList",SwigFXFileListToFXId},
    { "_FXId","_class_FXPyDirBox",SwigFXPyDirBoxToFXId},
    { "_FXId","_FXPyDirBox",SwigFXPyDirBoxToFXId},
    { "_FXId","_class_FXDirBox",SwigFXDirBoxToFXId},
    { "_FXId","_FXDirBox",SwigFXDirBoxToFXId},
    { "_FXId","_class_FXPyDialogBox",SwigFXPyDialogBoxToFXId},
    { "_FXId","_FXPyDialogBox",SwigFXPyDialogBoxToFXId},
    { "_FXId","_class_FXDialogBox",SwigFXDialogBoxToFXId},
    { "_FXId","_FXDialogBox",SwigFXDialogBoxToFXId},
    { "_FXId","_class_FXId",0},
    { "_class_FXDrawable","_class_FXPyProgressDialog",SwigFXPyProgressDialogToFXDrawable},
    { "_class_FXDrawable","_FXPyProgressDialog",SwigFXPyProgressDialogToFXDrawable},
    { "_class_FXDrawable","_class_FXProgressDialog",SwigFXProgressDialogToFXDrawable},
    { "_class_FXDrawable","_FXProgressDialog",SwigFXProgressDialogToFXDrawable},
    { "_class_FXDrawable","_class_FXPyInputDialog",SwigFXPyInputDialogToFXDrawable},
    { "_class_FXDrawable","_FXPyInputDialog",SwigFXPyInputDialogToFXDrawable},
    { "_class_FXDrawable","_class_FXInputDialog",SwigFXInputDialogToFXDrawable},
    { "_class_FXDrawable","_FXInputDialog",SwigFXInputDialogToFXDrawable},
    { "_class_FXDrawable","_class_FXPySearchDialog",SwigFXPySearchDialogToFXDrawable},
    { "_class_FXDrawable","_FXPySearchDialog",SwigFXPySearchDialogToFXDrawable},
    { "_class_FXDrawable","_class_FXSearchDialog",SwigFXSearchDialogToFXDrawable},
    { "_class_FXDrawable","_FXSearchDialog",SwigFXSearchDialogToFXDrawable},
    { "_class_FXDrawable","_class_FXPyReplaceDialog",SwigFXPyReplaceDialogToFXDrawable},
    { "_class_FXDrawable","_FXPyReplaceDialog",SwigFXPyReplaceDialogToFXDrawable},
    { "_class_FXDrawable","_class_FXReplaceDialog",SwigFXReplaceDialogToFXDrawable},
    { "_class_FXDrawable","_FXReplaceDialog",SwigFXReplaceDialogToFXDrawable},
    { "_class_FXDrawable","_class_FXPyMessageBox",SwigFXPyMessageBoxToFXDrawable},
    { "_class_FXDrawable","_FXPyMessageBox",SwigFXPyMessageBoxToFXDrawable},
    { "_class_FXDrawable","_class_FXMessageBox",SwigFXMessageBoxToFXDrawable},
    { "_class_FXDrawable","_FXMessageBox",SwigFXMessageBoxToFXDrawable},
    { "_class_FXDrawable","_class_FXPyPrintDialog",SwigFXPyPrintDialogToFXDrawable},
    { "_class_FXDrawable","_FXPyPrintDialog",SwigFXPyPrintDialogToFXDrawable},
    { "_class_FXDrawable","_class_FXPrintDialog",SwigFXPrintDialogToFXDrawable},
    { "_class_FXDrawable","_FXPrintDialog",SwigFXPrintDialogToFXDrawable},
    { "_class_FXDrawable","_class_FXPyDirDialog",SwigFXPyDirDialogToFXDrawable},
    { "_class_FXDrawable","_FXPyDirDialog",SwigFXPyDirDialogToFXDrawable},
    { "_class_FXDrawable","_class_FXDirDialog",SwigFXDirDialogToFXDrawable},
    { "_class_FXDrawable","_FXDirDialog",SwigFXDirDialogToFXDrawable},
    { "_class_FXDrawable","_class_FXPyDirSelector",SwigFXPyDirSelectorToFXDrawable},
    { "_class_FXDrawable","_FXPyDirSelector",SwigFXPyDirSelectorToFXDrawable},
    { "_class_FXDrawable","_class_FXDirSelector",SwigFXDirSelectorToFXDrawable},
    { "_class_FXDrawable","_FXDirSelector",SwigFXDirSelectorToFXDrawable},
    { "_class_FXDrawable","_class_FXPyFontDialog",SwigFXPyFontDialogToFXDrawable},
    { "_class_FXDrawable","_FXPyFontDialog",SwigFXPyFontDialogToFXDrawable},
    { "_class_FXDrawable","_class_FXFontDialog",SwigFXFontDialogToFXDrawable},
    { "_class_FXDrawable","_FXFontDialog",SwigFXFontDialogToFXDrawable},
    { "_class_FXDrawable","_class_FXPyFontSelector",SwigFXPyFontSelectorToFXDrawable},
    { "_class_FXDrawable","_FXPyFontSelector",SwigFXPyFontSelectorToFXDrawable},
    { "_class_FXDrawable","_class_FXFontSelector",SwigFXFontSelectorToFXDrawable},
    { "_class_FXDrawable","_FXFontSelector",SwigFXFontSelectorToFXDrawable},
    { "_class_FXDrawable","_class_FXPyColorDialog",SwigFXPyColorDialogToFXDrawable},
    { "_class_FXDrawable","_FXPyColorDialog",SwigFXPyColorDialogToFXDrawable},
    { "_class_FXDrawable","_class_FXColorDialog",SwigFXColorDialogToFXDrawable},
    { "_class_FXDrawable","_FXColorDialog",SwigFXColorDialogToFXDrawable},
    { "_class_FXDrawable","_class_FXPyColorSelector",SwigFXPyColorSelectorToFXDrawable},
    { "_class_FXDrawable","_FXPyColorSelector",SwigFXPyColorSelectorToFXDrawable},
    { "_class_FXDrawable","_class_FXColorSelector",SwigFXColorSelectorToFXDrawable},
    { "_class_FXDrawable","_FXColorSelector",SwigFXColorSelectorToFXDrawable},
    { "_class_FXDrawable","_class_FXPyFileDialog",SwigFXPyFileDialogToFXDrawable},
    { "_class_FXDrawable","_FXPyFileDialog",SwigFXPyFileDialogToFXDrawable},
    { "_class_FXDrawable","_class_FXFileDialog",SwigFXFileDialogToFXDrawable},
    { "_class_FXDrawable","_FXFileDialog",SwigFXFileDialogToFXDrawable},
    { "_class_FXDrawable","_class_FXPyFileSelector",SwigFXPyFileSelectorToFXDrawable},
    { "_class_FXDrawable","_FXPyFileSelector",SwigFXPyFileSelectorToFXDrawable},
    { "_class_FXDrawable","_class_FXFileSelector",SwigFXFileSelectorToFXDrawable},
    { "_class_FXDrawable","_FXFileSelector",SwigFXFileSelectorToFXDrawable},
    { "_class_FXDrawable","_class_FXPyFileList",SwigFXPyFileListToFXDrawable},
    { "_class_FXDrawable","_FXPyFileList",SwigFXPyFileListToFXDrawable},
    { "_class_FXDrawable","_class_FXFileList",SwigFXFileListToFXDrawable},
    { "_class_FXDrawable","_FXFileList",SwigFXFileListToFXDrawable},
    { "_class_FXDrawable","_class_FXPyDirBox",SwigFXPyDirBoxToFXDrawable},
    { "_class_FXDrawable","_FXPyDirBox",SwigFXPyDirBoxToFXDrawable},
    { "_class_FXDrawable","_class_FXDirBox",SwigFXDirBoxToFXDrawable},
    { "_class_FXDrawable","_FXDirBox",SwigFXDirBoxToFXDrawable},
    { "_class_FXDrawable","_class_FXPyDialogBox",SwigFXPyDialogBoxToFXDrawable},
    { "_class_FXDrawable","_FXPyDialogBox",SwigFXPyDialogBoxToFXDrawable},
    { "_class_FXDrawable","_class_FXDialogBox",SwigFXDialogBoxToFXDrawable},
    { "_class_FXDrawable","_FXDialogBox",SwigFXDialogBoxToFXDrawable},
    { "_class_FXDrawable","_FXDrawable",0},
    { "_FXPyBMPImage","_class_FXPyBMPImage",0},
    { "_FXPyICOImage","_class_FXPyICOImage",0},
    { "_FXPyMainWindow","_class_FXPyMainWindow",0},
    { "_FXHorizontalFrame","_class_FXHorizontalFrame",0},
    { "_class_FXStatusline","_FXStatusline",0},
    { "_FXPyPCXImage","_class_FXPyPCXImage",0},
    { "_FXPyRGBIcon","_class_FXPyRGBIcon",0},
    { "_class_FXPyDial","_FXPyDial",0},
    { "_class_FXPyListBox","_FXPyListBox",0},
    { "_FXColorSelector","_class_FXPyColorSelector",SwigFXPyColorSelectorToFXColorSelector},
    { "_FXColorSelector","_FXPyColorSelector",SwigFXPyColorSelectorToFXColorSelector},
    { "_FXColorSelector","_class_FXColorSelector",0},
    { "_class_FXIconDict","_class_FXPyIconDict",SwigFXPyIconDictToFXIconDict},
    { "_class_FXIconDict","_FXPyIconDict",SwigFXPyIconDictToFXIconDict},
    { "_class_FXIconDict","_FXIconDict",0},
    { "_class_FXPyJPGIcon","_FXPyJPGIcon",0},
    { "_FXTIFIcon","_class_FXTIFIcon",0},
    { "_FXScrollWindow","_class_FXScrollWindow",0},
    { "_class_FXPyDialogBox","_FXPyDialogBox",0},
    { "_class_FXPyProgressDialog","_FXPyProgressDialog",0},
    { "_FXList","_class_FXList",0},
    { "_FXMainWindow","_class_FXMainWindow",0},
    { "_class_FXMatrix","_FXMatrix",0},
    { "_FXFileSelector","_class_FXPyFileSelector",SwigFXPyFileSelectorToFXFileSelector},
    { "_FXFileSelector","_FXPyFileSelector",SwigFXPyFileSelectorToFXFileSelector},
    { "_FXFileSelector","_class_FXFileSelector",0},
    { "__XEvent","_FXRawEvent",0},
    { "_class_FXPyShutterItem","_FXPyShutterItem",0},
    { "_class_FXOptionMenu","_FXOptionMenu",0},
    { "_struct_FXEvent","_FXEvent",0},
    { "_class_FXStream","_FXStream",0},
    { "_class_FXPyStringDict","_FXPyStringDict",0},
    { "_class_FXPyDirSelector","_FXPyDirSelector",0},
    { "_class_FXPyJPGImage","_FXPyJPGImage",0},
    { "_FXTIFImage","_class_FXTIFImage",0},
    { "_FXPyIcon","_class_FXPyIcon",0},
    { "_FXPyAccelTable","_class_FXPyAccelTable",0},
    { "_class_FXPyLabel","_FXPyLabel",0},
    { "_FXTooltip","_class_FXTooltip",0},
    { "_class_FXTGAIcon","_FXTGAIcon",0},
    { "_FXPyDragCorner","_class_FXPyDragCorner",0},
    { "_class_FXToolbarGrip","_FXToolbarGrip",0},
    { "_struct_FXPSBounds","_FXPSBounds",0},
    { "_FXDCPrint","_class_FXDCPrint",0},
    { "_class_FXPyColorSelector","_FXPyColorSelector",0},
    { "_FXPySearchDialog","_class_FXPySearchDialog",0},
    { "_class_FXImage","_FXImage",0},
    { "_FXPyTabBar","_class_FXPyTabBar",0},
    { "_FXTabBook","_class_FXTabBook",0},
    { "_class_FXDialogBox","_class_FXPyProgressDialog",SwigFXPyProgressDialogToFXDialogBox},
    { "_class_FXDialogBox","_FXPyProgressDialog",SwigFXPyProgressDialogToFXDialogBox},
    { "_class_FXDialogBox","_class_FXProgressDialog",SwigFXProgressDialogToFXDialogBox},
    { "_class_FXDialogBox","_FXProgressDialog",SwigFXProgressDialogToFXDialogBox},
    { "_class_FXDialogBox","_class_FXPyInputDialog",SwigFXPyInputDialogToFXDialogBox},
    { "_class_FXDialogBox","_FXPyInputDialog",SwigFXPyInputDialogToFXDialogBox},
    { "_class_FXDialogBox","_class_FXInputDialog",SwigFXInputDialogToFXDialogBox},
    { "_class_FXDialogBox","_FXInputDialog",SwigFXInputDialogToFXDialogBox},
    { "_class_FXDialogBox","_class_FXPySearchDialog",SwigFXPySearchDialogToFXDialogBox},
    { "_class_FXDialogBox","_FXPySearchDialog",SwigFXPySearchDialogToFXDialogBox},
    { "_class_FXDialogBox","_class_FXSearchDialog",SwigFXSearchDialogToFXDialogBox},
    { "_class_FXDialogBox","_FXSearchDialog",SwigFXSearchDialogToFXDialogBox},
    { "_class_FXDialogBox","_class_FXPyReplaceDialog",SwigFXPyReplaceDialogToFXDialogBox},
    { "_class_FXDialogBox","_FXPyReplaceDialog",SwigFXPyReplaceDialogToFXDialogBox},
    { "_class_FXDialogBox","_class_FXReplaceDialog",SwigFXReplaceDialogToFXDialogBox},
    { "_class_FXDialogBox","_FXReplaceDialog",SwigFXReplaceDialogToFXDialogBox},
    { "_class_FXDialogBox","_class_FXPyMessageBox",SwigFXPyMessageBoxToFXDialogBox},
    { "_class_FXDialogBox","_FXPyMessageBox",SwigFXPyMessageBoxToFXDialogBox},
    { "_class_FXDialogBox","_class_FXMessageBox",SwigFXMessageBoxToFXDialogBox},
    { "_class_FXDialogBox","_FXMessageBox",SwigFXMessageBoxToFXDialogBox},
    { "_class_FXDialogBox","_class_FXPyPrintDialog",SwigFXPyPrintDialogToFXDialogBox},
    { "_class_FXDialogBox","_FXPyPrintDialog",SwigFXPyPrintDialogToFXDialogBox},
    { "_class_FXDialogBox","_class_FXPrintDialog",SwigFXPrintDialogToFXDialogBox},
    { "_class_FXDialogBox","_FXPrintDialog",SwigFXPrintDialogToFXDialogBox},
    { "_class_FXDialogBox","_class_FXPyDirDialog",SwigFXPyDirDialogToFXDialogBox},
    { "_class_FXDialogBox","_FXPyDirDialog",SwigFXPyDirDialogToFXDialogBox},
    { "_class_FXDialogBox","_class_FXDirDialog",SwigFXDirDialogToFXDialogBox},
    { "_class_FXDialogBox","_FXDirDialog",SwigFXDirDialogToFXDialogBox},
    { "_class_FXDialogBox","_class_FXPyFontDialog",SwigFXPyFontDialogToFXDialogBox},
    { "_class_FXDialogBox","_FXPyFontDialog",SwigFXPyFontDialogToFXDialogBox},
    { "_class_FXDialogBox","_class_FXFontDialog",SwigFXFontDialogToFXDialogBox},
    { "_class_FXDialogBox","_FXFontDialog",SwigFXFontDialogToFXDialogBox},
    { "_class_FXDialogBox","_class_FXPyColorDialog",SwigFXPyColorDialogToFXDialogBox},
    { "_class_FXDialogBox","_FXPyColorDialog",SwigFXPyColorDialogToFXDialogBox},
    { "_class_FXDialogBox","_class_FXColorDialog",SwigFXColorDialogToFXDialogBox},
    { "_class_FXDialogBox","_FXColorDialog",SwigFXColorDialogToFXDialogBox},
    { "_class_FXDialogBox","_class_FXPyFileDialog",SwigFXPyFileDialogToFXDialogBox},
    { "_class_FXDialogBox","_FXPyFileDialog",SwigFXPyFileDialogToFXDialogBox},
    { "_class_FXDialogBox","_class_FXFileDialog",SwigFXFileDialogToFXDialogBox},
    { "_class_FXDialogBox","_FXFileDialog",SwigFXFileDialogToFXDialogBox},
    { "_class_FXDialogBox","_class_FXPyDialogBox",SwigFXPyDialogBoxToFXDialogBox},
    { "_class_FXDialogBox","_FXPyDialogBox",SwigFXPyDialogBoxToFXDialogBox},
    { "_class_FXDialogBox","_FXDialogBox",0},
    { "_struct_FXFileAssoc","_FXFileAssoc",0},
    { "_FXPyReplaceDialog","_class_FXPyReplaceDialog",0},
    { "_FXPoint","_class_FXPoint",0},
    { "_FXAccelTable","_class_FXAccelTable",0},
    { "_FXComboBox","_class_FXComboBox",0},
    { "_class_FXPyDriveBox","_FXPyDriveBox",0},
    { "_class_FXPyInputDialog","_FXPyInputDialog",0},
    { "_FXDragCorner","_class_FXDragCorner",0},
    { "_class_FXPyFontSelector","_FXPyFontSelector",0},
    { "_FXPyId","_class_FXPyId",0},
    { "_class_FXPyFileItem","_FXPyFileItem",0},
    { "_class_FXFontSelector","_class_FXPyFontSelector",SwigFXPyFontSelectorToFXFontSelector},
    { "_class_FXFontSelector","_FXPyFontSelector",SwigFXPyFontSelectorToFXFontSelector},
    { "_class_FXFontSelector","_FXFontSelector",0},
    { "_FXSelector","_FXInputHandle",0},
    { "_FXSelector","_FXDragType",0},
    { "_FXSelector","_FXHotKey",0},
    { "_FXSelector","_FXColor",0},
    { "_FXSelector","_FXID",0},
    { "_FXSelector","_FXuint",0},
    { "_FXSelector","_int",0},
    { "_FXSelector","_unsigned_int",0},
    { "_FXSelector","_FXint",0},
    { "_class_FXFont","_FXFont",0},
    { "_class_FXXPMImage","_FXXPMImage",0},
    { "_FXPyRecentFiles","_class_FXPyRecentFiles",0},
    { "_FXPyDebugTarget","_class_FXPyDebugTarget",0},
    { "_FXCommand","_class_FXCommand",0},
    { "_FXPyFrame","_class_FXPyFrame",0},
    { "_class_FXPyFileList","_FXPyFileList",0},
    { "_class_FXGIFImage","_FXGIFImage",0},
    { "_class_FXPyRGBImage","_FXPyRGBImage",0},
    { "_class_FXSplitter","_FXSplitter",0},
    { "_class_FXPyProgressBar","_FXPyProgressBar",0},
    { "_FXToolbarShell","_class_FXToolbarShell",0},
    { "_class_FXPyPrintDialog","_FXPyPrintDialog",0},
    { "_class_FXXPMIcon","_FXXPMIcon",0},
    { "_class_FXPyPopup","_FXPyPopup",0},
    { "_FXScrollCorner","_class_FXScrollCorner",0},
    { "_FXDirDialog","_class_FXPyDirDialog",SwigFXPyDirDialogToFXDirDialog},
    { "_FXDirDialog","_FXPyDirDialog",SwigFXPyDirDialogToFXDirDialog},
    { "_FXDirDialog","_class_FXDirDialog",0},
{0,0,0}};

static PyObject *SWIG_globals;
#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT(void) initdialogsc() {
	 PyObject *m, *d;
	 SWIG_globals = SWIG_newvarlink();
	 m = Py_InitModule("dialogsc", dialogscMethods);
	 d = PyModule_GetDict(m);
	 PyDict_SetItemString(d,"FILELIST_SHOWHIDDEN", PyInt_FromLong((long) FILELIST_SHOWHIDDEN));
	 PyDict_SetItemString(d,"FILELIST_SHOWDIRS", PyInt_FromLong((long) FILELIST_SHOWDIRS));
	 PyDict_SetItemString(d,"FILELIST_NO_OWN_ASSOC", PyInt_FromLong((long) FILELIST_NO_OWN_ASSOC));
	 PyDict_SetItemString(d,"SELECTFILE_ANY", PyInt_FromLong((long) SELECTFILE_ANY));
	 PyDict_SetItemString(d,"SELECTFILE_EXISTING", PyInt_FromLong((long) SELECTFILE_EXISTING));
	 PyDict_SetItemString(d,"SELECTFILE_MULTIPLE", PyInt_FromLong((long) SELECTFILE_MULTIPLE));
	 PyDict_SetItemString(d,"SELECTFILE_DIRECTORY", PyInt_FromLong((long) SELECTFILE_DIRECTORY));
	 PyDict_SetItemString(d,"MBOX_OK", PyInt_FromLong((long) MBOX_OK));
	 PyDict_SetItemString(d,"MBOX_OK_CANCEL", PyInt_FromLong((long) MBOX_OK_CANCEL));
	 PyDict_SetItemString(d,"MBOX_YES_NO", PyInt_FromLong((long) MBOX_YES_NO));
	 PyDict_SetItemString(d,"MBOX_YES_NO_CANCEL", PyInt_FromLong((long) MBOX_YES_NO_CANCEL));
	 PyDict_SetItemString(d,"MBOX_QUIT_CANCEL", PyInt_FromLong((long) MBOX_QUIT_CANCEL));
	 PyDict_SetItemString(d,"MBOX_QUIT_SAVE_CANCEL", PyInt_FromLong((long) MBOX_QUIT_SAVE_CANCEL));
	 PyDict_SetItemString(d,"MBOX_CLICKED_YES", PyInt_FromLong((long) MBOX_CLICKED_YES));
	 PyDict_SetItemString(d,"MBOX_CLICKED_NO", PyInt_FromLong((long) MBOX_CLICKED_NO));
	 PyDict_SetItemString(d,"MBOX_CLICKED_OK", PyInt_FromLong((long) MBOX_CLICKED_OK));
	 PyDict_SetItemString(d,"MBOX_CLICKED_CANCEL", PyInt_FromLong((long) MBOX_CLICKED_CANCEL));
	 PyDict_SetItemString(d,"MBOX_CLICKED_QUIT", PyInt_FromLong((long) MBOX_CLICKED_QUIT));
	 PyDict_SetItemString(d,"MBOX_CLICKED_SAVE", PyInt_FromLong((long) MBOX_CLICKED_SAVE));
	 PyDict_SetItemString(d,"INPUTDIALOG_STRING", PyInt_FromLong((long) INPUTDIALOG_STRING));
	 PyDict_SetItemString(d,"INPUTDIALOG_INTEGER", PyInt_FromLong((long) INPUTDIALOG_INTEGER));
	 PyDict_SetItemString(d,"INPUTDIALOG_REAL", PyInt_FromLong((long) INPUTDIALOG_REAL));
	 PyDict_SetItemString(d,"INPUTDIALOG_PASSWORD", PyInt_FromLong((long) INPUTDIALOG_PASSWORD));
	 PyDict_SetItemString(d,"FX_DialogBox_ID_CANCEL", PyInt_FromLong((long) FXDialogBox::ID_CANCEL));
	 PyDict_SetItemString(d,"FX_DialogBox_ID_ACCEPT", PyInt_FromLong((long) FXDialogBox::ID_ACCEPT));
	 PyDict_SetItemString(d,"FX_DialogBox_ID_LAST", PyInt_FromLong((long) FXDialogBox::ID_LAST));
	 PyDict_SetItemString(d,"FX_FileList_ID_SORT_BY_NAME", PyInt_FromLong((long) FXFileList::ID_SORT_BY_NAME));
	 PyDict_SetItemString(d,"FX_FileList_ID_SORT_BY_TYPE", PyInt_FromLong((long) FXFileList::ID_SORT_BY_TYPE));
	 PyDict_SetItemString(d,"FX_FileList_ID_SORT_BY_SIZE", PyInt_FromLong((long) FXFileList::ID_SORT_BY_SIZE));
	 PyDict_SetItemString(d,"FX_FileList_ID_SORT_BY_TIME", PyInt_FromLong((long) FXFileList::ID_SORT_BY_TIME));
	 PyDict_SetItemString(d,"FX_FileList_ID_SORT_BY_USER", PyInt_FromLong((long) FXFileList::ID_SORT_BY_USER));
	 PyDict_SetItemString(d,"FX_FileList_ID_SORT_BY_GROUP", PyInt_FromLong((long) FXFileList::ID_SORT_BY_GROUP));
	 PyDict_SetItemString(d,"FX_FileList_ID_SORT_REVERSE", PyInt_FromLong((long) FXFileList::ID_SORT_REVERSE));
	 PyDict_SetItemString(d,"FX_FileList_ID_DIRECTORY_UP", PyInt_FromLong((long) FXFileList::ID_DIRECTORY_UP));
	 PyDict_SetItemString(d,"FX_FileList_ID_SET_PATTERN", PyInt_FromLong((long) FXFileList::ID_SET_PATTERN));
	 PyDict_SetItemString(d,"FX_FileList_ID_SET_DIRECTORY", PyInt_FromLong((long) FXFileList::ID_SET_DIRECTORY));
	 PyDict_SetItemString(d,"FX_FileList_ID_SHOW_HIDDEN", PyInt_FromLong((long) FXFileList::ID_SHOW_HIDDEN));
	 PyDict_SetItemString(d,"FX_FileList_ID_HIDE_HIDDEN", PyInt_FromLong((long) FXFileList::ID_HIDE_HIDDEN));
	 PyDict_SetItemString(d,"FX_FileList_ID_TOGGLE_HIDDEN", PyInt_FromLong((long) FXFileList::ID_TOGGLE_HIDDEN));
	 PyDict_SetItemString(d,"FX_FileList_ID_REFRESHTIMER", PyInt_FromLong((long) FXFileList::ID_REFRESHTIMER));
	 PyDict_SetItemString(d,"FX_FileList_ID_OPENTIMER", PyInt_FromLong((long) FXFileList::ID_OPENTIMER));
	 PyDict_SetItemString(d,"FX_FileList_ID_LAST", PyInt_FromLong((long) FXFileList::ID_LAST));
	 PyDict_SetItemString(d,"FX_FileSelector_ID_FILEFILTER", PyInt_FromLong((long) FXFileSelector::ID_FILEFILTER));
	 PyDict_SetItemString(d,"FX_FileSelector_ID_ACCEPT", PyInt_FromLong((long) FXFileSelector::ID_ACCEPT));
	 PyDict_SetItemString(d,"FX_FileSelector_ID_FILELIST", PyInt_FromLong((long) FXFileSelector::ID_FILELIST));
	 PyDict_SetItemString(d,"FX_FileSelector_ID_DIRECTORY_UP", PyInt_FromLong((long) FXFileSelector::ID_DIRECTORY_UP));
	 PyDict_SetItemString(d,"FX_FileSelector_ID_DIRTREE", PyInt_FromLong((long) FXFileSelector::ID_DIRTREE));
	 PyDict_SetItemString(d,"FX_FileSelector_ID_HOME", PyInt_FromLong((long) FXFileSelector::ID_HOME));
	 PyDict_SetItemString(d,"FX_FileSelector_ID_WORK", PyInt_FromLong((long) FXFileSelector::ID_WORK));
	 PyDict_SetItemString(d,"FX_FileSelector_ID_BOOKMARK", PyInt_FromLong((long) FXFileSelector::ID_BOOKMARK));
	 PyDict_SetItemString(d,"FX_FileSelector_ID_VISIT", PyInt_FromLong((long) FXFileSelector::ID_VISIT));
	 PyDict_SetItemString(d,"FX_FileSelector_ID_NEW", PyInt_FromLong((long) FXFileSelector::ID_NEW));
	 PyDict_SetItemString(d,"FX_FileSelector_ID_DELETE", PyInt_FromLong((long) FXFileSelector::ID_DELETE));
	 PyDict_SetItemString(d,"FX_FileSelector_ID_MOVE", PyInt_FromLong((long) FXFileSelector::ID_MOVE));
	 PyDict_SetItemString(d,"FX_FileSelector_ID_COPY", PyInt_FromLong((long) FXFileSelector::ID_COPY));
	 PyDict_SetItemString(d,"FX_FileSelector_ID_LINK", PyInt_FromLong((long) FXFileSelector::ID_LINK));
	 PyDict_SetItemString(d,"FX_FileSelector_ID_LAST", PyInt_FromLong((long) FXFileSelector::ID_LAST));
	 PyDict_SetItemString(d,"FX_ColorSelector_ID_CUSTOM_FIRST", PyInt_FromLong((long) FXColorSelector::ID_CUSTOM_FIRST));
	 PyDict_SetItemString(d,"FX_ColorSelector_ID_CUSTOM_LAST", PyInt_FromLong((long) FXColorSelector::ID_CUSTOM_LAST));
	 PyDict_SetItemString(d,"FX_ColorSelector_ID_RGB_RED_SLIDER", PyInt_FromLong((long) FXColorSelector::ID_RGB_RED_SLIDER));
	 PyDict_SetItemString(d,"FX_ColorSelector_ID_RGB_GREEN_SLIDER", PyInt_FromLong((long) FXColorSelector::ID_RGB_GREEN_SLIDER));
	 PyDict_SetItemString(d,"FX_ColorSelector_ID_RGB_BLUE_SLIDER", PyInt_FromLong((long) FXColorSelector::ID_RGB_BLUE_SLIDER));
	 PyDict_SetItemString(d,"FX_ColorSelector_ID_RGB_RED_TEXT", PyInt_FromLong((long) FXColorSelector::ID_RGB_RED_TEXT));
	 PyDict_SetItemString(d,"FX_ColorSelector_ID_RGB_GREEN_TEXT", PyInt_FromLong((long) FXColorSelector::ID_RGB_GREEN_TEXT));
	 PyDict_SetItemString(d,"FX_ColorSelector_ID_RGB_BLUE_TEXT", PyInt_FromLong((long) FXColorSelector::ID_RGB_BLUE_TEXT));
	 PyDict_SetItemString(d,"FX_ColorSelector_ID_HSV_HUE_SLIDER", PyInt_FromLong((long) FXColorSelector::ID_HSV_HUE_SLIDER));
	 PyDict_SetItemString(d,"FX_ColorSelector_ID_HSV_SATURATION_SLIDER", PyInt_FromLong((long) FXColorSelector::ID_HSV_SATURATION_SLIDER));
	 PyDict_SetItemString(d,"FX_ColorSelector_ID_HSV_VALUE_SLIDER", PyInt_FromLong((long) FXColorSelector::ID_HSV_VALUE_SLIDER));
	 PyDict_SetItemString(d,"FX_ColorSelector_ID_HSV_HUE_TEXT", PyInt_FromLong((long) FXColorSelector::ID_HSV_HUE_TEXT));
	 PyDict_SetItemString(d,"FX_ColorSelector_ID_HSV_SATURATION_TEXT", PyInt_FromLong((long) FXColorSelector::ID_HSV_SATURATION_TEXT));
	 PyDict_SetItemString(d,"FX_ColorSelector_ID_HSV_VALUE_TEXT", PyInt_FromLong((long) FXColorSelector::ID_HSV_VALUE_TEXT));
	 PyDict_SetItemString(d,"FX_ColorSelector_ID_CMY_CYAN_SLIDER", PyInt_FromLong((long) FXColorSelector::ID_CMY_CYAN_SLIDER));
	 PyDict_SetItemString(d,"FX_ColorSelector_ID_CMY_MAGENTA_SLIDER", PyInt_FromLong((long) FXColorSelector::ID_CMY_MAGENTA_SLIDER));
	 PyDict_SetItemString(d,"FX_ColorSelector_ID_CMY_YELLOW_SLIDER", PyInt_FromLong((long) FXColorSelector::ID_CMY_YELLOW_SLIDER));
	 PyDict_SetItemString(d,"FX_ColorSelector_ID_CMY_CYAN_TEXT", PyInt_FromLong((long) FXColorSelector::ID_CMY_CYAN_TEXT));
	 PyDict_SetItemString(d,"FX_ColorSelector_ID_CMY_MAGENTA_TEXT", PyInt_FromLong((long) FXColorSelector::ID_CMY_MAGENTA_TEXT));
	 PyDict_SetItemString(d,"FX_ColorSelector_ID_CMY_YELLOW_TEXT", PyInt_FromLong((long) FXColorSelector::ID_CMY_YELLOW_TEXT));
	 PyDict_SetItemString(d,"FX_ColorSelector_ID_DIAL_WHEEL", PyInt_FromLong((long) FXColorSelector::ID_DIAL_WHEEL));
	 PyDict_SetItemString(d,"FX_ColorSelector_ID_COLOR_BAR", PyInt_FromLong((long) FXColorSelector::ID_COLOR_BAR));
	 PyDict_SetItemString(d,"FX_ColorSelector_ID_COLOR_LIST", PyInt_FromLong((long) FXColorSelector::ID_COLOR_LIST));
	 PyDict_SetItemString(d,"FX_ColorSelector_ID_WELL_CHANGED", PyInt_FromLong((long) FXColorSelector::ID_WELL_CHANGED));
	 PyDict_SetItemString(d,"FX_ColorSelector_ID_COLOR", PyInt_FromLong((long) FXColorSelector::ID_COLOR));
	 PyDict_SetItemString(d,"FX_ColorSelector_ID_ACTIVEPANE", PyInt_FromLong((long) FXColorSelector::ID_ACTIVEPANE));
	 PyDict_SetItemString(d,"FX_ColorSelector_ID_ALPHA_SLIDER", PyInt_FromLong((long) FXColorSelector::ID_ALPHA_SLIDER));
	 PyDict_SetItemString(d,"FX_ColorSelector_ID_ALPHA_TEXT", PyInt_FromLong((long) FXColorSelector::ID_ALPHA_TEXT));
	 PyDict_SetItemString(d,"FX_ColorSelector_ID_ALPHA_LABEL", PyInt_FromLong((long) FXColorSelector::ID_ALPHA_LABEL));
	 PyDict_SetItemString(d,"FX_ColorSelector_ID_COLORPICK", PyInt_FromLong((long) FXColorSelector::ID_COLORPICK));
	 PyDict_SetItemString(d,"FX_ColorSelector_ID_LAST", PyInt_FromLong((long) FXColorSelector::ID_LAST));
	 PyDict_SetItemString(d,"FX_ColorDialog_ID_COLORSELECTOR", PyInt_FromLong((long) FXColorDialog::ID_COLORSELECTOR));
	 PyDict_SetItemString(d,"FX_ColorDialog_ID_LAST", PyInt_FromLong((long) FXColorDialog::ID_LAST));
	 PyDict_SetItemString(d,"FX_FontSelector_ID_FAMILY", PyInt_FromLong((long) FXFontSelector::ID_FAMILY));
	 PyDict_SetItemString(d,"FX_FontSelector_ID_WEIGHT", PyInt_FromLong((long) FXFontSelector::ID_WEIGHT));
	 PyDict_SetItemString(d,"FX_FontSelector_ID_STYLE", PyInt_FromLong((long) FXFontSelector::ID_STYLE));
	 PyDict_SetItemString(d,"FX_FontSelector_ID_STYLE_TEXT", PyInt_FromLong((long) FXFontSelector::ID_STYLE_TEXT));
	 PyDict_SetItemString(d,"FX_FontSelector_ID_SIZE", PyInt_FromLong((long) FXFontSelector::ID_SIZE));
	 PyDict_SetItemString(d,"FX_FontSelector_ID_SIZE_TEXT", PyInt_FromLong((long) FXFontSelector::ID_SIZE_TEXT));
	 PyDict_SetItemString(d,"FX_FontSelector_ID_CHARSET", PyInt_FromLong((long) FXFontSelector::ID_CHARSET));
	 PyDict_SetItemString(d,"FX_FontSelector_ID_SETWIDTH", PyInt_FromLong((long) FXFontSelector::ID_SETWIDTH));
	 PyDict_SetItemString(d,"FX_FontSelector_ID_PITCH", PyInt_FromLong((long) FXFontSelector::ID_PITCH));
	 PyDict_SetItemString(d,"FX_FontSelector_ID_SCALABLE", PyInt_FromLong((long) FXFontSelector::ID_SCALABLE));
	 PyDict_SetItemString(d,"FX_FontSelector_ID_ALLFONTS", PyInt_FromLong((long) FXFontSelector::ID_ALLFONTS));
	 PyDict_SetItemString(d,"FX_FontSelector_ID_LAST", PyInt_FromLong((long) FXFontSelector::ID_LAST));
	 PyDict_SetItemString(d,"FX_DirSelector_ID_DIRNAME", PyInt_FromLong((long) FXDirSelector::ID_DIRNAME));
	 PyDict_SetItemString(d,"FX_DirSelector_ID_DIRLIST", PyInt_FromLong((long) FXDirSelector::ID_DIRLIST));
	 PyDict_SetItemString(d,"FX_DirSelector_ID_DRIVEBOX", PyInt_FromLong((long) FXDirSelector::ID_DRIVEBOX));
	 PyDict_SetItemString(d,"FX_DirSelector_ID_LAST", PyInt_FromLong((long) FXDirSelector::ID_LAST));
	 PyDict_SetItemString(d,"FX_PrintDialog_ID_TO_PRINTER", PyInt_FromLong((long) FXPrintDialog::ID_TO_PRINTER));
	 PyDict_SetItemString(d,"FX_PrintDialog_ID_TO_FILE", PyInt_FromLong((long) FXPrintDialog::ID_TO_FILE));
	 PyDict_SetItemString(d,"FX_PrintDialog_ID_PRINTER_NAME", PyInt_FromLong((long) FXPrintDialog::ID_PRINTER_NAME));
	 PyDict_SetItemString(d,"FX_PrintDialog_ID_FILE_NAME", PyInt_FromLong((long) FXPrintDialog::ID_FILE_NAME));
	 PyDict_SetItemString(d,"FX_PrintDialog_ID_LANDSCAPE", PyInt_FromLong((long) FXPrintDialog::ID_LANDSCAPE));
	 PyDict_SetItemString(d,"FX_PrintDialog_ID_PORTRAIT", PyInt_FromLong((long) FXPrintDialog::ID_PORTRAIT));
	 PyDict_SetItemString(d,"FX_PrintDialog_ID_MEDIA", PyInt_FromLong((long) FXPrintDialog::ID_MEDIA));
	 PyDict_SetItemString(d,"FX_PrintDialog_ID_COLLATE_NORMAL", PyInt_FromLong((long) FXPrintDialog::ID_COLLATE_NORMAL));
	 PyDict_SetItemString(d,"FX_PrintDialog_ID_COLLATE_REVERSED", PyInt_FromLong((long) FXPrintDialog::ID_COLLATE_REVERSED));
	 PyDict_SetItemString(d,"FX_PrintDialog_ID_PAGES_ALL", PyInt_FromLong((long) FXPrintDialog::ID_PAGES_ALL));
	 PyDict_SetItemString(d,"FX_PrintDialog_ID_PAGES_EVEN", PyInt_FromLong((long) FXPrintDialog::ID_PAGES_EVEN));
	 PyDict_SetItemString(d,"FX_PrintDialog_ID_PAGES_ODD", PyInt_FromLong((long) FXPrintDialog::ID_PAGES_ODD));
	 PyDict_SetItemString(d,"FX_PrintDialog_ID_PAGES_RANGE", PyInt_FromLong((long) FXPrintDialog::ID_PAGES_RANGE));
	 PyDict_SetItemString(d,"FX_PrintDialog_ID_PAGES_FIRST", PyInt_FromLong((long) FXPrintDialog::ID_PAGES_FIRST));
	 PyDict_SetItemString(d,"FX_PrintDialog_ID_PAGES_LAST", PyInt_FromLong((long) FXPrintDialog::ID_PAGES_LAST));
	 PyDict_SetItemString(d,"FX_PrintDialog_ID_BROWSE_FILE", PyInt_FromLong((long) FXPrintDialog::ID_BROWSE_FILE));
	 PyDict_SetItemString(d,"FX_PrintDialog_ID_PROPERTIES", PyInt_FromLong((long) FXPrintDialog::ID_PROPERTIES));
	 PyDict_SetItemString(d,"FX_PrintDialog_ID_COLOR_PRINTER", PyInt_FromLong((long) FXPrintDialog::ID_COLOR_PRINTER));
	 PyDict_SetItemString(d,"FX_PrintDialog_ID_GRAY_PRINTER", PyInt_FromLong((long) FXPrintDialog::ID_GRAY_PRINTER));
	 PyDict_SetItemString(d,"FX_PrintDialog_ID_NUM_COPIES", PyInt_FromLong((long) FXPrintDialog::ID_NUM_COPIES));
	 PyDict_SetItemString(d,"FX_MessageBox_ID_CLICKED_YES", PyInt_FromLong((long) FXMessageBox::ID_CLICKED_YES));
	 PyDict_SetItemString(d,"FX_MessageBox_ID_CLICKED_NO", PyInt_FromLong((long) FXMessageBox::ID_CLICKED_NO));
	 PyDict_SetItemString(d,"FX_MessageBox_ID_CLICKED_OK", PyInt_FromLong((long) FXMessageBox::ID_CLICKED_OK));
	 PyDict_SetItemString(d,"FX_MessageBox_ID_CLICKED_CANCEL", PyInt_FromLong((long) FXMessageBox::ID_CLICKED_CANCEL));
	 PyDict_SetItemString(d,"FX_MessageBox_ID_CLICKED_QUIT", PyInt_FromLong((long) FXMessageBox::ID_CLICKED_QUIT));
	 PyDict_SetItemString(d,"FX_MessageBox_ID_CLICKED_SAVE", PyInt_FromLong((long) FXMessageBox::ID_CLICKED_SAVE));
	 PyDict_SetItemString(d,"FX_MessageBox_ID_LAST", PyInt_FromLong((long) FXMessageBox::ID_LAST));
	 PyDict_SetItemString(d,"FX_ReplaceDialog_ID_NEXT", PyInt_FromLong((long) FXReplaceDialog::ID_NEXT));
	 PyDict_SetItemString(d,"FX_ReplaceDialog_ID_PREV", PyInt_FromLong((long) FXReplaceDialog::ID_PREV));
	 PyDict_SetItemString(d,"FX_ReplaceDialog_ID_SEARCH_UP", PyInt_FromLong((long) FXReplaceDialog::ID_SEARCH_UP));
	 PyDict_SetItemString(d,"FX_ReplaceDialog_ID_SEARCH_DN", PyInt_FromLong((long) FXReplaceDialog::ID_SEARCH_DN));
	 PyDict_SetItemString(d,"FX_ReplaceDialog_ID_REPLACE_UP", PyInt_FromLong((long) FXReplaceDialog::ID_REPLACE_UP));
	 PyDict_SetItemString(d,"FX_ReplaceDialog_ID_REPLACE_DN", PyInt_FromLong((long) FXReplaceDialog::ID_REPLACE_DN));
	 PyDict_SetItemString(d,"FX_ReplaceDialog_ID_ALL", PyInt_FromLong((long) FXReplaceDialog::ID_ALL));
	 PyDict_SetItemString(d,"FX_ReplaceDialog_ID_DIR", PyInt_FromLong((long) FXReplaceDialog::ID_DIR));
	 PyDict_SetItemString(d,"FX_ReplaceDialog_ID_SEARCH_TEXT", PyInt_FromLong((long) FXReplaceDialog::ID_SEARCH_TEXT));
	 PyDict_SetItemString(d,"FX_ReplaceDialog_ID_REPLACE_TEXT", PyInt_FromLong((long) FXReplaceDialog::ID_REPLACE_TEXT));
	 PyDict_SetItemString(d,"FX_ReplaceDialog_ID_MODE", PyInt_FromLong((long) FXReplaceDialog::ID_MODE));
	 PyDict_SetItemString(d,"FX_ReplaceDialog_ID_LAST", PyInt_FromLong((long) FXReplaceDialog::ID_LAST));
	 PyDict_SetItemString(d,"FX_ReplaceDialog_DONE", PyInt_FromLong((long) FXReplaceDialog::DONE));
	 PyDict_SetItemString(d,"FX_ReplaceDialog_SEARCH", PyInt_FromLong((long) FXReplaceDialog::SEARCH));
	 PyDict_SetItemString(d,"FX_ReplaceDialog_REPLACE", PyInt_FromLong((long) FXReplaceDialog::REPLACE));
	 PyDict_SetItemString(d,"FX_ReplaceDialog_SEARCH_NEXT", PyInt_FromLong((long) FXReplaceDialog::SEARCH_NEXT));
	 PyDict_SetItemString(d,"FX_ReplaceDialog_REPLACE_NEXT", PyInt_FromLong((long) FXReplaceDialog::REPLACE_NEXT));
	 PyDict_SetItemString(d,"FX_ReplaceDialog_REPLACE_ALL", PyInt_FromLong((long) FXReplaceDialog::REPLACE_ALL));
{
   int i;
   for (i = 0; _swig_mapping[i].n1; i++)
        SWIG_RegisterMapping(_swig_mapping[i].n1,_swig_mapping[i].n2,_swig_mapping[i].pcnv);
}
}
